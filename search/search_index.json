{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"TripKit SDK for Android Using the TripKit SDK, you can quickly integrate SkedGo's award-winning trip planning platform with your own application in a matter of minutes. Setup To begin, you'll need an API key to use our web service. You can get an API key from our Developer Page . First, add the Maven repository to the list in build.gradle : repositories { maven { url \"https://jitpack.io\" } } TripKit supports Android apps running Android 4.0.3 and above. To make sure that it works in your Android app, please specify minSdkVersion in your build.gradle file: android { defaultConfig { minSdkVersion 16 } } Get a Google Maps API key from Google Maps Platform and make sure to enable the Places API . Then add the Google Maps API key on your project's Manifest <manifest package=\".... .... <application... <meta-data android:name=\"com.google.android.geo.API_KEY\" android:value=\"YOUR_API_KEY_HERE\" /> .... </application> </manifest> Then, you'll need to add your TripGo API key. TripKit expects the key to be provided as R.string.skedgo_api_key , so you can either add it to your strings.xml file, or use resValue in Gradle, or perhaps another way. Finally, add libraries to your dependencies. Check with SkedGo for the latest version number. For TripKit only dependencies { // ... implementation 'com.github.skedgo:tripkit-android:<insert-newest-version-here>' } Create TripKit instance to access TripKit's services We recommend to have an Application subclass. Next, in the onCreate() method, you can initiate following setup: class App : Application() { override fun onCreate() { super.onCreate() JodaTimeAndroid.init(this) TripKitConfigs.builder().context(this) .debuggable(true) .key { key } .build() val httpClientModule = HttpClientModule(null, null, configs) val tripKit = DaggerTripKit.builder() .mainModule(MainModule(configs)) .httpClientModule(httpClientModule) .build() TripKit.initialize(this, tripKit) } } For TripKitUI (also includes TripKit) dependencies { // ... implementation 'com.github.skedgo:tripkit-android-ui:<insert-newest-version-here>' } Create TripKitUI instance to access both TripKitUI and TripKit services We recommend to have an Application subclass. Next, in the onCreate() method, you can initiate following setup: class App : Application() { override fun onCreate() { super.onCreate() val baseConfig = TripKitUI.buildTripKitConfig(applicationContext, Key.ApiKey(\"api_key_here\")) val httpClientModule = HttpClientModule(null, BuildConfig.VERSION_NAME, baseConfig, getSharedPreferences(\"data_pref_name\", MODE_PRIVATE)) val appConfigs = TripKitConfigs.builder().from(baseConfig).build() TripKitUI.initialize(this, Key.ApiKey(\"api_key_here\"), appConfigs, httpClientModule) } }","title":"Getting Started"},{"location":"#tripkit-sdk-for-android","text":"Using the TripKit SDK, you can quickly integrate SkedGo's award-winning trip planning platform with your own application in a matter of minutes.","title":"TripKit SDK for Android"},{"location":"#setup","text":"To begin, you'll need an API key to use our web service. You can get an API key from our Developer Page . First, add the Maven repository to the list in build.gradle : repositories { maven { url \"https://jitpack.io\" } } TripKit supports Android apps running Android 4.0.3 and above. To make sure that it works in your Android app, please specify minSdkVersion in your build.gradle file: android { defaultConfig { minSdkVersion 16 } } Get a Google Maps API key from Google Maps Platform and make sure to enable the Places API . Then add the Google Maps API key on your project's Manifest <manifest package=\".... .... <application... <meta-data android:name=\"com.google.android.geo.API_KEY\" android:value=\"YOUR_API_KEY_HERE\" /> .... </application> </manifest> Then, you'll need to add your TripGo API key. TripKit expects the key to be provided as R.string.skedgo_api_key , so you can either add it to your strings.xml file, or use resValue in Gradle, or perhaps another way. Finally, add libraries to your dependencies. Check with SkedGo for the latest version number.","title":"Setup"},{"location":"#for-tripkit-only","text":"dependencies { // ... implementation 'com.github.skedgo:tripkit-android:<insert-newest-version-here>' }","title":"For TripKit only"},{"location":"#create-tripkit-instance-to-access-tripkits-services","text":"We recommend to have an Application subclass. Next, in the onCreate() method, you can initiate following setup: class App : Application() { override fun onCreate() { super.onCreate() JodaTimeAndroid.init(this) TripKitConfigs.builder().context(this) .debuggable(true) .key { key } .build() val httpClientModule = HttpClientModule(null, null, configs) val tripKit = DaggerTripKit.builder() .mainModule(MainModule(configs)) .httpClientModule(httpClientModule) .build() TripKit.initialize(this, tripKit) } }","title":"Create TripKit instance to access TripKit's services"},{"location":"#for-tripkitui-also-includes-tripkit","text":"dependencies { // ... implementation 'com.github.skedgo:tripkit-android-ui:<insert-newest-version-here>' }","title":"For TripKitUI (also includes TripKit)"},{"location":"#create-tripkitui-instance-to-access-both-tripkitui-and-tripkit-services","text":"We recommend to have an Application subclass. Next, in the onCreate() method, you can initiate following setup: class App : Application() { override fun onCreate() { super.onCreate() val baseConfig = TripKitUI.buildTripKitConfig(applicationContext, Key.ApiKey(\"api_key_here\")) val httpClientModule = HttpClientModule(null, BuildConfig.VERSION_NAME, baseConfig, getSharedPreferences(\"data_pref_name\", MODE_PRIVATE)) val appConfigs = TripKitConfigs.builder().from(baseConfig).build() TripKitUI.initialize(this, Key.ApiKey(\"api_key_here\"), appConfigs, httpClientModule) } }","title":"Create TripKitUI instance to access both TripKitUI and TripKit services"},{"location":"get_off_alerts/","text":"Permissions You first need to ask user's to allow the permissions below: android.Manifest.permission.ACCESS_FINE_LOCATION, android.Manifest.permission.ACCESS_BACKGROUND_LOCATION Get off alerts enable/disable state for a trip You can use GetOffAlertCache to save get off alerts feature enable/disable state (or you can use your own) by your trip identifier. Initialize class with application context GetOffAlertCache.INSTANCE.init(applicationContext); Set get off alert state for a trip fun setTripAlertOnState(tripUuid: String, onState: Boolean) Parameters Name Type Required Description tripUuid String Yes Your trip unique identifier onState Boolean Yes enable/disable state Sample GetOffAlertCache.setTripAlertOnState(\"your_trip_identifier\", true) Get get off alert state for a trip fun isTripAlertStateOn(tripUuid: String): Boolean Parameters Name Type Required Description tripUuid String Yes Your trip unique identifier Response Boolean - the enable/disable state of get off alert for the specified trip GeoLocation This class handles the creation and removal of geofences for the trip segments when alerts are enabled Add receiver on your project's Manifest.xml <receiver android:name=\".routing.GeofenceBroadcastReceiver\" android:enabled=\"true\" android:exported=\"true\"> <intent-filter> <action android:name=\"com.skedgo.tripkit.routing.GeofenceBroadcastReceiver.ACTION_GEOFENCE_EVENT\" /> </intent-filter> </receiver> Initialize class with application context GeoLocation.INSTANCE.init(applicationContext) GeoLocation.init(applicationContext) Create Geofences using Geofence from TripSegment fun createGeoFences(geofences: List<Geofence>) Parameters Name Type Required geofences List< Geofence > Yes Sample trip.segments?.mapNotNull { it.geofences }?.flatten()?.let { geofences -> GeoLocation.createGeoFences( geofences.map { geofence -> geofence.computeAndSetTimeline(trip.endDateTime.millis) geofence } ) } Clear geofences fun clearGeofences() Alert for trip start Add receiver on your project's Manifest.xml <receiver android:name=\".routing.TripAlarmBroadcastReceiver\" android:enabled=\"true\" android:exported=\"true\"/> When get off alert is enabled for your trip, create an AlarmManager instance using your Trip 's start segment trip.segments.minByOrNull { it.startTimeInSecs }?.let { startSegment -> val alarmManager = context.getSystemService(Context.ALARM_SERVICE) as AlarmManager val startSegmentStartTimeInSecs = startSegment.startTimeInSecs val alarmIntent = Intent(context, TripAlarmBroadcastReceiver::class.java) alarmIntent.putExtra(TripAlarmBroadcastReceiver.ACTION_START_TRIP_EVENT, true) alarmIntent.putExtra(TripAlarmBroadcastReceiver.EXTRA_START_TRIP_EVENT_TRIP, Gson().toJson(trip)) var pendingIntent = PendingIntent.getBroadcast(context, 0, alarmIntent, 0) } then set the alarm trigger by time in milliseconds you want before the start of your Trip 's start segment alarmManager.set( AlarmManager.RTC_WAKEUP, (TimeUnit.SECONDS.toMillis(startSegmentStartTimeInSecs) - TimeUnit.MINUTES.toMillis(5)), pendingIntent )","title":"Get off alerts"},{"location":"get_off_alerts/#permissions","text":"You first need to ask user's to allow the permissions below: android.Manifest.permission.ACCESS_FINE_LOCATION, android.Manifest.permission.ACCESS_BACKGROUND_LOCATION","title":"Permissions"},{"location":"get_off_alerts/#get-off-alerts-enabledisable-state-for-a-trip","text":"You can use GetOffAlertCache to save get off alerts feature enable/disable state (or you can use your own) by your trip identifier. Initialize class with application context GetOffAlertCache.INSTANCE.init(applicationContext); Set get off alert state for a trip fun setTripAlertOnState(tripUuid: String, onState: Boolean) Parameters Name Type Required Description tripUuid String Yes Your trip unique identifier onState Boolean Yes enable/disable state Sample GetOffAlertCache.setTripAlertOnState(\"your_trip_identifier\", true) Get get off alert state for a trip fun isTripAlertStateOn(tripUuid: String): Boolean Parameters Name Type Required Description tripUuid String Yes Your trip unique identifier Response Boolean - the enable/disable state of get off alert for the specified trip","title":"Get off alerts enable/disable state for a trip"},{"location":"get_off_alerts/#geolocation","text":"This class handles the creation and removal of geofences for the trip segments when alerts are enabled Add receiver on your project's Manifest.xml <receiver android:name=\".routing.GeofenceBroadcastReceiver\" android:enabled=\"true\" android:exported=\"true\"> <intent-filter> <action android:name=\"com.skedgo.tripkit.routing.GeofenceBroadcastReceiver.ACTION_GEOFENCE_EVENT\" /> </intent-filter> </receiver> Initialize class with application context GeoLocation.INSTANCE.init(applicationContext) GeoLocation.init(applicationContext) Create Geofences using Geofence from TripSegment fun createGeoFences(geofences: List<Geofence>) Parameters Name Type Required geofences List< Geofence > Yes Sample trip.segments?.mapNotNull { it.geofences }?.flatten()?.let { geofences -> GeoLocation.createGeoFences( geofences.map { geofence -> geofence.computeAndSetTimeline(trip.endDateTime.millis) geofence } ) } Clear geofences fun clearGeofences()","title":"GeoLocation"},{"location":"get_off_alerts/#alert-for-trip-start","text":"Add receiver on your project's Manifest.xml <receiver android:name=\".routing.TripAlarmBroadcastReceiver\" android:enabled=\"true\" android:exported=\"true\"/> When get off alert is enabled for your trip, create an AlarmManager instance using your Trip 's start segment trip.segments.minByOrNull { it.startTimeInSecs }?.let { startSegment -> val alarmManager = context.getSystemService(Context.ALARM_SERVICE) as AlarmManager val startSegmentStartTimeInSecs = startSegment.startTimeInSecs val alarmIntent = Intent(context, TripAlarmBroadcastReceiver::class.java) alarmIntent.putExtra(TripAlarmBroadcastReceiver.ACTION_START_TRIP_EVENT, true) alarmIntent.putExtra(TripAlarmBroadcastReceiver.EXTRA_START_TRIP_EVENT_TRIP, Gson().toJson(trip)) var pendingIntent = PendingIntent.getBroadcast(context, 0, alarmIntent, 0) } then set the alarm trigger by time in milliseconds you want before the start of your Trip 's start segment alarmManager.set( AlarmManager.RTC_WAKEUP, (TimeUnit.SECONDS.toMillis(startSegmentStartTimeInSecs) - TimeUnit.MINUTES.toMillis(5)), pendingIntent )","title":"Alert for trip start"},{"location":"routes_for_region/","text":"RegionRoutingRepository Here, you can retrieve detailed information about routes for either all operators in a region, or a specified operator Get routes in a region With RegionRoutingRepository, you can fetch routes for a specific region by either providing its name or your Location along with a query, to search for a route name, and operatorId if you have. Make sure you you've initialized TripKitUI to create an instance and access its services You can access RegionRoutingRepository with TripKitUI.getInstance().regionRoutingRepository() Get routes with region name, query, modes and operator id fun getRegionRoutes( region: String, query: String? = null, modes: List<String> = emptyList(), operatorId: String? = null ): Single<List<RegionRoute>> Parameters Name Type Required region String Yes query String No modes List No operatorId String No Response (RxJava Single) List of RegionRoute Sample TripKitUI.getInstance().regionRoutingRepository().getRegionRoutes( region = \"US_CA_RegionName\", query = \"Metro\", modes = listOf(\"pt_pub_sample\"), operatorId = \"sampleId\" ).subscribe { // Handle response here } Get routes with string query and Location fun getRoutes( query: String, location: Location? ): Observable<List<RegionRoute>> Parameters Name Type Required query String Yes location Location Yes Response (RxJava Observable) List of RegionRoute Sample val location: Location? = Location(-33.9504502,151.0309) TripKitUI.getInstance().regionRoutingRepository().getRoutes( query = \"Metro\", location = location ).subscribe { // Handle response here } Get routes with region name and query fun getRoutes( regionName: String, query: String ): Single<List<RegionRoute>> Parameters Name Type Required regionName String Yes query String Yes Response (RxJava Single) List of RegionRoute Sample TripKitUI.getInstance().regionRoutingRepository().getRoutes( regionName = \"US_CA_RegionName\" query = \"Metro\" ).subscribe { // Handle response here } Get details of a route fun getRegionRouteInfo( region: String, operatorId: String, routeID: Int ): Single<RouteDetails> Parameters Name Type Required region String Yes operatorId String Yes routeID Int Yes Response (RxJava Single) RouteDetails Sample TripKitUI.getInstance().regionRoutingRepository().getRegionRouteInfo( regionName = \"US_CA_RegionName\" operatorId = \"Sample_Rail\", routeID = 123 ).subscribe { // Handle response here } Autocompleter First, declare RegionRoutingAutoCompleter private val regionRoutingAutoCompleter: RegionRoutingAutoCompleter = TripKitUI.getInstance().regionRoutingAutoCompleter() or private val regionRoutingAutoCompleter: RegionRoutingAutoCompleter by lazy { TripKitUI.getInstance().regionRoutingAutoCompleter() } then setup observer and get result as List< RegionRoute > regionRoutingAutoCompleter.observe({ //get results for the queries here as List<RegionRoute> }, { it.printStackTrace() } Use AutoCompleteQuery to build a query to send on the RegionRoutingAutoCompleter By Region Name AutoCompleteQuery.Builder( your_query_here_as_string ).byRegionName(your_region_name_here).build() By Location AutoCompleteQuery.Builder( your_query_here_as_string ).byLocation(location_object_here).build() Lastly, send the query to the RegionRoutingAutoCompleter regionRoutingAutoCompleter.sendQuery( RegionRoutingAutoCompleter.AutoCompleteQuery.Builder( \"sample query\" ).byRegionName(\"REGION_NAME\").build() ) and get the result from the observer that you setup earlier.","title":"Routes for region"},{"location":"routes_for_region/#regionroutingrepository","text":"Here, you can retrieve detailed information about routes for either all operators in a region, or a specified operator","title":"RegionRoutingRepository"},{"location":"routes_for_region/#get-routes-in-a-region","text":"With RegionRoutingRepository, you can fetch routes for a specific region by either providing its name or your Location along with a query, to search for a route name, and operatorId if you have. Make sure you you've initialized TripKitUI to create an instance and access its services You can access RegionRoutingRepository with TripKitUI.getInstance().regionRoutingRepository()","title":"Get routes in a region"},{"location":"routes_for_region/#get-routes-with-region-name-query-modes-and-operator-id","text":"fun getRegionRoutes( region: String, query: String? = null, modes: List<String> = emptyList(), operatorId: String? = null ): Single<List<RegionRoute>>","title":"Get routes with region name, query, modes and operator id"},{"location":"routes_for_region/#parameters","text":"Name Type Required region String Yes query String No modes List No operatorId String No","title":"Parameters"},{"location":"routes_for_region/#response","text":"(RxJava Single) List of RegionRoute","title":"Response"},{"location":"routes_for_region/#sample","text":"TripKitUI.getInstance().regionRoutingRepository().getRegionRoutes( region = \"US_CA_RegionName\", query = \"Metro\", modes = listOf(\"pt_pub_sample\"), operatorId = \"sampleId\" ).subscribe { // Handle response here }","title":"Sample"},{"location":"routes_for_region/#get-routes-with-string-query-and-location","text":"fun getRoutes( query: String, location: Location? ): Observable<List<RegionRoute>>","title":"Get routes with string query and Location"},{"location":"routes_for_region/#parameters_1","text":"Name Type Required query String Yes location Location Yes","title":"Parameters"},{"location":"routes_for_region/#response_1","text":"(RxJava Observable) List of RegionRoute","title":"Response"},{"location":"routes_for_region/#sample_1","text":"val location: Location? = Location(-33.9504502,151.0309) TripKitUI.getInstance().regionRoutingRepository().getRoutes( query = \"Metro\", location = location ).subscribe { // Handle response here }","title":"Sample"},{"location":"routes_for_region/#get-routes-with-region-name-and-query","text":"fun getRoutes( regionName: String, query: String ): Single<List<RegionRoute>>","title":"Get routes with region name and query"},{"location":"routes_for_region/#parameters_2","text":"Name Type Required regionName String Yes query String Yes","title":"Parameters"},{"location":"routes_for_region/#response_2","text":"(RxJava Single) List of RegionRoute","title":"Response"},{"location":"routes_for_region/#sample_2","text":"TripKitUI.getInstance().regionRoutingRepository().getRoutes( regionName = \"US_CA_RegionName\" query = \"Metro\" ).subscribe { // Handle response here }","title":"Sample"},{"location":"routes_for_region/#get-details-of-a-route","text":"fun getRegionRouteInfo( region: String, operatorId: String, routeID: Int ): Single<RouteDetails> Parameters Name Type Required region String Yes operatorId String Yes routeID Int Yes Response (RxJava Single) RouteDetails Sample TripKitUI.getInstance().regionRoutingRepository().getRegionRouteInfo( regionName = \"US_CA_RegionName\" operatorId = \"Sample_Rail\", routeID = 123 ).subscribe { // Handle response here }","title":"Get details of a route"},{"location":"routes_for_region/#autocompleter","text":"First, declare RegionRoutingAutoCompleter private val regionRoutingAutoCompleter: RegionRoutingAutoCompleter = TripKitUI.getInstance().regionRoutingAutoCompleter() or private val regionRoutingAutoCompleter: RegionRoutingAutoCompleter by lazy { TripKitUI.getInstance().regionRoutingAutoCompleter() } then setup observer and get result as List< RegionRoute > regionRoutingAutoCompleter.observe({ //get results for the queries here as List<RegionRoute> }, { it.printStackTrace() } Use AutoCompleteQuery to build a query to send on the RegionRoutingAutoCompleter By Region Name AutoCompleteQuery.Builder( your_query_here_as_string ).byRegionName(your_region_name_here).build() By Location AutoCompleteQuery.Builder( your_query_here_as_string ).byLocation(location_object_here).build() Lastly, send the query to the RegionRoutingAutoCompleter regionRoutingAutoCompleter.sendQuery( RegionRoutingAutoCompleter.AutoCompleteQuery.Builder( \"sample query\" ).byRegionName(\"REGION_NAME\").build() ) and get the result from the observer that you setup earlier.","title":"Autocompleter"},{"location":"search_location/","text":"Most of the time, you'll be interested in things involving Locations - a starting location, a destination location, or possibly a service stop location. We provide a few components to help you find them. RouteInputView The RouteInputView is a view that can be overlaid on top of a map, such as the TripKit Map Fragment , providing a UI for displaying the origin and destination locations, as well as departure/arrival time. The RouteInputView doesn't provide any logic, it's simply there to display information and pass along click events. You'll need to keep track of the chosen Locations yourself by adding an OnRouteWidgetClickedListener . <FrameLayout android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"> <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> <com.skedgo.tripkit.ui.routeinput.RouteInputView android:id=\"@+id/routeInputView\" android:layout_height=\"wrap_content\" android:layout_gravity=\"center_horizontal|top\" android:layout_marginTop=\"16dp\" android:layout_marginStart=\"16dp\" android:layout_marginEnd=\"16dp\" android:layout_width=\"match_parent\"/> </FrameLayout> private var fromLocation: Location? = null private var toLocation: Location? = null override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) routeInputView.setOnRouteWidgetClickedListener { widget -> when(widget) { RouteInputView.OnRouteWidgetClickedListener.Widget.START -> showSearchForStart() RouteInputView.OnRouteWidgetClickedListener.Widget.DESTINATION -> showSearchForDestination() RouteInputView.OnRouteWidgetClickedListener.Widget.SWAPPED -> startAndDestinationSwapped() RouteInputView.OnRouteWidgetClickedListener.Widget.ROUTE ->routeButtonSelected() RouteInputView.OnRouteWidgetClickedListener.Widget.TIME -> timeButtonSelected() } } The widgetClicked function of your OnRouteWidgetClickedListener will give you an enum value of the widget that was clicked. When the user clicks on the start or destination fields, you could launch a LocationSearchFragment to allow them to search for a location. When they click on the time button, you can show them a TripKitDateTimePickerDialogFragment to set their departure or arrival time, and when they click on the Route button, you could load the TripResultListFragment . TripKitDateTimePickerDialogFragment The TripKitTimeDatePickerDialogFragment displays a date and time picker so the user can choose their departure or arrival time. Use the TripKitDateTimePickerDialogFragment.Builder to build your fragment fluently. If you know the start and destination locations, you can pass that using withLocations to automatically handle timezone issues. To configure the initial values, you can either use withTimeTag to give the fragment a TimeTag , or you can use withTimeType and timeMillis . The OnTimeSelectedListener will return a TimeTag after the user has finalized their choice. var fragment = TripKitDateTimePickerDialogFragment.Builder() .withLocations(toLocation, fromLocation) .withTimeTag(timeTagForQuery) .build() fragment.setOnTimeSelectedListener { tag -> // Show the correct time on the RouteInputView button when they've changed the time val timeZone: String? = when (tag.type) { TIME_TYPE_LEAVE_AFTER -> { toLocation?.timeZone } TIME_TYPE_ARRIVE_BY -> { fromLocation?.timeZone } else -> null } routeInputView.setTimeButton(tag.formatString(this, timeZone)) } fragment.show(supportFragmentManager, \"timePicker\") LocationSearchFragment The LocationSearchFragment is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. LocationSearchFragment.Builder() .withBounds(mMap.projection.visibleRegion.latLngBounds) .near(mMap.cameraPosition.target) .withHint(getString(R.string.search)) .allowCurrentLocation(true) .allowDropPin() .build() You can style the individual results by changing a few values. dimens.xml Name Description tripkit_search_result_icon_size Sets the size of the result icon. The default is 24dp . tripkit_search_result_divider_inset Sets the inset of the dividing line between items. The default is 0dp . styles.xml Name Description tripkit_search_result_title Sets the style of the result title. tripkit_search_result_subtitle Sets the style of the result subtitle. The LocationSearchFragment.Builder() can be configured with a few different settings. Function Description withBounds(LatLngBounds) Used for Google Places searches. In our example, we use the map's visible boundaries. near(LatLng) Used for TripGo searches. In our example, we focus on the center of the map. withHint(String) Sets the EditText's hint. initialQuery(String) Set a query. allowCurrentLocation(Boolean) When true , show a permanent option for \"Current Location\" at the top of the results list allowDropPin(Boolean) When true , show a permanent option for \"Choose on Map\" at the top of the results list","title":"Location Search"},{"location":"search_location/#routeinputview","text":"The RouteInputView is a view that can be overlaid on top of a map, such as the TripKit Map Fragment , providing a UI for displaying the origin and destination locations, as well as departure/arrival time. The RouteInputView doesn't provide any logic, it's simply there to display information and pass along click events. You'll need to keep track of the chosen Locations yourself by adding an OnRouteWidgetClickedListener . <FrameLayout android:layout_width=\"match_parent\" android:layout_height=\"match_parent\"> <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> <com.skedgo.tripkit.ui.routeinput.RouteInputView android:id=\"@+id/routeInputView\" android:layout_height=\"wrap_content\" android:layout_gravity=\"center_horizontal|top\" android:layout_marginTop=\"16dp\" android:layout_marginStart=\"16dp\" android:layout_marginEnd=\"16dp\" android:layout_width=\"match_parent\"/> </FrameLayout> private var fromLocation: Location? = null private var toLocation: Location? = null override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) routeInputView.setOnRouteWidgetClickedListener { widget -> when(widget) { RouteInputView.OnRouteWidgetClickedListener.Widget.START -> showSearchForStart() RouteInputView.OnRouteWidgetClickedListener.Widget.DESTINATION -> showSearchForDestination() RouteInputView.OnRouteWidgetClickedListener.Widget.SWAPPED -> startAndDestinationSwapped() RouteInputView.OnRouteWidgetClickedListener.Widget.ROUTE ->routeButtonSelected() RouteInputView.OnRouteWidgetClickedListener.Widget.TIME -> timeButtonSelected() } } The widgetClicked function of your OnRouteWidgetClickedListener will give you an enum value of the widget that was clicked. When the user clicks on the start or destination fields, you could launch a LocationSearchFragment to allow them to search for a location. When they click on the time button, you can show them a TripKitDateTimePickerDialogFragment to set their departure or arrival time, and when they click on the Route button, you could load the TripResultListFragment .","title":"RouteInputView"},{"location":"search_location/#tripkitdatetimepickerdialogfragment","text":"The TripKitTimeDatePickerDialogFragment displays a date and time picker so the user can choose their departure or arrival time. Use the TripKitDateTimePickerDialogFragment.Builder to build your fragment fluently. If you know the start and destination locations, you can pass that using withLocations to automatically handle timezone issues. To configure the initial values, you can either use withTimeTag to give the fragment a TimeTag , or you can use withTimeType and timeMillis . The OnTimeSelectedListener will return a TimeTag after the user has finalized their choice. var fragment = TripKitDateTimePickerDialogFragment.Builder() .withLocations(toLocation, fromLocation) .withTimeTag(timeTagForQuery) .build() fragment.setOnTimeSelectedListener { tag -> // Show the correct time on the RouteInputView button when they've changed the time val timeZone: String? = when (tag.type) { TIME_TYPE_LEAVE_AFTER -> { toLocation?.timeZone } TIME_TYPE_ARRIVE_BY -> { fromLocation?.timeZone } else -> null } routeInputView.setTimeButton(tag.formatString(this, timeZone)) } fragment.show(supportFragmentManager, \"timePicker\")","title":"TripKitDateTimePickerDialogFragment"},{"location":"search_location/#locationsearchfragment","text":"The LocationSearchFragment is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. LocationSearchFragment.Builder() .withBounds(mMap.projection.visibleRegion.latLngBounds) .near(mMap.cameraPosition.target) .withHint(getString(R.string.search)) .allowCurrentLocation(true) .allowDropPin() .build() You can style the individual results by changing a few values. dimens.xml Name Description tripkit_search_result_icon_size Sets the size of the result icon. The default is 24dp . tripkit_search_result_divider_inset Sets the inset of the dividing line between items. The default is 0dp . styles.xml Name Description tripkit_search_result_title Sets the style of the result title. tripkit_search_result_subtitle Sets the style of the result subtitle. The LocationSearchFragment.Builder() can be configured with a few different settings. Function Description withBounds(LatLngBounds) Used for Google Places searches. In our example, we use the map's visible boundaries. near(LatLng) Used for TripGo searches. In our example, we focus on the center of the map. withHint(String) Sets the EditText's hint. initialQuery(String) Set a query. allowCurrentLocation(Boolean) When true , show a permanent option for \"Current Location\" at the top of the results list allowDropPin(Boolean) When true , show a permanent option for \"Choose on Map\" at the top of the results list","title":"LocationSearchFragment"},{"location":"stop_detail/","text":"ServiceStopMapFragment The ServiceStopMapFragment displays a particular scheduled service's route. <fragment android:id=\"@+id/mapFragment\" class=\"com.skedgo.tripkit.ui.map.servicestop.ServiceStopMapFragment\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" /> To tell it which route to display, call the setService function with a TimetableEntry , or if you are using a TimetableFragment , you can give the map to it and it will automatically display routes when the entries are clicked. TimetableFragment The TimetableFragment lists all scheduled services for a particular stop. If you pass it a ServiceStopMapFragment , it will automatically call setService when the user clicks on a particular service. You can also do that manually from a OnTimetableEntrySelectedListener . Like a few of the fragments in the Trip Results , you can display your own custom buttons. var timetableFragment = com.skedgo.tripkit.ui.timetables.TimetableFragment.Builder() .withStop(location) .withButton(\"route\", R.layout.route_button) .withButton(\"favorite\", R.layout.bookmark_button) .build() When the user clicks a particular timetable entry, the OnTimetableEntrySelectedListener will be called. // If we add our ServiceStopMapFragment as a listener, it will automatically display a selected timetable entry. timetableFragment.addOnTimetableEntrySelectedListener(mapFragment) timetableFragment.addOnTimetableEntrySelectedListener { timetableEntry, scheduledStop, minStartTime -> // Perhaps you'd like to show the service detail now? } And when they click on any of the TripKitButtons that you provided, the OnTripKitButtonClickListener will be called. timetableFragment.setOnTripButtonClickListener { id, scheduledStop -> if (id == \"route\") { Toast.makeText(activity, \"Will route to ${scheduledStop.displayAddress}\", Toast.LENGTH_SHORT).show() } else if (id == \"favorite\") { Toast.makeText(activity, \"Will favorite ${scheduledStop.nameOrApproximateAddress}\", Toast.LENGTH_SHORT).show() } } ServiceDetailFragment To show the details about a particular service, you can use the ServiceDetailFragment which shows the entire scheduled service line. If you pass it a ServiceStopMapFragment , it will automatically have the map move and zoom in on the scheduled stop that a user clicks on. You'll need to pass it a TimetableEntry and a ScheduledStop . var fragment = ServiceDetailFragment.Builder() .withTimetableEntry(timetableEntry) .withStop(scheduledStop) .build() You can then add OnScheduledStopClickListeners to handle users clicking on individual stops. fragment.addOnScheduledStopClickListener(mapFragment) fragment.addOnScheduledStopClickListener { // You could collapse a bottom sheet, for example. }","title":"Service & Stop Detail"},{"location":"stop_detail/#servicestopmapfragment","text":"The ServiceStopMapFragment displays a particular scheduled service's route. <fragment android:id=\"@+id/mapFragment\" class=\"com.skedgo.tripkit.ui.map.servicestop.ServiceStopMapFragment\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" /> To tell it which route to display, call the setService function with a TimetableEntry , or if you are using a TimetableFragment , you can give the map to it and it will automatically display routes when the entries are clicked.","title":"ServiceStopMapFragment"},{"location":"stop_detail/#timetablefragment","text":"The TimetableFragment lists all scheduled services for a particular stop. If you pass it a ServiceStopMapFragment , it will automatically call setService when the user clicks on a particular service. You can also do that manually from a OnTimetableEntrySelectedListener . Like a few of the fragments in the Trip Results , you can display your own custom buttons. var timetableFragment = com.skedgo.tripkit.ui.timetables.TimetableFragment.Builder() .withStop(location) .withButton(\"route\", R.layout.route_button) .withButton(\"favorite\", R.layout.bookmark_button) .build() When the user clicks a particular timetable entry, the OnTimetableEntrySelectedListener will be called. // If we add our ServiceStopMapFragment as a listener, it will automatically display a selected timetable entry. timetableFragment.addOnTimetableEntrySelectedListener(mapFragment) timetableFragment.addOnTimetableEntrySelectedListener { timetableEntry, scheduledStop, minStartTime -> // Perhaps you'd like to show the service detail now? } And when they click on any of the TripKitButtons that you provided, the OnTripKitButtonClickListener will be called. timetableFragment.setOnTripButtonClickListener { id, scheduledStop -> if (id == \"route\") { Toast.makeText(activity, \"Will route to ${scheduledStop.displayAddress}\", Toast.LENGTH_SHORT).show() } else if (id == \"favorite\") { Toast.makeText(activity, \"Will favorite ${scheduledStop.nameOrApproximateAddress}\", Toast.LENGTH_SHORT).show() } }","title":"TimetableFragment"},{"location":"stop_detail/#servicedetailfragment","text":"To show the details about a particular service, you can use the ServiceDetailFragment which shows the entire scheduled service line. If you pass it a ServiceStopMapFragment , it will automatically have the map move and zoom in on the scheduled stop that a user clicks on. You'll need to pass it a TimetableEntry and a ScheduledStop . var fragment = ServiceDetailFragment.Builder() .withTimetableEntry(timetableEntry) .withStop(scheduledStop) .build() You can then add OnScheduledStopClickListeners to handle users clicking on individual stops. fragment.addOnScheduledStopClickListener(mapFragment) fragment.addOnScheduledStopClickListener { // You could collapse a bottom sheet, for example. }","title":"ServiceDetailFragment"},{"location":"trip_results/","text":"Once you have two Location objects, you can get a list of routes between them, the individual services that handle those routes, and the individual segments. The TripResultListFragment takes a Query which contains a pair of Locations as well as weighting information, and displays a list of possible routes. Query To begin with, you'll need to build a Query object. Queries have locations, transport mode weighting, and contain information about transfer time and walking speed. Two Locations are required, but the rest is optional. val query = Query().apply { fromLocation = departureLocation toLocation = destinationLocation cyclingSpeed = 1 walkingSpeed = 1 environmentWeight = 0.5 hassleWeight = 1.0 budgetWeight = 2.0 setTimeTag(timeTagForQuery) } Parameter Description fromLocation Sets the departure location. toLocation Sets the destination location. cyclingSpeed A value of 0, 1, or 2. 0 = slow (12 km/h), 1 = medium (18 km/h), 2 = fast (25 km/h) walkingSpeed A value of 0, 1, or 2. 0 = slow (2.5 km/h), 1 = medium (4 km/h), 2 = fast (4.5 km/h) transferTime Preferred minimum transfer time in minutes. timeWeight Part of the weighting profile specifying the user's preference for duration. It should be a value between 0.1 (unimportant) and 2.0 (important). budgetWeight Part of the weighting profile specifying the user's preference for price. It should be a value between 0.1 (unimportant) and 2.0 (important). hassleWeight Part of the weighting profile specifying the user's preference for convenience. It should be a value between 0.1 (unimportant) and 2.0 (important). environmentWeight Part of the weighting profile specifying the user's preference for environmental impact. It should be a value between 0.1 (unimportant) and 2.0 (important). unit Sets the distance unit used. It should be a string value of \"auto\" , \"imperial\" or \"metric\" TripResultListFragment Once you have your query, you can launch a TripResultListFragment , which displays the results of an A-to-B route and automatically handles date/time selection and transit mode filtering. Transit modes are automatically saved and restored from SharedPreferences the next time that a trip result is displayed. val fragment = TripResultListFragment.Builder() .withQuery(query) .build() The origin and destination locations are clickable. When clicked, the fragment calls an OnLocationClickListener . fragment.setOnLocationClickListener( startLocationClicked = { // You could show a LocationSearchFragment here }, destinationLocationClicked = { // Or do nothing at all? }) When the user chooses a particular trip, the OnTripSelectedListener will be called with a ViewTrip result. You can then launch a TripSegmentListFragment to display the individual segments. fragment.setOnTripSelectedListener { viewTrip -> tripSelected(viewTrip)} TripResultMapFragment With a ViewTrip chosen, you can display the route using a TripResultMapFragment . As TripKit caches route information in the background, you only need to pass a UUID to the withTripGroupId function in the TripResultMapFragment.Builder . val mapFragment = TripResultMapFragment.Builder() .withTripGroupId(viewTrip.tripGroupUUID) .build() TripSegmentListFragment A list of trip segments can be shown with a TripSegmentListFragment . It can optionally show action buttons, in this example, \"Go\" and \"Favourite\". To build a TripSegmentListFragment , you only need a ViewTrip 's UUID. val fragment = TripSegmentListFragment.Builder() .withTripGroupId(viewTrip.tripGroupUUID) .build() If you'd also like to use buttons, pass it a list of TripKitButtons . A TripKitButton consists of a string identifier, which you'll receive in the button click handler, and a resource identifier for a layout which will be inflated. The layout can contain a single Button if you'd like. <?xml version=\"1.0\" encoding=\"utf-8\"?> <com.google.android.material.button.MaterialButton xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Go\" app:backgroundTint=\"@color/colorPrimary\" android:drawableLeft=\"@drawable/ic_directions\" android:theme=\"@style/Theme.MaterialComponents\" style=\"@style/Widget.MaterialComponents.Button.UnelevatedButton\"/> val buttonList = listOf(TripKitButton(\"go\", R.layout.go_button), TripKitButton(\"favorite\", R.layout.favourite_button)) val fragment = TripSegmentListFragment.Builder() .withTripGroupId(trip!!.tripGroupUUID) .withButtons(buttonList) .build() When the button is clicked, the TripSegmentListFragment.OnTripKitButtonClickListener will be called with the id of the TripKitButton and the current trip group. fragment.setOnTripKitButtonListener { id, tripGroup -> // Do something with the button } TripResultPagerFragment To provide a more convenient user interface, the TripResultPagerFragment bundles all of the possible TripSegmentListFragments for a given result list into a view pager, allowing the user to swipe back and forth through the routes. If it is given a TripResultMapFragment , it will automatically change the map to display the correct route. Like the TripSegmentListFragment , you can pass it TripKitButtons , and provide a TripResultPagerFragment.OnTripKitButtonClickListener to receive the click events. val pagerFragment = TripResultPagerFragment.Builder() .withTripButton(\"go\", R.layout.go_button) .withTripButton(\"favorite\", R.layout.bookmark_button) .withMapFragment(mapFragment) .withViewTrip(viewTrip) .build() pagerFragment.setOnTripKitButtonClickListener { id, tripGroup -> if (id == \"go\") { Toast.makeText(context!!, \"Will go to ${tripGroup.uuid()}\", Toast.LENGTH_SHORT).show() } else if (id == \"favorite\") { Toast.makeText(context!!, \"Will add ${tripGroup.uuid()} as a favorite\", Toast.LENGTH_SHORT).show() } }","title":"Trip Results"},{"location":"trip_results/#query","text":"To begin with, you'll need to build a Query object. Queries have locations, transport mode weighting, and contain information about transfer time and walking speed. Two Locations are required, but the rest is optional. val query = Query().apply { fromLocation = departureLocation toLocation = destinationLocation cyclingSpeed = 1 walkingSpeed = 1 environmentWeight = 0.5 hassleWeight = 1.0 budgetWeight = 2.0 setTimeTag(timeTagForQuery) } Parameter Description fromLocation Sets the departure location. toLocation Sets the destination location. cyclingSpeed A value of 0, 1, or 2. 0 = slow (12 km/h), 1 = medium (18 km/h), 2 = fast (25 km/h) walkingSpeed A value of 0, 1, or 2. 0 = slow (2.5 km/h), 1 = medium (4 km/h), 2 = fast (4.5 km/h) transferTime Preferred minimum transfer time in minutes. timeWeight Part of the weighting profile specifying the user's preference for duration. It should be a value between 0.1 (unimportant) and 2.0 (important). budgetWeight Part of the weighting profile specifying the user's preference for price. It should be a value between 0.1 (unimportant) and 2.0 (important). hassleWeight Part of the weighting profile specifying the user's preference for convenience. It should be a value between 0.1 (unimportant) and 2.0 (important). environmentWeight Part of the weighting profile specifying the user's preference for environmental impact. It should be a value between 0.1 (unimportant) and 2.0 (important). unit Sets the distance unit used. It should be a string value of \"auto\" , \"imperial\" or \"metric\"","title":"Query"},{"location":"trip_results/#tripresultlistfragment","text":"Once you have your query, you can launch a TripResultListFragment , which displays the results of an A-to-B route and automatically handles date/time selection and transit mode filtering. Transit modes are automatically saved and restored from SharedPreferences the next time that a trip result is displayed. val fragment = TripResultListFragment.Builder() .withQuery(query) .build() The origin and destination locations are clickable. When clicked, the fragment calls an OnLocationClickListener . fragment.setOnLocationClickListener( startLocationClicked = { // You could show a LocationSearchFragment here }, destinationLocationClicked = { // Or do nothing at all? }) When the user chooses a particular trip, the OnTripSelectedListener will be called with a ViewTrip result. You can then launch a TripSegmentListFragment to display the individual segments. fragment.setOnTripSelectedListener { viewTrip -> tripSelected(viewTrip)}","title":"TripResultListFragment"},{"location":"trip_results/#tripresultmapfragment","text":"With a ViewTrip chosen, you can display the route using a TripResultMapFragment . As TripKit caches route information in the background, you only need to pass a UUID to the withTripGroupId function in the TripResultMapFragment.Builder . val mapFragment = TripResultMapFragment.Builder() .withTripGroupId(viewTrip.tripGroupUUID) .build()","title":"TripResultMapFragment"},{"location":"trip_results/#tripsegmentlistfragment","text":"A list of trip segments can be shown with a TripSegmentListFragment . It can optionally show action buttons, in this example, \"Go\" and \"Favourite\". To build a TripSegmentListFragment , you only need a ViewTrip 's UUID. val fragment = TripSegmentListFragment.Builder() .withTripGroupId(viewTrip.tripGroupUUID) .build() If you'd also like to use buttons, pass it a list of TripKitButtons . A TripKitButton consists of a string identifier, which you'll receive in the button click handler, and a resource identifier for a layout which will be inflated. The layout can contain a single Button if you'd like. <?xml version=\"1.0\" encoding=\"utf-8\"?> <com.google.android.material.button.MaterialButton xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Go\" app:backgroundTint=\"@color/colorPrimary\" android:drawableLeft=\"@drawable/ic_directions\" android:theme=\"@style/Theme.MaterialComponents\" style=\"@style/Widget.MaterialComponents.Button.UnelevatedButton\"/> val buttonList = listOf(TripKitButton(\"go\", R.layout.go_button), TripKitButton(\"favorite\", R.layout.favourite_button)) val fragment = TripSegmentListFragment.Builder() .withTripGroupId(trip!!.tripGroupUUID) .withButtons(buttonList) .build() When the button is clicked, the TripSegmentListFragment.OnTripKitButtonClickListener will be called with the id of the TripKitButton and the current trip group. fragment.setOnTripKitButtonListener { id, tripGroup -> // Do something with the button }","title":"TripSegmentListFragment"},{"location":"trip_results/#tripresultpagerfragment","text":"To provide a more convenient user interface, the TripResultPagerFragment bundles all of the possible TripSegmentListFragments for a given result list into a view pager, allowing the user to swipe back and forth through the routes. If it is given a TripResultMapFragment , it will automatically change the map to display the correct route. Like the TripSegmentListFragment , you can pass it TripKitButtons , and provide a TripResultPagerFragment.OnTripKitButtonClickListener to receive the click events. val pagerFragment = TripResultPagerFragment.Builder() .withTripButton(\"go\", R.layout.go_button) .withTripButton(\"favorite\", R.layout.bookmark_button) .withMapFragment(mapFragment) .withViewTrip(viewTrip) .build() pagerFragment.setOnTripKitButtonClickListener { id, tripGroup -> if (id == \"go\") { Toast.makeText(context!!, \"Will go to ${tripGroup.uuid()}\", Toast.LENGTH_SHORT).show() } else if (id == \"favorite\") { Toast.makeText(context!!, \"Will add ${tripGroup.uuid()} as a favorite\", Toast.LENGTH_SHORT).show() } }","title":"TripResultPagerFragment"},{"location":"tripkit_map_fragment/","text":"The TripKitMapFragment is a map, based ultimately on a SupportMapFragment , that automatically integrates with SkedGo's backend, display transit information without any additional intervention. Assuming that you've added your TripGo API Token as described in the Setup , you can add the fragment directly to your layout, and icons will automatically be downloaded and displayed. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> When the user clicks on a stop icon, a small info window is displayed with information about the stop. If you provide an OnInfoWindowClickListener , you'll be notified when the user clicks on that info window. mapFragment.setOnInfoWindowClickListener { location -> if (location is ScheduledStop) { showTimetable(location) } }","title":"TripKit Map Fragment"},{"location":"view_controllers/","text":"View Controllers of TripKitUI TripKitUI provides customizable view controllers for the following high-level features: Trip planning for showing and comparing the different ways of getting from A-to-B, including details screens for each trip both as an overview of the whole trip or the steps of each trip on a mode-by-mode basis. Public transport departures for a specific stop or station with real-time information, including a details screen for each service that shows the route on the map and in a list. Location search including autocompletion for searching by addresses, public transport POIs, or your own data sources. Customizable home screen which ties all of these together, and let's you add additional custom components Each of these share the following characteristics: Customisation points for colours and fonts VoiceOver accessible Translated into the following languages: Arabic, English, Japanese, Compatible with Android Phone and Tablet Compatible with Android API 34 Compatible with Google Map out of the box, but can also use other map UI layers, such as HERE or OpenStreetMap Source code available Real-time departures and service details The stand-alone view controller TKUITimetableControllerFragment let's you quickly and easily embed public transport departures. This view controller has the following features: Show departures for an individual stop or larger station Real-time information where available, including real-time departure and arrival times, service disruptions and crowdedness of individual services. Optionally with wheelchair accessibility information Let users set the time of the first departure time Show details of each service Route on the map List of stops including arrival and departure time at each stop Real-time vehicle location where available It has the following additional customisation point/s: - Customizable list of action buttons Trip planning and trip details The stand-alone view controller TKUITripResultsFragment let's you quickly and easily show routing results between two locations for various modes including combinations of those modes, i.e., this is fully multi-modal and inter-modal. This view controller has the following features: Show routing results to a specified location from the user's current location, or between specified locations High-level comparison of trips, showing durations, cost, carbon emissions, and calories burnt Real-time information, including departure times, traffic, service disruptions, pricing quotes, ETAs Let users select what modes should be included Let users set the time to depart or the time to arrive Show details for each trip as an overview Trip mode-by-mode overview The stand-alone view controller TKUITripDetailsViewControllerFragment let's you display details of a trip on a mode-by-mode (or segment-by-segment) basis. This view controller has the following features: Present detailed trip information, including origin, destination, modes of transportation, stops, and schedules. Supports various trip sources: individual trips (ViewTrip), groups of trips (TripGroup), and favorite trips (FavoriteTrip). Location search The TKUILocationSearchViewControllerFragment can be used to provide autocompletion results for addresses, POIs and custom data sources. It features the following: - Location Search: - You can type in the name of a place, like a restaurant or a city, and the app will help you find it. - Map Integration: - If you want to search for places on a map, this code lets you do that. You can set an area on the map to focus your search. - Suggestions: - It gives you suggestions as you type, like when your phone suggests words when you're texting. These suggestions can be for specific places or types of locations. Home screen The TKUIHomeViewControllerFragment can be used as a start-screen for the trip planning, timetable and search components -- while being highly customizable to add arbitrary other features. The built-in functionality is a search bar at the top, which uses the same search functionality as the dedicated TKUILocationSearchViewControllerFragment but with the search integrated in the home screen UI, along with a directions button to bring up the RouteInputView . The purpose of the home screen is then to add individual components , to give users quick access to different section. How to build these, is up to you, but they can be things like: The user's favourites Recently searched locations Nearby locations Access to the user's booked trips Access to the user's tickets The TripKitUIExample shows to do some of these.","title":"Viewcontroller"},{"location":"view_controllers/#view-controllers-of-tripkitui","text":"TripKitUI provides customizable view controllers for the following high-level features: Trip planning for showing and comparing the different ways of getting from A-to-B, including details screens for each trip both as an overview of the whole trip or the steps of each trip on a mode-by-mode basis. Public transport departures for a specific stop or station with real-time information, including a details screen for each service that shows the route on the map and in a list. Location search including autocompletion for searching by addresses, public transport POIs, or your own data sources. Customizable home screen which ties all of these together, and let's you add additional custom components Each of these share the following characteristics: Customisation points for colours and fonts VoiceOver accessible Translated into the following languages: Arabic, English, Japanese, Compatible with Android Phone and Tablet Compatible with Android API 34 Compatible with Google Map out of the box, but can also use other map UI layers, such as HERE or OpenStreetMap Source code available","title":"View Controllers of TripKitUI"},{"location":"view_controllers/#real-time-departures-and-service-details","text":"The stand-alone view controller TKUITimetableControllerFragment let's you quickly and easily embed public transport departures. This view controller has the following features: Show departures for an individual stop or larger station Real-time information where available, including real-time departure and arrival times, service disruptions and crowdedness of individual services. Optionally with wheelchair accessibility information Let users set the time of the first departure time Show details of each service Route on the map List of stops including arrival and departure time at each stop Real-time vehicle location where available It has the following additional customisation point/s: - Customizable list of action buttons","title":"Real-time departures and service details"},{"location":"view_controllers/#trip-planning-and-trip-details","text":"The stand-alone view controller TKUITripResultsFragment let's you quickly and easily show routing results between two locations for various modes including combinations of those modes, i.e., this is fully multi-modal and inter-modal. This view controller has the following features: Show routing results to a specified location from the user's current location, or between specified locations High-level comparison of trips, showing durations, cost, carbon emissions, and calories burnt Real-time information, including departure times, traffic, service disruptions, pricing quotes, ETAs Let users select what modes should be included Let users set the time to depart or the time to arrive Show details for each trip as an overview","title":"Trip planning and trip details"},{"location":"view_controllers/#trip-mode-by-mode-overview","text":"The stand-alone view controller TKUITripDetailsViewControllerFragment let's you display details of a trip on a mode-by-mode (or segment-by-segment) basis. This view controller has the following features: Present detailed trip information, including origin, destination, modes of transportation, stops, and schedules. Supports various trip sources: individual trips (ViewTrip), groups of trips (TripGroup), and favorite trips (FavoriteTrip).","title":"Trip mode-by-mode overview"},{"location":"view_controllers/#location-search","text":"The TKUILocationSearchViewControllerFragment can be used to provide autocompletion results for addresses, POIs and custom data sources. It features the following: - Location Search: - You can type in the name of a place, like a restaurant or a city, and the app will help you find it. - Map Integration: - If you want to search for places on a map, this code lets you do that. You can set an area on the map to focus your search. - Suggestions: - It gives you suggestions as you type, like when your phone suggests words when you're texting. These suggestions can be for specific places or types of locations.","title":"Location search"},{"location":"view_controllers/#home-screen","text":"The TKUIHomeViewControllerFragment can be used as a start-screen for the trip planning, timetable and search components -- while being highly customizable to add arbitrary other features. The built-in functionality is a search bar at the top, which uses the same search functionality as the dedicated TKUILocationSearchViewControllerFragment but with the search integrated in the home screen UI, along with a directions button to bring up the RouteInputView . The purpose of the home screen is then to add individual components , to give users quick access to different section. How to build these, is up to you, but they can be things like: The user's favourites Recently searched locations Nearby locations Access to the user's booked trips Access to the user's tickets The TripKitUIExample shows to do some of these.","title":"Home screen"},{"location":"tripkit-android/","text":"tripkit-android Packages Name Summary com.skedgo com.skedgo.geocoding com.skedgo.geocoding.agregator com.skedgo.rxtry com.skedgo.tripkit com.skedgo.tripkit.a2brouting com.skedgo.tripkit.agenda com.skedgo.tripkit.alerts com.skedgo.tripkit.analytics com.skedgo.tripkit.android com.skedgo.tripkit.bookingproviders com.skedgo.tripkit.common com.skedgo.tripkit.common.agenda com.skedgo.tripkit.common.model com.skedgo.tripkit.common.util com.skedgo.tripkit.configuration com.skedgo.tripkit.data.connectivity com.skedgo.tripkit.data.database com.skedgo.tripkit.data.database.locations.bikepods com.skedgo.tripkit.data.database.locations.carparks com.skedgo.tripkit.data.database.locations.carpods com.skedgo.tripkit.data.database.locations.onstreetparking com.skedgo.tripkit.data.database.stops com.skedgo.tripkit.data.database.timetables com.skedgo.tripkit.data.datetime com.skedgo.tripkit.data.locations com.skedgo.tripkit.data.regions com.skedgo.tripkit.data.routingstatus com.skedgo.tripkit.data.tsp com.skedgo.tripkit.data.util com.skedgo.tripkit.datetime com.skedgo.tripkit.geocoding com.skedgo.tripkit.location com.skedgo.tripkit.locations com.skedgo.tripkit.logging com.skedgo.tripkit.parkingspots com.skedgo.tripkit.parkingspots.models com.skedgo.tripkit.routing com.skedgo.tripkit.routingstatus com.skedgo.tripkit.scope com.skedgo.tripkit.time com.skedgo.tripkit.tsp com.skedgo.tripkit.ui com.skedgo.tripkit.ui.booking com.skedgo.tripkit.ui.core com.skedgo.tripkit.ui.core.binding com.skedgo.tripkit.ui.core.modeprefs com.skedgo.tripkit.ui.core.permissions com.skedgo.tripkit.ui.core.rxlifecyclecomponents com.skedgo.tripkit.ui.core.rxproperty com.skedgo.tripkit.ui.creditsources com.skedgo.tripkit.ui.data com.skedgo.tripkit.ui.dialog com.skedgo.tripkit.ui.geocoding com.skedgo.tripkit.ui.locationhelper com.skedgo.tripkit.ui.map com.skedgo.tripkit.ui.map.adapter com.skedgo.tripkit.ui.map.home com.skedgo.tripkit.ui.map.servicestop com.skedgo.tripkit.ui.model com.skedgo.tripkit.ui.provider com.skedgo.tripkit.ui.realtime com.skedgo.tripkit.ui.routeinput com.skedgo.tripkit.ui.routing com.skedgo.tripkit.ui.routing.settings com.skedgo.tripkit.ui.search com.skedgo.tripkit.ui.servicedetail com.skedgo.tripkit.ui.timetables com.skedgo.tripkit.ui.timetables.data com.skedgo.tripkit.ui.timetables.domain com.skedgo.tripkit.ui.trip com.skedgo.tripkit.ui.trip.details.viewmodel com.skedgo.tripkit.ui.trip.options com.skedgo.tripkit.ui.tripresult com.skedgo.tripkit.ui.tripresults com.skedgo.tripkit.ui.utils com.skedgo.tripkit.ui.views skedgo.tripgo.agenda.legacy skedgo.tripgo.data.timetables skedgo.tripgo.parkingspots.models Index All Types","title":"SDK Reference"},{"location":"tripkit-android/#packages","text":"Name Summary com.skedgo com.skedgo.geocoding com.skedgo.geocoding.agregator com.skedgo.rxtry com.skedgo.tripkit com.skedgo.tripkit.a2brouting com.skedgo.tripkit.agenda com.skedgo.tripkit.alerts com.skedgo.tripkit.analytics com.skedgo.tripkit.android com.skedgo.tripkit.bookingproviders com.skedgo.tripkit.common com.skedgo.tripkit.common.agenda com.skedgo.tripkit.common.model com.skedgo.tripkit.common.util com.skedgo.tripkit.configuration com.skedgo.tripkit.data.connectivity com.skedgo.tripkit.data.database com.skedgo.tripkit.data.database.locations.bikepods com.skedgo.tripkit.data.database.locations.carparks com.skedgo.tripkit.data.database.locations.carpods com.skedgo.tripkit.data.database.locations.onstreetparking com.skedgo.tripkit.data.database.stops com.skedgo.tripkit.data.database.timetables com.skedgo.tripkit.data.datetime com.skedgo.tripkit.data.locations com.skedgo.tripkit.data.regions com.skedgo.tripkit.data.routingstatus com.skedgo.tripkit.data.tsp com.skedgo.tripkit.data.util com.skedgo.tripkit.datetime com.skedgo.tripkit.geocoding com.skedgo.tripkit.location com.skedgo.tripkit.locations com.skedgo.tripkit.logging com.skedgo.tripkit.parkingspots com.skedgo.tripkit.parkingspots.models com.skedgo.tripkit.routing com.skedgo.tripkit.routingstatus com.skedgo.tripkit.scope com.skedgo.tripkit.time com.skedgo.tripkit.tsp com.skedgo.tripkit.ui com.skedgo.tripkit.ui.booking com.skedgo.tripkit.ui.core com.skedgo.tripkit.ui.core.binding com.skedgo.tripkit.ui.core.modeprefs com.skedgo.tripkit.ui.core.permissions com.skedgo.tripkit.ui.core.rxlifecyclecomponents com.skedgo.tripkit.ui.core.rxproperty com.skedgo.tripkit.ui.creditsources com.skedgo.tripkit.ui.data com.skedgo.tripkit.ui.dialog com.skedgo.tripkit.ui.geocoding com.skedgo.tripkit.ui.locationhelper com.skedgo.tripkit.ui.map com.skedgo.tripkit.ui.map.adapter com.skedgo.tripkit.ui.map.home com.skedgo.tripkit.ui.map.servicestop com.skedgo.tripkit.ui.model com.skedgo.tripkit.ui.provider com.skedgo.tripkit.ui.realtime com.skedgo.tripkit.ui.routeinput com.skedgo.tripkit.ui.routing com.skedgo.tripkit.ui.routing.settings com.skedgo.tripkit.ui.search com.skedgo.tripkit.ui.servicedetail com.skedgo.tripkit.ui.timetables com.skedgo.tripkit.ui.timetables.data com.skedgo.tripkit.ui.timetables.domain com.skedgo.tripkit.ui.trip com.skedgo.tripkit.ui.trip.details.viewmodel com.skedgo.tripkit.ui.trip.options com.skedgo.tripkit.ui.tripresult com.skedgo.tripkit.ui.tripresults com.skedgo.tripkit.ui.utils com.skedgo.tripkit.ui.views skedgo.tripgo.agenda.legacy skedgo.tripgo.data.timetables skedgo.tripgo.parkingspots.models","title":"Packages"},{"location":"tripkit-android/#index","text":"All Types","title":"Index"},{"location":"tripkit-android/alltypes/","text":"All Types Name Summary com.skedgo.tripkit.a2brouting.A2bRoutingApi Calculates door-to-door trips for the specified mode(s). See more at https://skedgo.github.io/tripgo-api/#tag/Routing%2Fpaths%2F~1routing.json%2Fget . | com.skedgo.tripkit.android.A2bRoutingComponent Creates UseCases and Repositories related to the A2bRouting feature. | com.skedgo.tripkit.a2brouting.A2bRoutingDataModule | com.skedgo.tripkit.a2brouting.A2bRoutingRequest | com.skedgo.tripkit.common.util.AbstractObjectPool | com.skedgo.tripkit.ui.core.AbstractTripKitFragment | com.skedgo.tripkit.ui.core.permissions.ActionResult | (extensions in package com.skedgo.tripkit.ui.core.permissions) android.app.Activity | com.skedgo.tripkit.ui.core.rxlifecyclecomponents.ActivityEvent Lifecycle events that can be emitted by Activities. | com.skedgo.tripkit.common.model.AlertAction | com.skedgo.tripkit.data.database.timetables.AlertActionEntity | com.skedgo.tripkit.alerts.AlertBlock | com.skedgo.tripkit.data.database.timetables.AlertLocationEntity | com.skedgo.tripkit.ui.map.AlertMarkerIconFetcher | com.skedgo.tripkit.ui.map.AlertMarkerViewModel | com.skedgo.tripkit.common.model.AlertSeverity | com.skedgo.tripkit.android.AnalyticsComponent Creates UseCases and Repositories related to the Analytics feature. | com.skedgo.tripkit.AndroidGeocoder | com.skedgo.tripkit.ui.map.home.ApiZoomLevels Zoom level that is compatible with the locations.json API | com.skedgo.tripkit.data.database.locations.bikepods.AppInfoEntity | com.skedgo.tripkit.ui.tripresults.ApplyTintStrategy | com.skedgo.tripkit.ui.geocoding.AppResultLocationAdapter | com.skedgo.tripkit.configuration.AppVersionNameRepository | com.skedgo.tripkit.ui.core.binding.ArrayBindingAdapter | com.skedgo.tripkit.ui.trip.ArriveBy | com.skedgo.tripkit.ui.geocoding.AutoCompleteResult | com.skedgo.tripkit.ui.geocoding.AutoCompleteTask | com.skedgo.tripkit.routing.Availability | com.skedgo.tripkit.ui.map.BaseMapFragment | com.skedgo.tripkit.ui.map.BearingMarkerIconBuilder | com.skedgo.tripkit.common.agenda.BigAlgorithmResponse | com.skedgo.tripkit.common.agenda.BigAlgorithmResult | com.skedgo.tripkit.data.database.locations.bikepods.BikePodDao | com.skedgo.tripkit.data.database.locations.bikepods.BikePodEntity | com.skedgo.tripkit.ui.map.adapter.BikePodInfoWindowAdapter | com.skedgo.tripkit.data.database.locations.bikepods.BikePodLocationEntity | com.skedgo.tripkit.ui.map.BikePodPOILocation | com.skedgo.tripkit.data.database.locations.bikepods.BikePodRepository | com.skedgo.tripkit.data.database.locations.bikepods.BikePodRepositoryImpl | com.skedgo.tripkit.ui.utils.BindingConversions | com.skedgo.tripkit.common.model.Booking | com.skedgo.tripkit.BookingAction | com.skedgo.tripkit.ui.booking.BookingAction | com.skedgo.tripkit.common.model.BookingConfirmation | com.skedgo.tripkit.common.model.BookingConfirmationAction | com.skedgo.tripkit.common.model.BookingConfirmationImage | com.skedgo.tripkit.common.model.BookingConfirmationPurchase | com.skedgo.tripkit.common.model.BookingConfirmationStatus | com.skedgo.tripkit.common.model.BookingProvider | com.skedgo.tripkit.bookingproviders.BookingProvider | com.skedgo.tripkit.bookingproviders.BookingResolver | com.skedgo.tripkit.ui.booking.BookingResolver | com.skedgo.tripkit.bookingproviders.BookingResolverImpl | com.skedgo.tripkit.common.model.BookingSource | com.skedgo.tripkit.ui.booking.BookViewClickEvent | com.skedgo.tripkit.ui.booking.BookViewClickEventHandler | com.skedgo.tripkit.ui.core.permissions.CanRequestPermission | com.skedgo.tripkit.CarPark | com.skedgo.tripkit.data.database.locations.carparks.CarPark | com.skedgo.tripkit.data.database.locations.carparks.CarParkDao | com.skedgo.tripkit.data.database.locations.carparks.CarParkLocation | com.skedgo.tripkit.data.database.locations.carparks.CarParkLocationEntity | com.skedgo.tripkit.data.database.locations.carparks.CarParkMapper | com.skedgo.tripkit.data.database.locations.carparks.CarParkPersistor | com.skedgo.tripkit.locations.CarPod | com.skedgo.tripkit.data.database.locations.carpods.CarPodDao | com.skedgo.tripkit.data.database.locations.carpods.CarPodEntity | com.skedgo.tripkit.data.database.locations.carpods.CarPodLocation | com.skedgo.tripkit.data.database.locations.carpods.CarPodMapper | com.skedgo.tripkit.ui.map.CarPodPOILocation | com.skedgo.tripkit.data.database.locations.carpods.CarPodRepository | com.skedgo.tripkit.data.database.locations.carpods.CarPodVehicle | com.skedgo.tripkit.ui.core.CellsLoader | com.skedgo.tripkit.ui.core.CellsPersistor | com.skedgo.tripkit.ui.views.CheckableImageButton | com.skedgo.tripkit.ui.map.adapter.CityInfoWindowAdapter | com.skedgo.tripkit.ui.geocoding.CitySelectedEvent | com.skedgo.tripkit.Co2Preferences | com.skedgo.tripkit.data.database.locations.bikepods.CompanyInfo | com.skedgo.tripkit.ui.core.ConfigCreator Represents configuration parameters. | com.skedgo.tripkit.agenda.ConfigRepository | com.skedgo.tripkit.Configs | com.skedgo.tripkit.data.connectivity.ConnectivityService | com.skedgo.tripkit.data.connectivity.ConnectivityServiceImpl | (extensions in package com.skedgo.tripkit.ui.utils) android.content.Context | com.skedgo.tripkit.ui.core.Converters | com.skedgo.tripkit.ui.map.CreateMarkerForBikePod | com.skedgo.tripkit.ui.map.CreateMarkerForCarPod | com.skedgo.tripkit.ui.map.CreateSegmentMarkers | com.skedgo.tripkit.ui.creditsources.CreditSourcesOfDataViewModel | com.skedgo.tripkit.ui.search.CurrentLocationSuggestionViewModel | com.skedgo.tripkit.ui.data.CursorToEntityConverter | com.skedgo.tripkit.ui.data.CursorToServiceConverter | com.skedgo.tripkit.ui.data.CursorToStopConverter | com.skedgo.tripkit.ui.routing.settings.CyclingSpeed | com.skedgo.tripkit.ui.routing.settings.CyclingSpeedRepository | skedgo.tripgo.agenda.legacy.CyclingSpeedRepositoryModule | com.skedgo.tripkit.data.database.DatabaseMigrator | com.skedgo.tripkit.data.database.locations.bikepods.DataSourceAttribution | com.skedgo.tripkit.ui.dialog.DateSpinnerAdapter | (extensions in package com.skedgo.tripkit.routing) org.joda.time.DateTime | com.skedgo.tripkit.android.DateTimeComponent Creates UseCases and Repositories related to the DateTime feature. | com.skedgo.tripkit.data.datetime.DateTimeDataModule | com.skedgo.tripkit.data.database.DbFields | com.skedgo.tripkit.data.database.DbHelper | com.skedgo.tripkit.data.database.DbTables | com.skedgo.tripkit.DefaultCo2Preferences | com.skedgo.tripkit.ui.map.DefaultLoadPOILocationsByViewPort | com.skedgo.tripkit.ui.map.DefaultStopInfoWindowAdapter | com.skedgo.tripkit.DefaultTripPreferences | com.skedgo.tripkit.ui.timetables.data.DepartureRequestBody | com.skedgo.tripkit.ui.timetables.data.DeparturesApi | com.skedgo.tripkit.ui.timetables.domain.DeparturesRepository | com.skedgo.tripkit.ui.timetables.data.DeparturesRepositoryImpl | com.skedgo.tripkit.ui.model.DeparturesResponse | (extensions in package com.skedgo.tripkit.ui.utils) android.graphics.drawable.Drawable | com.skedgo.tripkit.ui.search.DropNewPinSuggestionViewModel | com.skedgo.tripkit.logging.ErrorLogger | com.skedgo.tripkit.ui.core.ErrorLoggerImpl | com.skedgo.tripkit.common.agenda.EventTrackItem | com.skedgo.tripkit.scope.ExtensionScope | com.skedgo.tripkit.ui.core.ExternalActionParams | com.skedgo.tripkit.ExternalActionParams | com.skedgo.tripkit.routing.ExtraQueryMapProvider A decorator that puts additional query params into the query map that is supplied into `[ A2bRoutingApi`](../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md). Note that you should only use this when you really do know what you intend to do. | com.skedgo.tripkit.a2brouting.FailoverA2bRoutingApi A wrapper of `[ A2bRoutingApi ](../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md) that requests routing.json` on multiple servers w/ failover. | com.skedgo.rxtry.Failure | com.skedgo.tripkit.android.FeatureScope | com.skedgo.tripkit.ui.servicedetail.FetchAndLoadServices | com.skedgo.tripkit.ui.timetables.FetchAndLoadTimetable | com.skedgo.tripkit.ui.search.FetchFoursquareLocations | com.skedgo.tripkit.ui.geocoding.FetchFoursquareLocationsImpl | com.skedgo.tripkit.ui.search.FetchGoogleLocations | com.skedgo.tripkit.ui.geocoding.FetchGoogleLocationsImpl | com.skedgo.tripkit.ui.search.FetchLocalLocations | com.skedgo.tripkit.ui.geocoding.FetchLocalLocationsImpl | com.skedgo.tripkit.ui.search.FetchLocations | com.skedgo.tripkit.ui.search.FetchLocationsParameters | com.skedgo.tripkit.android.FetchRegionsService | com.skedgo.tripkit.ui.timetables.FetchService | com.skedgo.tripkit.ui.map.home.FetchStopParams | com.skedgo.tripkit.ui.map.home.FetchStopsByViewport | com.skedgo.tripkit.ui.search.FetchSuggestions | com.skedgo.tripkit.ui.timetables.FetchTimetable | com.skedgo.tripkit.ui.search.FetchTripGoLocations | com.skedgo.tripkit.ui.geocoding.FetchTripGoLocationsImpl | com.skedgo.tripkit.a2brouting.FillIdentifiers Fills id for `[ Trip`](../com.skedgo.tripkit.routing/-trip/index.md). | com.skedgo.tripkit.ui.geocoding.FilterSupportedLocations | com.skedgo.tripkit.ui.geocoding.FilterSupportedLocationsImpl | com.skedgo.tripkit.ui.geocoding.FoursquareGeocoder | com.skedgo.tripkit.ui.geocoding.FoursquareResultLocationAdapter | com.skedgo.tripkit.ui.core.rxlifecyclecomponents.FragmentEvent Lifecycle events that can be emitted by Fragments. | com.skedgo.geocoding.GCAppResult Represents the the minimum information we need to calculate the score for a result obtained from the information stored in the app by the user. | com.skedgo.geocoding.agregator.GCAppResultInterface Information that the user saves in the app | com.skedgo.geocoding.GCBoundingBox | com.skedgo.geocoding.agregator.GCBoundingBoxInterface | com.skedgo.geocoding.GCFoursquareResult Represents the minimum information we need to calculate the score for a foursquare result. | com.skedgo.geocoding.agregator.GCFoursquareResultInterface | com.skedgo.geocoding.GCGoogleResult | com.skedgo.geocoding.agregator.GCGoogleResultInterface | com.skedgo.geocoding.GCQuery | com.skedgo.geocoding.agregator.GCQueryInterface | com.skedgo.geocoding.GCResult | com.skedgo.geocoding.agregator.GCResultInterface | com.skedgo.geocoding.GCSkedgoResult | com.skedgo.geocoding.agregator.GCSkedGoResultInterface | com.skedgo.tripkit.geocoding.Geocodable | com.skedgo.tripkit.ui.geocoding.Geocoder | com.skedgo.tripkit.ui.geocoding.GeocodeResponse | com.skedgo.tripkit.ui.geocoding.GeocodeResultAdapter | com.skedgo.tripkit.ui.geocoding.GeocoderLive | com.skedgo.geocoding.GeocodeUtilities | com.skedgo.tripkit.location.GeoPoint Represents a point on the Earth's surface, in latitude and longitude coordinates. Nothing more! | com.skedgo.tripkit.ui.timetables.GetA2BTime | com.skedgo.tripkit.ui.tripresult.GetAlternativeTripForAlternativeService | com.skedgo.tripkit.configuration.GetAppVersion | com.skedgo.tripkit.ui.map.home.GetCellIdsFromViewPort | com.skedgo.tripkit.ui.trip.details.viewmodel.GetColorForOccupancy | com.skedgo.tripkit.ui.timetables.GetDirectionText | com.skedgo.tripkit.ui.trip.details.viewmodel.GetDrawableForOccupancy | com.skedgo.tripkit.ui.timetables.GetFrequencyText | com.skedgo.tripkit.a2brouting.GetNonTravelledLineForTrip | com.skedgo.tripkit.time.GetNow In most cases, we should use this UseCase in place of System.currentTimeMillis to make the code more testable. | com.skedgo.tripkit.ui.timetables.GetOrdinaryTime | com.skedgo.tripkit.ui.timetables.GetRealtimeText | com.skedgo.tripkit.ui.routing.GetRoutingConfig | skedgo.tripgo.agenda.legacy.GetRoutingConfigModule | com.skedgo.tripkit.ui.timetables.GetServiceSubTitleText | com.skedgo.tripkit.ui.timetables.GetServiceTertiaryText | com.skedgo.tripkit.ui.timetables.GetServiceTitleText | com.skedgo.tripkit.ui.routing.GetSortedTripGroups | com.skedgo.tripkit.ui.routing.GetSortedTripGroupsWithRoutingStatus | com.skedgo.tripkit.ui.servicedetail.GetStopDisplayText | com.skedgo.tripkit.ui.routing.GetStopsByTravelType | com.skedgo.tripkit.ui.servicedetail.GetStopTimeDisplayText | com.skedgo.tripkit.ui.trip.details.viewmodel.GetTextForOccupancy | com.skedgo.tripkit.ui.timetables.GetTimeRangeText | com.skedgo.tripkit.ui.tripresults.GetTransportIconTintStrategy | com.skedgo.tripkit.ui.tripresults.GetTransportModePreferencesByRegion | com.skedgo.tripkit.a2brouting.GetTravelledLineForTrip | com.skedgo.tripkit.ui.map.GetTripLine | com.skedgo.tripkit.ui.timetables.GetWheelchairAccessible | com.skedgo.tripkit.ui.geocoding.GoogleGeocoderLive | (extensions in package com.skedgo.tripkit.ui.routing) com.google.android.gms.maps.GoogleMap | com.skedgo.tripkit.ui.geocoding.GoogleResultLocationAdapter | com.skedgo.tripkit.ui.search.GoogleSuggestionViewModel | com.skedgo.tripkit.ui.tripresults.GroupDiffCallback | com.skedgo.geocoding.GroupScoringResult scored result with duplicates | com.skedgo.tripkit.routing.GroupVisibility | com.skedgo.tripkit.common.util.Gsons | com.skedgo.tripkit.ui.geocoding.HasResults | com.skedgo.tripkit.ui.map.IconUtils | com.skedgo.tripkit.ui.core.binding.ImageViewBindingAdapters | com.skedgo.tripkit.ui.core.InitializerContentProvider | (extensions in package com.skedgo.tripkit.ui.routing.settings) kotlin.Int | (extensions in package com.skedgo.tripkit.a2brouting) kotlin.Int | com.skedgo.tripkit.ui.trip.options.InterCityTimePickerViewModel | com.skedgo.tripkit.common.agenda.IRealTimeElement Signifies a class is able to fetch timetable information | com.skedgo.tripkit.ui.core.modeprefs.IsIncluded | com.skedgo.tripkit.ui.tripresult.IsLocationPermissionGranted | com.skedgo.tripkit.ui.core.modeprefs.IsTransitModeIncluded | com.skedgo.tripkit.ui.core.modeprefs.IsTransitModeIncludedRepository | com.skedgo.tripkit.ui.trip.details.viewmodel.ITimePickerViewModel | com.skedgo.tripkit.common.model.ITimeRange | com.skedgo.tripkit.ui.timetables.JoinedCursor | com.skedgo.tripkit.configuration.Key | com.skedgo.geocoding.LatLng | (extensions in package com.skedgo.tripkit.ui.map) com.google.android.gms.maps.model.LatLngBounds | (extensions in package com.skedgo.tripkit.ui.tripresult) com.google.android.gms.maps.model.LatLngBounds | com.skedgo.tripkit.ui.trip.LeaveAfter | com.skedgo.tripkit.LineSegment Represents a segment of a polyline denoting a `[ Trip`](../com.skedgo.tripkit.routing/-trip/index.md). | (extensions in package com.skedgo.tripkit.ui.routing) kotlin.collections.List | (extensions in package com.skedgo.tripkit.ui.trip.details.viewmodel) kotlin.collections.List | (extensions in package com.skedgo.tripkit.ui.tripresult) kotlin.collections.List | com.skedgo.tripkit.ui.map.LoadBikePodsByViewPort | com.skedgo.tripkit.ui.map.LoadCarPodByViewPort | com.skedgo.tripkit.ui.map.LoadPOILocationsByViewPort | com.skedgo.tripkit.ui.servicedetail.LoadServices | com.skedgo.tripkit.ui.timetables.LoadServiceTask | com.skedgo.tripkit.ui.timetables.LoadServiceTaskCursorCols TODO Should find an appropriate class name | com.skedgo.tripkit.ui.map.LoadStopsByViewPort | com.skedgo.tripkit.routing.LocalCost | com.skedgo.tripkit.routing.LocalCostAccuracy | com.skedgo.tripkit.common.model.Location | com.skedgo.tripkit.ui.map.LocationEnhancedMapFragment | com.skedgo.tripkit.ui.locationhelper.LocationHelper A simple wrapper around FusedLocationProviderClient . | com.skedgo.tripkit.LocationInfo | com.skedgo.tripkit.LocationInfoDetails | com.skedgo.tripkit.LocationInfoService | com.skedgo.tripkit.data.locations.LocationsApi | com.skedgo.tripkit.ui.search.LocationSearchErrorViewModel | com.skedgo.tripkit.ui.search.LocationSearchFragment This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. | com.skedgo.tripkit.ui.search.LocationSearchViewModel | com.skedgo.tripkit.data.locations.LocationsRequestBody | com.skedgo.tripkit.data.locations.LocationsResponse | com.skedgo.tripkit.common.util.LowercaseEnumTypeAdapterFactory | com.skedgo.tripkit.MainModule | com.skedgo.tripkit.ui.utils.MainThreadBus A custom `[ Bus`](#) that posts events from any thread and lets subscribers receive them on the main thread. | com.skedgo.tripkit.ui.map.MapCameraController | com.skedgo.tripkit.ui.tripresult.MapCameraUpdate A view model for GoogleMap to know when it should GoogleMap.moveCamera or GoogleMap.animateCamera | com.skedgo.tripkit.ui.map.MapMarkerUtils | com.skedgo.tripkit.ui.map.home.MapViewModel | com.skedgo.tripkit.ui.map.MarkerTarget | com.skedgo.tripkit.analytics.MarkTripAsPlannedWithUserInfo Example use-case: Mark a trip as planned, and then later, get push notifications about alerts relevant to the trip, or about ride sharing opportunities. | com.skedgo.geocoding.agregator.MGAResultInterface this class represents a scored result, it could be single or have duplicates | com.skedgo.tripkit.routing.ModeInfo | com.skedgo.tripkit.alerts.ModeInfo | com.skedgo.tripkit.data.database.locations.bikepods.ModeInfoEntity | com.skedgo.geocoding.agregator.MultiSourceGeocodingAggregator Scoring formulas Favourites: max(title, address) Search history: max(title, address) Regions: distance Address book: (title + address) / 2 Calendar: (title + address) / 2 SkedGo transit stops: popularity -> ((min(popularity, GOOD_SCORE)) / (GOOD_SCORE / 100)) * 2 SkedGo others: title Google: (max(title, address) * 3 + distance) / 4 Google Autocomplete: (title * 3) / 4 Foursquare: ((title * 3 + distance) / 4) * suburb Title score: score based on input string against the title of the result Address score: score based on input string against address of the result Distance score: score based on distance to center or provided region Suburb score: bonus score if result is a suburb Popularity score: score based on popularity of result as determined by server | com.skedgo.tripkit.ui.map.adapter.NoActionWindowAdapter | com.skedgo.tripkit.ui.geocoding.NoConnection | com.skedgo.tripkit.NoConnectionError | com.skedgo.tripkit.ui.geocoding.NoResult | com.skedgo.tripkit.ui.tripresults.NoTintStrategy | com.skedgo.tripkit.ui.trip.Now | (extensions in package com.skedgo.tripkit.ui.core) io.reactivex.Observable | (extensions in package com.skedgo.tripkit.ui.map.home) io.reactivex.Observable | (extensions in package com.skedgo.tripkit.ui.utils) io.reactivex.Observable | (extensions in package com.skedgo.rxtry) io.reactivex.Observable | (extensions in package com.skedgo.tripkit.android) io.reactivex.Observable | (extensions in package com.skedgo.tripkit.ui.core.rxproperty) androidx.databinding.ObservableBoolean | (extensions in package com.skedgo.tripkit.ui.core.rxproperty) androidx.databinding.ObservableField | (extensions in package com.skedgo.tripkit.ui.core.rxproperty) androidx.databinding.ObservableInt | (extensions in package com.skedgo.tripkit.ui.core.rxproperty) androidx.databinding.ObservableList | com.skedgo.tripkit.routing.Occupancy | com.skedgo.tripkit.ui.trip.details.viewmodel.OccupancyViewModel | com.skedgo.tripkit.parkingspots.models.OffStreetParking | com.skedgo.tripkit.ui.map.adapter.OnInfoWindowClose | com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParking | com.skedgo.tripkit.parkingspots.models.OnStreetParking | com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingApi | com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingDao | skedgo.tripgo.parkingspots.models.OnStreetParkingDetails | com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingDetailsDto | com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingEntity | com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingLocation | com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingLocationDto | com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingMapper | com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingModule | com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingPersistor | com.skedgo.tripkit.parkingspots.OnStreetParkingRepository | com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingRepositoryImpl | com.skedgo.tripkit.data.database.locations.carparks.OpeningDay | com.skedgo.tripkit.data.database.locations.carparks.OpeningDayEntity | com.skedgo.tripkit.parkingspots.models.OpeningHour | com.skedgo.tripkit.data.database.locations.carparks.OpeningHours | com.skedgo.tripkit.data.database.locations.carparks.OpeningTime | com.skedgo.tripkit.data.database.locations.carparks.OpeningTimeEntity | com.skedgo.tripkit.data.database.locations.carparks.OpeningTimeResult | com.skedgo.tripkit.data.database.locations.bikepods.Operator | com.skedgo.tripkit.locations.Operator | com.skedgo.tripkit.ui.utils.Optional | com.skedgo.tripkit.OutOfRegionsException | com.skedgo.tripkit.data.tsp.Paratransit | skedgo.tripgo.data.timetables.ParentStopDao | skedgo.tripgo.data.timetables.ParentStopEntity | com.skedgo.tripkit.parkingspots.models.Parking | com.skedgo.tripkit.parkingspots.models.ParkingDetails | com.skedgo.tripkit.data.database.locations.carparks.ParkingModule | com.skedgo.tripkit.data.database.locations.carparks.ParkingOperator | com.skedgo.tripkit.parkingspots.models.ParkingOperator | com.skedgo.tripkit.data.database.locations.carparks.ParkingOperatorEntity | com.skedgo.tripkit.data.database.locations.onstreetparking.ParkingProvider | com.skedgo.tripkit.parkingspots.ParkingRepository | com.skedgo.tripkit.parkingspots.models.PaymentType | com.skedgo.tripkit.ui.routing.PerformRouting FIXME: Should move this into TripGoDomainLegacy module. | com.skedgo.tripkit.PeriodicRealTimeTripUpdateReceiver | com.skedgo.tripkit.ui.core.permissions.PermissionDenialError | com.skedgo.tripkit.ui.core.permissions.PermissionResult | com.skedgo.tripkit.ui.core.permissions.PermissionsRequest | (extensions in package com.skedgo.tripkit.ui.core) com.squareup.picasso.Picasso | com.skedgo.tripkit.ui.map.PinUpdateRepositoryImpl | com.skedgo.tripkit.ui.map.POILocation | com.skedgo.tripkit.ui.map.adapter.POILocationInfoWindowAdapter | com.skedgo.tripkit.common.util.PolyUtil | com.skedgo.tripkit.data.util.PreferenceKey | com.skedgo.tripkit.ui.routing.PreferredTransferTimeRepository | com.skedgo.tripkit.data.database.locations.carparks.PricingEntry | com.skedgo.tripkit.parkingspots.models.PricingEntry | com.skedgo.tripkit.data.database.locations.carparks.PricingEntryEntity | com.skedgo.tripkit.data.database.locations.carparks.PricingTable | com.skedgo.tripkit.parkingspots.models.PricingTable | com.skedgo.tripkit.data.database.locations.carparks.PricingTableEntity | com.skedgo.tripkit.datetime.PrintFullDate | com.skedgo.tripkit.datetime.PrintTime An UseCase to print time with respect of 24-hour (or 12-hour) setting on users' device. | com.skedgo.tripkit.ui.routing.settings.PrioritiesRepository | com.skedgo.tripkit.ui.routing.settings.Priority | com.skedgo.tripkit.routing.Provider | com.skedgo.tripkit.ui.utils.ProviderUtils | com.skedgo.tripkit.common.model.PurchaseBrand | com.skedgo.tripkit.common.model.Query Represents a query to find routes from A to B. Note that, to avoid TransactionTooLargeException , it's discouraged to pass any instance of Query to an Intent or a Bundle . The Parcelable is subject to deletion at anytime. | com.skedgo.tripkit.QueryGenerator | com.skedgo.tripkit.ui.routing.QueryLocationResolver | com.skedgo.tripkit.common.model.RealtimeAlert | com.skedgo.tripkit.alerts.RealtimeAlertApi Use `[ RealtimeAlertService`](../com.skedgo.tripkit.alerts/-realtime-alert-service/index.md) for easier usages. | com.skedgo.tripkit.alerts.RealtimeAlertResponse | com.skedgo.tripkit.common.model.RealtimeAlerts | com.skedgo.tripkit.alerts.RealtimeAlertService | com.skedgo.tripkit.ui.realtime.RealTimeChoreographer | com.skedgo.tripkit.ui.realtime.RealTimeChoreographerViewModel | com.skedgo.tripkit.locations.RealTimeInfo | com.skedgo.tripkit.common.model.RealTimeStatus | com.skedgo.tripkit.RealTimeTripUpdateReceiver | com.skedgo.tripkit.routing.RealTimeVehicle | com.skedgo.tripkit.ui.realtime.RealTimeViewModelFactory | com.skedgo.tripkit.common.model.Region | com.skedgo.tripkit.ui.geocoding.RegionalGeocoder | (extensions in package com.skedgo.tripkit.tsp) com.skedgo.tripkit.data.tsp.RegionInfo | com.skedgo.tripkit.data.tsp.RegionInfo | com.skedgo.tripkit.tsp.RegionInfoApi Retrieves detailed information about covered transport service providers for the specified regions. | com.skedgo.tripkit.tsp.RegionInfoBody | com.skedgo.tripkit.tsp.RegionInfoRepository | com.skedgo.tripkit.tsp.RegionInfoResponse | com.skedgo.tripkit.tsp.RegionInfoService A facade of `[ RegionInfoApi`](../com.skedgo.tripkit.tsp/-region-info-api/index.md) that has failover on multiple servers. | com.skedgo.tripkit.common.model.Regions | com.skedgo.tripkit.data.regions.RegionService | com.skedgo.tripkit.common.model.RegionsResponse | com.skedgo.tripkit.a2brouting.RequestTime | skedgo.tripgo.parkingspots.models.Restriction | skedgo.tripgo.parkingspots.models.RestrictionDayAndTime | com.skedgo.tripkit.data.database.locations.onstreetparking.RestrictionDayAndTimeDto | com.skedgo.tripkit.data.database.locations.onstreetparking.RestrictionDayDto | com.skedgo.tripkit.data.database.locations.onstreetparking.RestrictionDto | skedgo.tripgo.parkingspots.models.RestrictionTime | com.skedgo.tripkit.data.database.locations.onstreetparking.RestrictionTimeDto | com.skedgo.tripkit.ui.geocoding.ResultAggregator | com.skedgo.tripkit.ui.geocoding.ResultAggregatorImpl | com.skedgo.tripkit.ui.geocoding.ResultLocationAdapter | com.skedgo.tripkit.geocoding.ReverseGeocodable | com.skedgo.tripkit.ui.geocoding.ReviewSummary | com.skedgo.tripkit.alerts.Route | com.skedgo.tripkit.ui.routeinput.RouteInputView A widget for display start and destination locations, as well as departure/arrival times and a \"Route\" button. | com.skedgo.tripkit.ui.routeinput.RouteInputViewModel | com.skedgo.tripkit.a2brouting.RouteService | com.skedgo.tripkit.ui.routing.RoutingConfig | com.skedgo.tripkit.RoutingError | com.skedgo.tripkit.routing.RoutingResponse | com.skedgo.tripkit.routingstatus.RoutingStatus | com.skedgo.tripkit.routingstatus.RoutingStatusRepository | com.skedgo.tripkit.data.routingstatus.RoutingStatusRepositoryImpl | com.skedgo.tripkit.ui.trip.RoutingTime | com.skedgo.tripkit.ui.trip.options.RoutingTimeViewModelMapper | com.skedgo.tripkit.RoutingUserError | com.skedgo.tripkit.ui.core.rxlifecyclecomponents.RxFragment | com.skedgo.tripkit.ui.core.rxlifecyclecomponents.RxLifecycleAndroid | com.skedgo.tripkit.ui.core.rxlifecyclecomponents.RxMapFragment | com.skedgo.tripkit.ui.core.RxViewModel | com.skedgo.tripkit.data.database.timetables.ScheduledServiceRealtimeInfoDao | com.skedgo.tripkit.data.database.timetables.ScheduledServiceRealtimeInfoEntity | com.skedgo.tripkit.common.model.ScheduledStop | com.skedgo.tripkit.ui.map.ScheduledStopRepository | com.skedgo.tripkit.ui.provider.ScheduledStopsProvider | com.skedgo.tripkit.ui.core.SchedulerFactory | com.skedgo.tripkit.ui.core.SchedulerFactoryImpl | com.skedgo.geocoding.ScoringResult scored single result - without duplicates | com.skedgo.tripkit.ui.search.SearchErrorType | com.skedgo.tripkit.ui.search.SearchSuggestionChoice | com.skedgo.tripkit.routing.SegmentActionTemplates | com.skedgo.tripkit.ui.routing.SegmentCameraUpdate | com.skedgo.tripkit.ui.routing.SegmentCameraUpdateMapper | com.skedgo.tripkit.ui.routing.SegmentCameraUpdateRepository | com.skedgo.tripkit.ui.map.adapter.SegmentInfoWindowAdapter | com.skedgo.tripkit.routing.SegmentJsonKeys | com.skedgo.tripkit.ui.map.SegmentMarkerIconMaker | com.skedgo.tripkit.ui.map.SegmentMarkerMaker | com.skedgo.tripkit.routing.SegmentNotesTemplates | com.skedgo.tripkit.ui.map.SegmentStopMarkerMaker | com.skedgo.tripkit.routing.SegmentType | com.skedgo.tripkit.a2brouting.SelectBestDisplayTrip Selects display trip which has lowest weighted score. | com.skedgo.tripkit.ui.trip.options.SelectionType | com.skedgo.tripkit.configuration.Server | com.skedgo.tripkit.data.database.timetables.ServiceAlertDataModule | com.skedgo.tripkit.data.database.timetables.ServiceAlertMapper | com.skedgo.tripkit.ui.map.ServiceAlertMarkerMaker | com.skedgo.tripkit.data.database.timetables.ServiceAlertsDao | com.skedgo.tripkit.data.database.timetables.ServiceAlertsEntity | com.skedgo.tripkit.ui.trip.details.viewmodel.ServiceAlertViewModel | com.skedgo.tripkit.ServiceApi | com.skedgo.tripkit.routing.ServiceColor | com.skedgo.tripkit.data.database.locations.bikepods.ServiceColorEntity | com.skedgo.tripkit.ui.servicedetail.ServiceDetailFragment | com.skedgo.tripkit.ui.servicedetail.ServiceDetailItemViewModel | com.skedgo.tripkit.ui.servicedetail.ServiceDetailViewModel | com.skedgo.tripkit.ServiceExtras | com.skedgo.tripkit.ui.utils.ServiceLineOverlayTask | com.skedgo.tripkit.ui.timetables.ServiceRepository | com.skedgo.tripkit.ui.timetables.ServiceRepositoryImpl | com.skedgo.tripkit.ServiceResponse | com.skedgo.tripkit.ui.map.ServiceStop | com.skedgo.tripkit.common.model.ServiceStop Represents a future stop of a service in a trip. | com.skedgo.tripkit.ui.servicedetail.ServiceStopAndLine | com.skedgo.tripkit.ui.map.adapter.ServiceStopInfoWindowAdapter | com.skedgo.tripkit.ui.map.servicestop.ServiceStopMapFragment | com.skedgo.tripkit.ui.map.servicestop.ServiceStopMapViewModel | com.skedgo.tripkit.ui.map.servicestop.ServiceStopMarkerCreator | com.skedgo.tripkit.ui.timetables.ServiceStopsLoaderFactory | com.skedgo.tripkit.ui.provider.ServiceStopsProvider | com.skedgo.tripkit.ui.timetables.ServiceViewModel | com.skedgo.tripkit.routing.Shape | (extensions in package com.skedgo.tripkit.data.util) android.content.SharedPreferences | com.skedgo.tripkit.ui.map.SimpleCalloutView View to create custom callout in `[ InfoWindowAdapter`](#), simply including a title, a snippet, a left image and a right image. | com.skedgo.tripkit.ui.map.adapter.SimpleInfoWindowAdapter | (extensions in package com.skedgo.rxtry) io.reactivex.Single | com.skedgo.tripkit.a2brouting.SingleRouteService A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started. | com.skedgo.tripkit.common.agenda.SkedgoifyResponseParser | com.skedgo.tripkit.ui.geocoding.SkedgoResultLocationAdapter | com.skedgo.tripkit.ui.utils.Snackbars | com.skedgo.tripkit.ui.tripresults.SortOrders | com.skedgo.tripkit.routing.Source | com.skedgo.tripkit.common.util.SphericalUtil | com.skedgo.tripkit.routingstatus.Status | com.skedgo.tripkit.ui.model.StopInfo Thuy's remark: This should have been [`ServiceStop`](../com.skedgo.tripkit.common.model/-service-stop/index.md). We parse network response into ServiceStops, then persist them into SQLite database. However, when loading, we use such StopInfo to indicate service' stops. | com.skedgo.tripkit.ui.map.adapter.StopInfoWindowAdapter | com.skedgo.tripkit.ui.map.home.StopLoaderArgs | com.skedgo.tripkit.data.database.stops.StopLocationDao | com.skedgo.tripkit.data.database.stops.StopLocationEntity | com.skedgo.tripkit.ui.map.StopMarkerIconFetcher | com.skedgo.tripkit.ui.utils.StopMarkerUtils | com.skedgo.tripkit.ui.map.StopMarkerViewModel | com.skedgo.tripkit.ui.map.StopPOILocation | com.skedgo.tripkit.data.locations.StopsFetcher | com.skedgo.tripkit.ui.core.StopsPersistor | com.skedgo.tripkit.common.model.StopType | com.skedgo.tripkit.common.model.Street | (extensions in package com.skedgo.tripkit.routing) kotlin.String | com.skedgo.tripkit.common.util.StringBuilderPool | com.skedgo.tripkit.common.util.StringUtils | com.skedgo.tripkit.common.StyleManager | com.skedgo.rxtry.Success | com.skedgo.tripkit.ui.search.SuggestionViewModel | com.skedgo.tripkit.ui.utils.TapAction | com.skedgo.tripkit.routing.Templates | com.skedgo.tripkit.TemporaryUrlApi Handles downloading trip via `[ Trip#getTemporaryURL()`](../com.skedgo.tripkit.routing/-trip/get-temporary-u-r-l.md). | com.skedgo.tripkit.ui.dialog.TimeDatePickedEvent | com.skedgo.tripkit.ui.dialog.TimeDatePickerFragment | com.skedgo.tripkit.ui.map.TimeLabelMaker | com.skedgo.tripkit.ui.utils.TimeSpanUtils | com.skedgo.tripkit.ui.timetables.TimetableEntriesMapper | com.skedgo.tripkit.ui.model.TimetableEntry (Aka Service) | com.skedgo.tripkit.ui.timetables.TimetableFragment | com.skedgo.tripkit.ui.model.TimetableHeaderLineItem | com.skedgo.tripkit.ui.timetables.domain.TimetableLoaderFactory | com.skedgo.tripkit.ui.provider.TimetableProvider | com.skedgo.tripkit.ui.timetables.domain.TimetableQueryParams | com.skedgo.tripkit.ui.timetables.TimetableViewModel | com.skedgo.tripkit.common.model.TimeTag A TimeTag encapsulates a departure or arrival time, including a dynamic time of \"now\". | com.skedgo.tripkit.common.util.TimeUtils | com.skedgo.tripkit.a2brouting.ToWeightingProfileString | com.skedgo.tripkit.common.agenda.TrackItem | com.skedgo.tripkit.ui.trip.details.viewmodel.TrainOccupancyItemViewModel | com.skedgo.tripkit.TransitModeFilter | com.skedgo.tripkit.ui.core.modeprefs.TransitModeId | com.skedgo.tripkit.TransitService | com.skedgo.tripkit.common.model.TransportMode | com.skedgo.tripkit.TransportModeFilter | com.skedgo.tripkit.ui.core.modeprefs.TransportModePreference | com.skedgo.tripkit.common.util.TransportModeUtils | com.skedgo.tripkit.ui.tripresults.TransportTintStrategy | com.skedgo.tripkit.routing.Trip A [`Trip`](../com.skedgo.tripkit.routing/-trip/index.md) will mainly hold a list of TripSegment s which denotes how to go from [`Trip#getFrom()`](../com.skedgo.tripkit.routing/-trip/get-from.md) to Trip#getTo() . | com.skedgo.tripkit.routing.TripComparators | com.skedgo.tripkit.ui.TripGoStyleKit Created by Adrian Schoenig on 3. May 2018. CopyrightW 2018 SkedGo Pty Ltd. All rights reserved. | com.skedgo.tripkit.routing.TripGroup Represents a list of [`Trip`](../com.skedgo.tripkit.routing/-trip/index.md)s. A list of Trip s comprises of a display trip (aka representative trip) and alternative trips. A display trip can be accessed via [`#getDisplayTrip()`](../com.skedgo.tripkit.routing/-trip-group/get-display-trip.md) while alternative trips can be retrieved via #getTrips() minus [`#getDisplayTrip()`](../com.skedgo.tripkit.routing/-trip-group/get-display-trip.md). That's because #getTrips() returns a list of `[ Trip`](../com.skedgo.tripkit.routing/-trip/index.md)s including alternative trips and display trip. | com.skedgo.tripkit.ui.tripresults.TripGroupClassifier | com.skedgo.tripkit.routing.TripGroupComparators | com.skedgo.tripkit.ui.tripresult.TripGroupsPagerAdapter | com.skedgo.tripkit.ui.routing.TripGroupsSorter | com.skedgo.tripkit.ui.tripresults.TripGroupsSorter | com.skedgo.TripKit | com.skedgo.tripkit.ui.model.TripKitButton | com.skedgo.tripkit.data.database.TripKitDatabase | com.skedgo.tripkit.ui.dialog.TripKitDateTimePickerDialogFragment A DialogFragment which allows a user to set a time and choose whether it is a departure time or an arrival time. | com.skedgo.tripkit.common.util.TripKitLatLng | com.skedgo.tripkit.ui.map.home.TripKitMapFragment A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> Your app must provide a TripGo API token as R.string.skedgo_api_key . | com.skedgo.tripkit.ui.TripKitUI | com.skedgo.tripkit.ui.map.TripLine | com.skedgo.tripkit.ui.map.TripLocationMarkerCreator | com.skedgo.tripkit.TripPreferences | com.skedgo.tripkit.TripRegionResolver | com.skedgo.tripkit.ui.tripresults.TripResultListFragment | com.skedgo.tripkit.ui.tripresults.TripResultListViewModel | com.skedgo.tripkit.ui.tripresult.TripResultMapFragment | com.skedgo.tripkit.ui.map.TripResultMapViewModel | com.skedgo.tripkit.ui.tripresult.TripResultPagerFragment | com.skedgo.tripkit.ui.tripresult.TripResultPagerViewModel | com.skedgo.tripkit.ui.tripresults.TripResultTransportItemViewModel | com.skedgo.tripkit.ui.tripresults.TripResultViewModel | com.skedgo.tripkit.routing.TripSegment To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](../com.skedgo.tripkit.routing/-trip-segment/index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL`](../com.skedgo.tripkit.routing/-segment-type/-a-r-r-i-v-a-l.md). | com.skedgo.tripkit.ui.utils.TripSegmentActionProcessor | com.skedgo.tripkit.ui.tripresults.TripSegmentHelper | com.skedgo.tripkit.ui.tripresult.TripSegmentItemViewModel | com.skedgo.tripkit.ui.tripresult.TripSegmentListFragment | com.skedgo.tripkit.common.util.TripSegmentListResolver Puts a Departure segment before head of, and puts an Arrival segment after tail of a segment list. | com.skedgo.tripkit.routing.TripSegments | com.skedgo.tripkit.ui.tripresult.TripSegmentsViewModel | com.skedgo.tripkit.common.util.TripSegmentUtils | com.skedgo.tripkit.ui.tripresults.TripSegmentViewModel | com.skedgo.tripkit.common.agenda.TripTrackItem | com.skedgo.tripkit.TripUpdater | com.skedgo.tripkit.ui.map.TripVehicleMarkerCreator | com.skedgo.rxtry.Try | com.skedgo.tripkit.tsp.TspModule | com.skedgo.tripkit.routing.TurnByTurn | com.skedgo.tripkit.bookingproviders.UberBookingResolver | com.skedgo.tripkit.ui.core.UnableToFetchBitmapError | com.skedgo.tripkit.ui.core.UnableToFindPlaceCoordinatesError | com.skedgo.tripkit.ui.geocoding.UnableToFindPlaceCoordinatesError | com.skedgo.tripkit.common.model.Units | com.skedgo.tripkit.ui.tripresult.UpdateTripForRealtime | com.skedgo.tripkit.data.database.locations.onstreetparking.VacancyConverters | com.skedgo.tripkit.locations.Vehicle | com.skedgo.tripkit.routing.VehicleComponent | com.skedgo.tripkit.routing.VehicleDrawables | com.skedgo.tripkit.ui.map.VehicleMarkerIconCreator | com.skedgo.tripkit.ui.map.VehicleMarkerIconFetcher | com.skedgo.tripkit.ui.map.VehicleMarkerViewModel | com.skedgo.tripkit.routing.VehicleMode As of v11, this denotes local transport icons. | (extensions in package com.skedgo.tripkit.ui.core) android.view.View | com.skedgo.tripkit.ui.map.adapter.ViewableInfoWindowAdapter | com.skedgo.tripkit.ui.core.binding.ViewPageCurrentItemBindings | com.skedgo.tripkit.ui.map.home.ViewPort | com.skedgo.tripkit.ui.utils.ViewUtils | com.skedgo.tripkit.routing.Visibilities | com.skedgo.tripkit.ui.search.VisibilityState | com.skedgo.tripkit.ui.routing.settings.WalkingSpeed | com.skedgo.tripkit.ui.routing.settings.WalkingSpeedRepository | skedgo.tripgo.agenda.legacy.WalkingSpeedRepositoryModule | com.skedgo.tripkit.ui.tripresult.WaypointTask https://redmine.buzzhives.com/projects/buzzhives/wiki/Routing_API#Trips-from-waypoint | com.skedgo.tripkit.ui.tripresult.WayPointTaskParam | com.skedgo.tripkit.ui.routing.settings.WeightingProfile | com.skedgo.tripkit.common.model.WheelchairAccessible | com.skedgo.tripkit.ui.map.home.ZoomLevel","title":"Index"},{"location":"tripkit-android/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutinga2broutingapi","text":"Calculates door-to-door trips for the specified mode(s). See more at https://skedgo.github.io/tripgo-api/#tag/Routing%2Fpaths%2F~1routing.json%2Fget . |","title":"com.skedgo.tripkit.a2brouting.A2bRoutingApi"},{"location":"tripkit-android/alltypes/#comskedgotripkitandroida2broutingcomponent","text":"Creates UseCases and Repositories related to the A2bRouting feature. |","title":"com.skedgo.tripkit.android.A2bRoutingComponent"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutinga2broutingdatamodule","text":"|","title":"com.skedgo.tripkit.a2brouting.A2bRoutingDataModule"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutinga2broutingrequest","text":"|","title":"com.skedgo.tripkit.a2brouting.A2bRoutingRequest"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutilabstractobjectpool","text":"|","title":"com.skedgo.tripkit.common.util.AbstractObjectPool"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoreabstracttripkitfragment","text":"|","title":"com.skedgo.tripkit.ui.core.AbstractTripKitFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorepermissionsactionresult","text":"| (extensions in package com.skedgo.tripkit.ui.core.permissions)","title":"com.skedgo.tripkit.ui.core.permissions.ActionResult"},{"location":"tripkit-android/alltypes/#androidappactivity","text":"|","title":"android.app.Activity"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorerxlifecyclecomponentsactivityevent","text":"Lifecycle events that can be emitted by Activities. |","title":"com.skedgo.tripkit.ui.core.rxlifecyclecomponents.ActivityEvent"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelalertaction","text":"|","title":"com.skedgo.tripkit.common.model.AlertAction"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasetimetablesalertactionentity","text":"|","title":"com.skedgo.tripkit.data.database.timetables.AlertActionEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkitalertsalertblock","text":"|","title":"com.skedgo.tripkit.alerts.AlertBlock"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasetimetablesalertlocationentity","text":"|","title":"com.skedgo.tripkit.data.database.timetables.AlertLocationEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapalertmarkericonfetcher","text":"|","title":"com.skedgo.tripkit.ui.map.AlertMarkerIconFetcher"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapalertmarkerviewmodel","text":"|","title":"com.skedgo.tripkit.ui.map.AlertMarkerViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelalertseverity","text":"|","title":"com.skedgo.tripkit.common.model.AlertSeverity"},{"location":"tripkit-android/alltypes/#comskedgotripkitandroidanalyticscomponent","text":"Creates UseCases and Repositories related to the Analytics feature. |","title":"com.skedgo.tripkit.android.AnalyticsComponent"},{"location":"tripkit-android/alltypes/#comskedgotripkitandroidgeocoder","text":"|","title":"com.skedgo.tripkit.AndroidGeocoder"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaphomeapizoomlevels","text":"Zoom level that is compatible with the locations.json API |","title":"com.skedgo.tripkit.ui.map.home.ApiZoomLevels"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsbikepodsappinfoentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.bikepods.AppInfoEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultsapplytintstrategy","text":"|","title":"com.skedgo.tripkit.ui.tripresults.ApplyTintStrategy"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingappresultlocationadapter","text":"|","title":"com.skedgo.tripkit.ui.geocoding.AppResultLocationAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkitconfigurationappversionnamerepository","text":"|","title":"com.skedgo.tripkit.configuration.AppVersionNameRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorebindingarraybindingadapter","text":"|","title":"com.skedgo.tripkit.ui.core.binding.ArrayBindingAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkituitriparriveby","text":"|","title":"com.skedgo.tripkit.ui.trip.ArriveBy"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingautocompleteresult","text":"|","title":"com.skedgo.tripkit.ui.geocoding.AutoCompleteResult"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingautocompletetask","text":"|","title":"com.skedgo.tripkit.ui.geocoding.AutoCompleteTask"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingavailability","text":"|","title":"com.skedgo.tripkit.routing.Availability"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapbasemapfragment","text":"|","title":"com.skedgo.tripkit.ui.map.BaseMapFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapbearingmarkericonbuilder","text":"|","title":"com.skedgo.tripkit.ui.map.BearingMarkerIconBuilder"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonagendabigalgorithmresponse","text":"|","title":"com.skedgo.tripkit.common.agenda.BigAlgorithmResponse"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonagendabigalgorithmresult","text":"|","title":"com.skedgo.tripkit.common.agenda.BigAlgorithmResult"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsbikepodsbikepoddao","text":"|","title":"com.skedgo.tripkit.data.database.locations.bikepods.BikePodDao"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsbikepodsbikepodentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.bikepods.BikePodEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapadapterbikepodinfowindowadapter","text":"|","title":"com.skedgo.tripkit.ui.map.adapter.BikePodInfoWindowAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsbikepodsbikepodlocationentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.bikepods.BikePodLocationEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapbikepodpoilocation","text":"|","title":"com.skedgo.tripkit.ui.map.BikePodPOILocation"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsbikepodsbikepodrepository","text":"|","title":"com.skedgo.tripkit.data.database.locations.bikepods.BikePodRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsbikepodsbikepodrepositoryimpl","text":"|","title":"com.skedgo.tripkit.data.database.locations.bikepods.BikePodRepositoryImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkituiutilsbindingconversions","text":"|","title":"com.skedgo.tripkit.ui.utils.BindingConversions"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelbooking","text":"|","title":"com.skedgo.tripkit.common.model.Booking"},{"location":"tripkit-android/alltypes/#comskedgotripkitbookingaction","text":"|","title":"com.skedgo.tripkit.BookingAction"},{"location":"tripkit-android/alltypes/#comskedgotripkituibookingbookingaction","text":"|","title":"com.skedgo.tripkit.ui.booking.BookingAction"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelbookingconfirmation","text":"|","title":"com.skedgo.tripkit.common.model.BookingConfirmation"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelbookingconfirmationaction","text":"|","title":"com.skedgo.tripkit.common.model.BookingConfirmationAction"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelbookingconfirmationimage","text":"|","title":"com.skedgo.tripkit.common.model.BookingConfirmationImage"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelbookingconfirmationpurchase","text":"|","title":"com.skedgo.tripkit.common.model.BookingConfirmationPurchase"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelbookingconfirmationstatus","text":"|","title":"com.skedgo.tripkit.common.model.BookingConfirmationStatus"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelbookingprovider","text":"|","title":"com.skedgo.tripkit.common.model.BookingProvider"},{"location":"tripkit-android/alltypes/#comskedgotripkitbookingprovidersbookingprovider","text":"|","title":"com.skedgo.tripkit.bookingproviders.BookingProvider"},{"location":"tripkit-android/alltypes/#comskedgotripkitbookingprovidersbookingresolver","text":"|","title":"com.skedgo.tripkit.bookingproviders.BookingResolver"},{"location":"tripkit-android/alltypes/#comskedgotripkituibookingbookingresolver","text":"|","title":"com.skedgo.tripkit.ui.booking.BookingResolver"},{"location":"tripkit-android/alltypes/#comskedgotripkitbookingprovidersbookingresolverimpl","text":"|","title":"com.skedgo.tripkit.bookingproviders.BookingResolverImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelbookingsource","text":"|","title":"com.skedgo.tripkit.common.model.BookingSource"},{"location":"tripkit-android/alltypes/#comskedgotripkituibookingbookviewclickevent","text":"|","title":"com.skedgo.tripkit.ui.booking.BookViewClickEvent"},{"location":"tripkit-android/alltypes/#comskedgotripkituibookingbookviewclickeventhandler","text":"|","title":"com.skedgo.tripkit.ui.booking.BookViewClickEventHandler"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorepermissionscanrequestpermission","text":"|","title":"com.skedgo.tripkit.ui.core.permissions.CanRequestPermission"},{"location":"tripkit-android/alltypes/#comskedgotripkitcarpark","text":"|","title":"com.skedgo.tripkit.CarPark"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparkscarpark","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.CarPark"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparkscarparkdao","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.CarParkDao"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparkscarparklocation","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.CarParkLocation"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparkscarparklocationentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.CarParkLocationEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparkscarparkmapper","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.CarParkMapper"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparkscarparkpersistor","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.CarParkPersistor"},{"location":"tripkit-android/alltypes/#comskedgotripkitlocationscarpod","text":"|","title":"com.skedgo.tripkit.locations.CarPod"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarpodscarpoddao","text":"|","title":"com.skedgo.tripkit.data.database.locations.carpods.CarPodDao"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarpodscarpodentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.carpods.CarPodEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarpodscarpodlocation","text":"|","title":"com.skedgo.tripkit.data.database.locations.carpods.CarPodLocation"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarpodscarpodmapper","text":"|","title":"com.skedgo.tripkit.data.database.locations.carpods.CarPodMapper"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapcarpodpoilocation","text":"|","title":"com.skedgo.tripkit.ui.map.CarPodPOILocation"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarpodscarpodrepository","text":"|","title":"com.skedgo.tripkit.data.database.locations.carpods.CarPodRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarpodscarpodvehicle","text":"|","title":"com.skedgo.tripkit.data.database.locations.carpods.CarPodVehicle"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorecellsloader","text":"|","title":"com.skedgo.tripkit.ui.core.CellsLoader"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorecellspersistor","text":"|","title":"com.skedgo.tripkit.ui.core.CellsPersistor"},{"location":"tripkit-android/alltypes/#comskedgotripkituiviewscheckableimagebutton","text":"|","title":"com.skedgo.tripkit.ui.views.CheckableImageButton"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapadaptercityinfowindowadapter","text":"|","title":"com.skedgo.tripkit.ui.map.adapter.CityInfoWindowAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingcityselectedevent","text":"|","title":"com.skedgo.tripkit.ui.geocoding.CitySelectedEvent"},{"location":"tripkit-android/alltypes/#comskedgotripkitco2preferences","text":"|","title":"com.skedgo.tripkit.Co2Preferences"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsbikepodscompanyinfo","text":"|","title":"com.skedgo.tripkit.data.database.locations.bikepods.CompanyInfo"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoreconfigcreator","text":"Represents configuration parameters. |","title":"com.skedgo.tripkit.ui.core.ConfigCreator"},{"location":"tripkit-android/alltypes/#comskedgotripkitagendaconfigrepository","text":"|","title":"com.skedgo.tripkit.agenda.ConfigRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkitconfigs","text":"|","title":"com.skedgo.tripkit.Configs"},{"location":"tripkit-android/alltypes/#comskedgotripkitdataconnectivityconnectivityservice","text":"|","title":"com.skedgo.tripkit.data.connectivity.ConnectivityService"},{"location":"tripkit-android/alltypes/#comskedgotripkitdataconnectivityconnectivityserviceimpl","text":"| (extensions in package com.skedgo.tripkit.ui.utils)","title":"com.skedgo.tripkit.data.connectivity.ConnectivityServiceImpl"},{"location":"tripkit-android/alltypes/#androidcontentcontext","text":"|","title":"android.content.Context"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoreconverters","text":"|","title":"com.skedgo.tripkit.ui.core.Converters"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapcreatemarkerforbikepod","text":"|","title":"com.skedgo.tripkit.ui.map.CreateMarkerForBikePod"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapcreatemarkerforcarpod","text":"|","title":"com.skedgo.tripkit.ui.map.CreateMarkerForCarPod"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapcreatesegmentmarkers","text":"|","title":"com.skedgo.tripkit.ui.map.CreateSegmentMarkers"},{"location":"tripkit-android/alltypes/#comskedgotripkituicreditsourcescreditsourcesofdataviewmodel","text":"|","title":"com.skedgo.tripkit.ui.creditsources.CreditSourcesOfDataViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchcurrentlocationsuggestionviewmodel","text":"|","title":"com.skedgo.tripkit.ui.search.CurrentLocationSuggestionViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituidatacursortoentityconverter","text":"|","title":"com.skedgo.tripkit.ui.data.CursorToEntityConverter"},{"location":"tripkit-android/alltypes/#comskedgotripkituidatacursortoserviceconverter","text":"|","title":"com.skedgo.tripkit.ui.data.CursorToServiceConverter"},{"location":"tripkit-android/alltypes/#comskedgotripkituidatacursortostopconverter","text":"|","title":"com.skedgo.tripkit.ui.data.CursorToStopConverter"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingsettingscyclingspeed","text":"|","title":"com.skedgo.tripkit.ui.routing.settings.CyclingSpeed"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingsettingscyclingspeedrepository","text":"|","title":"com.skedgo.tripkit.ui.routing.settings.CyclingSpeedRepository"},{"location":"tripkit-android/alltypes/#skedgotripgoagendalegacycyclingspeedrepositorymodule","text":"|","title":"skedgo.tripgo.agenda.legacy.CyclingSpeedRepositoryModule"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasedatabasemigrator","text":"|","title":"com.skedgo.tripkit.data.database.DatabaseMigrator"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsbikepodsdatasourceattribution","text":"|","title":"com.skedgo.tripkit.data.database.locations.bikepods.DataSourceAttribution"},{"location":"tripkit-android/alltypes/#comskedgotripkituidialogdatespinneradapter","text":"| (extensions in package com.skedgo.tripkit.routing)","title":"com.skedgo.tripkit.ui.dialog.DateSpinnerAdapter"},{"location":"tripkit-android/alltypes/#orgjodatimedatetime","text":"|","title":"org.joda.time.DateTime"},{"location":"tripkit-android/alltypes/#comskedgotripkitandroiddatetimecomponent","text":"Creates UseCases and Repositories related to the DateTime feature. |","title":"com.skedgo.tripkit.android.DateTimeComponent"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatetimedatetimedatamodule","text":"|","title":"com.skedgo.tripkit.data.datetime.DateTimeDataModule"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasedbfields","text":"|","title":"com.skedgo.tripkit.data.database.DbFields"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasedbhelper","text":"|","title":"com.skedgo.tripkit.data.database.DbHelper"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasedbtables","text":"|","title":"com.skedgo.tripkit.data.database.DbTables"},{"location":"tripkit-android/alltypes/#comskedgotripkitdefaultco2preferences","text":"|","title":"com.skedgo.tripkit.DefaultCo2Preferences"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapdefaultloadpoilocationsbyviewport","text":"|","title":"com.skedgo.tripkit.ui.map.DefaultLoadPOILocationsByViewPort"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapdefaultstopinfowindowadapter","text":"|","title":"com.skedgo.tripkit.ui.map.DefaultStopInfoWindowAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkitdefaulttrippreferences","text":"|","title":"com.skedgo.tripkit.DefaultTripPreferences"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesdatadeparturerequestbody","text":"|","title":"com.skedgo.tripkit.ui.timetables.data.DepartureRequestBody"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesdatadeparturesapi","text":"|","title":"com.skedgo.tripkit.ui.timetables.data.DeparturesApi"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesdomaindeparturesrepository","text":"|","title":"com.skedgo.tripkit.ui.timetables.domain.DeparturesRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesdatadeparturesrepositoryimpl","text":"|","title":"com.skedgo.tripkit.ui.timetables.data.DeparturesRepositoryImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkituimodeldeparturesresponse","text":"| (extensions in package com.skedgo.tripkit.ui.utils)","title":"com.skedgo.tripkit.ui.model.DeparturesResponse"},{"location":"tripkit-android/alltypes/#androidgraphicsdrawabledrawable","text":"|","title":"android.graphics.drawable.Drawable"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchdropnewpinsuggestionviewmodel","text":"|","title":"com.skedgo.tripkit.ui.search.DropNewPinSuggestionViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitloggingerrorlogger","text":"|","title":"com.skedgo.tripkit.logging.ErrorLogger"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoreerrorloggerimpl","text":"|","title":"com.skedgo.tripkit.ui.core.ErrorLoggerImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonagendaeventtrackitem","text":"|","title":"com.skedgo.tripkit.common.agenda.EventTrackItem"},{"location":"tripkit-android/alltypes/#comskedgotripkitscopeextensionscope","text":"|","title":"com.skedgo.tripkit.scope.ExtensionScope"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoreexternalactionparams","text":"|","title":"com.skedgo.tripkit.ui.core.ExternalActionParams"},{"location":"tripkit-android/alltypes/#comskedgotripkitexternalactionparams","text":"|","title":"com.skedgo.tripkit.ExternalActionParams"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingextraquerymapprovider","text":"A decorator that puts additional query params into the query map that is supplied into `[ A2bRoutingApi`](../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md). Note that you should only use this when you really do know what you intend to do. |","title":"com.skedgo.tripkit.routing.ExtraQueryMapProvider"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutingfailovera2broutingapi","text":"A wrapper of `[ A2bRoutingApi ](../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md) that requests routing.json` on multiple servers w/ failover. |","title":"com.skedgo.tripkit.a2brouting.FailoverA2bRoutingApi"},{"location":"tripkit-android/alltypes/#comskedgorxtryfailure","text":"|","title":"com.skedgo.rxtry.Failure"},{"location":"tripkit-android/alltypes/#comskedgotripkitandroidfeaturescope","text":"|","title":"com.skedgo.tripkit.android.FeatureScope"},{"location":"tripkit-android/alltypes/#comskedgotripkituiservicedetailfetchandloadservices","text":"|","title":"com.skedgo.tripkit.ui.servicedetail.FetchAndLoadServices"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesfetchandloadtimetable","text":"|","title":"com.skedgo.tripkit.ui.timetables.FetchAndLoadTimetable"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchfetchfoursquarelocations","text":"|","title":"com.skedgo.tripkit.ui.search.FetchFoursquareLocations"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingfetchfoursquarelocationsimpl","text":"|","title":"com.skedgo.tripkit.ui.geocoding.FetchFoursquareLocationsImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchfetchgooglelocations","text":"|","title":"com.skedgo.tripkit.ui.search.FetchGoogleLocations"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingfetchgooglelocationsimpl","text":"|","title":"com.skedgo.tripkit.ui.geocoding.FetchGoogleLocationsImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchfetchlocallocations","text":"|","title":"com.skedgo.tripkit.ui.search.FetchLocalLocations"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingfetchlocallocationsimpl","text":"|","title":"com.skedgo.tripkit.ui.geocoding.FetchLocalLocationsImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchfetchlocations","text":"|","title":"com.skedgo.tripkit.ui.search.FetchLocations"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchfetchlocationsparameters","text":"|","title":"com.skedgo.tripkit.ui.search.FetchLocationsParameters"},{"location":"tripkit-android/alltypes/#comskedgotripkitandroidfetchregionsservice","text":"|","title":"com.skedgo.tripkit.android.FetchRegionsService"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesfetchservice","text":"|","title":"com.skedgo.tripkit.ui.timetables.FetchService"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaphomefetchstopparams","text":"|","title":"com.skedgo.tripkit.ui.map.home.FetchStopParams"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaphomefetchstopsbyviewport","text":"|","title":"com.skedgo.tripkit.ui.map.home.FetchStopsByViewport"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchfetchsuggestions","text":"|","title":"com.skedgo.tripkit.ui.search.FetchSuggestions"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesfetchtimetable","text":"|","title":"com.skedgo.tripkit.ui.timetables.FetchTimetable"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchfetchtripgolocations","text":"|","title":"com.skedgo.tripkit.ui.search.FetchTripGoLocations"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingfetchtripgolocationsimpl","text":"|","title":"com.skedgo.tripkit.ui.geocoding.FetchTripGoLocationsImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutingfillidentifiers","text":"Fills id for `[ Trip`](../com.skedgo.tripkit.routing/-trip/index.md). |","title":"com.skedgo.tripkit.a2brouting.FillIdentifiers"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingfiltersupportedlocations","text":"|","title":"com.skedgo.tripkit.ui.geocoding.FilterSupportedLocations"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingfiltersupportedlocationsimpl","text":"|","title":"com.skedgo.tripkit.ui.geocoding.FilterSupportedLocationsImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingfoursquaregeocoder","text":"|","title":"com.skedgo.tripkit.ui.geocoding.FoursquareGeocoder"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingfoursquareresultlocationadapter","text":"|","title":"com.skedgo.tripkit.ui.geocoding.FoursquareResultLocationAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorerxlifecyclecomponentsfragmentevent","text":"Lifecycle events that can be emitted by Fragments. |","title":"com.skedgo.tripkit.ui.core.rxlifecyclecomponents.FragmentEvent"},{"location":"tripkit-android/alltypes/#comskedgogeocodinggcappresult","text":"Represents the the minimum information we need to calculate the score for a result obtained from the information stored in the app by the user. |","title":"com.skedgo.geocoding.GCAppResult"},{"location":"tripkit-android/alltypes/#comskedgogeocodingagregatorgcappresultinterface","text":"Information that the user saves in the app |","title":"com.skedgo.geocoding.agregator.GCAppResultInterface"},{"location":"tripkit-android/alltypes/#comskedgogeocodinggcboundingbox","text":"|","title":"com.skedgo.geocoding.GCBoundingBox"},{"location":"tripkit-android/alltypes/#comskedgogeocodingagregatorgcboundingboxinterface","text":"|","title":"com.skedgo.geocoding.agregator.GCBoundingBoxInterface"},{"location":"tripkit-android/alltypes/#comskedgogeocodinggcfoursquareresult","text":"Represents the minimum information we need to calculate the score for a foursquare result. |","title":"com.skedgo.geocoding.GCFoursquareResult"},{"location":"tripkit-android/alltypes/#comskedgogeocodingagregatorgcfoursquareresultinterface","text":"|","title":"com.skedgo.geocoding.agregator.GCFoursquareResultInterface"},{"location":"tripkit-android/alltypes/#comskedgogeocodinggcgoogleresult","text":"|","title":"com.skedgo.geocoding.GCGoogleResult"},{"location":"tripkit-android/alltypes/#comskedgogeocodingagregatorgcgoogleresultinterface","text":"|","title":"com.skedgo.geocoding.agregator.GCGoogleResultInterface"},{"location":"tripkit-android/alltypes/#comskedgogeocodinggcquery","text":"|","title":"com.skedgo.geocoding.GCQuery"},{"location":"tripkit-android/alltypes/#comskedgogeocodingagregatorgcqueryinterface","text":"|","title":"com.skedgo.geocoding.agregator.GCQueryInterface"},{"location":"tripkit-android/alltypes/#comskedgogeocodinggcresult","text":"|","title":"com.skedgo.geocoding.GCResult"},{"location":"tripkit-android/alltypes/#comskedgogeocodingagregatorgcresultinterface","text":"|","title":"com.skedgo.geocoding.agregator.GCResultInterface"},{"location":"tripkit-android/alltypes/#comskedgogeocodinggcskedgoresult","text":"|","title":"com.skedgo.geocoding.GCSkedgoResult"},{"location":"tripkit-android/alltypes/#comskedgogeocodingagregatorgcskedgoresultinterface","text":"|","title":"com.skedgo.geocoding.agregator.GCSkedGoResultInterface"},{"location":"tripkit-android/alltypes/#comskedgotripkitgeocodinggeocodable","text":"|","title":"com.skedgo.tripkit.geocoding.Geocodable"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodinggeocoder","text":"|","title":"com.skedgo.tripkit.ui.geocoding.Geocoder"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodinggeocoderesponse","text":"|","title":"com.skedgo.tripkit.ui.geocoding.GeocodeResponse"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodinggeocoderesultadapter","text":"|","title":"com.skedgo.tripkit.ui.geocoding.GeocodeResultAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodinggeocoderlive","text":"|","title":"com.skedgo.tripkit.ui.geocoding.GeocoderLive"},{"location":"tripkit-android/alltypes/#comskedgogeocodinggeocodeutilities","text":"|","title":"com.skedgo.geocoding.GeocodeUtilities"},{"location":"tripkit-android/alltypes/#comskedgotripkitlocationgeopoint","text":"Represents a point on the Earth's surface, in latitude and longitude coordinates. Nothing more! |","title":"com.skedgo.tripkit.location.GeoPoint"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesgeta2btime","text":"|","title":"com.skedgo.tripkit.ui.timetables.GetA2BTime"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultgetalternativetripforalternativeservice","text":"|","title":"com.skedgo.tripkit.ui.tripresult.GetAlternativeTripForAlternativeService"},{"location":"tripkit-android/alltypes/#comskedgotripkitconfigurationgetappversion","text":"|","title":"com.skedgo.tripkit.configuration.GetAppVersion"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaphomegetcellidsfromviewport","text":"|","title":"com.skedgo.tripkit.ui.map.home.GetCellIdsFromViewPort"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripdetailsviewmodelgetcolorforoccupancy","text":"|","title":"com.skedgo.tripkit.ui.trip.details.viewmodel.GetColorForOccupancy"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesgetdirectiontext","text":"|","title":"com.skedgo.tripkit.ui.timetables.GetDirectionText"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripdetailsviewmodelgetdrawableforoccupancy","text":"|","title":"com.skedgo.tripkit.ui.trip.details.viewmodel.GetDrawableForOccupancy"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesgetfrequencytext","text":"|","title":"com.skedgo.tripkit.ui.timetables.GetFrequencyText"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutinggetnontravelledlinefortrip","text":"|","title":"com.skedgo.tripkit.a2brouting.GetNonTravelledLineForTrip"},{"location":"tripkit-android/alltypes/#comskedgotripkittimegetnow","text":"In most cases, we should use this UseCase in place of System.currentTimeMillis to make the code more testable. |","title":"com.skedgo.tripkit.time.GetNow"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesgetordinarytime","text":"|","title":"com.skedgo.tripkit.ui.timetables.GetOrdinaryTime"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesgetrealtimetext","text":"|","title":"com.skedgo.tripkit.ui.timetables.GetRealtimeText"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutinggetroutingconfig","text":"|","title":"com.skedgo.tripkit.ui.routing.GetRoutingConfig"},{"location":"tripkit-android/alltypes/#skedgotripgoagendalegacygetroutingconfigmodule","text":"|","title":"skedgo.tripgo.agenda.legacy.GetRoutingConfigModule"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesgetservicesubtitletext","text":"|","title":"com.skedgo.tripkit.ui.timetables.GetServiceSubTitleText"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesgetservicetertiarytext","text":"|","title":"com.skedgo.tripkit.ui.timetables.GetServiceTertiaryText"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesgetservicetitletext","text":"|","title":"com.skedgo.tripkit.ui.timetables.GetServiceTitleText"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutinggetsortedtripgroups","text":"|","title":"com.skedgo.tripkit.ui.routing.GetSortedTripGroups"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutinggetsortedtripgroupswithroutingstatus","text":"|","title":"com.skedgo.tripkit.ui.routing.GetSortedTripGroupsWithRoutingStatus"},{"location":"tripkit-android/alltypes/#comskedgotripkituiservicedetailgetstopdisplaytext","text":"|","title":"com.skedgo.tripkit.ui.servicedetail.GetStopDisplayText"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutinggetstopsbytraveltype","text":"|","title":"com.skedgo.tripkit.ui.routing.GetStopsByTravelType"},{"location":"tripkit-android/alltypes/#comskedgotripkituiservicedetailgetstoptimedisplaytext","text":"|","title":"com.skedgo.tripkit.ui.servicedetail.GetStopTimeDisplayText"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripdetailsviewmodelgettextforoccupancy","text":"|","title":"com.skedgo.tripkit.ui.trip.details.viewmodel.GetTextForOccupancy"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesgettimerangetext","text":"|","title":"com.skedgo.tripkit.ui.timetables.GetTimeRangeText"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultsgettransporticontintstrategy","text":"|","title":"com.skedgo.tripkit.ui.tripresults.GetTransportIconTintStrategy"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultsgettransportmodepreferencesbyregion","text":"|","title":"com.skedgo.tripkit.ui.tripresults.GetTransportModePreferencesByRegion"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutinggettravelledlinefortrip","text":"|","title":"com.skedgo.tripkit.a2brouting.GetTravelledLineForTrip"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapgettripline","text":"|","title":"com.skedgo.tripkit.ui.map.GetTripLine"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesgetwheelchairaccessible","text":"|","title":"com.skedgo.tripkit.ui.timetables.GetWheelchairAccessible"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodinggooglegeocoderlive","text":"| (extensions in package com.skedgo.tripkit.ui.routing)","title":"com.skedgo.tripkit.ui.geocoding.GoogleGeocoderLive"},{"location":"tripkit-android/alltypes/#comgoogleandroidgmsmapsgooglemap","text":"|","title":"com.google.android.gms.maps.GoogleMap"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodinggoogleresultlocationadapter","text":"|","title":"com.skedgo.tripkit.ui.geocoding.GoogleResultLocationAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchgooglesuggestionviewmodel","text":"|","title":"com.skedgo.tripkit.ui.search.GoogleSuggestionViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultsgroupdiffcallback","text":"|","title":"com.skedgo.tripkit.ui.tripresults.GroupDiffCallback"},{"location":"tripkit-android/alltypes/#comskedgogeocodinggroupscoringresult","text":"scored result with duplicates |","title":"com.skedgo.geocoding.GroupScoringResult"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutinggroupvisibility","text":"|","title":"com.skedgo.tripkit.routing.GroupVisibility"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutilgsons","text":"|","title":"com.skedgo.tripkit.common.util.Gsons"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodinghasresults","text":"|","title":"com.skedgo.tripkit.ui.geocoding.HasResults"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapiconutils","text":"|","title":"com.skedgo.tripkit.ui.map.IconUtils"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorebindingimageviewbindingadapters","text":"|","title":"com.skedgo.tripkit.ui.core.binding.ImageViewBindingAdapters"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoreinitializercontentprovider","text":"| (extensions in package com.skedgo.tripkit.ui.routing.settings)","title":"com.skedgo.tripkit.ui.core.InitializerContentProvider"},{"location":"tripkit-android/alltypes/#kotlinint","text":"| (extensions in package com.skedgo.tripkit.a2brouting)","title":"kotlin.Int"},{"location":"tripkit-android/alltypes/#kotlinint_1","text":"|","title":"kotlin.Int"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripoptionsintercitytimepickerviewmodel","text":"|","title":"com.skedgo.tripkit.ui.trip.options.InterCityTimePickerViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonagendairealtimeelement","text":"Signifies a class is able to fetch timetable information |","title":"com.skedgo.tripkit.common.agenda.IRealTimeElement"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoremodeprefsisincluded","text":"|","title":"com.skedgo.tripkit.ui.core.modeprefs.IsIncluded"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultislocationpermissiongranted","text":"|","title":"com.skedgo.tripkit.ui.tripresult.IsLocationPermissionGranted"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoremodeprefsistransitmodeincluded","text":"|","title":"com.skedgo.tripkit.ui.core.modeprefs.IsTransitModeIncluded"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoremodeprefsistransitmodeincludedrepository","text":"|","title":"com.skedgo.tripkit.ui.core.modeprefs.IsTransitModeIncludedRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripdetailsviewmodelitimepickerviewmodel","text":"|","title":"com.skedgo.tripkit.ui.trip.details.viewmodel.ITimePickerViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelitimerange","text":"|","title":"com.skedgo.tripkit.common.model.ITimeRange"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesjoinedcursor","text":"|","title":"com.skedgo.tripkit.ui.timetables.JoinedCursor"},{"location":"tripkit-android/alltypes/#comskedgotripkitconfigurationkey","text":"|","title":"com.skedgo.tripkit.configuration.Key"},{"location":"tripkit-android/alltypes/#comskedgogeocodinglatlng","text":"| (extensions in package com.skedgo.tripkit.ui.map)","title":"com.skedgo.geocoding.LatLng"},{"location":"tripkit-android/alltypes/#comgoogleandroidgmsmapsmodellatlngbounds","text":"| (extensions in package com.skedgo.tripkit.ui.tripresult)","title":"com.google.android.gms.maps.model.LatLngBounds"},{"location":"tripkit-android/alltypes/#comgoogleandroidgmsmapsmodellatlngbounds_1","text":"|","title":"com.google.android.gms.maps.model.LatLngBounds"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripleaveafter","text":"|","title":"com.skedgo.tripkit.ui.trip.LeaveAfter"},{"location":"tripkit-android/alltypes/#comskedgotripkitlinesegment","text":"Represents a segment of a polyline denoting a `[ Trip`](../com.skedgo.tripkit.routing/-trip/index.md). | (extensions in package com.skedgo.tripkit.ui.routing)","title":"com.skedgo.tripkit.LineSegment"},{"location":"tripkit-android/alltypes/#kotlincollectionslist","text":"| (extensions in package com.skedgo.tripkit.ui.trip.details.viewmodel)","title":"kotlin.collections.List"},{"location":"tripkit-android/alltypes/#kotlincollectionslist_1","text":"| (extensions in package com.skedgo.tripkit.ui.tripresult)","title":"kotlin.collections.List"},{"location":"tripkit-android/alltypes/#kotlincollectionslist_2","text":"|","title":"kotlin.collections.List"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaploadbikepodsbyviewport","text":"|","title":"com.skedgo.tripkit.ui.map.LoadBikePodsByViewPort"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaploadcarpodbyviewport","text":"|","title":"com.skedgo.tripkit.ui.map.LoadCarPodByViewPort"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaploadpoilocationsbyviewport","text":"|","title":"com.skedgo.tripkit.ui.map.LoadPOILocationsByViewPort"},{"location":"tripkit-android/alltypes/#comskedgotripkituiservicedetailloadservices","text":"|","title":"com.skedgo.tripkit.ui.servicedetail.LoadServices"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesloadservicetask","text":"|","title":"com.skedgo.tripkit.ui.timetables.LoadServiceTask"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesloadservicetaskcursorcols","text":"TODO Should find an appropriate class name |","title":"com.skedgo.tripkit.ui.timetables.LoadServiceTaskCursorCols"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaploadstopsbyviewport","text":"|","title":"com.skedgo.tripkit.ui.map.LoadStopsByViewPort"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutinglocalcost","text":"|","title":"com.skedgo.tripkit.routing.LocalCost"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutinglocalcostaccuracy","text":"|","title":"com.skedgo.tripkit.routing.LocalCostAccuracy"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodellocation","text":"|","title":"com.skedgo.tripkit.common.model.Location"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaplocationenhancedmapfragment","text":"|","title":"com.skedgo.tripkit.ui.map.LocationEnhancedMapFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituilocationhelperlocationhelper","text":"A simple wrapper around FusedLocationProviderClient . |","title":"com.skedgo.tripkit.ui.locationhelper.LocationHelper"},{"location":"tripkit-android/alltypes/#comskedgotripkitlocationinfo","text":"|","title":"com.skedgo.tripkit.LocationInfo"},{"location":"tripkit-android/alltypes/#comskedgotripkitlocationinfodetails","text":"|","title":"com.skedgo.tripkit.LocationInfoDetails"},{"location":"tripkit-android/alltypes/#comskedgotripkitlocationinfoservice","text":"|","title":"com.skedgo.tripkit.LocationInfoService"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatalocationslocationsapi","text":"|","title":"com.skedgo.tripkit.data.locations.LocationsApi"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchlocationsearcherrorviewmodel","text":"|","title":"com.skedgo.tripkit.ui.search.LocationSearchErrorViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchlocationsearchfragment","text":"This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. |","title":"com.skedgo.tripkit.ui.search.LocationSearchFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchlocationsearchviewmodel","text":"|","title":"com.skedgo.tripkit.ui.search.LocationSearchViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatalocationslocationsrequestbody","text":"|","title":"com.skedgo.tripkit.data.locations.LocationsRequestBody"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatalocationslocationsresponse","text":"|","title":"com.skedgo.tripkit.data.locations.LocationsResponse"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutillowercaseenumtypeadapterfactory","text":"|","title":"com.skedgo.tripkit.common.util.LowercaseEnumTypeAdapterFactory"},{"location":"tripkit-android/alltypes/#comskedgotripkitmainmodule","text":"|","title":"com.skedgo.tripkit.MainModule"},{"location":"tripkit-android/alltypes/#comskedgotripkituiutilsmainthreadbus","text":"A custom `[ Bus`](#) that posts events from any thread and lets subscribers receive them on the main thread. |","title":"com.skedgo.tripkit.ui.utils.MainThreadBus"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapmapcameracontroller","text":"|","title":"com.skedgo.tripkit.ui.map.MapCameraController"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultmapcameraupdate","text":"A view model for GoogleMap to know when it should GoogleMap.moveCamera or GoogleMap.animateCamera |","title":"com.skedgo.tripkit.ui.tripresult.MapCameraUpdate"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapmapmarkerutils","text":"|","title":"com.skedgo.tripkit.ui.map.MapMarkerUtils"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaphomemapviewmodel","text":"|","title":"com.skedgo.tripkit.ui.map.home.MapViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapmarkertarget","text":"|","title":"com.skedgo.tripkit.ui.map.MarkerTarget"},{"location":"tripkit-android/alltypes/#comskedgotripkitanalyticsmarktripasplannedwithuserinfo","text":"Example use-case: Mark a trip as planned, and then later, get push notifications about alerts relevant to the trip, or about ride sharing opportunities. |","title":"com.skedgo.tripkit.analytics.MarkTripAsPlannedWithUserInfo"},{"location":"tripkit-android/alltypes/#comskedgogeocodingagregatormgaresultinterface","text":"this class represents a scored result, it could be single or have duplicates |","title":"com.skedgo.geocoding.agregator.MGAResultInterface"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingmodeinfo","text":"|","title":"com.skedgo.tripkit.routing.ModeInfo"},{"location":"tripkit-android/alltypes/#comskedgotripkitalertsmodeinfo","text":"|","title":"com.skedgo.tripkit.alerts.ModeInfo"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsbikepodsmodeinfoentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.bikepods.ModeInfoEntity"},{"location":"tripkit-android/alltypes/#comskedgogeocodingagregatormultisourcegeocodingaggregator","text":"Scoring formulas Favourites: max(title, address) Search history: max(title, address) Regions: distance Address book: (title + address) / 2 Calendar: (title + address) / 2 SkedGo transit stops: popularity -> ((min(popularity, GOOD_SCORE)) / (GOOD_SCORE / 100)) * 2 SkedGo others: title Google: (max(title, address) * 3 + distance) / 4 Google Autocomplete: (title * 3) / 4 Foursquare: ((title * 3 + distance) / 4) * suburb Title score: score based on input string against the title of the result Address score: score based on input string against address of the result Distance score: score based on distance to center or provided region Suburb score: bonus score if result is a suburb Popularity score: score based on popularity of result as determined by server |","title":"com.skedgo.geocoding.agregator.MultiSourceGeocodingAggregator"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapadapternoactionwindowadapter","text":"|","title":"com.skedgo.tripkit.ui.map.adapter.NoActionWindowAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingnoconnection","text":"|","title":"com.skedgo.tripkit.ui.geocoding.NoConnection"},{"location":"tripkit-android/alltypes/#comskedgotripkitnoconnectionerror","text":"|","title":"com.skedgo.tripkit.NoConnectionError"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingnoresult","text":"|","title":"com.skedgo.tripkit.ui.geocoding.NoResult"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultsnotintstrategy","text":"|","title":"com.skedgo.tripkit.ui.tripresults.NoTintStrategy"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripnow","text":"| (extensions in package com.skedgo.tripkit.ui.core)","title":"com.skedgo.tripkit.ui.trip.Now"},{"location":"tripkit-android/alltypes/#ioreactivexobservable","text":"| (extensions in package com.skedgo.tripkit.ui.map.home)","title":"io.reactivex.Observable"},{"location":"tripkit-android/alltypes/#ioreactivexobservable_1","text":"| (extensions in package com.skedgo.tripkit.ui.utils)","title":"io.reactivex.Observable"},{"location":"tripkit-android/alltypes/#ioreactivexobservable_2","text":"| (extensions in package com.skedgo.rxtry)","title":"io.reactivex.Observable"},{"location":"tripkit-android/alltypes/#ioreactivexobservable_3","text":"| (extensions in package com.skedgo.tripkit.android)","title":"io.reactivex.Observable"},{"location":"tripkit-android/alltypes/#ioreactivexobservable_4","text":"| (extensions in package com.skedgo.tripkit.ui.core.rxproperty)","title":"io.reactivex.Observable"},{"location":"tripkit-android/alltypes/#androidxdatabindingobservableboolean","text":"| (extensions in package com.skedgo.tripkit.ui.core.rxproperty)","title":"androidx.databinding.ObservableBoolean"},{"location":"tripkit-android/alltypes/#androidxdatabindingobservablefield","text":"| (extensions in package com.skedgo.tripkit.ui.core.rxproperty)","title":"androidx.databinding.ObservableField"},{"location":"tripkit-android/alltypes/#androidxdatabindingobservableint","text":"| (extensions in package com.skedgo.tripkit.ui.core.rxproperty)","title":"androidx.databinding.ObservableInt"},{"location":"tripkit-android/alltypes/#androidxdatabindingobservablelist","text":"|","title":"androidx.databinding.ObservableList"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingoccupancy","text":"|","title":"com.skedgo.tripkit.routing.Occupancy"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripdetailsviewmodeloccupancyviewmodel","text":"|","title":"com.skedgo.tripkit.ui.trip.details.viewmodel.OccupancyViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitparkingspotsmodelsoffstreetparking","text":"|","title":"com.skedgo.tripkit.parkingspots.models.OffStreetParking"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapadapteroninfowindowclose","text":"|","title":"com.skedgo.tripkit.ui.map.adapter.OnInfoWindowClose"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingonstreetparking","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParking"},{"location":"tripkit-android/alltypes/#comskedgotripkitparkingspotsmodelsonstreetparking","text":"|","title":"com.skedgo.tripkit.parkingspots.models.OnStreetParking"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingonstreetparkingapi","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingApi"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingonstreetparkingdao","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingDao"},{"location":"tripkit-android/alltypes/#skedgotripgoparkingspotsmodelsonstreetparkingdetails","text":"|","title":"skedgo.tripgo.parkingspots.models.OnStreetParkingDetails"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingonstreetparkingdetailsdto","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingDetailsDto"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingonstreetparkingentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingonstreetparkinglocation","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingLocation"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingonstreetparkinglocationdto","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingLocationDto"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingonstreetparkingmapper","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingMapper"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingonstreetparkingmodule","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingModule"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingonstreetparkingpersistor","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingPersistor"},{"location":"tripkit-android/alltypes/#comskedgotripkitparkingspotsonstreetparkingrepository","text":"|","title":"com.skedgo.tripkit.parkingspots.OnStreetParkingRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingonstreetparkingrepositoryimpl","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.OnStreetParkingRepositoryImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparksopeningday","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.OpeningDay"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparksopeningdayentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.OpeningDayEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkitparkingspotsmodelsopeninghour","text":"|","title":"com.skedgo.tripkit.parkingspots.models.OpeningHour"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparksopeninghours","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.OpeningHours"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparksopeningtime","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.OpeningTime"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparksopeningtimeentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.OpeningTimeEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparksopeningtimeresult","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.OpeningTimeResult"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsbikepodsoperator","text":"|","title":"com.skedgo.tripkit.data.database.locations.bikepods.Operator"},{"location":"tripkit-android/alltypes/#comskedgotripkitlocationsoperator","text":"|","title":"com.skedgo.tripkit.locations.Operator"},{"location":"tripkit-android/alltypes/#comskedgotripkituiutilsoptional","text":"|","title":"com.skedgo.tripkit.ui.utils.Optional"},{"location":"tripkit-android/alltypes/#comskedgotripkitoutofregionsexception","text":"|","title":"com.skedgo.tripkit.OutOfRegionsException"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatatspparatransit","text":"|","title":"com.skedgo.tripkit.data.tsp.Paratransit"},{"location":"tripkit-android/alltypes/#skedgotripgodatatimetablesparentstopdao","text":"|","title":"skedgo.tripgo.data.timetables.ParentStopDao"},{"location":"tripkit-android/alltypes/#skedgotripgodatatimetablesparentstopentity","text":"|","title":"skedgo.tripgo.data.timetables.ParentStopEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkitparkingspotsmodelsparking","text":"|","title":"com.skedgo.tripkit.parkingspots.models.Parking"},{"location":"tripkit-android/alltypes/#comskedgotripkitparkingspotsmodelsparkingdetails","text":"|","title":"com.skedgo.tripkit.parkingspots.models.ParkingDetails"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparksparkingmodule","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.ParkingModule"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparksparkingoperator","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.ParkingOperator"},{"location":"tripkit-android/alltypes/#comskedgotripkitparkingspotsmodelsparkingoperator","text":"|","title":"com.skedgo.tripkit.parkingspots.models.ParkingOperator"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparksparkingoperatorentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.ParkingOperatorEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingparkingprovider","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.ParkingProvider"},{"location":"tripkit-android/alltypes/#comskedgotripkitparkingspotsparkingrepository","text":"|","title":"com.skedgo.tripkit.parkingspots.ParkingRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkitparkingspotsmodelspaymenttype","text":"|","title":"com.skedgo.tripkit.parkingspots.models.PaymentType"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingperformrouting","text":"FIXME: Should move this into TripGoDomainLegacy module. |","title":"com.skedgo.tripkit.ui.routing.PerformRouting"},{"location":"tripkit-android/alltypes/#comskedgotripkitperiodicrealtimetripupdatereceiver","text":"|","title":"com.skedgo.tripkit.PeriodicRealTimeTripUpdateReceiver"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorepermissionspermissiondenialerror","text":"|","title":"com.skedgo.tripkit.ui.core.permissions.PermissionDenialError"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorepermissionspermissionresult","text":"|","title":"com.skedgo.tripkit.ui.core.permissions.PermissionResult"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorepermissionspermissionsrequest","text":"| (extensions in package com.skedgo.tripkit.ui.core)","title":"com.skedgo.tripkit.ui.core.permissions.PermissionsRequest"},{"location":"tripkit-android/alltypes/#comsquareuppicassopicasso","text":"|","title":"com.squareup.picasso.Picasso"},{"location":"tripkit-android/alltypes/#comskedgotripkituimappinupdaterepositoryimpl","text":"|","title":"com.skedgo.tripkit.ui.map.PinUpdateRepositoryImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkituimappoilocation","text":"|","title":"com.skedgo.tripkit.ui.map.POILocation"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapadapterpoilocationinfowindowadapter","text":"|","title":"com.skedgo.tripkit.ui.map.adapter.POILocationInfoWindowAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutilpolyutil","text":"|","title":"com.skedgo.tripkit.common.util.PolyUtil"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatautilpreferencekey","text":"|","title":"com.skedgo.tripkit.data.util.PreferenceKey"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingpreferredtransfertimerepository","text":"|","title":"com.skedgo.tripkit.ui.routing.PreferredTransferTimeRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparkspricingentry","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.PricingEntry"},{"location":"tripkit-android/alltypes/#comskedgotripkitparkingspotsmodelspricingentry","text":"|","title":"com.skedgo.tripkit.parkingspots.models.PricingEntry"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparkspricingentryentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.PricingEntryEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparkspricingtable","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.PricingTable"},{"location":"tripkit-android/alltypes/#comskedgotripkitparkingspotsmodelspricingtable","text":"|","title":"com.skedgo.tripkit.parkingspots.models.PricingTable"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationscarparkspricingtableentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.carparks.PricingTableEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatetimeprintfulldate","text":"|","title":"com.skedgo.tripkit.datetime.PrintFullDate"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatetimeprinttime","text":"An UseCase to print time with respect of 24-hour (or 12-hour) setting on users' device. |","title":"com.skedgo.tripkit.datetime.PrintTime"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingsettingsprioritiesrepository","text":"|","title":"com.skedgo.tripkit.ui.routing.settings.PrioritiesRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingsettingspriority","text":"|","title":"com.skedgo.tripkit.ui.routing.settings.Priority"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingprovider","text":"|","title":"com.skedgo.tripkit.routing.Provider"},{"location":"tripkit-android/alltypes/#comskedgotripkituiutilsproviderutils","text":"|","title":"com.skedgo.tripkit.ui.utils.ProviderUtils"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelpurchasebrand","text":"|","title":"com.skedgo.tripkit.common.model.PurchaseBrand"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelquery","text":"Represents a query to find routes from A to B. Note that, to avoid TransactionTooLargeException , it's discouraged to pass any instance of Query to an Intent or a Bundle . The Parcelable is subject to deletion at anytime. |","title":"com.skedgo.tripkit.common.model.Query"},{"location":"tripkit-android/alltypes/#comskedgotripkitquerygenerator","text":"|","title":"com.skedgo.tripkit.QueryGenerator"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingquerylocationresolver","text":"|","title":"com.skedgo.tripkit.ui.routing.QueryLocationResolver"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelrealtimealert","text":"|","title":"com.skedgo.tripkit.common.model.RealtimeAlert"},{"location":"tripkit-android/alltypes/#comskedgotripkitalertsrealtimealertapi","text":"Use `[ RealtimeAlertService`](../com.skedgo.tripkit.alerts/-realtime-alert-service/index.md) for easier usages. |","title":"com.skedgo.tripkit.alerts.RealtimeAlertApi"},{"location":"tripkit-android/alltypes/#comskedgotripkitalertsrealtimealertresponse","text":"|","title":"com.skedgo.tripkit.alerts.RealtimeAlertResponse"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelrealtimealerts","text":"|","title":"com.skedgo.tripkit.common.model.RealtimeAlerts"},{"location":"tripkit-android/alltypes/#comskedgotripkitalertsrealtimealertservice","text":"|","title":"com.skedgo.tripkit.alerts.RealtimeAlertService"},{"location":"tripkit-android/alltypes/#comskedgotripkituirealtimerealtimechoreographer","text":"|","title":"com.skedgo.tripkit.ui.realtime.RealTimeChoreographer"},{"location":"tripkit-android/alltypes/#comskedgotripkituirealtimerealtimechoreographerviewmodel","text":"|","title":"com.skedgo.tripkit.ui.realtime.RealTimeChoreographerViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitlocationsrealtimeinfo","text":"|","title":"com.skedgo.tripkit.locations.RealTimeInfo"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelrealtimestatus","text":"|","title":"com.skedgo.tripkit.common.model.RealTimeStatus"},{"location":"tripkit-android/alltypes/#comskedgotripkitrealtimetripupdatereceiver","text":"|","title":"com.skedgo.tripkit.RealTimeTripUpdateReceiver"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingrealtimevehicle","text":"|","title":"com.skedgo.tripkit.routing.RealTimeVehicle"},{"location":"tripkit-android/alltypes/#comskedgotripkituirealtimerealtimeviewmodelfactory","text":"|","title":"com.skedgo.tripkit.ui.realtime.RealTimeViewModelFactory"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelregion","text":"|","title":"com.skedgo.tripkit.common.model.Region"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingregionalgeocoder","text":"| (extensions in package com.skedgo.tripkit.tsp)","title":"com.skedgo.tripkit.ui.geocoding.RegionalGeocoder"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatatspregioninfo","text":"|","title":"com.skedgo.tripkit.data.tsp.RegionInfo"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatatspregioninfo_1","text":"|","title":"com.skedgo.tripkit.data.tsp.RegionInfo"},{"location":"tripkit-android/alltypes/#comskedgotripkittspregioninfoapi","text":"Retrieves detailed information about covered transport service providers for the specified regions. |","title":"com.skedgo.tripkit.tsp.RegionInfoApi"},{"location":"tripkit-android/alltypes/#comskedgotripkittspregioninfobody","text":"|","title":"com.skedgo.tripkit.tsp.RegionInfoBody"},{"location":"tripkit-android/alltypes/#comskedgotripkittspregioninforepository","text":"|","title":"com.skedgo.tripkit.tsp.RegionInfoRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkittspregioninforesponse","text":"|","title":"com.skedgo.tripkit.tsp.RegionInfoResponse"},{"location":"tripkit-android/alltypes/#comskedgotripkittspregioninfoservice","text":"A facade of `[ RegionInfoApi`](../com.skedgo.tripkit.tsp/-region-info-api/index.md) that has failover on multiple servers. |","title":"com.skedgo.tripkit.tsp.RegionInfoService"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelregions","text":"|","title":"com.skedgo.tripkit.common.model.Regions"},{"location":"tripkit-android/alltypes/#comskedgotripkitdataregionsregionservice","text":"|","title":"com.skedgo.tripkit.data.regions.RegionService"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelregionsresponse","text":"|","title":"com.skedgo.tripkit.common.model.RegionsResponse"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutingrequesttime","text":"|","title":"com.skedgo.tripkit.a2brouting.RequestTime"},{"location":"tripkit-android/alltypes/#skedgotripgoparkingspotsmodelsrestriction","text":"|","title":"skedgo.tripgo.parkingspots.models.Restriction"},{"location":"tripkit-android/alltypes/#skedgotripgoparkingspotsmodelsrestrictiondayandtime","text":"|","title":"skedgo.tripgo.parkingspots.models.RestrictionDayAndTime"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingrestrictiondayandtimedto","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.RestrictionDayAndTimeDto"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingrestrictiondaydto","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.RestrictionDayDto"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingrestrictiondto","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.RestrictionDto"},{"location":"tripkit-android/alltypes/#skedgotripgoparkingspotsmodelsrestrictiontime","text":"|","title":"skedgo.tripgo.parkingspots.models.RestrictionTime"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingrestrictiontimedto","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.RestrictionTimeDto"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingresultaggregator","text":"|","title":"com.skedgo.tripkit.ui.geocoding.ResultAggregator"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingresultaggregatorimpl","text":"|","title":"com.skedgo.tripkit.ui.geocoding.ResultAggregatorImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingresultlocationadapter","text":"|","title":"com.skedgo.tripkit.ui.geocoding.ResultLocationAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkitgeocodingreversegeocodable","text":"|","title":"com.skedgo.tripkit.geocoding.ReverseGeocodable"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingreviewsummary","text":"|","title":"com.skedgo.tripkit.ui.geocoding.ReviewSummary"},{"location":"tripkit-android/alltypes/#comskedgotripkitalertsroute","text":"|","title":"com.skedgo.tripkit.alerts.Route"},{"location":"tripkit-android/alltypes/#comskedgotripkituirouteinputrouteinputview","text":"A widget for display start and destination locations, as well as departure/arrival times and a \"Route\" button. |","title":"com.skedgo.tripkit.ui.routeinput.RouteInputView"},{"location":"tripkit-android/alltypes/#comskedgotripkituirouteinputrouteinputviewmodel","text":"|","title":"com.skedgo.tripkit.ui.routeinput.RouteInputViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutingrouteservice","text":"|","title":"com.skedgo.tripkit.a2brouting.RouteService"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingroutingconfig","text":"|","title":"com.skedgo.tripkit.ui.routing.RoutingConfig"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingerror","text":"|","title":"com.skedgo.tripkit.RoutingError"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingroutingresponse","text":"|","title":"com.skedgo.tripkit.routing.RoutingResponse"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingstatusroutingstatus","text":"|","title":"com.skedgo.tripkit.routingstatus.RoutingStatus"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingstatusroutingstatusrepository","text":"|","title":"com.skedgo.tripkit.routingstatus.RoutingStatusRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkitdataroutingstatusroutingstatusrepositoryimpl","text":"|","title":"com.skedgo.tripkit.data.routingstatus.RoutingStatusRepositoryImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkituitriproutingtime","text":"|","title":"com.skedgo.tripkit.ui.trip.RoutingTime"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripoptionsroutingtimeviewmodelmapper","text":"|","title":"com.skedgo.tripkit.ui.trip.options.RoutingTimeViewModelMapper"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingusererror","text":"|","title":"com.skedgo.tripkit.RoutingUserError"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorerxlifecyclecomponentsrxfragment","text":"|","title":"com.skedgo.tripkit.ui.core.rxlifecyclecomponents.RxFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorerxlifecyclecomponentsrxlifecycleandroid","text":"|","title":"com.skedgo.tripkit.ui.core.rxlifecyclecomponents.RxLifecycleAndroid"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorerxlifecyclecomponentsrxmapfragment","text":"|","title":"com.skedgo.tripkit.ui.core.rxlifecyclecomponents.RxMapFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorerxviewmodel","text":"|","title":"com.skedgo.tripkit.ui.core.RxViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasetimetablesscheduledservicerealtimeinfodao","text":"|","title":"com.skedgo.tripkit.data.database.timetables.ScheduledServiceRealtimeInfoDao"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasetimetablesscheduledservicerealtimeinfoentity","text":"|","title":"com.skedgo.tripkit.data.database.timetables.ScheduledServiceRealtimeInfoEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelscheduledstop","text":"|","title":"com.skedgo.tripkit.common.model.ScheduledStop"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapscheduledstoprepository","text":"|","title":"com.skedgo.tripkit.ui.map.ScheduledStopRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkituiproviderscheduledstopsprovider","text":"|","title":"com.skedgo.tripkit.ui.provider.ScheduledStopsProvider"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoreschedulerfactory","text":"|","title":"com.skedgo.tripkit.ui.core.SchedulerFactory"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoreschedulerfactoryimpl","text":"|","title":"com.skedgo.tripkit.ui.core.SchedulerFactoryImpl"},{"location":"tripkit-android/alltypes/#comskedgogeocodingscoringresult","text":"scored single result - without duplicates |","title":"com.skedgo.geocoding.ScoringResult"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchsearcherrortype","text":"|","title":"com.skedgo.tripkit.ui.search.SearchErrorType"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchsearchsuggestionchoice","text":"|","title":"com.skedgo.tripkit.ui.search.SearchSuggestionChoice"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingsegmentactiontemplates","text":"|","title":"com.skedgo.tripkit.routing.SegmentActionTemplates"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingsegmentcameraupdate","text":"|","title":"com.skedgo.tripkit.ui.routing.SegmentCameraUpdate"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingsegmentcameraupdatemapper","text":"|","title":"com.skedgo.tripkit.ui.routing.SegmentCameraUpdateMapper"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingsegmentcameraupdaterepository","text":"|","title":"com.skedgo.tripkit.ui.routing.SegmentCameraUpdateRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapadaptersegmentinfowindowadapter","text":"|","title":"com.skedgo.tripkit.ui.map.adapter.SegmentInfoWindowAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingsegmentjsonkeys","text":"|","title":"com.skedgo.tripkit.routing.SegmentJsonKeys"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapsegmentmarkericonmaker","text":"|","title":"com.skedgo.tripkit.ui.map.SegmentMarkerIconMaker"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapsegmentmarkermaker","text":"|","title":"com.skedgo.tripkit.ui.map.SegmentMarkerMaker"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingsegmentnotestemplates","text":"|","title":"com.skedgo.tripkit.routing.SegmentNotesTemplates"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapsegmentstopmarkermaker","text":"|","title":"com.skedgo.tripkit.ui.map.SegmentStopMarkerMaker"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingsegmenttype","text":"|","title":"com.skedgo.tripkit.routing.SegmentType"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutingselectbestdisplaytrip","text":"Selects display trip which has lowest weighted score. |","title":"com.skedgo.tripkit.a2brouting.SelectBestDisplayTrip"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripoptionsselectiontype","text":"|","title":"com.skedgo.tripkit.ui.trip.options.SelectionType"},{"location":"tripkit-android/alltypes/#comskedgotripkitconfigurationserver","text":"|","title":"com.skedgo.tripkit.configuration.Server"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasetimetablesservicealertdatamodule","text":"|","title":"com.skedgo.tripkit.data.database.timetables.ServiceAlertDataModule"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasetimetablesservicealertmapper","text":"|","title":"com.skedgo.tripkit.data.database.timetables.ServiceAlertMapper"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapservicealertmarkermaker","text":"|","title":"com.skedgo.tripkit.ui.map.ServiceAlertMarkerMaker"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasetimetablesservicealertsdao","text":"|","title":"com.skedgo.tripkit.data.database.timetables.ServiceAlertsDao"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasetimetablesservicealertsentity","text":"|","title":"com.skedgo.tripkit.data.database.timetables.ServiceAlertsEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripdetailsviewmodelservicealertviewmodel","text":"|","title":"com.skedgo.tripkit.ui.trip.details.viewmodel.ServiceAlertViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitserviceapi","text":"|","title":"com.skedgo.tripkit.ServiceApi"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingservicecolor","text":"|","title":"com.skedgo.tripkit.routing.ServiceColor"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsbikepodsservicecolorentity","text":"|","title":"com.skedgo.tripkit.data.database.locations.bikepods.ServiceColorEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkituiservicedetailservicedetailfragment","text":"|","title":"com.skedgo.tripkit.ui.servicedetail.ServiceDetailFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituiservicedetailservicedetailitemviewmodel","text":"|","title":"com.skedgo.tripkit.ui.servicedetail.ServiceDetailItemViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituiservicedetailservicedetailviewmodel","text":"|","title":"com.skedgo.tripkit.ui.servicedetail.ServiceDetailViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitserviceextras","text":"|","title":"com.skedgo.tripkit.ServiceExtras"},{"location":"tripkit-android/alltypes/#comskedgotripkituiutilsservicelineoverlaytask","text":"|","title":"com.skedgo.tripkit.ui.utils.ServiceLineOverlayTask"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesservicerepository","text":"|","title":"com.skedgo.tripkit.ui.timetables.ServiceRepository"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesservicerepositoryimpl","text":"|","title":"com.skedgo.tripkit.ui.timetables.ServiceRepositoryImpl"},{"location":"tripkit-android/alltypes/#comskedgotripkitserviceresponse","text":"|","title":"com.skedgo.tripkit.ServiceResponse"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapservicestop","text":"|","title":"com.skedgo.tripkit.ui.map.ServiceStop"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelservicestop","text":"Represents a future stop of a service in a trip. |","title":"com.skedgo.tripkit.common.model.ServiceStop"},{"location":"tripkit-android/alltypes/#comskedgotripkituiservicedetailservicestopandline","text":"|","title":"com.skedgo.tripkit.ui.servicedetail.ServiceStopAndLine"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapadapterservicestopinfowindowadapter","text":"|","title":"com.skedgo.tripkit.ui.map.adapter.ServiceStopInfoWindowAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapservicestopservicestopmapfragment","text":"|","title":"com.skedgo.tripkit.ui.map.servicestop.ServiceStopMapFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapservicestopservicestopmapviewmodel","text":"|","title":"com.skedgo.tripkit.ui.map.servicestop.ServiceStopMapViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapservicestopservicestopmarkercreator","text":"|","title":"com.skedgo.tripkit.ui.map.servicestop.ServiceStopMarkerCreator"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesservicestopsloaderfactory","text":"|","title":"com.skedgo.tripkit.ui.timetables.ServiceStopsLoaderFactory"},{"location":"tripkit-android/alltypes/#comskedgotripkituiproviderservicestopsprovider","text":"|","title":"com.skedgo.tripkit.ui.provider.ServiceStopsProvider"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesserviceviewmodel","text":"|","title":"com.skedgo.tripkit.ui.timetables.ServiceViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingshape","text":"| (extensions in package com.skedgo.tripkit.data.util)","title":"com.skedgo.tripkit.routing.Shape"},{"location":"tripkit-android/alltypes/#androidcontentsharedpreferences","text":"|","title":"android.content.SharedPreferences"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapsimplecalloutview","text":"View to create custom callout in `[ InfoWindowAdapter`](#), simply including a title, a snippet, a left image and a right image. |","title":"com.skedgo.tripkit.ui.map.SimpleCalloutView"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapadaptersimpleinfowindowadapter","text":"| (extensions in package com.skedgo.rxtry)","title":"com.skedgo.tripkit.ui.map.adapter.SimpleInfoWindowAdapter"},{"location":"tripkit-android/alltypes/#ioreactivexsingle","text":"|","title":"io.reactivex.Single"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutingsinglerouteservice","text":"A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started. |","title":"com.skedgo.tripkit.a2brouting.SingleRouteService"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonagendaskedgoifyresponseparser","text":"|","title":"com.skedgo.tripkit.common.agenda.SkedgoifyResponseParser"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingskedgoresultlocationadapter","text":"|","title":"com.skedgo.tripkit.ui.geocoding.SkedgoResultLocationAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkituiutilssnackbars","text":"|","title":"com.skedgo.tripkit.ui.utils.Snackbars"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultssortorders","text":"|","title":"com.skedgo.tripkit.ui.tripresults.SortOrders"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingsource","text":"|","title":"com.skedgo.tripkit.routing.Source"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutilsphericalutil","text":"|","title":"com.skedgo.tripkit.common.util.SphericalUtil"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingstatusstatus","text":"|","title":"com.skedgo.tripkit.routingstatus.Status"},{"location":"tripkit-android/alltypes/#comskedgotripkituimodelstopinfo","text":"Thuy's remark: This should have been [`ServiceStop`](../com.skedgo.tripkit.common.model/-service-stop/index.md). We parse network response into ServiceStops, then persist them into SQLite database. However, when loading, we use such StopInfo to indicate service' stops. |","title":"com.skedgo.tripkit.ui.model.StopInfo"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapadapterstopinfowindowadapter","text":"|","title":"com.skedgo.tripkit.ui.map.adapter.StopInfoWindowAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaphomestoploaderargs","text":"|","title":"com.skedgo.tripkit.ui.map.home.StopLoaderArgs"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasestopsstoplocationdao","text":"|","title":"com.skedgo.tripkit.data.database.stops.StopLocationDao"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasestopsstoplocationentity","text":"|","title":"com.skedgo.tripkit.data.database.stops.StopLocationEntity"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapstopmarkericonfetcher","text":"|","title":"com.skedgo.tripkit.ui.map.StopMarkerIconFetcher"},{"location":"tripkit-android/alltypes/#comskedgotripkituiutilsstopmarkerutils","text":"|","title":"com.skedgo.tripkit.ui.utils.StopMarkerUtils"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapstopmarkerviewmodel","text":"|","title":"com.skedgo.tripkit.ui.map.StopMarkerViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapstoppoilocation","text":"|","title":"com.skedgo.tripkit.ui.map.StopPOILocation"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatalocationsstopsfetcher","text":"|","title":"com.skedgo.tripkit.data.locations.StopsFetcher"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorestopspersistor","text":"|","title":"com.skedgo.tripkit.ui.core.StopsPersistor"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelstoptype","text":"|","title":"com.skedgo.tripkit.common.model.StopType"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelstreet","text":"| (extensions in package com.skedgo.tripkit.routing)","title":"com.skedgo.tripkit.common.model.Street"},{"location":"tripkit-android/alltypes/#kotlinstring","text":"|","title":"kotlin.String"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutilstringbuilderpool","text":"|","title":"com.skedgo.tripkit.common.util.StringBuilderPool"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutilstringutils","text":"|","title":"com.skedgo.tripkit.common.util.StringUtils"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonstylemanager","text":"|","title":"com.skedgo.tripkit.common.StyleManager"},{"location":"tripkit-android/alltypes/#comskedgorxtrysuccess","text":"|","title":"com.skedgo.rxtry.Success"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchsuggestionviewmodel","text":"|","title":"com.skedgo.tripkit.ui.search.SuggestionViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituiutilstapaction","text":"|","title":"com.skedgo.tripkit.ui.utils.TapAction"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingtemplates","text":"|","title":"com.skedgo.tripkit.routing.Templates"},{"location":"tripkit-android/alltypes/#comskedgotripkittemporaryurlapi","text":"Handles downloading trip via `[ Trip#getTemporaryURL()`](../com.skedgo.tripkit.routing/-trip/get-temporary-u-r-l.md). |","title":"com.skedgo.tripkit.TemporaryUrlApi"},{"location":"tripkit-android/alltypes/#comskedgotripkituidialogtimedatepickedevent","text":"|","title":"com.skedgo.tripkit.ui.dialog.TimeDatePickedEvent"},{"location":"tripkit-android/alltypes/#comskedgotripkituidialogtimedatepickerfragment","text":"|","title":"com.skedgo.tripkit.ui.dialog.TimeDatePickerFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaptimelabelmaker","text":"|","title":"com.skedgo.tripkit.ui.map.TimeLabelMaker"},{"location":"tripkit-android/alltypes/#comskedgotripkituiutilstimespanutils","text":"|","title":"com.skedgo.tripkit.ui.utils.TimeSpanUtils"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablestimetableentriesmapper","text":"|","title":"com.skedgo.tripkit.ui.timetables.TimetableEntriesMapper"},{"location":"tripkit-android/alltypes/#comskedgotripkituimodeltimetableentry","text":"(Aka Service) |","title":"com.skedgo.tripkit.ui.model.TimetableEntry"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablestimetablefragment","text":"|","title":"com.skedgo.tripkit.ui.timetables.TimetableFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituimodeltimetableheaderlineitem","text":"|","title":"com.skedgo.tripkit.ui.model.TimetableHeaderLineItem"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesdomaintimetableloaderfactory","text":"|","title":"com.skedgo.tripkit.ui.timetables.domain.TimetableLoaderFactory"},{"location":"tripkit-android/alltypes/#comskedgotripkituiprovidertimetableprovider","text":"|","title":"com.skedgo.tripkit.ui.provider.TimetableProvider"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablesdomaintimetablequeryparams","text":"|","title":"com.skedgo.tripkit.ui.timetables.domain.TimetableQueryParams"},{"location":"tripkit-android/alltypes/#comskedgotripkituitimetablestimetableviewmodel","text":"|","title":"com.skedgo.tripkit.ui.timetables.TimetableViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodeltimetag","text":"A TimeTag encapsulates a departure or arrival time, including a dynamic time of \"now\". |","title":"com.skedgo.tripkit.common.model.TimeTag"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutiltimeutils","text":"|","title":"com.skedgo.tripkit.common.util.TimeUtils"},{"location":"tripkit-android/alltypes/#comskedgotripkita2broutingtoweightingprofilestring","text":"|","title":"com.skedgo.tripkit.a2brouting.ToWeightingProfileString"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonagendatrackitem","text":"|","title":"com.skedgo.tripkit.common.agenda.TrackItem"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripdetailsviewmodeltrainoccupancyitemviewmodel","text":"|","title":"com.skedgo.tripkit.ui.trip.details.viewmodel.TrainOccupancyItemViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkittransitmodefilter","text":"|","title":"com.skedgo.tripkit.TransitModeFilter"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoremodeprefstransitmodeid","text":"|","title":"com.skedgo.tripkit.ui.core.modeprefs.TransitModeId"},{"location":"tripkit-android/alltypes/#comskedgotripkittransitservice","text":"|","title":"com.skedgo.tripkit.TransitService"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodeltransportmode","text":"|","title":"com.skedgo.tripkit.common.model.TransportMode"},{"location":"tripkit-android/alltypes/#comskedgotripkittransportmodefilter","text":"|","title":"com.skedgo.tripkit.TransportModeFilter"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoremodeprefstransportmodepreference","text":"|","title":"com.skedgo.tripkit.ui.core.modeprefs.TransportModePreference"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutiltransportmodeutils","text":"|","title":"com.skedgo.tripkit.common.util.TransportModeUtils"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultstransporttintstrategy","text":"|","title":"com.skedgo.tripkit.ui.tripresults.TransportTintStrategy"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingtrip","text":"A [`Trip`](../com.skedgo.tripkit.routing/-trip/index.md) will mainly hold a list of TripSegment s which denotes how to go from [`Trip#getFrom()`](../com.skedgo.tripkit.routing/-trip/get-from.md) to Trip#getTo() . |","title":"com.skedgo.tripkit.routing.Trip"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingtripcomparators","text":"|","title":"com.skedgo.tripkit.routing.TripComparators"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripgostylekit","text":"Created by Adrian Schoenig on 3. May 2018. CopyrightW 2018 SkedGo Pty Ltd. All rights reserved. |","title":"com.skedgo.tripkit.ui.TripGoStyleKit"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingtripgroup","text":"Represents a list of [`Trip`](../com.skedgo.tripkit.routing/-trip/index.md)s. A list of Trip s comprises of a display trip (aka representative trip) and alternative trips. A display trip can be accessed via [`#getDisplayTrip()`](../com.skedgo.tripkit.routing/-trip-group/get-display-trip.md) while alternative trips can be retrieved via #getTrips() minus [`#getDisplayTrip()`](../com.skedgo.tripkit.routing/-trip-group/get-display-trip.md). That's because #getTrips() returns a list of `[ Trip`](../com.skedgo.tripkit.routing/-trip/index.md)s including alternative trips and display trip. |","title":"com.skedgo.tripkit.routing.TripGroup"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultstripgroupclassifier","text":"|","title":"com.skedgo.tripkit.ui.tripresults.TripGroupClassifier"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingtripgroupcomparators","text":"|","title":"com.skedgo.tripkit.routing.TripGroupComparators"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresulttripgroupspageradapter","text":"|","title":"com.skedgo.tripkit.ui.tripresult.TripGroupsPagerAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingtripgroupssorter","text":"|","title":"com.skedgo.tripkit.ui.routing.TripGroupsSorter"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultstripgroupssorter","text":"|","title":"com.skedgo.tripkit.ui.tripresults.TripGroupsSorter"},{"location":"tripkit-android/alltypes/#comskedgotripkit","text":"|","title":"com.skedgo.TripKit"},{"location":"tripkit-android/alltypes/#comskedgotripkituimodeltripkitbutton","text":"|","title":"com.skedgo.tripkit.ui.model.TripKitButton"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabasetripkitdatabase","text":"|","title":"com.skedgo.tripkit.data.database.TripKitDatabase"},{"location":"tripkit-android/alltypes/#comskedgotripkituidialogtripkitdatetimepickerdialogfragment","text":"A DialogFragment which allows a user to set a time and choose whether it is a departure time or an arrival time. |","title":"com.skedgo.tripkit.ui.dialog.TripKitDateTimePickerDialogFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutiltripkitlatlng","text":"|","title":"com.skedgo.tripkit.common.util.TripKitLatLng"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaphometripkitmapfragment","text":"A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> Your app must provide a TripGo API token as R.string.skedgo_api_key . |","title":"com.skedgo.tripkit.ui.map.home.TripKitMapFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripkitui","text":"|","title":"com.skedgo.tripkit.ui.TripKitUI"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaptripline","text":"|","title":"com.skedgo.tripkit.ui.map.TripLine"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaptriplocationmarkercreator","text":"|","title":"com.skedgo.tripkit.ui.map.TripLocationMarkerCreator"},{"location":"tripkit-android/alltypes/#comskedgotripkittrippreferences","text":"|","title":"com.skedgo.tripkit.TripPreferences"},{"location":"tripkit-android/alltypes/#comskedgotripkittripregionresolver","text":"|","title":"com.skedgo.tripkit.TripRegionResolver"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultstripresultlistfragment","text":"|","title":"com.skedgo.tripkit.ui.tripresults.TripResultListFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultstripresultlistviewmodel","text":"|","title":"com.skedgo.tripkit.ui.tripresults.TripResultListViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresulttripresultmapfragment","text":"|","title":"com.skedgo.tripkit.ui.tripresult.TripResultMapFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaptripresultmapviewmodel","text":"|","title":"com.skedgo.tripkit.ui.map.TripResultMapViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresulttripresultpagerfragment","text":"|","title":"com.skedgo.tripkit.ui.tripresult.TripResultPagerFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresulttripresultpagerviewmodel","text":"|","title":"com.skedgo.tripkit.ui.tripresult.TripResultPagerViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultstripresulttransportitemviewmodel","text":"|","title":"com.skedgo.tripkit.ui.tripresults.TripResultTransportItemViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultstripresultviewmodel","text":"|","title":"com.skedgo.tripkit.ui.tripresults.TripResultViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingtripsegment","text":"To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](../com.skedgo.tripkit.routing/-trip-segment/index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL`](../com.skedgo.tripkit.routing/-segment-type/-a-r-r-i-v-a-l.md). |","title":"com.skedgo.tripkit.routing.TripSegment"},{"location":"tripkit-android/alltypes/#comskedgotripkituiutilstripsegmentactionprocessor","text":"|","title":"com.skedgo.tripkit.ui.utils.TripSegmentActionProcessor"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultstripsegmenthelper","text":"|","title":"com.skedgo.tripkit.ui.tripresults.TripSegmentHelper"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresulttripsegmentitemviewmodel","text":"|","title":"com.skedgo.tripkit.ui.tripresult.TripSegmentItemViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresulttripsegmentlistfragment","text":"|","title":"com.skedgo.tripkit.ui.tripresult.TripSegmentListFragment"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutiltripsegmentlistresolver","text":"Puts a Departure segment before head of, and puts an Arrival segment after tail of a segment list. |","title":"com.skedgo.tripkit.common.util.TripSegmentListResolver"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingtripsegments","text":"|","title":"com.skedgo.tripkit.routing.TripSegments"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresulttripsegmentsviewmodel","text":"|","title":"com.skedgo.tripkit.ui.tripresult.TripSegmentsViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonutiltripsegmentutils","text":"|","title":"com.skedgo.tripkit.common.util.TripSegmentUtils"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultstripsegmentviewmodel","text":"|","title":"com.skedgo.tripkit.ui.tripresults.TripSegmentViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonagendatriptrackitem","text":"|","title":"com.skedgo.tripkit.common.agenda.TripTrackItem"},{"location":"tripkit-android/alltypes/#comskedgotripkittripupdater","text":"|","title":"com.skedgo.tripkit.TripUpdater"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaptripvehiclemarkercreator","text":"|","title":"com.skedgo.tripkit.ui.map.TripVehicleMarkerCreator"},{"location":"tripkit-android/alltypes/#comskedgorxtrytry","text":"|","title":"com.skedgo.rxtry.Try"},{"location":"tripkit-android/alltypes/#comskedgotripkittsptspmodule","text":"|","title":"com.skedgo.tripkit.tsp.TspModule"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingturnbyturn","text":"|","title":"com.skedgo.tripkit.routing.TurnByTurn"},{"location":"tripkit-android/alltypes/#comskedgotripkitbookingprovidersuberbookingresolver","text":"|","title":"com.skedgo.tripkit.bookingproviders.UberBookingResolver"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoreunabletofetchbitmaperror","text":"|","title":"com.skedgo.tripkit.ui.core.UnableToFetchBitmapError"},{"location":"tripkit-android/alltypes/#comskedgotripkituicoreunabletofindplacecoordinateserror","text":"|","title":"com.skedgo.tripkit.ui.core.UnableToFindPlaceCoordinatesError"},{"location":"tripkit-android/alltypes/#comskedgotripkituigeocodingunabletofindplacecoordinateserror","text":"|","title":"com.skedgo.tripkit.ui.geocoding.UnableToFindPlaceCoordinatesError"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelunits","text":"|","title":"com.skedgo.tripkit.common.model.Units"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultupdatetripforrealtime","text":"|","title":"com.skedgo.tripkit.ui.tripresult.UpdateTripForRealtime"},{"location":"tripkit-android/alltypes/#comskedgotripkitdatadatabaselocationsonstreetparkingvacancyconverters","text":"|","title":"com.skedgo.tripkit.data.database.locations.onstreetparking.VacancyConverters"},{"location":"tripkit-android/alltypes/#comskedgotripkitlocationsvehicle","text":"|","title":"com.skedgo.tripkit.locations.Vehicle"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingvehiclecomponent","text":"|","title":"com.skedgo.tripkit.routing.VehicleComponent"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingvehicledrawables","text":"|","title":"com.skedgo.tripkit.routing.VehicleDrawables"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapvehiclemarkericoncreator","text":"|","title":"com.skedgo.tripkit.ui.map.VehicleMarkerIconCreator"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapvehiclemarkericonfetcher","text":"|","title":"com.skedgo.tripkit.ui.map.VehicleMarkerIconFetcher"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapvehiclemarkerviewmodel","text":"|","title":"com.skedgo.tripkit.ui.map.VehicleMarkerViewModel"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingvehiclemode","text":"As of v11, this denotes local transport icons. | (extensions in package com.skedgo.tripkit.ui.core)","title":"com.skedgo.tripkit.routing.VehicleMode"},{"location":"tripkit-android/alltypes/#androidviewview","text":"|","title":"android.view.View"},{"location":"tripkit-android/alltypes/#comskedgotripkituimapadapterviewableinfowindowadapter","text":"|","title":"com.skedgo.tripkit.ui.map.adapter.ViewableInfoWindowAdapter"},{"location":"tripkit-android/alltypes/#comskedgotripkituicorebindingviewpagecurrentitembindings","text":"|","title":"com.skedgo.tripkit.ui.core.binding.ViewPageCurrentItemBindings"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaphomeviewport","text":"|","title":"com.skedgo.tripkit.ui.map.home.ViewPort"},{"location":"tripkit-android/alltypes/#comskedgotripkituiutilsviewutils","text":"|","title":"com.skedgo.tripkit.ui.utils.ViewUtils"},{"location":"tripkit-android/alltypes/#comskedgotripkitroutingvisibilities","text":"|","title":"com.skedgo.tripkit.routing.Visibilities"},{"location":"tripkit-android/alltypes/#comskedgotripkituisearchvisibilitystate","text":"|","title":"com.skedgo.tripkit.ui.search.VisibilityState"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingsettingswalkingspeed","text":"|","title":"com.skedgo.tripkit.ui.routing.settings.WalkingSpeed"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingsettingswalkingspeedrepository","text":"|","title":"com.skedgo.tripkit.ui.routing.settings.WalkingSpeedRepository"},{"location":"tripkit-android/alltypes/#skedgotripgoagendalegacywalkingspeedrepositorymodule","text":"|","title":"skedgo.tripgo.agenda.legacy.WalkingSpeedRepositoryModule"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultwaypointtask","text":"https://redmine.buzzhives.com/projects/buzzhives/wiki/Routing_API#Trips-from-waypoint |","title":"com.skedgo.tripkit.ui.tripresult.WaypointTask"},{"location":"tripkit-android/alltypes/#comskedgotripkituitripresultwaypointtaskparam","text":"|","title":"com.skedgo.tripkit.ui.tripresult.WayPointTaskParam"},{"location":"tripkit-android/alltypes/#comskedgotripkituiroutingsettingsweightingprofile","text":"|","title":"com.skedgo.tripkit.ui.routing.settings.WeightingProfile"},{"location":"tripkit-android/alltypes/#comskedgotripkitcommonmodelwheelchairaccessible","text":"|","title":"com.skedgo.tripkit.common.model.WheelchairAccessible"},{"location":"tripkit-android/alltypes/#comskedgotripkituimaphomezoomlevel","text":"","title":"com.skedgo.tripkit.ui.map.home.ZoomLevel"},{"location":"tripkit-android/com.skedgo/","text":"tripkit-android / com.skedgo Package com.skedgo Types Name Summary TripKit abstract class TripKit","title":"Index"},{"location":"tripkit-android/com.skedgo/#package-comskedgo","text":"","title":"Package com.skedgo"},{"location":"tripkit-android/com.skedgo/#types","text":"Name Summary TripKit abstract class TripKit","title":"Types"},{"location":"tripkit-android/com.skedgo/-trip-kit/","text":"tripkit-android / com.skedgo / TripKit TripKit @Singleton @Component([HttpClientModule, A2bRoutingDataModule, TspModule, MainModule]) abstract class TripKit Constructors Name Summary <init> TripKit() Functions Name Summary a2bRoutingComponent abstract fun a2bRoutingComponent(): A2bRoutingComponent ! analyticsComponent abstract fun analyticsComponent(): AnalyticsComponent ! configs abstract fun configs(): Configs ! dateTimeComponent abstract fun dateTimeComponent(): DateTimeComponent ! getBookingResolver abstract fun getBookingResolver(): BookingResolver ! getErrorHandler abstract fun getErrorHandler(): Consumer< Throwable !>! getInstance open static fun getInstance(): TripKit ! getLocationInfoService abstract fun getLocationInfoService(): LocationInfoService ! getOkHttpClient3 abstract fun getOkHttpClient3(): OkHttpClient! getRegionService abstract fun getRegionService(): RegionService ! getRouteService abstract fun getRouteService(): RouteService ! getTripUpdater abstract fun getTripUpdater(): TripUpdater ! initialize This gives a chance to provide a custom [`TripKit`](./index.md). One idea is that we can create DaggerTripKit w/ some customized modules. open static fun initialize(context: Context, tripKit: TripKit ): Unit open static fun initialize(configs: Configs !): Unit isInitialized open static fun isInitialized(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo/-trip-kit/#tripkit","text":"@Singleton @Component([HttpClientModule, A2bRoutingDataModule, TspModule, MainModule]) abstract class TripKit","title":"TripKit"},{"location":"tripkit-android/com.skedgo/-trip-kit/#constructors","text":"Name Summary <init> TripKit()","title":"Constructors"},{"location":"tripkit-android/com.skedgo/-trip-kit/#functions","text":"Name Summary a2bRoutingComponent abstract fun a2bRoutingComponent(): A2bRoutingComponent ! analyticsComponent abstract fun analyticsComponent(): AnalyticsComponent ! configs abstract fun configs(): Configs ! dateTimeComponent abstract fun dateTimeComponent(): DateTimeComponent ! getBookingResolver abstract fun getBookingResolver(): BookingResolver ! getErrorHandler abstract fun getErrorHandler(): Consumer< Throwable !>! getInstance open static fun getInstance(): TripKit ! getLocationInfoService abstract fun getLocationInfoService(): LocationInfoService ! getOkHttpClient3 abstract fun getOkHttpClient3(): OkHttpClient! getRegionService abstract fun getRegionService(): RegionService ! getRouteService abstract fun getRouteService(): RouteService ! getTripUpdater abstract fun getTripUpdater(): TripUpdater ! initialize This gives a chance to provide a custom [`TripKit`](./index.md). One idea is that we can create DaggerTripKit w/ some customized modules. open static fun initialize(context: Context, tripKit: TripKit ): Unit open static fun initialize(configs: Configs !): Unit isInitialized open static fun isInitialized(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo/-trip-kit/-init-/","text":"tripkit-android / com.skedgo / TripKit / <init> <init> TripKit()","title":" init "},{"location":"tripkit-android/com.skedgo/-trip-kit/-init-/#init","text":"TripKit()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo/-trip-kit/a2b-routing-component/","text":"tripkit-android / com.skedgo / TripKit / a2bRoutingComponent a2bRoutingComponent abstract fun a2bRoutingComponent(): A2bRoutingComponent !","title":"A2b routing component"},{"location":"tripkit-android/com.skedgo/-trip-kit/a2b-routing-component/#a2broutingcomponent","text":"abstract fun a2bRoutingComponent(): A2bRoutingComponent !","title":"a2bRoutingComponent"},{"location":"tripkit-android/com.skedgo/-trip-kit/analytics-component/","text":"tripkit-android / com.skedgo / TripKit / analyticsComponent analyticsComponent abstract fun analyticsComponent(): AnalyticsComponent !","title":"Analytics component"},{"location":"tripkit-android/com.skedgo/-trip-kit/analytics-component/#analyticscomponent","text":"abstract fun analyticsComponent(): AnalyticsComponent !","title":"analyticsComponent"},{"location":"tripkit-android/com.skedgo/-trip-kit/configs/","text":"tripkit-android / com.skedgo / TripKit / configs configs abstract fun configs(): Configs !","title":"Configs"},{"location":"tripkit-android/com.skedgo/-trip-kit/configs/#configs","text":"abstract fun configs(): Configs !","title":"configs"},{"location":"tripkit-android/com.skedgo/-trip-kit/date-time-component/","text":"tripkit-android / com.skedgo / TripKit / dateTimeComponent dateTimeComponent abstract fun dateTimeComponent(): DateTimeComponent !","title":"Date time component"},{"location":"tripkit-android/com.skedgo/-trip-kit/date-time-component/#datetimecomponent","text":"abstract fun dateTimeComponent(): DateTimeComponent !","title":"dateTimeComponent"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-booking-resolver/","text":"tripkit-android / com.skedgo / TripKit / getBookingResolver getBookingResolver abstract fun getBookingResolver(): BookingResolver !","title":"Get booking resolver"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-booking-resolver/#getbookingresolver","text":"abstract fun getBookingResolver(): BookingResolver !","title":"getBookingResolver"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-error-handler/","text":"tripkit-android / com.skedgo / TripKit / getErrorHandler getErrorHandler abstract fun getErrorHandler(): Consumer< Throwable !>!","title":"Get error handler"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-error-handler/#geterrorhandler","text":"abstract fun getErrorHandler(): Consumer< Throwable !>!","title":"getErrorHandler"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-instance/","text":"tripkit-android / com.skedgo / TripKit / getInstance getInstance open static fun getInstance(): TripKit !","title":"Get instance"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-instance/#getinstance","text":"open static fun getInstance(): TripKit !","title":"getInstance"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-location-info-service/","text":"tripkit-android / com.skedgo / TripKit / getLocationInfoService getLocationInfoService abstract fun getLocationInfoService(): LocationInfoService !","title":"Get location info service"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-location-info-service/#getlocationinfoservice","text":"abstract fun getLocationInfoService(): LocationInfoService !","title":"getLocationInfoService"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-ok-http-client3/","text":"tripkit-android / com.skedgo / TripKit / getOkHttpClient3 getOkHttpClient3 abstract fun getOkHttpClient3(): OkHttpClient!","title":"Get ok http client3"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-ok-http-client3/#getokhttpclient3","text":"abstract fun getOkHttpClient3(): OkHttpClient!","title":"getOkHttpClient3"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-region-service/","text":"tripkit-android / com.skedgo / TripKit / getRegionService getRegionService abstract fun getRegionService(): RegionService !","title":"Get region service"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-region-service/#getregionservice","text":"abstract fun getRegionService(): RegionService !","title":"getRegionService"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-route-service/","text":"tripkit-android / com.skedgo / TripKit / getRouteService getRouteService abstract fun getRouteService(): RouteService !","title":"Get route service"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-route-service/#getrouteservice","text":"abstract fun getRouteService(): RouteService !","title":"getRouteService"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-trip-updater/","text":"tripkit-android / com.skedgo / TripKit / getTripUpdater getTripUpdater abstract fun getTripUpdater(): TripUpdater !","title":"Get trip updater"},{"location":"tripkit-android/com.skedgo/-trip-kit/get-trip-updater/#gettripupdater","text":"abstract fun getTripUpdater(): TripUpdater !","title":"getTripUpdater"},{"location":"tripkit-android/com.skedgo/-trip-kit/initialize/","text":"tripkit-android / com.skedgo / TripKit / initialize initialize open static fun initialize(@NonNull context: Context, @NonNull tripKit: TripKit ): Unit This gives a chance to provide a custom [`TripKit`](index.md). One idea is that we can create DaggerTripKit w/ some customized modules. Note that you should only use this when you totally understand what you're doing. Otherwise, just go with `[ #initialize(Configs)`](./initialize.md) instead. Parameters context - Context: A [`Context`](#) to launch FetchRegionsService . tripKit - TripKit : Can be created via `[ DaggerTripKit ](#). open static fun initialize(configs: [ Configs ](../../com.skedgo.tripkit/-configs/index.md) !): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html )","title":"Initialize"},{"location":"tripkit-android/com.skedgo/-trip-kit/initialize/#initialize","text":"open static fun initialize(@NonNull context: Context, @NonNull tripKit: TripKit ): Unit This gives a chance to provide a custom [`TripKit`](index.md). One idea is that we can create DaggerTripKit w/ some customized modules. Note that you should only use this when you totally understand what you're doing. Otherwise, just go with `[ #initialize(Configs)`](./initialize.md) instead.","title":"initialize"},{"location":"tripkit-android/com.skedgo/-trip-kit/initialize/#parameters","text":"context - Context: A [`Context`](#) to launch FetchRegionsService . tripKit - TripKit : Can be created via `[ DaggerTripKit ](#). open static fun initialize(configs: [ Configs ](../../com.skedgo.tripkit/-configs/index.md) !): [ Unit`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-unit/index.html )","title":"Parameters"},{"location":"tripkit-android/com.skedgo/-trip-kit/is-initialized/","text":"tripkit-android / com.skedgo / TripKit / isInitialized isInitialized open static fun isInitialized(): Boolean","title":"Is initialized"},{"location":"tripkit-android/com.skedgo/-trip-kit/is-initialized/#isinitialized","text":"open static fun isInitialized(): Boolean","title":"isInitialized"},{"location":"tripkit-android/com.skedgo.geocoding/","text":"tripkit-android / com.skedgo.geocoding Package com.skedgo.geocoding Types Name Summary GCAppResult Represents the the minimum information we need to calculate the score for a result obtained from the information stored in the app by the user. open class GCAppResult : GCResult , GCAppResultInterface GCBoundingBox open class GCBoundingBox : GCBoundingBoxInterface GCFoursquareResult Represents the minimum information we need to calculate the score for a foursquare result. open class GCFoursquareResult : GCResult , GCFoursquareResultInterface GCGoogleResult open class GCGoogleResult : GCResult , GCGoogleResultInterface GCQuery open class GCQuery : GCQueryInterface GCResult open class GCResult : GCResultInterface GCSkedgoResult open class GCSkedgoResult : GCResult , GCSkedGoResultInterface GeocodeUtilities open class GeocodeUtilities GroupScoringResult scored result with duplicates open class GroupScoringResult<T : GCResultInterface !> : MGAResultInterface <T> LatLng open class LatLng ScoringResult scored single result - without duplicates open class ScoringResult<T : GCResultInterface !> : MGAResultInterface <T>","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/#package-comskedgogeocoding","text":"","title":"Package com.skedgo.geocoding"},{"location":"tripkit-android/com.skedgo.geocoding/#types","text":"Name Summary GCAppResult Represents the the minimum information we need to calculate the score for a result obtained from the information stored in the app by the user. open class GCAppResult : GCResult , GCAppResultInterface GCBoundingBox open class GCBoundingBox : GCBoundingBoxInterface GCFoursquareResult Represents the minimum information we need to calculate the score for a foursquare result. open class GCFoursquareResult : GCResult , GCFoursquareResultInterface GCGoogleResult open class GCGoogleResult : GCResult , GCGoogleResultInterface GCQuery open class GCQuery : GCQueryInterface GCResult open class GCResult : GCResultInterface GCSkedgoResult open class GCSkedgoResult : GCResult , GCSkedGoResultInterface GeocodeUtilities open class GeocodeUtilities GroupScoringResult scored result with duplicates open class GroupScoringResult<T : GCResultInterface !> : MGAResultInterface <T> LatLng open class LatLng ScoringResult scored single result - without duplicates open class ScoringResult<T : GCResultInterface !> : MGAResultInterface <T>","title":"Types"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/","text":"tripkit-android / com.skedgo.geocoding / GCAppResult GCAppResult open class GCAppResult : GCResult , GCAppResultInterface Represents the the minimum information we need to calculate the score for a result obtained from the information stored in the app by the user. Constructors Name Summary <init> GCAppResult(name: String !, lat: Double , lng: Double , address: String , isFavourite: Boolean , source: Source) Functions Name Summary getAppResultSource open fun getAppResultSource(): Source! getSubtitle open fun getSubtitle(): String isFavourite open fun isFavourite(): Boolean setAppResultSource open fun setAppResultSource(source: Source!): Unit setIsFavourite open fun setIsFavourite(favourite: Boolean ): Unit setSubtitle open fun setSubtitle(subtitle: String ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/#gcappresult","text":"open class GCAppResult : GCResult , GCAppResultInterface Represents the the minimum information we need to calculate the score for a result obtained from the information stored in the app by the user.","title":"GCAppResult"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/#constructors","text":"Name Summary <init> GCAppResult(name: String !, lat: Double , lng: Double , address: String , isFavourite: Boolean , source: Source)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/#functions","text":"Name Summary getAppResultSource open fun getAppResultSource(): Source! getSubtitle open fun getSubtitle(): String isFavourite open fun isFavourite(): Boolean setAppResultSource open fun setAppResultSource(source: Source!): Unit setIsFavourite open fun setIsFavourite(favourite: Boolean ): Unit setSubtitle open fun setSubtitle(subtitle: String ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/-init-/","text":"tripkit-android / com.skedgo.geocoding / GCAppResult / <init> <init> GCAppResult(name: String !, lat: Double , lng: Double , @NotNull address: String , isFavourite: Boolean , @NotNull source: Source)","title":" init "},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/-init-/#init","text":"GCAppResult(name: String !, lat: Double , lng: Double , @NotNull address: String , isFavourite: Boolean , @NotNull source: Source)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/get-app-result-source/","text":"tripkit-android / com.skedgo.geocoding / GCAppResult / getAppResultSource getAppResultSource open fun getAppResultSource(): Source!","title":"Get app result source"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/get-app-result-source/#getappresultsource","text":"open fun getAppResultSource(): Source!","title":"getAppResultSource"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/get-subtitle/","text":"tripkit-android / com.skedgo.geocoding / GCAppResult / getSubtitle getSubtitle @NotNull open fun getSubtitle(): String","title":"Get subtitle"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/get-subtitle/#getsubtitle","text":"@NotNull open fun getSubtitle(): String","title":"getSubtitle"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/is-favourite/","text":"tripkit-android / com.skedgo.geocoding / GCAppResult / isFavourite isFavourite open fun isFavourite(): Boolean","title":"Is favourite"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/is-favourite/#isfavourite","text":"open fun isFavourite(): Boolean","title":"isFavourite"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/set-app-result-source/","text":"tripkit-android / com.skedgo.geocoding / GCAppResult / setAppResultSource setAppResultSource open fun setAppResultSource(source: Source!): Unit","title":"Set app result source"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/set-app-result-source/#setappresultsource","text":"open fun setAppResultSource(source: Source!): Unit","title":"setAppResultSource"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/set-is-favourite/","text":"tripkit-android / com.skedgo.geocoding / GCAppResult / setIsFavourite setIsFavourite open fun setIsFavourite(favourite: Boolean ): Unit","title":"Set is favourite"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/set-is-favourite/#setisfavourite","text":"open fun setIsFavourite(favourite: Boolean ): Unit","title":"setIsFavourite"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/set-subtitle/","text":"tripkit-android / com.skedgo.geocoding / GCAppResult / setSubtitle setSubtitle open fun setSubtitle(@NotNull subtitle: String ): Unit","title":"Set subtitle"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-app-result/set-subtitle/#setsubtitle","text":"open fun setSubtitle(@NotNull subtitle: String ): Unit","title":"setSubtitle"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox GCBoundingBox open class GCBoundingBox : GCBoundingBoxInterface Constructors Name Summary <init> GCBoundingBox(lat1: Double , lat2: Double , lng1: Double , lng2: Double ) GCBoundingBox(bb: GCBoundingBoxInterface !) GCBoundingBox(other: GCBoundingBox !) Properties Name Summary lat1 var lat1: Double lat2 var lat2: Double lng1 var lng1: Double lng2 var lng2: Double World static val World: GCBoundingBox ! Functions Name Summary center open fun center(): LatLng ! getBoundingBox open fun getBoundingBox(): GCBoundingBox ! getLatitudeDelta open fun getLatitudeDelta(): Double getLatLngs open fun getLatLngs(): MutableList < LatLng !>! getLatN open fun getLatN(): Double getLatS open fun getLatS(): Double getLngE open fun getLngE(): Double getLngW open fun getLngW(): Double getLongitudeDelta open fun getLongitudeDelta(): Double height open fun height(): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/#gcboundingbox","text":"open class GCBoundingBox : GCBoundingBoxInterface","title":"GCBoundingBox"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/#constructors","text":"Name Summary <init> GCBoundingBox(lat1: Double , lat2: Double , lng1: Double , lng2: Double ) GCBoundingBox(bb: GCBoundingBoxInterface !) GCBoundingBox(other: GCBoundingBox !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/#properties","text":"Name Summary lat1 var lat1: Double lat2 var lat2: Double lng1 var lng1: Double lng2 var lng2: Double World static val World: GCBoundingBox !","title":"Properties"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/#functions","text":"Name Summary center open fun center(): LatLng ! getBoundingBox open fun getBoundingBox(): GCBoundingBox ! getLatitudeDelta open fun getLatitudeDelta(): Double getLatLngs open fun getLatLngs(): MutableList < LatLng !>! getLatN open fun getLatN(): Double getLatS open fun getLatS(): Double getLngE open fun getLngE(): Double getLngW open fun getLngW(): Double getLongitudeDelta open fun getLongitudeDelta(): Double height open fun height(): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/-init-/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / <init> <init> GCBoundingBox(lat1: Double , lat2: Double , lng1: Double , lng2: Double ) GCBoundingBox(bb: GCBoundingBoxInterface !) GCBoundingBox(other: GCBoundingBox !)","title":" init "},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/-init-/#init","text":"GCBoundingBox(lat1: Double , lat2: Double , lng1: Double , lng2: Double ) GCBoundingBox(bb: GCBoundingBoxInterface !) GCBoundingBox(other: GCBoundingBox !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/-world/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / World World static val World: GCBoundingBox !","title":" world"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/-world/#world","text":"static val World: GCBoundingBox !","title":"World"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/center/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / center center open fun center(): LatLng !","title":"Center"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/center/#center","text":"open fun center(): LatLng !","title":"center"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-bounding-box/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / getBoundingBox getBoundingBox open fun getBoundingBox(): GCBoundingBox !","title":"Get bounding box"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-bounding-box/#getboundingbox","text":"open fun getBoundingBox(): GCBoundingBox !","title":"getBoundingBox"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-lat-lngs/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / getLatLngs getLatLngs open fun getLatLngs(): MutableList < LatLng !>!","title":"Get lat lngs"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-lat-lngs/#getlatlngs","text":"open fun getLatLngs(): MutableList < LatLng !>!","title":"getLatLngs"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-lat-n/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / getLatN getLatN open fun getLatN(): Double","title":"Get lat n"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-lat-n/#getlatn","text":"open fun getLatN(): Double","title":"getLatN"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-lat-s/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / getLatS getLatS open fun getLatS(): Double","title":"Get lat s"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-lat-s/#getlats","text":"open fun getLatS(): Double","title":"getLatS"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-latitude-delta/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / getLatitudeDelta getLatitudeDelta open fun getLatitudeDelta(): Double","title":"Get latitude delta"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-latitude-delta/#getlatitudedelta","text":"open fun getLatitudeDelta(): Double","title":"getLatitudeDelta"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-lng-e/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / getLngE getLngE open fun getLngE(): Double","title":"Get lng e"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-lng-e/#getlnge","text":"open fun getLngE(): Double","title":"getLngE"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-lng-w/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / getLngW getLngW open fun getLngW(): Double","title":"Get lng w"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-lng-w/#getlngw","text":"open fun getLngW(): Double","title":"getLngW"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-longitude-delta/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / getLongitudeDelta getLongitudeDelta open fun getLongitudeDelta(): Double","title":"Get longitude delta"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/get-longitude-delta/#getlongitudedelta","text":"open fun getLongitudeDelta(): Double","title":"getLongitudeDelta"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/height/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / height height open fun height(): Int","title":"Height"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/height/#height","text":"open fun height(): Int","title":"height"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/lat1/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / lat1 lat1 var lat1: Double","title":"Lat1"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/lat1/#lat1","text":"var lat1: Double","title":"lat1"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/lat2/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / lat2 lat2 var lat2: Double","title":"Lat2"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/lat2/#lat2","text":"var lat2: Double","title":"lat2"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/lng1/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / lng1 lng1 var lng1: Double","title":"Lng1"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/lng1/#lng1","text":"var lng1: Double","title":"lng1"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/lng2/","text":"tripkit-android / com.skedgo.geocoding / GCBoundingBox / lng2 lng2 var lng2: Double","title":"Lng2"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-bounding-box/lng2/#lng2","text":"var lng2: Double","title":"lng2"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/","text":"tripkit-android / com.skedgo.geocoding / GCFoursquareResult GCFoursquareResult open class GCFoursquareResult : GCResult , GCFoursquareResultInterface Represents the minimum information we need to calculate the score for a foursquare result. Constructors Name Summary <init> GCFoursquareResult(name: String !, lat: Double , lng: Double , verified: Boolean , categories: MutableList < String !>) Functions Name Summary getCategories open fun getCategories(): MutableList < String !> isVerified open fun isVerified(): Boolean setCategories open fun setCategories(categories: MutableList < String !>): Unit setIsVerified open fun setIsVerified(verified: Boolean ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/#gcfoursquareresult","text":"open class GCFoursquareResult : GCResult , GCFoursquareResultInterface Represents the minimum information we need to calculate the score for a foursquare result.","title":"GCFoursquareResult"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/#constructors","text":"Name Summary <init> GCFoursquareResult(name: String !, lat: Double , lng: Double , verified: Boolean , categories: MutableList < String !>)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/#functions","text":"Name Summary getCategories open fun getCategories(): MutableList < String !> isVerified open fun isVerified(): Boolean setCategories open fun setCategories(categories: MutableList < String !>): Unit setIsVerified open fun setIsVerified(verified: Boolean ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/-init-/","text":"tripkit-android / com.skedgo.geocoding / GCFoursquareResult / <init> <init> GCFoursquareResult(name: String !, lat: Double , lng: Double , verified: Boolean , @NotNull categories: MutableList < String !>)","title":" init "},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/-init-/#init","text":"GCFoursquareResult(name: String !, lat: Double , lng: Double , verified: Boolean , @NotNull categories: MutableList < String !>)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/get-categories/","text":"tripkit-android / com.skedgo.geocoding / GCFoursquareResult / getCategories getCategories @NotNull open fun getCategories(): MutableList < String !>","title":"Get categories"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/get-categories/#getcategories","text":"@NotNull open fun getCategories(): MutableList < String !>","title":"getCategories"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/is-verified/","text":"tripkit-android / com.skedgo.geocoding / GCFoursquareResult / isVerified isVerified open fun isVerified(): Boolean","title":"Is verified"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/is-verified/#isverified","text":"open fun isVerified(): Boolean","title":"isVerified"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/set-categories/","text":"tripkit-android / com.skedgo.geocoding / GCFoursquareResult / setCategories setCategories open fun setCategories(@NotNull categories: MutableList < String !>): Unit","title":"Set categories"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/set-categories/#setcategories","text":"open fun setCategories(@NotNull categories: MutableList < String !>): Unit","title":"setCategories"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/set-is-verified/","text":"tripkit-android / com.skedgo.geocoding / GCFoursquareResult / setIsVerified setIsVerified open fun setIsVerified(verified: Boolean ): Unit","title":"Set is verified"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-foursquare-result/set-is-verified/#setisverified","text":"open fun setIsVerified(verified: Boolean ): Unit","title":"setIsVerified"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-google-result/","text":"tripkit-android / com.skedgo.geocoding / GCGoogleResult GCGoogleResult open class GCGoogleResult : GCResult , GCGoogleResultInterface Constructors Name Summary <init> GCGoogleResult(name: String !, lat: Double , lng: Double , address: String !) GCGoogleResult(name: String !) Functions Name Summary getAddress open fun getAddress(): String ! setAddress open fun setAddress(address: String !): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-google-result/#gcgoogleresult","text":"open class GCGoogleResult : GCResult , GCGoogleResultInterface","title":"GCGoogleResult"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-google-result/#constructors","text":"Name Summary <init> GCGoogleResult(name: String !, lat: Double , lng: Double , address: String !) GCGoogleResult(name: String !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-google-result/#functions","text":"Name Summary getAddress open fun getAddress(): String ! setAddress open fun setAddress(address: String !): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-google-result/-init-/","text":"tripkit-android / com.skedgo.geocoding / GCGoogleResult / <init> <init> GCGoogleResult(name: String !, lat: Double , lng: Double , address: String !) GCGoogleResult(name: String !)","title":" init "},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-google-result/-init-/#init","text":"GCGoogleResult(name: String !, lat: Double , lng: Double , address: String !) GCGoogleResult(name: String !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-google-result/get-address/","text":"tripkit-android / com.skedgo.geocoding / GCGoogleResult / getAddress getAddress open fun getAddress(): String !","title":"Get address"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-google-result/get-address/#getaddress","text":"open fun getAddress(): String !","title":"getAddress"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-google-result/set-address/","text":"tripkit-android / com.skedgo.geocoding / GCGoogleResult / setAddress setAddress open fun setAddress(address: String !): Unit","title":"Set address"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-google-result/set-address/#setaddress","text":"open fun setAddress(address: String !): Unit","title":"setAddress"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/","text":"tripkit-android / com.skedgo.geocoding / GCQuery GCQuery open class GCQuery : GCQueryInterface Constructors Name Summary <init> GCQuery(term: String , boundsData: GCBoundingBox ) Functions Name Summary getBounds open fun getBounds(): GCBoundingBox getQueryText open fun getQueryText(): String setBounds open fun setBounds(boundingBox: GCBoundingBox !): Unit setQueryText open fun setQueryText(term: String !): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/#gcquery","text":"open class GCQuery : GCQueryInterface","title":"GCQuery"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/#constructors","text":"Name Summary <init> GCQuery(term: String , boundsData: GCBoundingBox )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/#functions","text":"Name Summary getBounds open fun getBounds(): GCBoundingBox getQueryText open fun getQueryText(): String setBounds open fun setBounds(boundingBox: GCBoundingBox !): Unit setQueryText open fun setQueryText(term: String !): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/-init-/","text":"tripkit-android / com.skedgo.geocoding / GCQuery / <init> <init> GCQuery(@NotNull term: String , @NotNull boundsData: GCBoundingBox )","title":" init "},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/-init-/#init","text":"GCQuery(@NotNull term: String , @NotNull boundsData: GCBoundingBox )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/get-bounds/","text":"tripkit-android / com.skedgo.geocoding / GCQuery / getBounds getBounds @NotNull open fun getBounds(): GCBoundingBox","title":"Get bounds"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/get-bounds/#getbounds","text":"@NotNull open fun getBounds(): GCBoundingBox","title":"getBounds"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/get-query-text/","text":"tripkit-android / com.skedgo.geocoding / GCQuery / getQueryText getQueryText @NotNull open fun getQueryText(): String","title":"Get query text"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/get-query-text/#getquerytext","text":"@NotNull open fun getQueryText(): String","title":"getQueryText"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/set-bounds/","text":"tripkit-android / com.skedgo.geocoding / GCQuery / setBounds setBounds open fun setBounds(boundingBox: GCBoundingBox !): Unit","title":"Set bounds"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/set-bounds/#setbounds","text":"open fun setBounds(boundingBox: GCBoundingBox !): Unit","title":"setBounds"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/set-query-text/","text":"tripkit-android / com.skedgo.geocoding / GCQuery / setQueryText setQueryText open fun setQueryText(term: String !): Unit","title":"Set query text"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-query/set-query-text/#setquerytext","text":"open fun setQueryText(term: String !): Unit","title":"setQueryText"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/","text":"tripkit-android / com.skedgo.geocoding / GCResult GCResult open class GCResult : GCResultInterface Constructors Name Summary <init> GCResult(name: String , lat: Double !, lng: Double !) GCResult() Functions Name Summary getLat open fun getLat(): Double ! getLng open fun getLng(): Double ! getName open fun getName(): String setLat open fun setLat(lat: Double !): Unit setLng open fun setLng(lng: Double !): Unit setName open fun setName(name: String ): Unit Inheritors Name Summary GCAppResult Represents the the minimum information we need to calculate the score for a result obtained from the information stored in the app by the user. open class GCAppResult : GCResult , GCAppResultInterface GCFoursquareResult Represents the minimum information we need to calculate the score for a foursquare result. open class GCFoursquareResult : GCResult , GCFoursquareResultInterface GCGoogleResult open class GCGoogleResult : GCResult , GCGoogleResultInterface GCSkedgoResult open class GCSkedgoResult : GCResult , GCSkedGoResultInterface","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/#gcresult","text":"open class GCResult : GCResultInterface","title":"GCResult"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/#constructors","text":"Name Summary <init> GCResult(name: String , lat: Double !, lng: Double !) GCResult()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/#functions","text":"Name Summary getLat open fun getLat(): Double ! getLng open fun getLng(): Double ! getName open fun getName(): String setLat open fun setLat(lat: Double !): Unit setLng open fun setLng(lng: Double !): Unit setName open fun setName(name: String ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/#inheritors","text":"Name Summary GCAppResult Represents the the minimum information we need to calculate the score for a result obtained from the information stored in the app by the user. open class GCAppResult : GCResult , GCAppResultInterface GCFoursquareResult Represents the minimum information we need to calculate the score for a foursquare result. open class GCFoursquareResult : GCResult , GCFoursquareResultInterface GCGoogleResult open class GCGoogleResult : GCResult , GCGoogleResultInterface GCSkedgoResult open class GCSkedgoResult : GCResult , GCSkedGoResultInterface","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/-init-/","text":"tripkit-android / com.skedgo.geocoding / GCResult / <init> <init> GCResult(@NotNull name: String , lat: Double !, lng: Double !) GCResult()","title":" init "},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/-init-/#init","text":"GCResult(@NotNull name: String , lat: Double !, lng: Double !) GCResult()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/get-lat/","text":"tripkit-android / com.skedgo.geocoding / GCResult / getLat getLat open fun getLat(): Double !","title":"Get lat"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/get-lat/#getlat","text":"open fun getLat(): Double !","title":"getLat"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/get-lng/","text":"tripkit-android / com.skedgo.geocoding / GCResult / getLng getLng open fun getLng(): Double !","title":"Get lng"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/get-lng/#getlng","text":"open fun getLng(): Double !","title":"getLng"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/get-name/","text":"tripkit-android / com.skedgo.geocoding / GCResult / getName getName @NotNull open fun getName(): String","title":"Get name"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/get-name/#getname","text":"@NotNull open fun getName(): String","title":"getName"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/set-lat/","text":"tripkit-android / com.skedgo.geocoding / GCResult / setLat setLat open fun setLat(lat: Double !): Unit","title":"Set lat"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/set-lat/#setlat","text":"open fun setLat(lat: Double !): Unit","title":"setLat"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/set-lng/","text":"tripkit-android / com.skedgo.geocoding / GCResult / setLng setLng open fun setLng(lng: Double !): Unit","title":"Set lng"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/set-lng/#setlng","text":"open fun setLng(lng: Double !): Unit","title":"setLng"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/set-name/","text":"tripkit-android / com.skedgo.geocoding / GCResult / setName setName open fun setName(@NotNull name: String ): Unit","title":"Set name"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-result/set-name/#setname","text":"open fun setName(@NotNull name: String ): Unit","title":"setName"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/","text":"tripkit-android / com.skedgo.geocoding / GCSkedgoResult GCSkedgoResult open class GCSkedgoResult : GCResult , GCSkedGoResultInterface Constructors Name Summary <init> GCSkedgoResult(name: String !, lat: Double , lng: Double , resultClass: String , popularity: Int !) Functions Name Summary getPopularity open fun getPopularity(): Int getResultClass open fun getResultClass(): String isStopLocation open fun isStopLocation(): Boolean setPopularity open fun setPopularity(popularity: Int ): Unit setResultClass open fun setResultClass(resultClass: String ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/#gcskedgoresult","text":"open class GCSkedgoResult : GCResult , GCSkedGoResultInterface","title":"GCSkedgoResult"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/#constructors","text":"Name Summary <init> GCSkedgoResult(name: String !, lat: Double , lng: Double , resultClass: String , popularity: Int !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/#functions","text":"Name Summary getPopularity open fun getPopularity(): Int getResultClass open fun getResultClass(): String isStopLocation open fun isStopLocation(): Boolean setPopularity open fun setPopularity(popularity: Int ): Unit setResultClass open fun setResultClass(resultClass: String ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/-init-/","text":"tripkit-android / com.skedgo.geocoding / GCSkedgoResult / <init> <init> GCSkedgoResult(name: String !, lat: Double , lng: Double , @NotNull resultClass: String , popularity: Int !)","title":" init "},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/-init-/#init","text":"GCSkedgoResult(name: String !, lat: Double , lng: Double , @NotNull resultClass: String , popularity: Int !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/get-popularity/","text":"tripkit-android / com.skedgo.geocoding / GCSkedgoResult / getPopularity getPopularity open fun getPopularity(): Int","title":"Get popularity"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/get-popularity/#getpopularity","text":"open fun getPopularity(): Int","title":"getPopularity"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/get-result-class/","text":"tripkit-android / com.skedgo.geocoding / GCSkedgoResult / getResultClass getResultClass @NotNull open fun getResultClass(): String","title":"Get result class"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/get-result-class/#getresultclass","text":"@NotNull open fun getResultClass(): String","title":"getResultClass"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/is-stop-location/","text":"tripkit-android / com.skedgo.geocoding / GCSkedgoResult / isStopLocation isStopLocation open fun isStopLocation(): Boolean","title":"Is stop location"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/is-stop-location/#isstoplocation","text":"open fun isStopLocation(): Boolean","title":"isStopLocation"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/set-popularity/","text":"tripkit-android / com.skedgo.geocoding / GCSkedgoResult / setPopularity setPopularity open fun setPopularity(popularity: Int ): Unit","title":"Set popularity"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/set-popularity/#setpopularity","text":"open fun setPopularity(popularity: Int ): Unit","title":"setPopularity"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/set-result-class/","text":"tripkit-android / com.skedgo.geocoding / GCSkedgoResult / setResultClass setResultClass open fun setResultClass(@NotNull resultClass: String ): Unit","title":"Set result class"},{"location":"tripkit-android/com.skedgo.geocoding/-g-c-skedgo-result/set-result-class/#setresultclass","text":"open fun setResultClass(@NotNull resultClass: String ): Unit","title":"setResultClass"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities GeocodeUtilities open class GeocodeUtilities Constructors Name Summary <init> GeocodeUtilities() Functions Name Summary compareInt open static fun compareInt(x: Int , y: Int ): Int isAbbreviationFor open static fun isAbbreviationFor(abbreviation: String !, text: String !): Boolean isSuburb open static fun isSuburb(foursquareResult: GCFoursquareResultInterface !): Boolean rangedScoreForScore open static fun rangedScoreForScore(score: Int , minimum: Int , maximum: Int ): Int scoreBasedOnDistanceFromCoordinate open static fun scoreBasedOnDistanceFromCoordinate(coordinate: LatLng !, region: GCBoundingBox !, regionCenter: LatLng !, longDistance: Boolean ): Int scoreBasedOnNameMatchBetweenSearchTerm open static fun scoreBasedOnNameMatchBetweenSearchTerm(searchTerm: String !, candidate: String !): Int scoreBetweenSearchTerm open static fun scoreBetweenSearchTerm(target: String !, candidate: String !): Int sortByImportance open static fun <T : GCResultInterface !> sortByImportance(scoreResults: MutableList < MGAResultInterface <T>!>!): MutableList < MGAResultInterface <T>!>! sortByScore open static fun <T : GCResultInterface !> sortByScore(scoreResults: MutableList < MGAResultInterface <T>!>!): MutableList < MGAResultInterface <T>!>! stringForScoringOfString open static fun stringForScoringOfString(term: String !): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/#geocodeutilities","text":"open class GeocodeUtilities","title":"GeocodeUtilities"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/#constructors","text":"Name Summary <init> GeocodeUtilities()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/#functions","text":"Name Summary compareInt open static fun compareInt(x: Int , y: Int ): Int isAbbreviationFor open static fun isAbbreviationFor(abbreviation: String !, text: String !): Boolean isSuburb open static fun isSuburb(foursquareResult: GCFoursquareResultInterface !): Boolean rangedScoreForScore open static fun rangedScoreForScore(score: Int , minimum: Int , maximum: Int ): Int scoreBasedOnDistanceFromCoordinate open static fun scoreBasedOnDistanceFromCoordinate(coordinate: LatLng !, region: GCBoundingBox !, regionCenter: LatLng !, longDistance: Boolean ): Int scoreBasedOnNameMatchBetweenSearchTerm open static fun scoreBasedOnNameMatchBetweenSearchTerm(searchTerm: String !, candidate: String !): Int scoreBetweenSearchTerm open static fun scoreBetweenSearchTerm(target: String !, candidate: String !): Int sortByImportance open static fun <T : GCResultInterface !> sortByImportance(scoreResults: MutableList < MGAResultInterface <T>!>!): MutableList < MGAResultInterface <T>!>! sortByScore open static fun <T : GCResultInterface !> sortByScore(scoreResults: MutableList < MGAResultInterface <T>!>!): MutableList < MGAResultInterface <T>!>! stringForScoringOfString open static fun stringForScoringOfString(term: String !): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/-init-/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities / <init> <init> GeocodeUtilities()","title":" init "},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/-init-/#init","text":"GeocodeUtilities()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/compare-int/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities / compareInt compareInt open static fun compareInt(x: Int , y: Int ): Int","title":"Compare int"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/compare-int/#compareint","text":"open static fun compareInt(x: Int , y: Int ): Int","title":"compareInt"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/is-abbreviation-for/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities / isAbbreviationFor isAbbreviationFor open static fun isAbbreviationFor(abbreviation: String !, text: String !): Boolean","title":"Is abbreviation for"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/is-abbreviation-for/#isabbreviationfor","text":"open static fun isAbbreviationFor(abbreviation: String !, text: String !): Boolean","title":"isAbbreviationFor"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/is-suburb/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities / isSuburb isSuburb open static fun isSuburb(foursquareResult: GCFoursquareResultInterface !): Boolean","title":"Is suburb"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/is-suburb/#issuburb","text":"open static fun isSuburb(foursquareResult: GCFoursquareResultInterface !): Boolean","title":"isSuburb"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/ranged-score-for-score/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities / rangedScoreForScore rangedScoreForScore open static fun rangedScoreForScore(score: Int , minimum: Int , maximum: Int ): Int","title":"Ranged score for score"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/ranged-score-for-score/#rangedscoreforscore","text":"open static fun rangedScoreForScore(score: Int , minimum: Int , maximum: Int ): Int","title":"rangedScoreForScore"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/score-based-on-distance-from-coordinate/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities / scoreBasedOnDistanceFromCoordinate scoreBasedOnDistanceFromCoordinate open static fun scoreBasedOnDistanceFromCoordinate(coordinate: LatLng !, region: GCBoundingBox !, regionCenter: LatLng !, longDistance: Boolean ): Int","title":"Score based on distance from coordinate"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/score-based-on-distance-from-coordinate/#scorebasedondistancefromcoordinate","text":"open static fun scoreBasedOnDistanceFromCoordinate(coordinate: LatLng !, region: GCBoundingBox !, regionCenter: LatLng !, longDistance: Boolean ): Int","title":"scoreBasedOnDistanceFromCoordinate"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/score-based-on-name-match-between-search-term/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities / scoreBasedOnNameMatchBetweenSearchTerm scoreBasedOnNameMatchBetweenSearchTerm open static fun scoreBasedOnNameMatchBetweenSearchTerm(searchTerm: String !, candidate: String !): Int","title":"Score based on name match between search term"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/score-based-on-name-match-between-search-term/#scorebasedonnamematchbetweensearchterm","text":"open static fun scoreBasedOnNameMatchBetweenSearchTerm(searchTerm: String !, candidate: String !): Int","title":"scoreBasedOnNameMatchBetweenSearchTerm"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/score-between-search-term/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities / scoreBetweenSearchTerm scoreBetweenSearchTerm open static fun scoreBetweenSearchTerm(target: String !, candidate: String !): Int","title":"Score between search term"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/score-between-search-term/#scorebetweensearchterm","text":"open static fun scoreBetweenSearchTerm(target: String !, candidate: String !): Int","title":"scoreBetweenSearchTerm"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/sort-by-importance/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities / sortByImportance sortByImportance open static fun <T : GCResultInterface !> sortByImportance(scoreResults: MutableList < MGAResultInterface <T>!>!): MutableList < MGAResultInterface <T>!>!","title":"Sort by importance"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/sort-by-importance/#sortbyimportance","text":"open static fun <T : GCResultInterface !> sortByImportance(scoreResults: MutableList < MGAResultInterface <T>!>!): MutableList < MGAResultInterface <T>!>!","title":"sortByImportance"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/sort-by-score/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities / sortByScore sortByScore open static fun <T : GCResultInterface !> sortByScore(scoreResults: MutableList < MGAResultInterface <T>!>!): MutableList < MGAResultInterface <T>!>!","title":"Sort by score"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/sort-by-score/#sortbyscore","text":"open static fun <T : GCResultInterface !> sortByScore(scoreResults: MutableList < MGAResultInterface <T>!>!): MutableList < MGAResultInterface <T>!>!","title":"sortByScore"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/string-for-scoring-of-string/","text":"tripkit-android / com.skedgo.geocoding / GeocodeUtilities / stringForScoringOfString stringForScoringOfString open static fun stringForScoringOfString(term: String !): String !","title":"String for scoring of string"},{"location":"tripkit-android/com.skedgo.geocoding/-geocode-utilities/string-for-scoring-of-string/#stringforscoringofstring","text":"open static fun stringForScoringOfString(term: String !): String !","title":"stringForScoringOfString"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult GroupScoringResult open class GroupScoringResult<T : GCResultInterface !> : MGAResultInterface <T> scored result with duplicates Constructors Name Summary <init> GroupScoringResult() Functions Name Summary addDuplicate open fun addDuplicate(scoringResult: ScoringResult <T>!): Unit addDuplicates open fun addDuplicates(scoringResults: MutableList < MGAResultInterface <T>!>!): Unit getAddressScore open fun getAddressScore(): Int getClassRepresentative open fun getClassRepresentative(): MGAResultInterface <T>! getDistanceScore open fun getDistanceScore(): Int getDuplicates open fun getDuplicates(): MutableList < MGAResultInterface <T>!>! getNameScore open fun getNameScore(): Int getPopularityScore open fun getPopularityScore(): Int getResult open fun getResult(): T getScore open fun getScore(): Int getScoringResult open fun getScoringResult(): ScoringResult <T>!","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/#groupscoringresult","text":"open class GroupScoringResult<T : GCResultInterface !> : MGAResultInterface <T> scored result with duplicates","title":"GroupScoringResult"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/#constructors","text":"Name Summary <init> GroupScoringResult()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/#functions","text":"Name Summary addDuplicate open fun addDuplicate(scoringResult: ScoringResult <T>!): Unit addDuplicates open fun addDuplicates(scoringResults: MutableList < MGAResultInterface <T>!>!): Unit getAddressScore open fun getAddressScore(): Int getClassRepresentative open fun getClassRepresentative(): MGAResultInterface <T>! getDistanceScore open fun getDistanceScore(): Int getDuplicates open fun getDuplicates(): MutableList < MGAResultInterface <T>!>! getNameScore open fun getNameScore(): Int getPopularityScore open fun getPopularityScore(): Int getResult open fun getResult(): T getScore open fun getScore(): Int getScoringResult open fun getScoringResult(): ScoringResult <T>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/-init-/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / <init> <init> GroupScoringResult()","title":" init "},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/-init-/#init","text":"GroupScoringResult()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/add-duplicate/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / addDuplicate addDuplicate open fun addDuplicate(scoringResult: ScoringResult <T>!): Unit","title":"Add duplicate"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/add-duplicate/#addduplicate","text":"open fun addDuplicate(scoringResult: ScoringResult <T>!): Unit","title":"addDuplicate"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/add-duplicates/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / addDuplicates addDuplicates open fun addDuplicates(scoringResults: MutableList < MGAResultInterface <T>!>!): Unit","title":"Add duplicates"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/add-duplicates/#addduplicates","text":"open fun addDuplicates(scoringResults: MutableList < MGAResultInterface <T>!>!): Unit","title":"addDuplicates"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-address-score/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / getAddressScore getAddressScore open fun getAddressScore(): Int","title":"Get address score"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-address-score/#getaddressscore","text":"open fun getAddressScore(): Int","title":"getAddressScore"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-class-representative/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / getClassRepresentative getClassRepresentative open fun getClassRepresentative(): MGAResultInterface <T>!","title":"Get class representative"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-class-representative/#getclassrepresentative","text":"open fun getClassRepresentative(): MGAResultInterface <T>!","title":"getClassRepresentative"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-distance-score/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / getDistanceScore getDistanceScore open fun getDistanceScore(): Int","title":"Get distance score"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-distance-score/#getdistancescore","text":"open fun getDistanceScore(): Int","title":"getDistanceScore"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-duplicates/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / getDuplicates getDuplicates open fun getDuplicates(): MutableList < MGAResultInterface <T>!>!","title":"Get duplicates"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-duplicates/#getduplicates","text":"open fun getDuplicates(): MutableList < MGAResultInterface <T>!>!","title":"getDuplicates"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-name-score/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / getNameScore getNameScore open fun getNameScore(): Int","title":"Get name score"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-name-score/#getnamescore","text":"open fun getNameScore(): Int","title":"getNameScore"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-popularity-score/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / getPopularityScore getPopularityScore open fun getPopularityScore(): Int","title":"Get popularity score"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-popularity-score/#getpopularityscore","text":"open fun getPopularityScore(): Int","title":"getPopularityScore"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-result/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / getResult getResult open fun getResult(): T","title":"Get result"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-result/#getresult","text":"open fun getResult(): T","title":"getResult"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-score/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / getScore getScore open fun getScore(): Int","title":"Get score"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-score/#getscore","text":"open fun getScore(): Int","title":"getScore"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-scoring-result/","text":"tripkit-android / com.skedgo.geocoding / GroupScoringResult / getScoringResult getScoringResult open fun getScoringResult(): ScoringResult <T>!","title":"Get scoring result"},{"location":"tripkit-android/com.skedgo.geocoding/-group-scoring-result/get-scoring-result/#getscoringresult","text":"open fun getScoringResult(): ScoringResult <T>!","title":"getScoringResult"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/","text":"tripkit-android / com.skedgo.geocoding / LatLng LatLng open class LatLng Constructors Name Summary <init> LatLng() LatLng(_lat: Double , _lng: Double ) LatLng(other: LatLng !) Properties Name Summary EarthRadius static val EarthRadius: Double lat var lat: Double lng var lng: Double NO_NUM static val NO_NUM: Double nullLatLong static var nullLatLong: LatLng radians static val radians: Double Functions Name Summary distanceInMetres This is the Equirectangular approximation. It's a little slower than the Region.distanceInMetres() formula. open fun distanceInMetres(other: LatLng !): Double","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/#latlng","text":"open class LatLng","title":"LatLng"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/#constructors","text":"Name Summary <init> LatLng() LatLng(_lat: Double , _lng: Double ) LatLng(other: LatLng !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/#properties","text":"Name Summary EarthRadius static val EarthRadius: Double lat var lat: Double lng var lng: Double NO_NUM static val NO_NUM: Double nullLatLong static var nullLatLong: LatLng radians static val radians: Double","title":"Properties"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/#functions","text":"Name Summary distanceInMetres This is the Equirectangular approximation. It's a little slower than the Region.distanceInMetres() formula. open fun distanceInMetres(other: LatLng !): Double","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/-earth-radius/","text":"tripkit-android / com.skedgo.geocoding / LatLng / EarthRadius EarthRadius static val EarthRadius: Double","title":" earth radius"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/-earth-radius/#earthradius","text":"static val EarthRadius: Double","title":"EarthRadius"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/-init-/","text":"tripkit-android / com.skedgo.geocoding / LatLng / <init> <init> LatLng() LatLng(_lat: Double , _lng: Double ) LatLng(other: LatLng !)","title":" init "},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/-init-/#init","text":"LatLng() LatLng(_lat: Double , _lng: Double ) LatLng(other: LatLng !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/-n-o_-n-u-m/","text":"tripkit-android / com.skedgo.geocoding / LatLng / NO_NUM NO_NUM static val NO_NUM: Double","title":" n o  n u m"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/-n-o_-n-u-m/#no_num","text":"static val NO_NUM: Double","title":"NO_NUM"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/distance-in-metres/","text":"tripkit-android / com.skedgo.geocoding / LatLng / distanceInMetres distanceInMetres open fun distanceInMetres(other: LatLng !): Double This is the Equirectangular approximation. It's a little slower than the Region.distanceInMetres() formula.","title":"Distance in metres"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/distance-in-metres/#distanceinmetres","text":"open fun distanceInMetres(other: LatLng !): Double This is the Equirectangular approximation. It's a little slower than the Region.distanceInMetres() formula.","title":"distanceInMetres"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/lat/","text":"tripkit-android / com.skedgo.geocoding / LatLng / lat lat var lat: Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/lat/#lat","text":"var lat: Double","title":"lat"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/lng/","text":"tripkit-android / com.skedgo.geocoding / LatLng / lng lng var lng: Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/lng/#lng","text":"var lng: Double","title":"lng"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/null-lat-long/","text":"tripkit-android / com.skedgo.geocoding / LatLng / nullLatLong nullLatLong @NotNull static var nullLatLong: LatLng","title":"Null lat long"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/null-lat-long/#nulllatlong","text":"@NotNull static var nullLatLong: LatLng","title":"nullLatLong"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/radians/","text":"tripkit-android / com.skedgo.geocoding / LatLng / radians radians static val radians: Double","title":"Radians"},{"location":"tripkit-android/com.skedgo.geocoding/-lat-lng/radians/#radians","text":"static val radians: Double","title":"radians"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult ScoringResult open class ScoringResult<T : GCResultInterface !> : MGAResultInterface <T> scored single result - without duplicates Constructors Name Summary <init> ScoringResult(providerResult: T) Functions Name Summary equals open fun equals(element: MGAResultInterface <T>!): Boolean getAddressScore open fun getAddressScore(): Int getClassRepresentative open fun getClassRepresentative(): MGAResultInterface <T>! getDistanceScore open fun getDistanceScore(): Int getDuplicates open fun getDuplicates(): MutableList < MGAResultInterface <T>!>! getNameScore open fun getNameScore(): Int getPopularityScore open fun getPopularityScore(): Int getResult open fun getResult(): T getScore open fun getScore(): Int setAddressScore open fun setAddressScore(addressScore: Int ): Unit setDistanceScore open fun setDistanceScore(distanceScore: Int ): Unit setNameScore open fun setNameScore(nameScore: Int ): Unit setPopularityScore open fun setPopularityScore(popularityScore: Int ): Unit setScore open fun setScore(score: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/#scoringresult","text":"open class ScoringResult<T : GCResultInterface !> : MGAResultInterface <T> scored single result - without duplicates","title":"ScoringResult"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/#constructors","text":"Name Summary <init> ScoringResult(providerResult: T)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/#functions","text":"Name Summary equals open fun equals(element: MGAResultInterface <T>!): Boolean getAddressScore open fun getAddressScore(): Int getClassRepresentative open fun getClassRepresentative(): MGAResultInterface <T>! getDistanceScore open fun getDistanceScore(): Int getDuplicates open fun getDuplicates(): MutableList < MGAResultInterface <T>!>! getNameScore open fun getNameScore(): Int getPopularityScore open fun getPopularityScore(): Int getResult open fun getResult(): T getScore open fun getScore(): Int setAddressScore open fun setAddressScore(addressScore: Int ): Unit setDistanceScore open fun setDistanceScore(distanceScore: Int ): Unit setNameScore open fun setNameScore(nameScore: Int ): Unit setPopularityScore open fun setPopularityScore(popularityScore: Int ): Unit setScore open fun setScore(score: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/-init-/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / <init> <init> ScoringResult(providerResult: T)","title":" init "},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/-init-/#init","text":"ScoringResult(providerResult: T)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/equals/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / equals equals open fun equals(element: MGAResultInterface <T>!): Boolean","title":"Equals"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/equals/#equals","text":"open fun equals(element: MGAResultInterface <T>!): Boolean","title":"equals"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-address-score/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / getAddressScore getAddressScore open fun getAddressScore(): Int","title":"Get address score"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-address-score/#getaddressscore","text":"open fun getAddressScore(): Int","title":"getAddressScore"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-class-representative/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / getClassRepresentative getClassRepresentative open fun getClassRepresentative(): MGAResultInterface <T>!","title":"Get class representative"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-class-representative/#getclassrepresentative","text":"open fun getClassRepresentative(): MGAResultInterface <T>!","title":"getClassRepresentative"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-distance-score/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / getDistanceScore getDistanceScore open fun getDistanceScore(): Int","title":"Get distance score"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-distance-score/#getdistancescore","text":"open fun getDistanceScore(): Int","title":"getDistanceScore"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-duplicates/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / getDuplicates getDuplicates open fun getDuplicates(): MutableList < MGAResultInterface <T>!>!","title":"Get duplicates"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-duplicates/#getduplicates","text":"open fun getDuplicates(): MutableList < MGAResultInterface <T>!>!","title":"getDuplicates"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-name-score/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / getNameScore getNameScore open fun getNameScore(): Int","title":"Get name score"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-name-score/#getnamescore","text":"open fun getNameScore(): Int","title":"getNameScore"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-popularity-score/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / getPopularityScore getPopularityScore open fun getPopularityScore(): Int","title":"Get popularity score"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-popularity-score/#getpopularityscore","text":"open fun getPopularityScore(): Int","title":"getPopularityScore"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-result/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / getResult getResult @NotNull open fun getResult(): T","title":"Get result"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-result/#getresult","text":"@NotNull open fun getResult(): T","title":"getResult"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-score/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / getScore getScore open fun getScore(): Int","title":"Get score"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/get-score/#getscore","text":"open fun getScore(): Int","title":"getScore"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/set-address-score/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / setAddressScore setAddressScore open fun setAddressScore(addressScore: Int ): Unit","title":"Set address score"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/set-address-score/#setaddressscore","text":"open fun setAddressScore(addressScore: Int ): Unit","title":"setAddressScore"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/set-distance-score/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / setDistanceScore setDistanceScore open fun setDistanceScore(distanceScore: Int ): Unit","title":"Set distance score"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/set-distance-score/#setdistancescore","text":"open fun setDistanceScore(distanceScore: Int ): Unit","title":"setDistanceScore"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/set-name-score/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / setNameScore setNameScore open fun setNameScore(nameScore: Int ): Unit","title":"Set name score"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/set-name-score/#setnamescore","text":"open fun setNameScore(nameScore: Int ): Unit","title":"setNameScore"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/set-popularity-score/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / setPopularityScore setPopularityScore open fun setPopularityScore(popularityScore: Int ): Unit","title":"Set popularity score"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/set-popularity-score/#setpopularityscore","text":"open fun setPopularityScore(popularityScore: Int ): Unit","title":"setPopularityScore"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/set-score/","text":"tripkit-android / com.skedgo.geocoding / ScoringResult / setScore setScore open fun setScore(score: Int ): Unit","title":"Set score"},{"location":"tripkit-android/com.skedgo.geocoding/-scoring-result/set-score/#setscore","text":"open fun setScore(score: Int ): Unit","title":"setScore"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/","text":"tripkit-android / com.skedgo.geocoding.agregator Package com.skedgo.geocoding.agregator Types Name Summary GCAppResultInterface Information that the user saves in the app interface GCAppResultInterface : GCResultInterface GCBoundingBoxInterface interface GCBoundingBoxInterface GCFoursquareResultInterface interface GCFoursquareResultInterface : GCResultInterface GCGoogleResultInterface interface GCGoogleResultInterface : GCResultInterface GCQueryInterface interface GCQueryInterface GCResultInterface interface GCResultInterface GCSkedGoResultInterface interface GCSkedGoResultInterface : GCResultInterface MGAResultInterface this class represents a scored result, it could be single or have duplicates interface MGAResultInterface<T : GCResultInterface !> : Serializable MultiSourceGeocodingAggregator Scoring formulas Favourites: max(title, address) Search history: max(title, address) Regions: distance Address book: (title + address) / 2 Calendar: (title + address) / 2 SkedGo transit stops: popularity -> ((min(popularity, GOOD_SCORE)) / (GOOD_SCORE / 100)) * 2 SkedGo others: title Google: (max(title, address) * 3 + distance) / 4 Google Autocomplete: (title * 3) / 4 Foursquare: ((title * 3 + distance) / 4) * suburb Title score: score based on input string against the title of the result Address score: score based on input string against address of the result Distance score: score based on distance to center or provided region Suburb score: bonus score if result is a suburb Popularity score: score based on popularity of result as determined by server open class MultiSourceGeocodingAggregator<T : GCResultInterface !>","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/#package-comskedgogeocodingagregator","text":"","title":"Package com.skedgo.geocoding.agregator"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/#types","text":"Name Summary GCAppResultInterface Information that the user saves in the app interface GCAppResultInterface : GCResultInterface GCBoundingBoxInterface interface GCBoundingBoxInterface GCFoursquareResultInterface interface GCFoursquareResultInterface : GCResultInterface GCGoogleResultInterface interface GCGoogleResultInterface : GCResultInterface GCQueryInterface interface GCQueryInterface GCResultInterface interface GCResultInterface GCSkedGoResultInterface interface GCSkedGoResultInterface : GCResultInterface MGAResultInterface this class represents a scored result, it could be single or have duplicates interface MGAResultInterface<T : GCResultInterface !> : Serializable MultiSourceGeocodingAggregator Scoring formulas Favourites: max(title, address) Search history: max(title, address) Regions: distance Address book: (title + address) / 2 Calendar: (title + address) / 2 SkedGo transit stops: popularity -> ((min(popularity, GOOD_SCORE)) / (GOOD_SCORE / 100)) * 2 SkedGo others: title Google: (max(title, address) * 3 + distance) / 4 Google Autocomplete: (title * 3) / 4 Foursquare: ((title * 3 + distance) / 4) * suburb Title score: score based on input string against the title of the result Address score: score based on input string against address of the result Distance score: score based on distance to center or provided region Suburb score: bonus score if result is a suburb Popularity score: score based on popularity of result as determined by server open class MultiSourceGeocodingAggregator<T : GCResultInterface !>","title":"Types"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCAppResultInterface GCAppResultInterface interface GCAppResultInterface : GCResultInterface Information that the user saves in the app Types Name Summary Source class Source Functions Name Summary getAppResultSource abstract fun getAppResultSource(): Source! getSubtitle abstract fun getSubtitle(): String ! isFavourite abstract fun isFavourite(): Boolean Inheritors Name Summary AppResultLocationAdapter class AppResultLocationAdapter : ResultLocationAdapter <TripGoPOI!>, GCAppResultInterface GCAppResult Represents the the minimum information we need to calculate the score for a result obtained from the information stored in the app by the user. open class GCAppResult : GCResult , GCAppResultInterface","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/#gcappresultinterface","text":"interface GCAppResultInterface : GCResultInterface Information that the user saves in the app","title":"GCAppResultInterface"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/#types","text":"Name Summary Source class Source","title":"Types"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/#functions","text":"Name Summary getAppResultSource abstract fun getAppResultSource(): Source! getSubtitle abstract fun getSubtitle(): String ! isFavourite abstract fun isFavourite(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/#inheritors","text":"Name Summary AppResultLocationAdapter class AppResultLocationAdapter : ResultLocationAdapter <TripGoPOI!>, GCAppResultInterface GCAppResult Represents the the minimum information we need to calculate the score for a result obtained from the information stored in the app by the user. open class GCAppResult : GCResult , GCAppResultInterface","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/get-app-result-source/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCAppResultInterface / getAppResultSource getAppResultSource abstract fun getAppResultSource(): Source!","title":"Get app result source"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/get-app-result-source/#getappresultsource","text":"abstract fun getAppResultSource(): Source!","title":"getAppResultSource"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/get-subtitle/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCAppResultInterface / getSubtitle getSubtitle abstract fun getSubtitle(): String !","title":"Get subtitle"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/get-subtitle/#getsubtitle","text":"abstract fun getSubtitle(): String !","title":"getSubtitle"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/is-favourite/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCAppResultInterface / isFavourite isFavourite abstract fun isFavourite(): Boolean","title":"Is favourite"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/is-favourite/#isfavourite","text":"abstract fun isFavourite(): Boolean","title":"isFavourite"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/-source/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCAppResultInterface / Source Source class Source Enum Values Name Summary AddressBook Regions Calendar History","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/-source/#source","text":"class Source","title":"Source"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/-source/#enum-values","text":"Name Summary AddressBook Regions Calendar History","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/-source/-address-book/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCAppResultInterface / Source / AddressBook AddressBook AddressBook","title":" address book"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/-source/-address-book/#addressbook","text":"AddressBook","title":"AddressBook"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/-source/-calendar/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCAppResultInterface / Source / Calendar Calendar Calendar","title":" calendar"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/-source/-calendar/#calendar","text":"Calendar","title":"Calendar"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/-source/-history/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCAppResultInterface / Source / History History History","title":" history"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/-source/-history/#history","text":"History","title":"History"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/-source/-regions/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCAppResultInterface / Source / Regions Regions Regions","title":" regions"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-app-result-interface/-source/-regions/#regions","text":"Regions","title":"Regions"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCBoundingBoxInterface GCBoundingBoxInterface interface GCBoundingBoxInterface Functions Name Summary getLatN abstract fun getLatN(): Double getLatS abstract fun getLatS(): Double getLngE abstract fun getLngE(): Double getLngW abstract fun getLngW(): Double Inheritors Name Summary GCBoundingBox open class GCBoundingBox : GCBoundingBoxInterface","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/#gcboundingboxinterface","text":"interface GCBoundingBoxInterface","title":"GCBoundingBoxInterface"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/#functions","text":"Name Summary getLatN abstract fun getLatN(): Double getLatS abstract fun getLatS(): Double getLngE abstract fun getLngE(): Double getLngW abstract fun getLngW(): Double","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/#inheritors","text":"Name Summary GCBoundingBox open class GCBoundingBox : GCBoundingBoxInterface","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/get-lat-n/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCBoundingBoxInterface / getLatN getLatN abstract fun getLatN(): Double","title":"Get lat n"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/get-lat-n/#getlatn","text":"abstract fun getLatN(): Double","title":"getLatN"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/get-lat-s/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCBoundingBoxInterface / getLatS getLatS abstract fun getLatS(): Double","title":"Get lat s"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/get-lat-s/#getlats","text":"abstract fun getLatS(): Double","title":"getLatS"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/get-lng-e/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCBoundingBoxInterface / getLngE getLngE abstract fun getLngE(): Double","title":"Get lng e"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/get-lng-e/#getlnge","text":"abstract fun getLngE(): Double","title":"getLngE"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/get-lng-w/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCBoundingBoxInterface / getLngW getLngW abstract fun getLngW(): Double","title":"Get lng w"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-bounding-box-interface/get-lng-w/#getlngw","text":"abstract fun getLngW(): Double","title":"getLngW"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-foursquare-result-interface/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCFoursquareResultInterface GCFoursquareResultInterface interface GCFoursquareResultInterface : GCResultInterface Functions Name Summary getCategories abstract fun getCategories(): MutableList < String !>! isVerified abstract fun isVerified(): Boolean Inheritors Name Summary FoursquareResultLocationAdapter class FoursquareResultLocationAdapter : GCFoursquareResultInterface , ResultLocationAdapter <TripGoPOI!> GCFoursquareResult Represents the minimum information we need to calculate the score for a foursquare result. open class GCFoursquareResult : GCResult , GCFoursquareResultInterface","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-foursquare-result-interface/#gcfoursquareresultinterface","text":"interface GCFoursquareResultInterface : GCResultInterface","title":"GCFoursquareResultInterface"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-foursquare-result-interface/#functions","text":"Name Summary getCategories abstract fun getCategories(): MutableList < String !>! isVerified abstract fun isVerified(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-foursquare-result-interface/#inheritors","text":"Name Summary FoursquareResultLocationAdapter class FoursquareResultLocationAdapter : GCFoursquareResultInterface , ResultLocationAdapter <TripGoPOI!> GCFoursquareResult Represents the minimum information we need to calculate the score for a foursquare result. open class GCFoursquareResult : GCResult , GCFoursquareResultInterface","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-foursquare-result-interface/get-categories/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCFoursquareResultInterface / getCategories getCategories abstract fun getCategories(): MutableList < String !>!","title":"Get categories"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-foursquare-result-interface/get-categories/#getcategories","text":"abstract fun getCategories(): MutableList < String !>!","title":"getCategories"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-foursquare-result-interface/is-verified/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCFoursquareResultInterface / isVerified isVerified abstract fun isVerified(): Boolean","title":"Is verified"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-foursquare-result-interface/is-verified/#isverified","text":"abstract fun isVerified(): Boolean","title":"isVerified"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-google-result-interface/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCGoogleResultInterface GCGoogleResultInterface interface GCGoogleResultInterface : GCResultInterface Functions Name Summary getAddress abstract fun getAddress(): String ! Inheritors Name Summary GCGoogleResult open class GCGoogleResult : GCResult , GCGoogleResultInterface GoogleResultLocationAdapter class GoogleResultLocationAdapter : GCGoogleResultInterface , ResultLocationAdapter <WithoutLocation!>","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-google-result-interface/#gcgoogleresultinterface","text":"interface GCGoogleResultInterface : GCResultInterface","title":"GCGoogleResultInterface"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-google-result-interface/#functions","text":"Name Summary getAddress abstract fun getAddress(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-google-result-interface/#inheritors","text":"Name Summary GCGoogleResult open class GCGoogleResult : GCResult , GCGoogleResultInterface GoogleResultLocationAdapter class GoogleResultLocationAdapter : GCGoogleResultInterface , ResultLocationAdapter <WithoutLocation!>","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-google-result-interface/get-address/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCGoogleResultInterface / getAddress getAddress abstract fun getAddress(): String !","title":"Get address"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-google-result-interface/get-address/#getaddress","text":"abstract fun getAddress(): String !","title":"getAddress"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-query-interface/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCQueryInterface GCQueryInterface interface GCQueryInterface Functions Name Summary getBounds abstract fun getBounds(): GCBoundingBoxInterface getQueryText abstract fun getQueryText(): String Inheritors Name Summary GCQuery open class GCQuery : GCQueryInterface","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-query-interface/#gcqueryinterface","text":"interface GCQueryInterface","title":"GCQueryInterface"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-query-interface/#functions","text":"Name Summary getBounds abstract fun getBounds(): GCBoundingBoxInterface getQueryText abstract fun getQueryText(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-query-interface/#inheritors","text":"Name Summary GCQuery open class GCQuery : GCQueryInterface","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-query-interface/get-bounds/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCQueryInterface / getBounds getBounds @NotNull abstract fun getBounds(): GCBoundingBoxInterface","title":"Get bounds"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-query-interface/get-bounds/#getbounds","text":"@NotNull abstract fun getBounds(): GCBoundingBoxInterface","title":"getBounds"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-query-interface/get-query-text/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCQueryInterface / getQueryText getQueryText @NotNull abstract fun getQueryText(): String","title":"Get query text"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-query-interface/get-query-text/#getquerytext","text":"@NotNull abstract fun getQueryText(): String","title":"getQueryText"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-result-interface/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCResultInterface GCResultInterface interface GCResultInterface Functions Name Summary getLat abstract fun getLat(): Double ! getLng abstract fun getLng(): Double ! getName abstract fun getName(): String Inheritors Name Summary GCAppResultInterface Information that the user saves in the app interface GCAppResultInterface : GCResultInterface GCFoursquareResultInterface interface GCFoursquareResultInterface : GCResultInterface GCGoogleResultInterface interface GCGoogleResultInterface : GCResultInterface GCResult open class GCResult : GCResultInterface GCSkedGoResultInterface interface GCSkedGoResultInterface : GCResultInterface","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-result-interface/#gcresultinterface","text":"interface GCResultInterface","title":"GCResultInterface"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-result-interface/#functions","text":"Name Summary getLat abstract fun getLat(): Double ! getLng abstract fun getLng(): Double ! getName abstract fun getName(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-result-interface/#inheritors","text":"Name Summary GCAppResultInterface Information that the user saves in the app interface GCAppResultInterface : GCResultInterface GCFoursquareResultInterface interface GCFoursquareResultInterface : GCResultInterface GCGoogleResultInterface interface GCGoogleResultInterface : GCResultInterface GCResult open class GCResult : GCResultInterface GCSkedGoResultInterface interface GCSkedGoResultInterface : GCResultInterface","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-result-interface/get-lat/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCResultInterface / getLat getLat abstract fun getLat(): Double !","title":"Get lat"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-result-interface/get-lat/#getlat","text":"abstract fun getLat(): Double !","title":"getLat"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-result-interface/get-lng/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCResultInterface / getLng getLng abstract fun getLng(): Double !","title":"Get lng"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-result-interface/get-lng/#getlng","text":"abstract fun getLng(): Double !","title":"getLng"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-result-interface/get-name/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCResultInterface / getName getName @NotNull abstract fun getName(): String","title":"Get name"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-result-interface/get-name/#getname","text":"@NotNull abstract fun getName(): String","title":"getName"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-sked-go-result-interface/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCSkedGoResultInterface GCSkedGoResultInterface interface GCSkedGoResultInterface : GCResultInterface Functions Name Summary getPopularity abstract fun getPopularity(): Int getResultClass abstract fun getResultClass(): String ! Inheritors Name Summary GCSkedgoResult open class GCSkedgoResult : GCResult , GCSkedGoResultInterface SkedgoResultLocationAdapter class SkedgoResultLocationAdapter : GCSkedGoResultInterface , ResultLocationAdapter <TripGoPOI!>","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-sked-go-result-interface/#gcskedgoresultinterface","text":"interface GCSkedGoResultInterface : GCResultInterface","title":"GCSkedGoResultInterface"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-sked-go-result-interface/#functions","text":"Name Summary getPopularity abstract fun getPopularity(): Int getResultClass abstract fun getResultClass(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-sked-go-result-interface/#inheritors","text":"Name Summary GCSkedgoResult open class GCSkedgoResult : GCResult , GCSkedGoResultInterface SkedgoResultLocationAdapter class SkedgoResultLocationAdapter : GCSkedGoResultInterface , ResultLocationAdapter <TripGoPOI!>","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-sked-go-result-interface/get-popularity/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCSkedGoResultInterface / getPopularity getPopularity abstract fun getPopularity(): Int","title":"Get popularity"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-sked-go-result-interface/get-popularity/#getpopularity","text":"abstract fun getPopularity(): Int","title":"getPopularity"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-sked-go-result-interface/get-result-class/","text":"tripkit-android / com.skedgo.geocoding.agregator / GCSkedGoResultInterface / getResultClass getResultClass abstract fun getResultClass(): String !","title":"Get result class"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-g-c-sked-go-result-interface/get-result-class/#getresultclass","text":"abstract fun getResultClass(): String !","title":"getResultClass"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/","text":"tripkit-android / com.skedgo.geocoding.agregator / MGAResultInterface MGAResultInterface interface MGAResultInterface<T : GCResultInterface !> : Serializable this class represents a scored result, it could be single or have duplicates Functions Name Summary getAddressScore abstract fun getAddressScore(): Int getClassRepresentative abstract fun getClassRepresentative(): MGAResultInterface <T>! getDistanceScore abstract fun getDistanceScore(): Int getDuplicates abstract fun getDuplicates(): MutableList < MGAResultInterface <T>!>! getNameScore abstract fun getNameScore(): Int getPopularityScore abstract fun getPopularityScore(): Int getResult abstract fun getResult(): T getScore abstract fun getScore(): Int Inheritors Name Summary GroupScoringResult scored result with duplicates open class GroupScoringResult<T : GCResultInterface !> : MGAResultInterface <T> ScoringResult scored single result - without duplicates open class ScoringResult<T : GCResultInterface !> : MGAResultInterface <T>","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/#mgaresultinterface","text":"interface MGAResultInterface<T : GCResultInterface !> : Serializable this class represents a scored result, it could be single or have duplicates","title":"MGAResultInterface"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/#functions","text":"Name Summary getAddressScore abstract fun getAddressScore(): Int getClassRepresentative abstract fun getClassRepresentative(): MGAResultInterface <T>! getDistanceScore abstract fun getDistanceScore(): Int getDuplicates abstract fun getDuplicates(): MutableList < MGAResultInterface <T>!>! getNameScore abstract fun getNameScore(): Int getPopularityScore abstract fun getPopularityScore(): Int getResult abstract fun getResult(): T getScore abstract fun getScore(): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/#inheritors","text":"Name Summary GroupScoringResult scored result with duplicates open class GroupScoringResult<T : GCResultInterface !> : MGAResultInterface <T> ScoringResult scored single result - without duplicates open class ScoringResult<T : GCResultInterface !> : MGAResultInterface <T>","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-address-score/","text":"tripkit-android / com.skedgo.geocoding.agregator / MGAResultInterface / getAddressScore getAddressScore abstract fun getAddressScore(): Int","title":"Get address score"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-address-score/#getaddressscore","text":"abstract fun getAddressScore(): Int","title":"getAddressScore"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-class-representative/","text":"tripkit-android / com.skedgo.geocoding.agregator / MGAResultInterface / getClassRepresentative getClassRepresentative abstract fun getClassRepresentative(): MGAResultInterface <T>!","title":"Get class representative"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-class-representative/#getclassrepresentative","text":"abstract fun getClassRepresentative(): MGAResultInterface <T>!","title":"getClassRepresentative"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-distance-score/","text":"tripkit-android / com.skedgo.geocoding.agregator / MGAResultInterface / getDistanceScore getDistanceScore abstract fun getDistanceScore(): Int","title":"Get distance score"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-distance-score/#getdistancescore","text":"abstract fun getDistanceScore(): Int","title":"getDistanceScore"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-duplicates/","text":"tripkit-android / com.skedgo.geocoding.agregator / MGAResultInterface / getDuplicates getDuplicates abstract fun getDuplicates(): MutableList < MGAResultInterface <T>!>!","title":"Get duplicates"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-duplicates/#getduplicates","text":"abstract fun getDuplicates(): MutableList < MGAResultInterface <T>!>!","title":"getDuplicates"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-name-score/","text":"tripkit-android / com.skedgo.geocoding.agregator / MGAResultInterface / getNameScore getNameScore abstract fun getNameScore(): Int","title":"Get name score"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-name-score/#getnamescore","text":"abstract fun getNameScore(): Int","title":"getNameScore"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-popularity-score/","text":"tripkit-android / com.skedgo.geocoding.agregator / MGAResultInterface / getPopularityScore getPopularityScore abstract fun getPopularityScore(): Int","title":"Get popularity score"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-popularity-score/#getpopularityscore","text":"abstract fun getPopularityScore(): Int","title":"getPopularityScore"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-result/","text":"tripkit-android / com.skedgo.geocoding.agregator / MGAResultInterface / getResult getResult abstract fun getResult(): T","title":"Get result"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-result/#getresult","text":"abstract fun getResult(): T","title":"getResult"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-score/","text":"tripkit-android / com.skedgo.geocoding.agregator / MGAResultInterface / getScore getScore abstract fun getScore(): Int","title":"Get score"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-m-g-a-result-interface/get-score/#getscore","text":"abstract fun getScore(): Int","title":"getScore"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-multi-source-geocoding-aggregator/","text":"tripkit-android / com.skedgo.geocoding.agregator / MultiSourceGeocodingAggregator MultiSourceGeocodingAggregator open class MultiSourceGeocodingAggregator<T : GCResultInterface !> Scoring formulas Favourites: max(title, address) Search history: max(title, address) Regions: distance Address book: (title + address) / 2 Calendar: (title + address) / 2 SkedGo transit stops: popularity -> ((min(popularity, GOOD_SCORE)) / (GOOD_SCORE / 100)) * 2 SkedGo others: title Google: (max(title, address) * 3 + distance) / 4 Google Autocomplete: (title * 3) / 4 Foursquare: ((title * 3 + distance) / 4) * suburb Title score: score based on input string against the title of the result Address score: score based on input string against address of the result Distance score: score based on distance to center or provided region Suburb score: bonus score if result is a suburb Popularity score: score based on popularity of result as determined by server Functions Name Summary aggregate open fun aggregate(userQuery: GCQueryInterface !, providersResults: MutableList < MutableList <T>!>!): MutableList < MGAResultInterface <T>!>! flattenAggregate open fun flattenAggregate(userQuery: GCQueryInterface !, providersResults: MutableList < MutableList <T>!>!): MutableList < GCResultInterface !>! getInstance open static fun getInstance(): MultiSourceGeocodingAggregator < GCResultInterface !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-multi-source-geocoding-aggregator/#multisourcegeocodingaggregator","text":"open class MultiSourceGeocodingAggregator<T : GCResultInterface !> Scoring formulas Favourites: max(title, address) Search history: max(title, address) Regions: distance Address book: (title + address) / 2 Calendar: (title + address) / 2 SkedGo transit stops: popularity -> ((min(popularity, GOOD_SCORE)) / (GOOD_SCORE / 100)) * 2 SkedGo others: title Google: (max(title, address) * 3 + distance) / 4 Google Autocomplete: (title * 3) / 4 Foursquare: ((title * 3 + distance) / 4) * suburb Title score: score based on input string against the title of the result Address score: score based on input string against address of the result Distance score: score based on distance to center or provided region Suburb score: bonus score if result is a suburb Popularity score: score based on popularity of result as determined by server","title":"MultiSourceGeocodingAggregator"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-multi-source-geocoding-aggregator/#functions","text":"Name Summary aggregate open fun aggregate(userQuery: GCQueryInterface !, providersResults: MutableList < MutableList <T>!>!): MutableList < MGAResultInterface <T>!>! flattenAggregate open fun flattenAggregate(userQuery: GCQueryInterface !, providersResults: MutableList < MutableList <T>!>!): MutableList < GCResultInterface !>! getInstance open static fun getInstance(): MultiSourceGeocodingAggregator < GCResultInterface !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-multi-source-geocoding-aggregator/aggregate/","text":"tripkit-android / com.skedgo.geocoding.agregator / MultiSourceGeocodingAggregator / aggregate aggregate open fun aggregate(userQuery: GCQueryInterface !, providersResults: MutableList < MutableList <T>!>!): MutableList < MGAResultInterface <T>!>!","title":"Aggregate"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-multi-source-geocoding-aggregator/aggregate/#aggregate","text":"open fun aggregate(userQuery: GCQueryInterface !, providersResults: MutableList < MutableList <T>!>!): MutableList < MGAResultInterface <T>!>!","title":"aggregate"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-multi-source-geocoding-aggregator/flatten-aggregate/","text":"tripkit-android / com.skedgo.geocoding.agregator / MultiSourceGeocodingAggregator / flattenAggregate flattenAggregate open fun flattenAggregate(userQuery: GCQueryInterface !, providersResults: MutableList < MutableList <T>!>!): MutableList < GCResultInterface !>!","title":"Flatten aggregate"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-multi-source-geocoding-aggregator/flatten-aggregate/#flattenaggregate","text":"open fun flattenAggregate(userQuery: GCQueryInterface !, providersResults: MutableList < MutableList <T>!>!): MutableList < GCResultInterface !>!","title":"flattenAggregate"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-multi-source-geocoding-aggregator/get-instance/","text":"tripkit-android / com.skedgo.geocoding.agregator / MultiSourceGeocodingAggregator / getInstance getInstance open static fun getInstance(): MultiSourceGeocodingAggregator < GCResultInterface !>!","title":"Get instance"},{"location":"tripkit-android/com.skedgo.geocoding.agregator/-multi-source-geocoding-aggregator/get-instance/#getinstance","text":"open static fun getInstance(): MultiSourceGeocodingAggregator < GCResultInterface !>!","title":"getInstance"},{"location":"tripkit-android/com.skedgo.rxtry/","text":"tripkit-android / com.skedgo.rxtry Package com.skedgo.rxtry Types Name Summary Failure data class Failure<T> : Try <T> Success data class Success<T> : Try <T> Try sealed class Try<T> Extensions for External Classes Name Summary io.reactivex.Observable io.reactivex.Single Functions Name Summary toTryObservable Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTryObservable(predicate: ( Throwable ) -> Boolean ): ObservableTransformer<T, Try <T>> Wraps any error from the upstream into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTryObservable(): ObservableTransformer<T, Try <T>> toTrySingle Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTrySingle(predicate: ( Throwable ) -> Boolean ): SingleTransformer<T, Try <T>> Wraps any error from the upstream into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTrySingle(): SingleTransformer<T, Try <T>>","title":"Index"},{"location":"tripkit-android/com.skedgo.rxtry/#package-comskedgorxtry","text":"","title":"Package com.skedgo.rxtry"},{"location":"tripkit-android/com.skedgo.rxtry/#types","text":"Name Summary Failure data class Failure<T> : Try <T> Success data class Success<T> : Try <T> Try sealed class Try<T>","title":"Types"},{"location":"tripkit-android/com.skedgo.rxtry/#extensions-for-external-classes","text":"Name Summary io.reactivex.Observable io.reactivex.Single","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.rxtry/#functions","text":"Name Summary toTryObservable Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTryObservable(predicate: ( Throwable ) -> Boolean ): ObservableTransformer<T, Try <T>> Wraps any error from the upstream into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTryObservable(): ObservableTransformer<T, Try <T>> toTrySingle Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTrySingle(predicate: ( Throwable ) -> Boolean ): SingleTransformer<T, Try <T>> Wraps any error from the upstream into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTrySingle(): SingleTransformer<T, Try <T>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.rxtry/-try/","text":"tripkit-android / com.skedgo.rxtry / Try Try sealed class Try<T> Inheritors Name Summary Failure data class Failure<T> : Try <T> Success data class Success<T> : Try <T>","title":" try"},{"location":"tripkit-android/com.skedgo.rxtry/-try/#try","text":"sealed class Try<T>","title":"Try"},{"location":"tripkit-android/com.skedgo.rxtry/-try/#inheritors","text":"Name Summary Failure data class Failure<T> : Try <T> Success data class Success<T> : Try <T>","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.rxtry/to-try-observable/","text":"tripkit-android / com.skedgo.rxtry / toTryObservable toTryObservable fun <T> toTryObservable(predicate: ( Throwable ) -> Boolean ): ObservableTransformer<T, Try <T>> Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTryObservable(): ObservableTransformer<T, Try <T>> Wraps any error from the upstream into Failure while events emitted via rx.Observer.onNext will be wrapped into Success .","title":"To try observable"},{"location":"tripkit-android/com.skedgo.rxtry/to-try-observable/#totryobservable","text":"fun <T> toTryObservable(predicate: ( Throwable ) -> Boolean ): ObservableTransformer<T, Try <T>> Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTryObservable(): ObservableTransformer<T, Try <T>> Wraps any error from the upstream into Failure while events emitted via rx.Observer.onNext will be wrapped into Success .","title":"toTryObservable"},{"location":"tripkit-android/com.skedgo.rxtry/to-try-single/","text":"tripkit-android / com.skedgo.rxtry / toTrySingle toTrySingle fun <T> toTrySingle(predicate: ( Throwable ) -> Boolean ): SingleTransformer<T, Try <T>> Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTrySingle(): SingleTransformer<T, Try <T>> Wraps any error from the upstream into Failure while events emitted via rx.Observer.onNext will be wrapped into Success .","title":"To try single"},{"location":"tripkit-android/com.skedgo.rxtry/to-try-single/#totrysingle","text":"fun <T> toTrySingle(predicate: ( Throwable ) -> Boolean ): SingleTransformer<T, Try <T>> Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> toTrySingle(): SingleTransformer<T, Try <T>> Wraps any error from the upstream into Failure while events emitted via rx.Observer.onNext will be wrapped into Success .","title":"toTrySingle"},{"location":"tripkit-android/com.skedgo.rxtry/-failure/","text":"tripkit-android / com.skedgo.rxtry / Failure Failure data class Failure<T> : Try <T> Constructors Name Summary <init> Failure(error: Throwable ) Functions Name Summary invoke operator fun invoke(): Throwable toString fun toString(): String","title":"Index"},{"location":"tripkit-android/com.skedgo.rxtry/-failure/#failure","text":"data class Failure<T> : Try <T>","title":"Failure"},{"location":"tripkit-android/com.skedgo.rxtry/-failure/#constructors","text":"Name Summary <init> Failure(error: Throwable )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.rxtry/-failure/#functions","text":"Name Summary invoke operator fun invoke(): Throwable toString fun toString(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.rxtry/-failure/-init-/","text":"tripkit-android / com.skedgo.rxtry / Failure / <init> <init> Failure(error: Throwable )","title":" init "},{"location":"tripkit-android/com.skedgo.rxtry/-failure/-init-/#init","text":"Failure(error: Throwable )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.rxtry/-failure/invoke/","text":"tripkit-android / com.skedgo.rxtry / Failure / invoke invoke operator fun invoke(): Throwable","title":"Invoke"},{"location":"tripkit-android/com.skedgo.rxtry/-failure/invoke/#invoke","text":"operator fun invoke(): Throwable","title":"invoke"},{"location":"tripkit-android/com.skedgo.rxtry/-failure/to-string/","text":"tripkit-android / com.skedgo.rxtry / Failure / toString toString fun toString(): String","title":"To string"},{"location":"tripkit-android/com.skedgo.rxtry/-failure/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"tripkit-android/com.skedgo.rxtry/-success/","text":"tripkit-android / com.skedgo.rxtry / Success Success data class Success<T> : Try <T> Constructors Name Summary <init> Success(value: T) Functions Name Summary invoke operator fun invoke(): T toString fun toString(): String","title":"Index"},{"location":"tripkit-android/com.skedgo.rxtry/-success/#success","text":"data class Success<T> : Try <T>","title":"Success"},{"location":"tripkit-android/com.skedgo.rxtry/-success/#constructors","text":"Name Summary <init> Success(value: T)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.rxtry/-success/#functions","text":"Name Summary invoke operator fun invoke(): T toString fun toString(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.rxtry/-success/-init-/","text":"tripkit-android / com.skedgo.rxtry / Success / <init> <init> Success(value: T)","title":" init "},{"location":"tripkit-android/com.skedgo.rxtry/-success/-init-/#init","text":"Success(value: T)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.rxtry/-success/invoke/","text":"tripkit-android / com.skedgo.rxtry / Success / invoke invoke operator fun invoke(): T","title":"Invoke"},{"location":"tripkit-android/com.skedgo.rxtry/-success/invoke/#invoke","text":"operator fun invoke(): T","title":"invoke"},{"location":"tripkit-android/com.skedgo.rxtry/-success/to-string/","text":"tripkit-android / com.skedgo.rxtry / Success / toString toString fun toString(): String","title":"To string"},{"location":"tripkit-android/com.skedgo.rxtry/-success/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"tripkit-android/com.skedgo.rxtry/io.reactivex.-observable/","text":"tripkit-android / com.skedgo.rxtry / io.reactivex.Observable Extensions for io.reactivex.Observable Name Summary toTry Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> Observable<T>.toTry(predicate: ( Throwable ) -> Boolean = { true }): Observable< Try <T>>","title":"Index"},{"location":"tripkit-android/com.skedgo.rxtry/io.reactivex.-observable/#extensions-for-ioreactivexobservable","text":"Name Summary toTry Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> Observable<T>.toTry(predicate: ( Throwable ) -> Boolean = { true }): Observable< Try <T>>","title":"Extensions for io.reactivex.Observable"},{"location":"tripkit-android/com.skedgo.rxtry/io.reactivex.-observable/to-try/","text":"tripkit-android / com.skedgo.rxtry / io.reactivex.Observable / toTry toTry fun <T> Observable<T>.toTry(predicate: ( Throwable ) -> Boolean = { true }): Observable< Try <T>> Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success .","title":"To try"},{"location":"tripkit-android/com.skedgo.rxtry/io.reactivex.-observable/to-try/#totry","text":"fun <T> Observable<T>.toTry(predicate: ( Throwable ) -> Boolean = { true }): Observable< Try <T>> Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success .","title":"toTry"},{"location":"tripkit-android/com.skedgo.rxtry/io.reactivex.-single/","text":"tripkit-android / com.skedgo.rxtry / io.reactivex.Single Extensions for io.reactivex.Single Name Summary toTry Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> Single<T>.toTry(predicate: ( Throwable ) -> Boolean = { true }): Single< Try <T>>","title":"Index"},{"location":"tripkit-android/com.skedgo.rxtry/io.reactivex.-single/#extensions-for-ioreactivexsingle","text":"Name Summary toTry Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success . fun <T> Single<T>.toTry(predicate: ( Throwable ) -> Boolean = { true }): Single< Try <T>>","title":"Extensions for io.reactivex.Single"},{"location":"tripkit-android/com.skedgo.rxtry/io.reactivex.-single/to-try/","text":"tripkit-android / com.skedgo.rxtry / io.reactivex.Single / toTry toTry fun <T> Single<T>.toTry(predicate: ( Throwable ) -> Boolean = { true }): Single< Try <T>> Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success .","title":"To try"},{"location":"tripkit-android/com.skedgo.rxtry/io.reactivex.-single/to-try/#totry","text":"fun <T> Single<T>.toTry(predicate: ( Throwable ) -> Boolean = { true }): Single< Try <T>> Wraps any error from the upstream which matches predicate into Failure while events emitted via rx.Observer.onNext will be wrapped into Success .","title":"toTry"},{"location":"tripkit-android/com.skedgo.tripkit/","text":"tripkit-android / com.skedgo.tripkit Package com.skedgo.tripkit Types Name Summary AndroidGeocoder class AndroidGeocoder : ReverseGeocodable BookingAction abstract class BookingAction CarPark abstract class CarPark Co2Preferences interface Co2Preferences Configs abstract class Configs DefaultCo2Preferences class DefaultCo2Preferences : Co2Preferences DefaultTripPreferences class DefaultTripPreferences : TripPreferences ExternalActionParams abstract class ExternalActionParams LineSegment Represents a segment of a polyline denoting a `[ Trip ](../com.skedgo.tripkit.routing/-trip/index.md). class LineSegment` LocationInfo interface LocationInfo LocationInfoDetails abstract class LocationInfoDetails LocationInfoService interface LocationInfoService MainModule open class MainModule PeriodicRealTimeTripUpdateReceiver abstract class PeriodicRealTimeTripUpdateReceiver : RealTimeTripUpdateReceiver QueryGenerator interface QueryGenerator : BiFunction< Query , TransportModeFilter , Observable< List < Query >>> RealTimeTripUpdateReceiver interface RealTimeTripUpdateReceiver ServiceApi interface ServiceApi ServiceExtras class ServiceExtras ServiceResponse interface ServiceResponse TemporaryUrlApi Handles downloading trip via `[ Trip#getTemporaryURL() ](../com.skedgo.tripkit.routing/-trip/get-temporary-u-r-l.md). interface TemporaryUrlApi` TransitModeFilter interface TransitModeFilter TransitService interface TransitService TransportModeFilter interface TransportModeFilter TripPreferences interface TripPreferences TripRegionResolver abstract class TripRegionResolver : BiFunction< Location !, Location !, Observable< Region !>!> TripUpdater interface TripUpdater Exceptions Name Summary NoConnectionError class NoConnectionError : RoutingError OutOfRegionsException class OutOfRegionsException : RuntimeException RoutingError sealed class RoutingError : RuntimeException RoutingUserError class RoutingUserError : RoutingError","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/#package-comskedgotripkit","text":"","title":"Package com.skedgo.tripkit"},{"location":"tripkit-android/com.skedgo.tripkit/#types","text":"Name Summary AndroidGeocoder class AndroidGeocoder : ReverseGeocodable BookingAction abstract class BookingAction CarPark abstract class CarPark Co2Preferences interface Co2Preferences Configs abstract class Configs DefaultCo2Preferences class DefaultCo2Preferences : Co2Preferences DefaultTripPreferences class DefaultTripPreferences : TripPreferences ExternalActionParams abstract class ExternalActionParams LineSegment Represents a segment of a polyline denoting a `[ Trip ](../com.skedgo.tripkit.routing/-trip/index.md). class LineSegment` LocationInfo interface LocationInfo LocationInfoDetails abstract class LocationInfoDetails LocationInfoService interface LocationInfoService MainModule open class MainModule PeriodicRealTimeTripUpdateReceiver abstract class PeriodicRealTimeTripUpdateReceiver : RealTimeTripUpdateReceiver QueryGenerator interface QueryGenerator : BiFunction< Query , TransportModeFilter , Observable< List < Query >>> RealTimeTripUpdateReceiver interface RealTimeTripUpdateReceiver ServiceApi interface ServiceApi ServiceExtras class ServiceExtras ServiceResponse interface ServiceResponse TemporaryUrlApi Handles downloading trip via `[ Trip#getTemporaryURL() ](../com.skedgo.tripkit.routing/-trip/get-temporary-u-r-l.md). interface TemporaryUrlApi` TransitModeFilter interface TransitModeFilter TransitService interface TransitService TransportModeFilter interface TransportModeFilter TripPreferences interface TripPreferences TripRegionResolver abstract class TripRegionResolver : BiFunction< Location !, Location !, Observable< Region !>!> TripUpdater interface TripUpdater","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit/#exceptions","text":"Name Summary NoConnectionError class NoConnectionError : RoutingError OutOfRegionsException class OutOfRegionsException : RuntimeException RoutingError sealed class RoutingError : RuntimeException RoutingUserError class RoutingUserError : RoutingError","title":"Exceptions"},{"location":"tripkit-android/com.skedgo.tripkit/-query-generator/","text":"tripkit-android / com.skedgo.tripkit / QueryGenerator QueryGenerator interface QueryGenerator : BiFunction< Query , TransportModeFilter , Observable<@JvmSuppressWildcards List < Query >>>","title":" query generator"},{"location":"tripkit-android/com.skedgo.tripkit/-query-generator/#querygenerator","text":"interface QueryGenerator : BiFunction< Query , TransportModeFilter , Observable<@JvmSuppressWildcards List < Query >>>","title":"QueryGenerator"},{"location":"tripkit-android/com.skedgo.tripkit/-routing-error/","text":"tripkit-android / com.skedgo.tripkit / RoutingError RoutingError sealed class RoutingError : RuntimeException Inheritors Name Summary NoConnectionError class NoConnectionError : RoutingError RoutingUserError class RoutingUserError : RoutingError","title":" routing error"},{"location":"tripkit-android/com.skedgo.tripkit/-routing-error/#routingerror","text":"sealed class RoutingError : RuntimeException","title":"RoutingError"},{"location":"tripkit-android/com.skedgo.tripkit/-routing-error/#inheritors","text":"Name Summary NoConnectionError class NoConnectionError : RoutingError RoutingUserError class RoutingUserError : RoutingError","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit/-android-geocoder/","text":"tripkit-android / com.skedgo.tripkit / AndroidGeocoder AndroidGeocoder class AndroidGeocoder : ReverseGeocodable Constructors Name Summary <init> AndroidGeocoder(context: Context) Functions Name Summary getAddress fun getAddress(latitude: Double , longitude: Double ): Observable< String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-android-geocoder/#androidgeocoder","text":"class AndroidGeocoder : ReverseGeocodable","title":"AndroidGeocoder"},{"location":"tripkit-android/com.skedgo.tripkit/-android-geocoder/#constructors","text":"Name Summary <init> AndroidGeocoder(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-android-geocoder/#functions","text":"Name Summary getAddress fun getAddress(latitude: Double , longitude: Double ): Observable< String >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-android-geocoder/-init-/","text":"tripkit-android / com.skedgo.tripkit / AndroidGeocoder / <init> <init> AndroidGeocoder(context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-android-geocoder/-init-/#init","text":"AndroidGeocoder(context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-android-geocoder/get-address/","text":"tripkit-android / com.skedgo.tripkit / AndroidGeocoder / getAddress getAddress fun getAddress(latitude: Double , longitude: Double ): Observable< String >","title":"Get address"},{"location":"tripkit-android/com.skedgo.tripkit/-android-geocoder/get-address/#getaddress","text":"fun getAddress(latitude: Double , longitude: Double ): Observable< String >","title":"getAddress"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/","text":"tripkit-android / com.skedgo.tripkit / BookingAction BookingAction @Immutable abstract class BookingAction Types Name Summary Builder interface Builder Constructors Name Summary <init> BookingAction() Functions Name Summary bookingProvider abstract fun bookingProvider(): Int builder open static fun builder(): Builder! data abstract fun data(): Intent! hasApp abstract fun hasApp(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/#bookingaction","text":"@Immutable abstract class BookingAction","title":"BookingAction"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/#types","text":"Name Summary Builder interface Builder","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/#constructors","text":"Name Summary <init> BookingAction()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/#functions","text":"Name Summary bookingProvider abstract fun bookingProvider(): Int builder open static fun builder(): Builder! data abstract fun data(): Intent! hasApp abstract fun hasApp(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-init-/","text":"tripkit-android / com.skedgo.tripkit / BookingAction / <init> <init> BookingAction()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-init-/#init","text":"BookingAction()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/booking-provider/","text":"tripkit-android / com.skedgo.tripkit / BookingAction / bookingProvider bookingProvider abstract fun bookingProvider(): Int","title":"Booking provider"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/booking-provider/#bookingprovider","text":"abstract fun bookingProvider(): Int","title":"bookingProvider"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/builder/","text":"tripkit-android / com.skedgo.tripkit / BookingAction / builder builder open static fun builder(): Builder!","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/builder/#builder","text":"open static fun builder(): Builder!","title":"builder"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/data/","text":"tripkit-android / com.skedgo.tripkit / BookingAction / data data abstract fun data(): Intent!","title":"Data"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/data/#data","text":"abstract fun data(): Intent!","title":"data"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/has-app/","text":"tripkit-android / com.skedgo.tripkit / BookingAction / hasApp hasApp abstract fun hasApp(): Boolean","title":"Has app"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/has-app/#hasapp","text":"abstract fun hasApp(): Boolean","title":"hasApp"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-builder/","text":"tripkit-android / com.skedgo.tripkit / BookingAction / Builder Builder interface Builder Functions Name Summary bookingProvider abstract fun bookingProvider(bookingProvider: Int ): Builder! build abstract fun build(): BookingAction ! data abstract fun data(data: Intent!): Builder! hasApp abstract fun hasApp(hasApp: Boolean ): Builder!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-builder/#builder","text":"interface Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-builder/#functions","text":"Name Summary bookingProvider abstract fun bookingProvider(bookingProvider: Int ): Builder! build abstract fun build(): BookingAction ! data abstract fun data(data: Intent!): Builder! hasApp abstract fun hasApp(hasApp: Boolean ): Builder!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-builder/booking-provider/","text":"tripkit-android / com.skedgo.tripkit / BookingAction / Builder / bookingProvider bookingProvider abstract fun bookingProvider(bookingProvider: Int ): Builder!","title":"Booking provider"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-builder/booking-provider/#bookingprovider","text":"abstract fun bookingProvider(bookingProvider: Int ): Builder!","title":"bookingProvider"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-builder/build/","text":"tripkit-android / com.skedgo.tripkit / BookingAction / Builder / build build abstract fun build(): BookingAction !","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-builder/build/#build","text":"abstract fun build(): BookingAction !","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-builder/data/","text":"tripkit-android / com.skedgo.tripkit / BookingAction / Builder / data data abstract fun data(data: Intent!): Builder!","title":"Data"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-builder/data/#data","text":"abstract fun data(data: Intent!): Builder!","title":"data"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-builder/has-app/","text":"tripkit-android / com.skedgo.tripkit / BookingAction / Builder / hasApp hasApp abstract fun hasApp(hasApp: Boolean ): Builder!","title":"Has app"},{"location":"tripkit-android/com.skedgo.tripkit/-booking-action/-builder/has-app/#hasapp","text":"abstract fun hasApp(hasApp: Boolean ): Builder!","title":"hasApp"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/","text":"tripkit-android / com.skedgo.tripkit / CarPark CarPark @TypeAdapters @Immutable abstract class CarPark Constructors Name Summary <init> CarPark() Functions Name Summary availableSpaces abstract fun availableSpaces(): Int identifier abstract fun identifier(): String ! lastUpdate abstract fun lastUpdate(): Long name abstract fun name(): String ! totalSpaces abstract fun totalSpaces(): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/#carpark","text":"@TypeAdapters @Immutable abstract class CarPark","title":"CarPark"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/#constructors","text":"Name Summary <init> CarPark()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/#functions","text":"Name Summary availableSpaces abstract fun availableSpaces(): Int identifier abstract fun identifier(): String ! lastUpdate abstract fun lastUpdate(): Long name abstract fun name(): String ! totalSpaces abstract fun totalSpaces(): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/-init-/","text":"tripkit-android / com.skedgo.tripkit / CarPark / <init> <init> CarPark()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/-init-/#init","text":"CarPark()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/available-spaces/","text":"tripkit-android / com.skedgo.tripkit / CarPark / availableSpaces availableSpaces abstract fun availableSpaces(): Int","title":"Available spaces"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/available-spaces/#availablespaces","text":"abstract fun availableSpaces(): Int","title":"availableSpaces"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/identifier/","text":"tripkit-android / com.skedgo.tripkit / CarPark / identifier identifier abstract fun identifier(): String !","title":"Identifier"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/identifier/#identifier","text":"abstract fun identifier(): String !","title":"identifier"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/last-update/","text":"tripkit-android / com.skedgo.tripkit / CarPark / lastUpdate lastUpdate abstract fun lastUpdate(): Long","title":"Last update"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/last-update/#lastupdate","text":"abstract fun lastUpdate(): Long","title":"lastUpdate"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/name/","text":"tripkit-android / com.skedgo.tripkit / CarPark / name name abstract fun name(): String !","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/name/#name","text":"abstract fun name(): String !","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/total-spaces/","text":"tripkit-android / com.skedgo.tripkit / CarPark / totalSpaces totalSpaces abstract fun totalSpaces(): Int","title":"Total spaces"},{"location":"tripkit-android/com.skedgo.tripkit/-car-park/total-spaces/#totalspaces","text":"abstract fun totalSpaces(): Int","title":"totalSpaces"},{"location":"tripkit-android/com.skedgo.tripkit/-co2-preferences/","text":"tripkit-android / com.skedgo.tripkit / Co2Preferences Co2Preferences interface Co2Preferences Functions Name Summary getCo2Profile abstract fun getCo2Profile(): MutableMap < String !, Float !> setEmissions abstract fun setEmissions(modeId: String , gramsCO2PerKm: Float ): Unit Inheritors Name Summary DefaultCo2Preferences class DefaultCo2Preferences : Co2Preferences","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-co2-preferences/#co2preferences","text":"interface Co2Preferences","title":"Co2Preferences"},{"location":"tripkit-android/com.skedgo.tripkit/-co2-preferences/#functions","text":"Name Summary getCo2Profile abstract fun getCo2Profile(): MutableMap < String !, Float !> setEmissions abstract fun setEmissions(modeId: String , gramsCO2PerKm: Float ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-co2-preferences/#inheritors","text":"Name Summary DefaultCo2Preferences class DefaultCo2Preferences : Co2Preferences","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit/-co2-preferences/get-co2-profile/","text":"tripkit-android / com.skedgo.tripkit / Co2Preferences / getCo2Profile getCo2Profile @NonNull abstract fun getCo2Profile(): MutableMap < String !, Float !> Return MutableMap < String !, Float !>: An immutable map having key as mode identifier for which to apply emissions, and its value is emissions for the supplied mode identifier in grams of CO2 per kilometre.","title":"Get co2 profile"},{"location":"tripkit-android/com.skedgo.tripkit/-co2-preferences/get-co2-profile/#getco2profile","text":"@NonNull abstract fun getCo2Profile(): MutableMap < String !, Float !> Return MutableMap < String !, Float !>: An immutable map having key as mode identifier for which to apply emissions, and its value is emissions for the supplied mode identifier in grams of CO2 per kilometre.","title":"getCo2Profile"},{"location":"tripkit-android/com.skedgo.tripkit/-co2-preferences/set-emissions/","text":"tripkit-android / com.skedgo.tripkit / Co2Preferences / setEmissions setEmissions abstract fun setEmissions(@NonNull modeId: String , gramsCO2PerKm: Float ): Unit Parameters modeId - String : Mode identifier for which to apply these emissions. gramsCO2PerKm - Float : Emissions for supplied mode identifier in grams of CO2 per kilometre.","title":"Set emissions"},{"location":"tripkit-android/com.skedgo.tripkit/-co2-preferences/set-emissions/#setemissions","text":"abstract fun setEmissions(@NonNull modeId: String , gramsCO2PerKm: Float ): Unit","title":"setEmissions"},{"location":"tripkit-android/com.skedgo.tripkit/-co2-preferences/set-emissions/#parameters","text":"modeId - String : Mode identifier for which to apply these emissions. gramsCO2PerKm - Float : Emissions for supplied mode identifier in grams of CO2 per kilometre.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/","text":"tripkit-android / com.skedgo.tripkit / Configs Configs @Immutable abstract class Configs Constructors Name Summary <init> Configs() Functions Name Summary baseUrlAdapterFactory abstract fun baseUrlAdapterFactory(): Callable < Callable < String !>!>? builder open static fun builder(): Builder! co2PreferencesFactory abstract fun co2PreferencesFactory(): Callable < Co2Preferences !>? context abstract fun context(): Context! debuggable open fun debuggable(): Boolean errorHandler abstract fun errorHandler(): Consumer< Throwable !>? extraQueryMapProvider abstract fun extraQueryMapProvider(): ExtraQueryMapProvider ? isUuidOptedOut open fun isUuidOptedOut(): Boolean key abstract fun key(): Callable < Key !>! tripPreferencesFactory abstract fun tripPreferencesFactory(): Callable < TripPreferences !>? userTokenProvider abstract fun userTokenProvider(): Callable < String !>?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/#configs","text":"@Immutable abstract class Configs","title":"Configs"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/#constructors","text":"Name Summary <init> Configs()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/#functions","text":"Name Summary baseUrlAdapterFactory abstract fun baseUrlAdapterFactory(): Callable < Callable < String !>!>? builder open static fun builder(): Builder! co2PreferencesFactory abstract fun co2PreferencesFactory(): Callable < Co2Preferences !>? context abstract fun context(): Context! debuggable open fun debuggable(): Boolean errorHandler abstract fun errorHandler(): Consumer< Throwable !>? extraQueryMapProvider abstract fun extraQueryMapProvider(): ExtraQueryMapProvider ? isUuidOptedOut open fun isUuidOptedOut(): Boolean key abstract fun key(): Callable < Key !>! tripPreferencesFactory abstract fun tripPreferencesFactory(): Callable < TripPreferences !>? userTokenProvider abstract fun userTokenProvider(): Callable < String !>?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/-init-/","text":"tripkit-android / com.skedgo.tripkit / Configs / <init> <init> Configs()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-configs/-init-/#init","text":"Configs()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/base-url-adapter-factory/","text":"tripkit-android / com.skedgo.tripkit / Configs / baseUrlAdapterFactory baseUrlAdapterFactory @Nullable abstract fun baseUrlAdapterFactory(): Callable < Callable < String !>!>? Return Callable < Callable < String !>!>?: A factory to create a sort of adapter that specifies a base url to override all the 'satapp' requests made by TripKit's apis. The factory is in use only when `[ #debuggable()`](debuggable.md) is true.","title":"Base url adapter factory"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/base-url-adapter-factory/#baseurladapterfactory","text":"@Nullable abstract fun baseUrlAdapterFactory(): Callable < Callable < String !>!>? Return Callable < Callable < String !>!>?: A factory to create a sort of adapter that specifies a base url to override all the 'satapp' requests made by TripKit's apis. The factory is in use only when `[ #debuggable()`](debuggable.md) is true.","title":"baseUrlAdapterFactory"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/builder/","text":"tripkit-android / com.skedgo.tripkit / Configs / builder builder open static fun builder(): Builder!","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/builder/#builder","text":"open static fun builder(): Builder!","title":"builder"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/co2-preferences-factory/","text":"tripkit-android / com.skedgo.tripkit / Configs / co2PreferencesFactory co2PreferencesFactory @Nullable abstract fun co2PreferencesFactory(): Callable < Co2Preferences !>?","title":"Co2 preferences factory"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/co2-preferences-factory/#co2preferencesfactory","text":"@Nullable abstract fun co2PreferencesFactory(): Callable < Co2Preferences !>?","title":"co2PreferencesFactory"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/context/","text":"tripkit-android / com.skedgo.tripkit / Configs / context context abstract fun context(): Context!","title":"Context"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/context/#context","text":"abstract fun context(): Context!","title":"context"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/debuggable/","text":"tripkit-android / com.skedgo.tripkit / Configs / debuggable debuggable @Default open fun debuggable(): Boolean","title":"Debuggable"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/debuggable/#debuggable","text":"@Default open fun debuggable(): Boolean","title":"debuggable"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/error-handler/","text":"tripkit-android / com.skedgo.tripkit / Configs / errorHandler errorHandler @Nullable abstract fun errorHandler(): Consumer< Throwable !>?","title":"Error handler"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/error-handler/#errorhandler","text":"@Nullable abstract fun errorHandler(): Consumer< Throwable !>?","title":"errorHandler"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/extra-query-map-provider/","text":"tripkit-android / com.skedgo.tripkit / Configs / extraQueryMapProvider extraQueryMapProvider @Nullable abstract fun extraQueryMapProvider(): ExtraQueryMapProvider ?","title":"Extra query map provider"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/extra-query-map-provider/#extraquerymapprovider","text":"@Nullable abstract fun extraQueryMapProvider(): ExtraQueryMapProvider ?","title":"extraQueryMapProvider"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/is-uuid-opted-out/","text":"tripkit-android / com.skedgo.tripkit / Configs / isUuidOptedOut isUuidOptedOut @Default open fun isUuidOptedOut(): Boolean","title":"Is uuid opted out"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/is-uuid-opted-out/#isuuidoptedout","text":"@Default open fun isUuidOptedOut(): Boolean","title":"isUuidOptedOut"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/key/","text":"tripkit-android / com.skedgo.tripkit / Configs / key key abstract fun key(): Callable < Key !>!","title":"Key"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/key/#key","text":"abstract fun key(): Callable < Key !>!","title":"key"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/trip-preferences-factory/","text":"tripkit-android / com.skedgo.tripkit / Configs / tripPreferencesFactory tripPreferencesFactory @Nullable abstract fun tripPreferencesFactory(): Callable < TripPreferences !>?","title":"Trip preferences factory"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/trip-preferences-factory/#trippreferencesfactory","text":"@Nullable abstract fun tripPreferencesFactory(): Callable < TripPreferences !>?","title":"tripPreferencesFactory"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/user-token-provider/","text":"tripkit-android / com.skedgo.tripkit / Configs / userTokenProvider userTokenProvider @Nullable abstract fun userTokenProvider(): Callable < String !>?","title":"User token provider"},{"location":"tripkit-android/com.skedgo.tripkit/-configs/user-token-provider/#usertokenprovider","text":"@Nullable abstract fun userTokenProvider(): Callable < String !>?","title":"userTokenProvider"},{"location":"tripkit-android/com.skedgo.tripkit/-default-co2-preferences/","text":"tripkit-android / com.skedgo.tripkit / DefaultCo2Preferences DefaultCo2Preferences class DefaultCo2Preferences : Co2Preferences Constructors Name Summary <init> DefaultCo2Preferences(preferences: SharedPreferences) Functions Name Summary getCo2Profile fun getCo2Profile(): MutableMap < String !, Float !> setEmissions fun setEmissions(modeId: String , gramsCO2PerKm: Float ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-default-co2-preferences/#defaultco2preferences","text":"class DefaultCo2Preferences : Co2Preferences","title":"DefaultCo2Preferences"},{"location":"tripkit-android/com.skedgo.tripkit/-default-co2-preferences/#constructors","text":"Name Summary <init> DefaultCo2Preferences(preferences: SharedPreferences)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-default-co2-preferences/#functions","text":"Name Summary getCo2Profile fun getCo2Profile(): MutableMap < String !, Float !> setEmissions fun setEmissions(modeId: String , gramsCO2PerKm: Float ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-default-co2-preferences/-init-/","text":"tripkit-android / com.skedgo.tripkit / DefaultCo2Preferences / <init> <init> DefaultCo2Preferences(@NonNull preferences: SharedPreferences) Parameters preferences - SharedPreferences: This `[ SharedPreferences`](#) should only be used to store CO2 profile.","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-default-co2-preferences/-init-/#init","text":"DefaultCo2Preferences(@NonNull preferences: SharedPreferences)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-default-co2-preferences/-init-/#parameters","text":"preferences - SharedPreferences: This `[ SharedPreferences`](#) should only be used to store CO2 profile.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit/-default-co2-preferences/get-co2-profile/","text":"tripkit-android / com.skedgo.tripkit / DefaultCo2Preferences / getCo2Profile getCo2Profile @NonNull fun getCo2Profile(): MutableMap < String !, Float !>","title":"Get co2 profile"},{"location":"tripkit-android/com.skedgo.tripkit/-default-co2-preferences/get-co2-profile/#getco2profile","text":"@NonNull fun getCo2Profile(): MutableMap < String !, Float !>","title":"getCo2Profile"},{"location":"tripkit-android/com.skedgo.tripkit/-default-co2-preferences/set-emissions/","text":"tripkit-android / com.skedgo.tripkit / DefaultCo2Preferences / setEmissions setEmissions fun setEmissions(@NonNull modeId: String , gramsCO2PerKm: Float ): Unit","title":"Set emissions"},{"location":"tripkit-android/com.skedgo.tripkit/-default-co2-preferences/set-emissions/#setemissions","text":"fun setEmissions(@NonNull modeId: String , gramsCO2PerKm: Float ): Unit","title":"setEmissions"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/","text":"tripkit-android / com.skedgo.tripkit / DefaultTripPreferences DefaultTripPreferences class DefaultTripPreferences : TripPreferences Constructors Name Summary <init> DefaultTripPreferences(preferences: SharedPreferences) Functions Name Summary isConcessionPricingPreferred fun isConcessionPricingPreferred(): Boolean isWheelchairPreferred fun isWheelchairPreferred(): Boolean setConcessionPricingPreferred fun setConcessionPricingPreferred(isConcessionPricingPreferred: Boolean ): Unit setWheelchairPreferred fun setWheelchairPreferred(isWheelchairPreferred: Boolean ): Unit whenConcessionPricingPreferenceChanges fun whenConcessionPricingPreferenceChanges(): Observable< Boolean > whenWheelchairPreferenceChanges fun whenWheelchairPreferenceChanges(): Observable< Boolean >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/#defaulttrippreferences","text":"class DefaultTripPreferences : TripPreferences","title":"DefaultTripPreferences"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/#constructors","text":"Name Summary <init> DefaultTripPreferences(preferences: SharedPreferences)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/#functions","text":"Name Summary isConcessionPricingPreferred fun isConcessionPricingPreferred(): Boolean isWheelchairPreferred fun isWheelchairPreferred(): Boolean setConcessionPricingPreferred fun setConcessionPricingPreferred(isConcessionPricingPreferred: Boolean ): Unit setWheelchairPreferred fun setWheelchairPreferred(isWheelchairPreferred: Boolean ): Unit whenConcessionPricingPreferenceChanges fun whenConcessionPricingPreferenceChanges(): Observable< Boolean > whenWheelchairPreferenceChanges fun whenWheelchairPreferenceChanges(): Observable< Boolean >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/-init-/","text":"tripkit-android / com.skedgo.tripkit / DefaultTripPreferences / <init> <init> DefaultTripPreferences(preferences: SharedPreferences)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/-init-/#init","text":"DefaultTripPreferences(preferences: SharedPreferences)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/is-concession-pricing-preferred/","text":"tripkit-android / com.skedgo.tripkit / DefaultTripPreferences / isConcessionPricingPreferred isConcessionPricingPreferred fun isConcessionPricingPreferred(): Boolean","title":"Is concession pricing preferred"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/is-concession-pricing-preferred/#isconcessionpricingpreferred","text":"fun isConcessionPricingPreferred(): Boolean","title":"isConcessionPricingPreferred"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/is-wheelchair-preferred/","text":"tripkit-android / com.skedgo.tripkit / DefaultTripPreferences / isWheelchairPreferred isWheelchairPreferred fun isWheelchairPreferred(): Boolean","title":"Is wheelchair preferred"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/is-wheelchair-preferred/#iswheelchairpreferred","text":"fun isWheelchairPreferred(): Boolean","title":"isWheelchairPreferred"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/set-concession-pricing-preferred/","text":"tripkit-android / com.skedgo.tripkit / DefaultTripPreferences / setConcessionPricingPreferred setConcessionPricingPreferred fun setConcessionPricingPreferred(isConcessionPricingPreferred: Boolean ): Unit","title":"Set concession pricing preferred"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/set-concession-pricing-preferred/#setconcessionpricingpreferred","text":"fun setConcessionPricingPreferred(isConcessionPricingPreferred: Boolean ): Unit","title":"setConcessionPricingPreferred"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/set-wheelchair-preferred/","text":"tripkit-android / com.skedgo.tripkit / DefaultTripPreferences / setWheelchairPreferred setWheelchairPreferred fun setWheelchairPreferred(isWheelchairPreferred: Boolean ): Unit","title":"Set wheelchair preferred"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/set-wheelchair-preferred/#setwheelchairpreferred","text":"fun setWheelchairPreferred(isWheelchairPreferred: Boolean ): Unit","title":"setWheelchairPreferred"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/when-concession-pricing-preference-changes/","text":"tripkit-android / com.skedgo.tripkit / DefaultTripPreferences / whenConcessionPricingPreferenceChanges whenConcessionPricingPreferenceChanges fun whenConcessionPricingPreferenceChanges(): Observable< Boolean >","title":"When concession pricing preference changes"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/when-concession-pricing-preference-changes/#whenconcessionpricingpreferencechanges","text":"fun whenConcessionPricingPreferenceChanges(): Observable< Boolean >","title":"whenConcessionPricingPreferenceChanges"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/when-wheelchair-preference-changes/","text":"tripkit-android / com.skedgo.tripkit / DefaultTripPreferences / whenWheelchairPreferenceChanges whenWheelchairPreferenceChanges fun whenWheelchairPreferenceChanges(): Observable< Boolean >","title":"When wheelchair preference changes"},{"location":"tripkit-android/com.skedgo.tripkit/-default-trip-preferences/when-wheelchair-preference-changes/#whenwheelchairpreferencechanges","text":"fun whenWheelchairPreferenceChanges(): Observable< Boolean >","title":"whenWheelchairPreferenceChanges"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/","text":"tripkit-android / com.skedgo.tripkit / ExternalActionParams ExternalActionParams @Immutable abstract class ExternalActionParams Types Name Summary Builder interface Builder Constructors Name Summary <init> ExternalActionParams() Functions Name Summary action abstract fun action(): String ! builder open static fun builder(): Builder! flitWaysPartnerKey abstract fun flitWaysPartnerKey(): String ? segment abstract fun segment(): TripSegment !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/#externalactionparams","text":"@Immutable abstract class ExternalActionParams","title":"ExternalActionParams"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/#types","text":"Name Summary Builder interface Builder","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/#constructors","text":"Name Summary <init> ExternalActionParams()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/#functions","text":"Name Summary action abstract fun action(): String ! builder open static fun builder(): Builder! flitWaysPartnerKey abstract fun flitWaysPartnerKey(): String ? segment abstract fun segment(): TripSegment !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-init-/","text":"tripkit-android / com.skedgo.tripkit / ExternalActionParams / <init> <init> ExternalActionParams()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-init-/#init","text":"ExternalActionParams()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/action/","text":"tripkit-android / com.skedgo.tripkit / ExternalActionParams / action action abstract fun action(): String !","title":"Action"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/action/#action","text":"abstract fun action(): String !","title":"action"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/builder/","text":"tripkit-android / com.skedgo.tripkit / ExternalActionParams / builder builder open static fun builder(): Builder!","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/builder/#builder","text":"open static fun builder(): Builder!","title":"builder"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/flit-ways-partner-key/","text":"tripkit-android / com.skedgo.tripkit / ExternalActionParams / flitWaysPartnerKey flitWaysPartnerKey @Nullable abstract fun flitWaysPartnerKey(): String ?","title":"Flit ways partner key"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/flit-ways-partner-key/#flitwayspartnerkey","text":"@Nullable abstract fun flitWaysPartnerKey(): String ?","title":"flitWaysPartnerKey"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/segment/","text":"tripkit-android / com.skedgo.tripkit / ExternalActionParams / segment segment abstract fun segment(): TripSegment !","title":"Segment"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/segment/#segment","text":"abstract fun segment(): TripSegment !","title":"segment"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-builder/","text":"tripkit-android / com.skedgo.tripkit / ExternalActionParams / Builder Builder interface Builder Functions Name Summary action abstract fun action(action: String !): Builder! build abstract fun build(): ExternalActionParams ! flitWaysPartnerKey abstract fun flitWaysPartnerKey(flitWaysPartnerKey: String !): Builder! segment abstract fun segment(segment: TripSegment !): Builder!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-builder/#builder","text":"interface Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-builder/#functions","text":"Name Summary action abstract fun action(action: String !): Builder! build abstract fun build(): ExternalActionParams ! flitWaysPartnerKey abstract fun flitWaysPartnerKey(flitWaysPartnerKey: String !): Builder! segment abstract fun segment(segment: TripSegment !): Builder!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-builder/action/","text":"tripkit-android / com.skedgo.tripkit / ExternalActionParams / Builder / action action abstract fun action(action: String !): Builder!","title":"Action"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-builder/action/#action","text":"abstract fun action(action: String !): Builder!","title":"action"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-builder/build/","text":"tripkit-android / com.skedgo.tripkit / ExternalActionParams / Builder / build build abstract fun build(): ExternalActionParams !","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-builder/build/#build","text":"abstract fun build(): ExternalActionParams !","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-builder/flit-ways-partner-key/","text":"tripkit-android / com.skedgo.tripkit / ExternalActionParams / Builder / flitWaysPartnerKey flitWaysPartnerKey abstract fun flitWaysPartnerKey(flitWaysPartnerKey: String !): Builder!","title":"Flit ways partner key"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-builder/flit-ways-partner-key/#flitwayspartnerkey","text":"abstract fun flitWaysPartnerKey(flitWaysPartnerKey: String !): Builder!","title":"flitWaysPartnerKey"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-builder/segment/","text":"tripkit-android / com.skedgo.tripkit / ExternalActionParams / Builder / segment segment abstract fun segment(segment: TripSegment !): Builder!","title":"Segment"},{"location":"tripkit-android/com.skedgo.tripkit/-external-action-params/-builder/segment/#segment","text":"abstract fun segment(segment: TripSegment !): Builder!","title":"segment"},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/","text":"tripkit-android / com.skedgo.tripkit / LineSegment LineSegment class LineSegment Represents a segment of a polyline denoting a `[ Trip`](../../com.skedgo.tripkit.routing/-trip/index.md). Constructors Name Summary <init> LineSegment(start: TripKitLatLng !, end: TripKitLatLng !, color: Int ) Properties Name Summary color val color: Int end val end: TripKitLatLng ! start val start: TripKitLatLng !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/#linesegment","text":"class LineSegment Represents a segment of a polyline denoting a `[ Trip`](../../com.skedgo.tripkit.routing/-trip/index.md).","title":"LineSegment"},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/#constructors","text":"Name Summary <init> LineSegment(start: TripKitLatLng !, end: TripKitLatLng !, color: Int )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/#properties","text":"Name Summary color val color: Int end val end: TripKitLatLng ! start val start: TripKitLatLng !","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/-init-/","text":"tripkit-android / com.skedgo.tripkit / LineSegment / <init> <init> LineSegment(start: TripKitLatLng !, end: TripKitLatLng !, color: Int )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/-init-/#init","text":"LineSegment(start: TripKitLatLng !, end: TripKitLatLng !, color: Int )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/color/","text":"tripkit-android / com.skedgo.tripkit / LineSegment / color color val color: Int","title":"Color"},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/color/#color","text":"val color: Int","title":"color"},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/end/","text":"tripkit-android / com.skedgo.tripkit / LineSegment / end end val end: TripKitLatLng !","title":"End"},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/end/#end","text":"val end: TripKitLatLng !","title":"end"},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/start/","text":"tripkit-android / com.skedgo.tripkit / LineSegment / start start val start: TripKitLatLng !","title":"Start"},{"location":"tripkit-android/com.skedgo.tripkit/-line-segment/start/#start","text":"val start: TripKitLatLng !","title":"start"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/","text":"tripkit-android / com.skedgo.tripkit / LocationInfo LocationInfo @TypeAdapters @Immutable interface LocationInfo Functions Name Summary carPark abstract fun carPark(): CarPark ? details abstract fun details(): LocationInfoDetails ? lat abstract fun lat(): Double lng abstract fun lng(): Double stop abstract fun stop(): ScheduledStop ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/#locationinfo","text":"@TypeAdapters @Immutable interface LocationInfo","title":"LocationInfo"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/#functions","text":"Name Summary carPark abstract fun carPark(): CarPark ? details abstract fun details(): LocationInfoDetails ? lat abstract fun lat(): Double lng abstract fun lng(): Double stop abstract fun stop(): ScheduledStop ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/car-park/","text":"tripkit-android / com.skedgo.tripkit / LocationInfo / carPark carPark @Nullable abstract fun carPark(): CarPark ?","title":"Car park"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/car-park/#carpark","text":"@Nullable abstract fun carPark(): CarPark ?","title":"carPark"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/details/","text":"tripkit-android / com.skedgo.tripkit / LocationInfo / details details @Nullable abstract fun details(): LocationInfoDetails ?","title":"Details"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/details/#details","text":"@Nullable abstract fun details(): LocationInfoDetails ?","title":"details"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/lat/","text":"tripkit-android / com.skedgo.tripkit / LocationInfo / lat lat abstract fun lat(): Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/lat/#lat","text":"abstract fun lat(): Double","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/lng/","text":"tripkit-android / com.skedgo.tripkit / LocationInfo / lng lng abstract fun lng(): Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/lng/#lng","text":"abstract fun lng(): Double","title":"lng"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/stop/","text":"tripkit-android / com.skedgo.tripkit / LocationInfo / stop stop @Nullable abstract fun stop(): ScheduledStop ?","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info/stop/#stop","text":"@Nullable abstract fun stop(): ScheduledStop ?","title":"stop"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-details/","text":"tripkit-android / com.skedgo.tripkit / LocationInfoDetails LocationInfoDetails @TypeAdapters @Immutable abstract class LocationInfoDetails Constructors Name Summary <init> LocationInfoDetails() Functions Name Summary w3w abstract fun w3w(): String ? w3wInfoURL abstract fun w3wInfoURL(): String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-details/#locationinfodetails","text":"@TypeAdapters @Immutable abstract class LocationInfoDetails","title":"LocationInfoDetails"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-details/#constructors","text":"Name Summary <init> LocationInfoDetails()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-details/#functions","text":"Name Summary w3w abstract fun w3w(): String ? w3wInfoURL abstract fun w3wInfoURL(): String ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-details/-init-/","text":"tripkit-android / com.skedgo.tripkit / LocationInfoDetails / <init> <init> LocationInfoDetails()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-details/-init-/#init","text":"LocationInfoDetails()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-details/w3w-info-u-r-l/","text":"tripkit-android / com.skedgo.tripkit / LocationInfoDetails / w3wInfoURL w3wInfoURL @Nullable abstract fun w3wInfoURL(): String ?","title":"W3w info u r l"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-details/w3w-info-u-r-l/#w3winfourl","text":"@Nullable abstract fun w3wInfoURL(): String ?","title":"w3wInfoURL"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-details/w3w/","text":"tripkit-android / com.skedgo.tripkit / LocationInfoDetails / w3w w3w @Nullable abstract fun w3w(): String ?","title":"W3w"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-details/w3w/#w3w","text":"@Nullable abstract fun w3w(): String ?","title":"w3w"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-service/","text":"tripkit-android / com.skedgo.tripkit / LocationInfoService LocationInfoService interface LocationInfoService Functions Name Summary getLocationInfoAsync abstract fun getLocationInfoAsync(location: Location !): Observable< LocationInfo !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-service/#locationinfoservice","text":"interface LocationInfoService","title":"LocationInfoService"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-service/#functions","text":"Name Summary getLocationInfoAsync abstract fun getLocationInfoAsync(location: Location !): Observable< LocationInfo !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-service/get-location-info-async/","text":"tripkit-android / com.skedgo.tripkit / LocationInfoService / getLocationInfoAsync getLocationInfoAsync abstract fun getLocationInfoAsync(location: Location !): Observable< LocationInfo !>!","title":"Get location info async"},{"location":"tripkit-android/com.skedgo.tripkit/-location-info-service/get-location-info-async/#getlocationinfoasync","text":"abstract fun getLocationInfoAsync(location: Location !): Observable< LocationInfo !>!","title":"getLocationInfoAsync"},{"location":"tripkit-android/com.skedgo.tripkit/-main-module/","text":"tripkit-android / com.skedgo.tripkit / MainModule MainModule @Module open class MainModule Constructors Name Summary <init> MainModule(configs: Configs )","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-main-module/#mainmodule","text":"@Module open class MainModule","title":"MainModule"},{"location":"tripkit-android/com.skedgo.tripkit/-main-module/#constructors","text":"Name Summary <init> MainModule(configs: Configs )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-main-module/-init-/","text":"tripkit-android / com.skedgo.tripkit / MainModule / <init> <init> MainModule(@NonNull configs: Configs )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-main-module/-init-/#init","text":"MainModule(@NonNull configs: Configs )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-no-connection-error/","text":"tripkit-android / com.skedgo.tripkit / NoConnectionError NoConnectionError class NoConnectionError : RoutingError Constructors Name Summary <init> NoConnectionError(detailMessage: String )","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-no-connection-error/#noconnectionerror","text":"class NoConnectionError : RoutingError","title":"NoConnectionError"},{"location":"tripkit-android/com.skedgo.tripkit/-no-connection-error/#constructors","text":"Name Summary <init> NoConnectionError(detailMessage: String )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-no-connection-error/-init-/","text":"tripkit-android / com.skedgo.tripkit / NoConnectionError / <init> <init> NoConnectionError(detailMessage: String )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-no-connection-error/-init-/#init","text":"NoConnectionError(detailMessage: String )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-out-of-regions-exception/","text":"tripkit-android / com.skedgo.tripkit / OutOfRegionsException OutOfRegionsException class OutOfRegionsException : RuntimeException Constructors Name Summary <init> OutOfRegionsException(detailMessage: String ?, latitude: Double , longitude: Double ) Functions Name Summary latitude fun latitude(): Double longitude fun longitude(): Double","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-out-of-regions-exception/#outofregionsexception","text":"class OutOfRegionsException : RuntimeException","title":"OutOfRegionsException"},{"location":"tripkit-android/com.skedgo.tripkit/-out-of-regions-exception/#constructors","text":"Name Summary <init> OutOfRegionsException(detailMessage: String ?, latitude: Double , longitude: Double )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-out-of-regions-exception/#functions","text":"Name Summary latitude fun latitude(): Double longitude fun longitude(): Double","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-out-of-regions-exception/-init-/","text":"tripkit-android / com.skedgo.tripkit / OutOfRegionsException / <init> <init> OutOfRegionsException(@Nullable detailMessage: String ?, latitude: Double , longitude: Double )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-out-of-regions-exception/-init-/#init","text":"OutOfRegionsException(@Nullable detailMessage: String ?, latitude: Double , longitude: Double )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-out-of-regions-exception/latitude/","text":"tripkit-android / com.skedgo.tripkit / OutOfRegionsException / latitude latitude fun latitude(): Double","title":"Latitude"},{"location":"tripkit-android/com.skedgo.tripkit/-out-of-regions-exception/latitude/#latitude","text":"fun latitude(): Double","title":"latitude"},{"location":"tripkit-android/com.skedgo.tripkit/-out-of-regions-exception/longitude/","text":"tripkit-android / com.skedgo.tripkit / OutOfRegionsException / longitude longitude fun longitude(): Double","title":"Longitude"},{"location":"tripkit-android/com.skedgo.tripkit/-out-of-regions-exception/longitude/#longitude","text":"fun longitude(): Double","title":"longitude"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/","text":"tripkit-android / com.skedgo.tripkit / PeriodicRealTimeTripUpdateReceiver PeriodicRealTimeTripUpdateReceiver @Immutable abstract class PeriodicRealTimeTripUpdateReceiver : RealTimeTripUpdateReceiver Types Name Summary Builder interface Builder Constructors Name Summary <init> PeriodicRealTimeTripUpdateReceiver() Functions Name Summary builder open static fun builder(): Builder! startAsync open fun startAsync(): Flowable< Pair < Trip !, TripGroup !>!>! stop open fun stop(): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/#periodicrealtimetripupdatereceiver","text":"@Immutable abstract class PeriodicRealTimeTripUpdateReceiver : RealTimeTripUpdateReceiver","title":"PeriodicRealTimeTripUpdateReceiver"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/#types","text":"Name Summary Builder interface Builder","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/#constructors","text":"Name Summary <init> PeriodicRealTimeTripUpdateReceiver()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/#functions","text":"Name Summary builder open static fun builder(): Builder! startAsync open fun startAsync(): Flowable< Pair < Trip !, TripGroup !>!>! stop open fun stop(): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-init-/","text":"tripkit-android / com.skedgo.tripkit / PeriodicRealTimeTripUpdateReceiver / <init> <init> PeriodicRealTimeTripUpdateReceiver()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-init-/#init","text":"PeriodicRealTimeTripUpdateReceiver()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/builder/","text":"tripkit-android / com.skedgo.tripkit / PeriodicRealTimeTripUpdateReceiver / builder builder open static fun builder(): Builder!","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/builder/#builder","text":"open static fun builder(): Builder!","title":"builder"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/start-async/","text":"tripkit-android / com.skedgo.tripkit / PeriodicRealTimeTripUpdateReceiver / startAsync startAsync open fun startAsync(): Flowable< Pair < Trip !, TripGroup !>!>!","title":"Start async"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/start-async/#startasync","text":"open fun startAsync(): Flowable< Pair < Trip !, TripGroup !>!>!","title":"startAsync"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/stop/","text":"tripkit-android / com.skedgo.tripkit / PeriodicRealTimeTripUpdateReceiver / stop stop open fun stop(): Unit","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/stop/#stop","text":"open fun stop(): Unit","title":"stop"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/","text":"tripkit-android / com.skedgo.tripkit / PeriodicRealTimeTripUpdateReceiver / Builder Builder interface Builder Functions Name Summary build abstract fun build(): RealTimeTripUpdateReceiver ! group abstract fun group(group: TripGroup !): Builder! initialDelay abstract fun initialDelay(initialDelay: Int ): Builder! period abstract fun period(period: Int ): Builder! timeUnit abstract fun timeUnit(timeUnit: TimeUnit !): Builder!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/#builder","text":"interface Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/#functions","text":"Name Summary build abstract fun build(): RealTimeTripUpdateReceiver ! group abstract fun group(group: TripGroup !): Builder! initialDelay abstract fun initialDelay(initialDelay: Int ): Builder! period abstract fun period(period: Int ): Builder! timeUnit abstract fun timeUnit(timeUnit: TimeUnit !): Builder!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/build/","text":"tripkit-android / com.skedgo.tripkit / PeriodicRealTimeTripUpdateReceiver / Builder / build build abstract fun build(): RealTimeTripUpdateReceiver !","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/build/#build","text":"abstract fun build(): RealTimeTripUpdateReceiver !","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/group/","text":"tripkit-android / com.skedgo.tripkit / PeriodicRealTimeTripUpdateReceiver / Builder / group group abstract fun group(group: TripGroup !): Builder!","title":"Group"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/group/#group","text":"abstract fun group(group: TripGroup !): Builder!","title":"group"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/initial-delay/","text":"tripkit-android / com.skedgo.tripkit / PeriodicRealTimeTripUpdateReceiver / Builder / initialDelay initialDelay abstract fun initialDelay(initialDelay: Int ): Builder!","title":"Initial delay"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/initial-delay/#initialdelay","text":"abstract fun initialDelay(initialDelay: Int ): Builder!","title":"initialDelay"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/period/","text":"tripkit-android / com.skedgo.tripkit / PeriodicRealTimeTripUpdateReceiver / Builder / period period abstract fun period(period: Int ): Builder!","title":"Period"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/period/#period","text":"abstract fun period(period: Int ): Builder!","title":"period"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/time-unit/","text":"tripkit-android / com.skedgo.tripkit / PeriodicRealTimeTripUpdateReceiver / Builder / timeUnit timeUnit abstract fun timeUnit(timeUnit: TimeUnit !): Builder!","title":"Time unit"},{"location":"tripkit-android/com.skedgo.tripkit/-periodic-real-time-trip-update-receiver/-builder/time-unit/#timeunit","text":"abstract fun timeUnit(timeUnit: TimeUnit !): Builder!","title":"timeUnit"},{"location":"tripkit-android/com.skedgo.tripkit/-real-time-trip-update-receiver/","text":"tripkit-android / com.skedgo.tripkit / RealTimeTripUpdateReceiver RealTimeTripUpdateReceiver interface RealTimeTripUpdateReceiver Functions Name Summary startAsync abstract fun startAsync(): Flowable< Pair < Trip !, TripGroup !>!>! stop abstract fun stop(): Unit Inheritors Name Summary PeriodicRealTimeTripUpdateReceiver abstract class PeriodicRealTimeTripUpdateReceiver : RealTimeTripUpdateReceiver","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-real-time-trip-update-receiver/#realtimetripupdatereceiver","text":"interface RealTimeTripUpdateReceiver","title":"RealTimeTripUpdateReceiver"},{"location":"tripkit-android/com.skedgo.tripkit/-real-time-trip-update-receiver/#functions","text":"Name Summary startAsync abstract fun startAsync(): Flowable< Pair < Trip !, TripGroup !>!>! stop abstract fun stop(): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-real-time-trip-update-receiver/#inheritors","text":"Name Summary PeriodicRealTimeTripUpdateReceiver abstract class PeriodicRealTimeTripUpdateReceiver : RealTimeTripUpdateReceiver","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit/-real-time-trip-update-receiver/start-async/","text":"tripkit-android / com.skedgo.tripkit / RealTimeTripUpdateReceiver / startAsync startAsync abstract fun startAsync(): Flowable< Pair < Trip !, TripGroup !>!>!","title":"Start async"},{"location":"tripkit-android/com.skedgo.tripkit/-real-time-trip-update-receiver/start-async/#startasync","text":"abstract fun startAsync(): Flowable< Pair < Trip !, TripGroup !>!>!","title":"startAsync"},{"location":"tripkit-android/com.skedgo.tripkit/-real-time-trip-update-receiver/stop/","text":"tripkit-android / com.skedgo.tripkit / RealTimeTripUpdateReceiver / stop stop abstract fun stop(): Unit","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit/-real-time-trip-update-receiver/stop/#stop","text":"abstract fun stop(): Unit","title":"stop"},{"location":"tripkit-android/com.skedgo.tripkit/-routing-user-error/","text":"tripkit-android / com.skedgo.tripkit / RoutingUserError RoutingUserError class RoutingUserError : RoutingError Constructors Name Summary <init> RoutingUserError(detailMessage: String )","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-routing-user-error/#routingusererror","text":"class RoutingUserError : RoutingError","title":"RoutingUserError"},{"location":"tripkit-android/com.skedgo.tripkit/-routing-user-error/#constructors","text":"Name Summary <init> RoutingUserError(detailMessage: String )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-routing-user-error/-init-/","text":"tripkit-android / com.skedgo.tripkit / RoutingUserError / <init> <init> RoutingUserError(detailMessage: String )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-routing-user-error/-init-/#init","text":"RoutingUserError(detailMessage: String )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-service-api/","text":"tripkit-android / com.skedgo.tripkit / ServiceApi ServiceApi interface ServiceApi Functions Name Summary getServiceAsync abstract fun getServiceAsync(region: String !, serviceTripId: String !, timeInSecs: Long , encode: Boolean ): Observable< ServiceResponse !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-service-api/#serviceapi","text":"interface ServiceApi","title":"ServiceApi"},{"location":"tripkit-android/com.skedgo.tripkit/-service-api/#functions","text":"Name Summary getServiceAsync abstract fun getServiceAsync(region: String !, serviceTripId: String !, timeInSecs: Long , encode: Boolean ): Observable< ServiceResponse !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-service-api/get-service-async/","text":"tripkit-android / com.skedgo.tripkit / ServiceApi / getServiceAsync getServiceAsync @GET(\"service.json\") abstract fun getServiceAsync(@Query(\"region\") region: String !, @Query(\"serviceTripID\") serviceTripId: String !, @Query(\"embarkationDate\") timeInSecs: Long , @Query(\"encode\") encode: Boolean ): Observable< ServiceResponse !>!","title":"Get service async"},{"location":"tripkit-android/com.skedgo.tripkit/-service-api/get-service-async/#getserviceasync","text":"@GET(\"service.json\") abstract fun getServiceAsync(@Query(\"region\") region: String !, @Query(\"serviceTripID\") serviceTripId: String !, @Query(\"embarkationDate\") timeInSecs: Long , @Query(\"encode\") encode: Boolean ): Observable< ServiceResponse !>!","title":"getServiceAsync"},{"location":"tripkit-android/com.skedgo.tripkit/-service-extras/","text":"tripkit-android / com.skedgo.tripkit / ServiceExtras ServiceExtras class ServiceExtras Constructors Name Summary <init> ServiceExtras(platform: String ?, stops: MutableList < ServiceStop !>?) Properties Name Summary platform val platform: String ? stops val stops: MutableList < ServiceStop !>?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-service-extras/#serviceextras","text":"class ServiceExtras","title":"ServiceExtras"},{"location":"tripkit-android/com.skedgo.tripkit/-service-extras/#constructors","text":"Name Summary <init> ServiceExtras(platform: String ?, stops: MutableList < ServiceStop !>?)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-service-extras/#properties","text":"Name Summary platform val platform: String ? stops val stops: MutableList < ServiceStop !>?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit/-service-extras/-init-/","text":"tripkit-android / com.skedgo.tripkit / ServiceExtras / <init> <init> ServiceExtras(@Nullable platform: String ?, @Nullable stops: MutableList < ServiceStop !>?)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-service-extras/-init-/#init","text":"ServiceExtras(@Nullable platform: String ?, @Nullable stops: MutableList < ServiceStop !>?)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-service-extras/platform/","text":"tripkit-android / com.skedgo.tripkit / ServiceExtras / platform platform @Nullable val platform: String ?","title":"Platform"},{"location":"tripkit-android/com.skedgo.tripkit/-service-extras/platform/#platform","text":"@Nullable val platform: String ?","title":"platform"},{"location":"tripkit-android/com.skedgo.tripkit/-service-extras/stops/","text":"tripkit-android / com.skedgo.tripkit / ServiceExtras / stops stops @Nullable val stops: MutableList < ServiceStop !>?","title":"Stops"},{"location":"tripkit-android/com.skedgo.tripkit/-service-extras/stops/#stops","text":"@Nullable val stops: MutableList < ServiceStop !>?","title":"stops"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/","text":"tripkit-android / com.skedgo.tripkit / ServiceResponse ServiceResponse @Immutable @TypeAdapters interface ServiceResponse Functions Name Summary realtimeAlternativeVehicle abstract fun realtimeAlternativeVehicle(): MutableList < RealTimeVehicle !>? realTimeStatus abstract fun realTimeStatus(): String ! realtimeVehicle abstract fun realtimeVehicle(): RealTimeVehicle ? shapes abstract fun shapes(): MutableList < Shape !>! type abstract fun type(): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/#serviceresponse","text":"@Immutable @TypeAdapters interface ServiceResponse","title":"ServiceResponse"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/#functions","text":"Name Summary realtimeAlternativeVehicle abstract fun realtimeAlternativeVehicle(): MutableList < RealTimeVehicle !>? realTimeStatus abstract fun realTimeStatus(): String ! realtimeVehicle abstract fun realtimeVehicle(): RealTimeVehicle ? shapes abstract fun shapes(): MutableList < Shape !>! type abstract fun type(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/real-time-status/","text":"tripkit-android / com.skedgo.tripkit / ServiceResponse / realTimeStatus realTimeStatus abstract fun realTimeStatus(): String !","title":"Real time status"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/real-time-status/#realtimestatus","text":"abstract fun realTimeStatus(): String !","title":"realTimeStatus"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/realtime-alternative-vehicle/","text":"tripkit-android / com.skedgo.tripkit / ServiceResponse / realtimeAlternativeVehicle realtimeAlternativeVehicle @Nullable abstract fun realtimeAlternativeVehicle(): MutableList < RealTimeVehicle !>?","title":"Realtime alternative vehicle"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/realtime-alternative-vehicle/#realtimealternativevehicle","text":"@Nullable abstract fun realtimeAlternativeVehicle(): MutableList < RealTimeVehicle !>?","title":"realtimeAlternativeVehicle"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/realtime-vehicle/","text":"tripkit-android / com.skedgo.tripkit / ServiceResponse / realtimeVehicle realtimeVehicle @Nullable abstract fun realtimeVehicle(): RealTimeVehicle ?","title":"Realtime vehicle"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/realtime-vehicle/#realtimevehicle","text":"@Nullable abstract fun realtimeVehicle(): RealTimeVehicle ?","title":"realtimeVehicle"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/shapes/","text":"tripkit-android / com.skedgo.tripkit / ServiceResponse / shapes shapes abstract fun shapes(): MutableList < Shape !>!","title":"Shapes"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/shapes/#shapes","text":"abstract fun shapes(): MutableList < Shape !>!","title":"shapes"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/type/","text":"tripkit-android / com.skedgo.tripkit / ServiceResponse / type type abstract fun type(): String !","title":"Type"},{"location":"tripkit-android/com.skedgo.tripkit/-service-response/type/#type","text":"abstract fun type(): String !","title":"type"},{"location":"tripkit-android/com.skedgo.tripkit/-temporary-url-api/","text":"tripkit-android / com.skedgo.tripkit / TemporaryUrlApi TemporaryUrlApi interface TemporaryUrlApi Handles downloading trip via `[ Trip#getTemporaryURL()`](../../com.skedgo.tripkit.routing/-trip/get-temporary-u-r-l.md). Functions Name Summary requestTemporaryUrlAsync abstract fun requestTemporaryUrlAsync(url: String !, config: MutableMap < String !, Any !>!): Observable< RoutingResponse !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-temporary-url-api/#temporaryurlapi","text":"interface TemporaryUrlApi Handles downloading trip via `[ Trip#getTemporaryURL()`](../../com.skedgo.tripkit.routing/-trip/get-temporary-u-r-l.md).","title":"TemporaryUrlApi"},{"location":"tripkit-android/com.skedgo.tripkit/-temporary-url-api/#functions","text":"Name Summary requestTemporaryUrlAsync abstract fun requestTemporaryUrlAsync(url: String !, config: MutableMap < String !, Any !>!): Observable< RoutingResponse !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-temporary-url-api/request-temporary-url-async/","text":"tripkit-android / com.skedgo.tripkit / TemporaryUrlApi / requestTemporaryUrlAsync requestTemporaryUrlAsync @GET abstract fun requestTemporaryUrlAsync(@Url url: String !, @QueryMap config: MutableMap < String !, Any !>!): Observable< RoutingResponse !>! Parameters url - String !: Should be `[ Trip#getTemporaryURL()`](../../com.skedgo.tripkit.routing/-trip/get-temporary-u-r-l.md). config - MutableMap < String !, Any !>!: Described in Default configuration parameters .","title":"Request temporary url async"},{"location":"tripkit-android/com.skedgo.tripkit/-temporary-url-api/request-temporary-url-async/#requesttemporaryurlasync","text":"@GET abstract fun requestTemporaryUrlAsync(@Url url: String !, @QueryMap config: MutableMap < String !, Any !>!): Observable< RoutingResponse !>!","title":"requestTemporaryUrlAsync"},{"location":"tripkit-android/com.skedgo.tripkit/-temporary-url-api/request-temporary-url-async/#parameters","text":"url - String !: Should be `[ Trip#getTemporaryURL()`](../../com.skedgo.tripkit.routing/-trip/get-temporary-u-r-l.md). config - MutableMap < String !, Any !>!: Described in Default configuration parameters .","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-mode-filter/","text":"tripkit-android / com.skedgo.tripkit / TransitModeFilter TransitModeFilter interface TransitModeFilter Functions Name Summary filterTransitModes open fun filterTransitModes(regionInfo: RegionInfo ): List < ModeInfo >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-mode-filter/#transitmodefilter","text":"interface TransitModeFilter","title":"TransitModeFilter"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-mode-filter/#functions","text":"Name Summary filterTransitModes open fun filterTransitModes(regionInfo: RegionInfo ): List < ModeInfo >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-mode-filter/filter-transit-modes/","text":"tripkit-android / com.skedgo.tripkit / TransitModeFilter / filterTransitModes filterTransitModes open fun filterTransitModes(regionInfo: RegionInfo ): List < ModeInfo > Parameters regionInfo - is the regionInfo of the Region that will be used for routing Return Return modes that will be included in routing requests","title":"Filter transit modes"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-mode-filter/filter-transit-modes/#filtertransitmodes","text":"open fun filterTransitModes(regionInfo: RegionInfo ): List < ModeInfo >","title":"filterTransitModes"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-mode-filter/filter-transit-modes/#parameters","text":"regionInfo - is the regionInfo of the Region that will be used for routing Return Return modes that will be included in routing requests","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-service/","text":"tripkit-android / com.skedgo.tripkit / TransitService TransitService @Immutable @TypeAdapters interface TransitService Functions Name Summary realtimeAlternativeVehicle abstract fun realtimeAlternativeVehicle(): MutableList < RealTimeVehicle !>! realTimeStatus abstract fun realTimeStatus(): String ! realtimeVehicle abstract fun realtimeVehicle(): RealTimeVehicle ! shapes abstract fun shapes(): MutableList < Shape !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-service/#transitservice","text":"@Immutable @TypeAdapters interface TransitService","title":"TransitService"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-service/#functions","text":"Name Summary realtimeAlternativeVehicle abstract fun realtimeAlternativeVehicle(): MutableList < RealTimeVehicle !>! realTimeStatus abstract fun realTimeStatus(): String ! realtimeVehicle abstract fun realtimeVehicle(): RealTimeVehicle ! shapes abstract fun shapes(): MutableList < Shape !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-service/real-time-status/","text":"tripkit-android / com.skedgo.tripkit / TransitService / realTimeStatus realTimeStatus abstract fun realTimeStatus(): String !","title":"Real time status"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-service/real-time-status/#realtimestatus","text":"abstract fun realTimeStatus(): String !","title":"realTimeStatus"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-service/realtime-alternative-vehicle/","text":"tripkit-android / com.skedgo.tripkit / TransitService / realtimeAlternativeVehicle realtimeAlternativeVehicle abstract fun realtimeAlternativeVehicle(): MutableList < RealTimeVehicle !>!","title":"Realtime alternative vehicle"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-service/realtime-alternative-vehicle/#realtimealternativevehicle","text":"abstract fun realtimeAlternativeVehicle(): MutableList < RealTimeVehicle !>!","title":"realtimeAlternativeVehicle"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-service/realtime-vehicle/","text":"tripkit-android / com.skedgo.tripkit / TransitService / realtimeVehicle realtimeVehicle abstract fun realtimeVehicle(): RealTimeVehicle !","title":"Realtime vehicle"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-service/realtime-vehicle/#realtimevehicle","text":"abstract fun realtimeVehicle(): RealTimeVehicle !","title":"realtimeVehicle"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-service/shapes/","text":"tripkit-android / com.skedgo.tripkit / TransitService / shapes shapes abstract fun shapes(): MutableList < Shape !>!","title":"Shapes"},{"location":"tripkit-android/com.skedgo.tripkit/-transit-service/shapes/#shapes","text":"abstract fun shapes(): MutableList < Shape !>!","title":"shapes"},{"location":"tripkit-android/com.skedgo.tripkit/-transport-mode-filter/","text":"tripkit-android / com.skedgo.tripkit / TransportModeFilter TransportModeFilter interface TransportModeFilter Functions Name Summary filterModes open fun filterModes(allTransportModes: List < String >): List < String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-transport-mode-filter/#transportmodefilter","text":"interface TransportModeFilter","title":"TransportModeFilter"},{"location":"tripkit-android/com.skedgo.tripkit/-transport-mode-filter/#functions","text":"Name Summary filterModes open fun filterModes(allTransportModes: List < String >): List < String >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-transport-mode-filter/filter-modes/","text":"tripkit-android / com.skedgo.tripkit / TransportModeFilter / filterModes filterModes open fun filterModes(allTransportModes: List < String >): List < String > Parameters allTransportModes - is all transport modes supported by the routing region Return Return modes that will be included in routing requests","title":"Filter modes"},{"location":"tripkit-android/com.skedgo.tripkit/-transport-mode-filter/filter-modes/#filtermodes","text":"open fun filterModes(allTransportModes: List < String >): List < String >","title":"filterModes"},{"location":"tripkit-android/com.skedgo.tripkit/-transport-mode-filter/filter-modes/#parameters","text":"allTransportModes - is all transport modes supported by the routing region Return Return modes that will be included in routing requests","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/","text":"tripkit-android / com.skedgo.tripkit / TripPreferences TripPreferences interface TripPreferences Functions Name Summary isConcessionPricingPreferred This option should be used when `[ RegionInfo#supportsConcessionPricing() ](../../com.skedgo.tripkit.data.tsp/-region-info/supports-concession-pricing.md) is true. abstract fun isConcessionPricingPreferred(): [ Boolean`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html ) isWheelchairPreferred This option should be used when `[ RegionInfo#transitWheelchairAccessibility() ](../../com.skedgo.tripkit.data.tsp/-region-info/transit-wheelchair-accessibility.md) is true. abstract fun isWheelchairPreferred(): [ Boolean`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html ) setConcessionPricingPreferred abstract fun setConcessionPricingPreferred(isConcessionPricingPreferred: Boolean ): Unit setWheelchairPreferred abstract fun setWheelchairPreferred(isWheelchairPreferred: Boolean ): Unit whenConcessionPricingPreferenceChanges abstract fun whenConcessionPricingPreferenceChanges(): Observable< Boolean !>! whenWheelchairPreferenceChanges abstract fun whenWheelchairPreferenceChanges(): Observable< Boolean !>! Inheritors Name Summary DefaultTripPreferences class DefaultTripPreferences : TripPreferences","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/#trippreferences","text":"interface TripPreferences","title":"TripPreferences"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/#functions","text":"Name Summary isConcessionPricingPreferred This option should be used when `[ RegionInfo#supportsConcessionPricing() ](../../com.skedgo.tripkit.data.tsp/-region-info/supports-concession-pricing.md) is true. abstract fun isConcessionPricingPreferred(): [ Boolean`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html ) isWheelchairPreferred This option should be used when `[ RegionInfo#transitWheelchairAccessibility() ](../../com.skedgo.tripkit.data.tsp/-region-info/transit-wheelchair-accessibility.md) is true. abstract fun isWheelchairPreferred(): [ Boolean`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html ) setConcessionPricingPreferred abstract fun setConcessionPricingPreferred(isConcessionPricingPreferred: Boolean ): Unit setWheelchairPreferred abstract fun setWheelchairPreferred(isWheelchairPreferred: Boolean ): Unit whenConcessionPricingPreferenceChanges abstract fun whenConcessionPricingPreferenceChanges(): Observable< Boolean !>! whenWheelchairPreferenceChanges abstract fun whenWheelchairPreferenceChanges(): Observable< Boolean !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/#inheritors","text":"Name Summary DefaultTripPreferences class DefaultTripPreferences : TripPreferences","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/is-concession-pricing-preferred/","text":"tripkit-android / com.skedgo.tripkit / TripPreferences / isConcessionPricingPreferred isConcessionPricingPreferred abstract fun isConcessionPricingPreferred(): Boolean This option should be used when `[ RegionInfo#supportsConcessionPricing()`](../../com.skedgo.tripkit.data.tsp/-region-info/supports-concession-pricing.md) is true.","title":"Is concession pricing preferred"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/is-concession-pricing-preferred/#isconcessionpricingpreferred","text":"abstract fun isConcessionPricingPreferred(): Boolean This option should be used when `[ RegionInfo#supportsConcessionPricing()`](../../com.skedgo.tripkit.data.tsp/-region-info/supports-concession-pricing.md) is true.","title":"isConcessionPricingPreferred"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/is-wheelchair-preferred/","text":"tripkit-android / com.skedgo.tripkit / TripPreferences / isWheelchairPreferred isWheelchairPreferred abstract fun isWheelchairPreferred(): Boolean This option should be used when `[ RegionInfo#transitWheelchairAccessibility()`](../../com.skedgo.tripkit.data.tsp/-region-info/transit-wheelchair-accessibility.md) is true.","title":"Is wheelchair preferred"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/is-wheelchair-preferred/#iswheelchairpreferred","text":"abstract fun isWheelchairPreferred(): Boolean This option should be used when `[ RegionInfo#transitWheelchairAccessibility()`](../../com.skedgo.tripkit.data.tsp/-region-info/transit-wheelchair-accessibility.md) is true.","title":"isWheelchairPreferred"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/set-concession-pricing-preferred/","text":"tripkit-android / com.skedgo.tripkit / TripPreferences / setConcessionPricingPreferred setConcessionPricingPreferred abstract fun setConcessionPricingPreferred(isConcessionPricingPreferred: Boolean ): Unit","title":"Set concession pricing preferred"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/set-concession-pricing-preferred/#setconcessionpricingpreferred","text":"abstract fun setConcessionPricingPreferred(isConcessionPricingPreferred: Boolean ): Unit","title":"setConcessionPricingPreferred"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/set-wheelchair-preferred/","text":"tripkit-android / com.skedgo.tripkit / TripPreferences / setWheelchairPreferred setWheelchairPreferred abstract fun setWheelchairPreferred(isWheelchairPreferred: Boolean ): Unit","title":"Set wheelchair preferred"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/set-wheelchair-preferred/#setwheelchairpreferred","text":"abstract fun setWheelchairPreferred(isWheelchairPreferred: Boolean ): Unit","title":"setWheelchairPreferred"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/when-concession-pricing-preference-changes/","text":"tripkit-android / com.skedgo.tripkit / TripPreferences / whenConcessionPricingPreferenceChanges whenConcessionPricingPreferenceChanges abstract fun whenConcessionPricingPreferenceChanges(): Observable< Boolean !>! Return Observable< Boolean !>!: An [`Observable`](#) which emits value of #isConcessionPricingPreferred() when it has changed.","title":"When concession pricing preference changes"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/when-concession-pricing-preference-changes/#whenconcessionpricingpreferencechanges","text":"abstract fun whenConcessionPricingPreferenceChanges(): Observable< Boolean !>! Return Observable< Boolean !>!: An [`Observable`](#) which emits value of #isConcessionPricingPreferred() when it has changed.","title":"whenConcessionPricingPreferenceChanges"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/when-wheelchair-preference-changes/","text":"tripkit-android / com.skedgo.tripkit / TripPreferences / whenWheelchairPreferenceChanges whenWheelchairPreferenceChanges abstract fun whenWheelchairPreferenceChanges(): Observable< Boolean !>! Return Observable< Boolean !>!: An [`Observable`](#) which emits value of #isWheelchairPreferred() when it has changed.","title":"When wheelchair preference changes"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-preferences/when-wheelchair-preference-changes/#whenwheelchairpreferencechanges","text":"abstract fun whenWheelchairPreferenceChanges(): Observable< Boolean !>! Return Observable< Boolean !>!: An [`Observable`](#) which emits value of #isWheelchairPreferred() when it has changed.","title":"whenWheelchairPreferenceChanges"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-region-resolver/","text":"tripkit-android / com.skedgo.tripkit / TripRegionResolver TripRegionResolver abstract class TripRegionResolver : BiFunction< Location !, Location !, Observable< Region !>!> Constructors Name Summary <init> TripRegionResolver() Functions Name Summary create open static fun create(regionService: RegionService !): TripRegionResolver !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-region-resolver/#tripregionresolver","text":"abstract class TripRegionResolver : BiFunction< Location !, Location !, Observable< Region !>!>","title":"TripRegionResolver"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-region-resolver/#constructors","text":"Name Summary <init> TripRegionResolver()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-region-resolver/#functions","text":"Name Summary create open static fun create(regionService: RegionService !): TripRegionResolver !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-region-resolver/-init-/","text":"tripkit-android / com.skedgo.tripkit / TripRegionResolver / <init> <init> TripRegionResolver()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit/-trip-region-resolver/-init-/#init","text":"TripRegionResolver()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-region-resolver/create/","text":"tripkit-android / com.skedgo.tripkit / TripRegionResolver / create create open static fun create(regionService: RegionService !): TripRegionResolver !","title":"Create"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-region-resolver/create/#create","text":"open static fun create(regionService: RegionService !): TripRegionResolver !","title":"create"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-updater/","text":"tripkit-android / com.skedgo.tripkit / TripUpdater TripUpdater interface TripUpdater Functions Name Summary getUpdateAsync abstract fun getUpdateAsync(trip: Trip ): Observable< Trip !> abstract fun getUpdateAsync(tripUrl: String ): Observable< Trip !>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-updater/#tripupdater","text":"interface TripUpdater","title":"TripUpdater"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-updater/#functions","text":"Name Summary getUpdateAsync abstract fun getUpdateAsync(trip: Trip ): Observable< Trip !> abstract fun getUpdateAsync(tripUrl: String ): Observable< Trip !>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-updater/get-update-async/","text":"tripkit-android / com.skedgo.tripkit / TripUpdater / getUpdateAsync getUpdateAsync @NonNull abstract fun getUpdateAsync(@NonNull trip: Trip ): Observable< Trip !> @NonNull abstract fun getUpdateAsync(@NonNull tripUrl: String ): Observable< Trip !>","title":"Get update async"},{"location":"tripkit-android/com.skedgo.tripkit/-trip-updater/get-update-async/#getupdateasync","text":"@NonNull abstract fun getUpdateAsync(@NonNull trip: Trip ): Observable< Trip !> @NonNull abstract fun getUpdateAsync(@NonNull tripUrl: String ): Observable< Trip !>","title":"getUpdateAsync"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/","text":"tripkit-android / com.skedgo.tripkit.a2brouting Package com.skedgo.tripkit.a2brouting Types Name Summary A2bRoutingApi Calculates door-to-door trips for the specified mode(s). See more at https://skedgo.github.io/tripgo-api/#tag/Routing%2Fpaths%2F~1routing.json%2Fget . interface A2bRoutingApi A2bRoutingDataModule class A2bRoutingDataModule A2bRoutingRequest abstract class A2bRoutingRequest FailoverA2bRoutingApi A wrapper of `[ A2bRoutingApi ](-a2b-routing-api/index.md) that requests routing.json on multiple servers w/ failover. open class FailoverA2bRoutingApi` FillIdentifiers Fills id for `[ Trip ](../com.skedgo.tripkit.routing/-trip/index.md). class FillIdentifiers : Function< [ MutableList ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/index.html) < [ TripGroup ](../com.skedgo.tripkit.routing/-trip-group/index.md) !>!, [ MutableList ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/index.html) < [ TripGroup ](../com.skedgo.tripkit.routing/-trip-group/index.md) !>!>` GetNonTravelledLineForTrip class GetNonTravelledLineForTrip GetTravelledLineForTrip class GetTravelledLineForTrip RequestTime sealed class RequestTime RouteService interface RouteService SelectBestDisplayTrip Selects display trip which has lowest weighted score. class SelectBestDisplayTrip : Function< TripGroup !, TripGroup !> SingleRouteService A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started. class SingleRouteService : RouteService ToWeightingProfileString object ToWeightingProfileString Extensions for External Classes Name Summary kotlin.Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/#package-comskedgotripkita2brouting","text":"","title":"Package com.skedgo.tripkit.a2brouting"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/#types","text":"Name Summary A2bRoutingApi Calculates door-to-door trips for the specified mode(s). See more at https://skedgo.github.io/tripgo-api/#tag/Routing%2Fpaths%2F~1routing.json%2Fget . interface A2bRoutingApi A2bRoutingDataModule class A2bRoutingDataModule A2bRoutingRequest abstract class A2bRoutingRequest FailoverA2bRoutingApi A wrapper of `[ A2bRoutingApi ](-a2b-routing-api/index.md) that requests routing.json on multiple servers w/ failover. open class FailoverA2bRoutingApi` FillIdentifiers Fills id for `[ Trip ](../com.skedgo.tripkit.routing/-trip/index.md). class FillIdentifiers : Function< [ MutableList ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/index.html) < [ TripGroup ](../com.skedgo.tripkit.routing/-trip-group/index.md) !>!, [ MutableList ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/index.html) < [ TripGroup ](../com.skedgo.tripkit.routing/-trip-group/index.md) !>!>` GetNonTravelledLineForTrip class GetNonTravelledLineForTrip GetTravelledLineForTrip class GetTravelledLineForTrip RequestTime sealed class RequestTime RouteService interface RouteService SelectBestDisplayTrip Selects display trip which has lowest weighted score. class SelectBestDisplayTrip : Function< TripGroup !, TripGroup !> SingleRouteService A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started. class SingleRouteService : RouteService ToWeightingProfileString object ToWeightingProfileString","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/#extensions-for-external-classes","text":"Name Summary kotlin.Int","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-api/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingApi A2bRoutingApi interface A2bRoutingApi Calculates door-to-door trips for the specified mode(s). See more at https://skedgo.github.io/tripgo-api/#tag/Routing%2Fpaths%2F~1routing.json%2Fget . Functions Name Summary execute abstract fun execute(url: String !, modes: MutableList < String !>!, excludedTransitModes: MutableList < String !>!, excludeStops: MutableList < String !>!, options: MutableMap < String !, Any !>!): Observable< RoutingResponse !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-api/#a2broutingapi","text":"interface A2bRoutingApi Calculates door-to-door trips for the specified mode(s). See more at https://skedgo.github.io/tripgo-api/#tag/Routing%2Fpaths%2F~1routing.json%2Fget .","title":"A2bRoutingApi"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-api/#functions","text":"Name Summary execute abstract fun execute(url: String !, modes: MutableList < String !>!, excludedTransitModes: MutableList < String !>!, excludeStops: MutableList < String !>!, options: MutableMap < String !, Any !>!): Observable< RoutingResponse !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-api/execute/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingApi / execute execute @GET abstract fun execute(@Url url: String !, @Query(\"modes\") modes: MutableList < String !>!, @Query(\"avoid\") excludedTransitModes: MutableList < String !>!, @Query(\"avoidStops\") excludeStops: MutableList < String !>!, @QueryMap options: MutableMap < String !, Any !>!): Observable< RoutingResponse !>!","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-api/execute/#execute","text":"@GET abstract fun execute(@Url url: String !, @Query(\"modes\") modes: MutableList < String !>!, @Query(\"avoid\") excludedTransitModes: MutableList < String !>!, @Query(\"avoidStops\") excludeStops: MutableList < String !>!, @QueryMap options: MutableMap < String !, Any !>!): Observable< RoutingResponse !>!","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-data-module/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingDataModule A2bRoutingDataModule @Module class A2bRoutingDataModule Constructors Name Summary <init> A2bRoutingDataModule()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-data-module/#a2broutingdatamodule","text":"@Module class A2bRoutingDataModule","title":"A2bRoutingDataModule"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-data-module/#constructors","text":"Name Summary <init> A2bRoutingDataModule()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-data-module/-init-/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingDataModule / <init> <init> A2bRoutingDataModule()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-data-module/-init-/#init","text":"A2bRoutingDataModule()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest A2bRoutingRequest @Immutable abstract class A2bRoutingRequest Types Name Summary Builder interface Builder Constructors Name Summary <init> A2bRoutingRequest() Properties Name Summary destination abstract val destination: Pair < Double , Double > destinationAddress abstract val destinationAddress: String ? origin abstract val origin: Pair < Double , Double > originAddress abstract val originAddress: String ? time abstract val time: RequestTime Companion Object Functions Name Summary builder fun builder(): Builder","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/#a2broutingrequest","text":"@Immutable abstract class A2bRoutingRequest","title":"A2bRoutingRequest"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/#types","text":"Name Summary Builder interface Builder","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/#constructors","text":"Name Summary <init> A2bRoutingRequest()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/#properties","text":"Name Summary destination abstract val destination: Pair < Double , Double > destinationAddress abstract val destinationAddress: String ? origin abstract val origin: Pair < Double , Double > originAddress abstract val originAddress: String ? time abstract val time: RequestTime","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/#companion-object-functions","text":"Name Summary builder fun builder(): Builder","title":"Companion Object Functions"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-init-/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / <init> <init> A2bRoutingRequest()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-init-/#init","text":"A2bRoutingRequest()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/builder/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / builder builder fun builder(): Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/builder/#builder","text":"fun builder(): Builder","title":"builder"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/destination-address/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / destinationAddress destinationAddress abstract val destinationAddress: String ?","title":"Destination address"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/destination-address/#destinationaddress","text":"abstract val destinationAddress: String ?","title":"destinationAddress"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/destination/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / destination destination abstract val destination: Pair < Double , Double >","title":"Destination"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/destination/#destination","text":"abstract val destination: Pair < Double , Double >","title":"destination"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/origin-address/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / originAddress originAddress abstract val originAddress: String ?","title":"Origin address"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/origin-address/#originaddress","text":"abstract val originAddress: String ?","title":"originAddress"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/origin/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / origin origin abstract val origin: Pair < Double , Double >","title":"Origin"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/origin/#origin","text":"abstract val origin: Pair < Double , Double >","title":"origin"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/time/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / time time abstract val time: RequestTime","title":"Time"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/time/#time","text":"abstract val time: RequestTime","title":"time"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / Builder Builder interface Builder Functions Name Summary build abstract fun build(): A2bRoutingRequest destination abstract fun destination(destination: Pair < Double , Double >): Builder destinationAddress abstract fun destinationAddress(destinationAddress: String ?): Builder origin abstract fun origin(origin: Pair < Double , Double >): Builder originAddress abstract fun originAddress(originAddress: String ?): Builder time abstract fun time(time: RequestTime ): Builder","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/#builder","text":"interface Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/#functions","text":"Name Summary build abstract fun build(): A2bRoutingRequest destination abstract fun destination(destination: Pair < Double , Double >): Builder destinationAddress abstract fun destinationAddress(destinationAddress: String ?): Builder origin abstract fun origin(origin: Pair < Double , Double >): Builder originAddress abstract fun originAddress(originAddress: String ?): Builder time abstract fun time(time: RequestTime ): Builder","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / Builder / build build abstract fun build(): A2bRoutingRequest","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/build/#build","text":"abstract fun build(): A2bRoutingRequest","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/destination-address/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / Builder / destinationAddress destinationAddress abstract fun destinationAddress(destinationAddress: String ?): Builder","title":"Destination address"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/destination-address/#destinationaddress","text":"abstract fun destinationAddress(destinationAddress: String ?): Builder","title":"destinationAddress"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/destination/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / Builder / destination destination abstract fun destination(destination: Pair < Double , Double >): Builder","title":"Destination"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/destination/#destination","text":"abstract fun destination(destination: Pair < Double , Double >): Builder","title":"destination"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/origin-address/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / Builder / originAddress originAddress abstract fun originAddress(originAddress: String ?): Builder","title":"Origin address"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/origin-address/#originaddress","text":"abstract fun originAddress(originAddress: String ?): Builder","title":"originAddress"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/origin/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / Builder / origin origin abstract fun origin(origin: Pair < Double , Double >): Builder","title":"Origin"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/origin/#origin","text":"abstract fun origin(origin: Pair < Double , Double >): Builder","title":"origin"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/time/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / A2bRoutingRequest / Builder / time time abstract fun time(time: RequestTime ): Builder","title":"Time"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-a2b-routing-request/-builder/time/#time","text":"abstract fun time(time: RequestTime ): Builder","title":"time"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-failover-a2b-routing-api/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / FailoverA2bRoutingApi FailoverA2bRoutingApi open class FailoverA2bRoutingApi A wrapper of `[ A2bRoutingApi ](../-a2b-routing-api/index.md) that requests routing.json` on multiple servers w/ failover. Constructors Name Summary <init> FailoverA2bRoutingApi(resources: Resources!, gson: Gson!, a2bRoutingApi: A2bRoutingApi !) Functions Name Summary fetchRoutesAsync Fetches routes on multiple base urls serially. If it fails on one url, it'll failover on next url. open fun fetchRoutesAsync(baseUrls: MutableList < String !>!, modes: MutableList < String !>!, excludedTransitModes: MutableList < String !>!, excludeStops: MutableList < String !>!, options: MutableMap < String !, Any !>!): Observable< MutableList < TripGroup !>!>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-failover-a2b-routing-api/#failovera2broutingapi","text":"open class FailoverA2bRoutingApi A wrapper of `[ A2bRoutingApi ](../-a2b-routing-api/index.md) that requests routing.json` on multiple servers w/ failover.","title":"FailoverA2bRoutingApi"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-failover-a2b-routing-api/#constructors","text":"Name Summary <init> FailoverA2bRoutingApi(resources: Resources!, gson: Gson!, a2bRoutingApi: A2bRoutingApi !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-failover-a2b-routing-api/#functions","text":"Name Summary fetchRoutesAsync Fetches routes on multiple base urls serially. If it fails on one url, it'll failover on next url. open fun fetchRoutesAsync(baseUrls: MutableList < String !>!, modes: MutableList < String !>!, excludedTransitModes: MutableList < String !>!, excludeStops: MutableList < String !>!, options: MutableMap < String !, Any !>!): Observable< MutableList < TripGroup !>!>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-failover-a2b-routing-api/-init-/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / FailoverA2bRoutingApi / <init> <init> FailoverA2bRoutingApi(resources: Resources!, gson: Gson!, a2bRoutingApi: A2bRoutingApi !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-failover-a2b-routing-api/-init-/#init","text":"FailoverA2bRoutingApi(resources: Resources!, gson: Gson!, a2bRoutingApi: A2bRoutingApi !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-failover-a2b-routing-api/fetch-routes-async/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / FailoverA2bRoutingApi / fetchRoutesAsync fetchRoutesAsync open fun fetchRoutesAsync(baseUrls: MutableList < String !>!, modes: MutableList < String !>!, excludedTransitModes: MutableList < String !>!, excludeStops: MutableList < String !>!, options: MutableMap < String !, Any !>!): Observable< MutableList < TripGroup !>!>! Fetches routes on multiple base urls serially. If it fails on one url, it'll failover on next url. Parameters baseUrls - MutableList < String !>!: Can be obtained by `[ Region#getURLs()`](../../com.skedgo.tripkit.common.model/-region/get-u-r-ls.md).","title":"Fetch routes async"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-failover-a2b-routing-api/fetch-routes-async/#fetchroutesasync","text":"open fun fetchRoutesAsync(baseUrls: MutableList < String !>!, modes: MutableList < String !>!, excludedTransitModes: MutableList < String !>!, excludeStops: MutableList < String !>!, options: MutableMap < String !, Any !>!): Observable< MutableList < TripGroup !>!>! Fetches routes on multiple base urls serially. If it fails on one url, it'll failover on next url.","title":"fetchRoutesAsync"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-failover-a2b-routing-api/fetch-routes-async/#parameters","text":"baseUrls - MutableList < String !>!: Can be obtained by `[ Region#getURLs()`](../../com.skedgo.tripkit.common.model/-region/get-u-r-ls.md).","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-fill-identifiers/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / FillIdentifiers FillIdentifiers class FillIdentifiers : Function< MutableList < TripGroup !>!, MutableList < TripGroup !>!> Fills id for `[ Trip`](../../com.skedgo.tripkit.routing/-trip/index.md). Constructors Name Summary <init> Fills id for `[ Trip ](../../com.skedgo.tripkit.routing/-trip/index.md). FillIdentifiers()` Functions Name Summary apply fun apply(groups: MutableList < TripGroup !>): MutableList < TripGroup !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-fill-identifiers/#fillidentifiers","text":"class FillIdentifiers : Function< MutableList < TripGroup !>!, MutableList < TripGroup !>!> Fills id for `[ Trip`](../../com.skedgo.tripkit.routing/-trip/index.md).","title":"FillIdentifiers"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-fill-identifiers/#constructors","text":"Name Summary <init> Fills id for `[ Trip ](../../com.skedgo.tripkit.routing/-trip/index.md). FillIdentifiers()`","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-fill-identifiers/#functions","text":"Name Summary apply fun apply(groups: MutableList < TripGroup !>): MutableList < TripGroup !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-fill-identifiers/-init-/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / FillIdentifiers / <init> <init> FillIdentifiers() Fills id for `[ Trip`](../../com.skedgo.tripkit.routing/-trip/index.md).","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-fill-identifiers/-init-/#init","text":"FillIdentifiers() Fills id for `[ Trip`](../../com.skedgo.tripkit.routing/-trip/index.md).","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-fill-identifiers/apply/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / FillIdentifiers / apply apply fun apply(groups: MutableList < TripGroup !>): MutableList < TripGroup !>!","title":"Apply"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-fill-identifiers/apply/#apply","text":"fun apply(groups: MutableList < TripGroup !>): MutableList < TripGroup !>!","title":"apply"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-non-travelled-line-for-trip/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / GetNonTravelledLineForTrip GetNonTravelledLineForTrip class GetNonTravelledLineForTrip Constructors Name Summary <init> GetNonTravelledLineForTrip() Functions Name Summary execute fun execute(segments: List < TripSegment >): Observable< List < LineSegment >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-non-travelled-line-for-trip/#getnontravelledlinefortrip","text":"class GetNonTravelledLineForTrip","title":"GetNonTravelledLineForTrip"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-non-travelled-line-for-trip/#constructors","text":"Name Summary <init> GetNonTravelledLineForTrip()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-non-travelled-line-for-trip/#functions","text":"Name Summary execute fun execute(segments: List < TripSegment >): Observable< List < LineSegment >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-non-travelled-line-for-trip/-init-/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / GetNonTravelledLineForTrip / <init> <init> GetNonTravelledLineForTrip()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-non-travelled-line-for-trip/-init-/#init","text":"GetNonTravelledLineForTrip()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-non-travelled-line-for-trip/execute/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / GetNonTravelledLineForTrip / execute execute fun execute(segments: List < TripSegment >): Observable< List < LineSegment >>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-non-travelled-line-for-trip/execute/#execute","text":"fun execute(segments: List < TripSegment >): Observable< List < LineSegment >>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-travelled-line-for-trip/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / GetTravelledLineForTrip GetTravelledLineForTrip class GetTravelledLineForTrip Constructors Name Summary <init> GetTravelledLineForTrip() Functions Name Summary execute fun execute(segments: List < TripSegment >?): Observable< List < LineSegment >> getColorForWheelchairAndBicycle fun getColorForWheelchairAndBicycle(street: Street , modeId: String ?): Int ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-travelled-line-for-trip/#gettravelledlinefortrip","text":"class GetTravelledLineForTrip","title":"GetTravelledLineForTrip"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-travelled-line-for-trip/#constructors","text":"Name Summary <init> GetTravelledLineForTrip()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-travelled-line-for-trip/#functions","text":"Name Summary execute fun execute(segments: List < TripSegment >?): Observable< List < LineSegment >> getColorForWheelchairAndBicycle fun getColorForWheelchairAndBicycle(street: Street , modeId: String ?): Int ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-travelled-line-for-trip/-init-/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / GetTravelledLineForTrip / <init> <init> GetTravelledLineForTrip()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-travelled-line-for-trip/-init-/#init","text":"GetTravelledLineForTrip()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-travelled-line-for-trip/execute/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / GetTravelledLineForTrip / execute execute fun execute(segments: List < TripSegment >?): Observable< List < LineSegment >>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-travelled-line-for-trip/execute/#execute","text":"fun execute(segments: List < TripSegment >?): Observable< List < LineSegment >>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-travelled-line-for-trip/get-color-for-wheelchair-and-bicycle/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / GetTravelledLineForTrip / getColorForWheelchairAndBicycle getColorForWheelchairAndBicycle fun getColorForWheelchairAndBicycle(street: Street , modeId: String ?): Int ?","title":"Get color for wheelchair and bicycle"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-get-travelled-line-for-trip/get-color-for-wheelchair-and-bicycle/#getcolorforwheelchairandbicycle","text":"fun getColorForWheelchairAndBicycle(street: Street , modeId: String ?): Int ?","title":"getColorForWheelchairAndBicycle"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RequestTime RequestTime sealed class RequestTime Types Name Summary ArriveBefore data class ArriveBefore : RequestTime DepartAfter data class DepartAfter : RequestTime DepartNow data class DepartNow : RequestTime","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/#requesttime","text":"sealed class RequestTime","title":"RequestTime"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/#types","text":"Name Summary ArriveBefore data class ArriveBefore : RequestTime DepartAfter data class DepartAfter : RequestTime DepartNow data class DepartNow : RequestTime","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-arrive-before/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RequestTime / ArriveBefore ArriveBefore data class ArriveBefore : RequestTime Constructors Name Summary <init> ArriveBefore(dateTime: DateTime) Properties Name Summary dateTime val dateTime: DateTime","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-arrive-before/#arrivebefore","text":"data class ArriveBefore : RequestTime","title":"ArriveBefore"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-arrive-before/#constructors","text":"Name Summary <init> ArriveBefore(dateTime: DateTime)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-arrive-before/#properties","text":"Name Summary dateTime val dateTime: DateTime","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-arrive-before/-init-/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RequestTime / ArriveBefore / <init> <init> ArriveBefore(dateTime: DateTime)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-arrive-before/-init-/#init","text":"ArriveBefore(dateTime: DateTime)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-arrive-before/date-time/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RequestTime / ArriveBefore / dateTime dateTime val dateTime: DateTime","title":"Date time"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-arrive-before/date-time/#datetime","text":"val dateTime: DateTime","title":"dateTime"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-after/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RequestTime / DepartAfter DepartAfter data class DepartAfter : RequestTime Constructors Name Summary <init> DepartAfter(dateTime: DateTime) Properties Name Summary dateTime val dateTime: DateTime","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-after/#departafter","text":"data class DepartAfter : RequestTime","title":"DepartAfter"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-after/#constructors","text":"Name Summary <init> DepartAfter(dateTime: DateTime)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-after/#properties","text":"Name Summary dateTime val dateTime: DateTime","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-after/-init-/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RequestTime / DepartAfter / <init> <init> DepartAfter(dateTime: DateTime)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-after/-init-/#init","text":"DepartAfter(dateTime: DateTime)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-after/date-time/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RequestTime / DepartAfter / dateTime dateTime val dateTime: DateTime","title":"Date time"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-after/date-time/#datetime","text":"val dateTime: DateTime","title":"dateTime"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-now/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RequestTime / DepartNow DepartNow data class DepartNow : RequestTime Constructors Name Summary <init> DepartNow(getNow: () -> DateTime) Properties Name Summary getNow val getNow: () -> DateTime","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-now/#departnow","text":"data class DepartNow : RequestTime","title":"DepartNow"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-now/#constructors","text":"Name Summary <init> DepartNow(getNow: () -> DateTime)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-now/#properties","text":"Name Summary getNow val getNow: () -> DateTime","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-now/-init-/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RequestTime / DepartNow / <init> <init> DepartNow(getNow: () -> DateTime)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-now/-init-/#init","text":"DepartNow(getNow: () -> DateTime)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-now/get-now/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RequestTime / DepartNow / getNow getNow val getNow: () -> DateTime","title":"Get now"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-request-time/-depart-now/get-now/#getnow","text":"val getNow: () -> DateTime","title":"getNow"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-route-service/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RouteService RouteService interface RouteService Functions Name Summary routeAsync To find routes from A to B asynchronously. abstract fun routeAsync(query: Query , transportModeFilter: TransportModeFilter = object : TransportModeFilter {}, transitModeFilter: TransitModeFilter = object : TransitModeFilter {}): Observable< List < TripGroup >> Inheritors Name Summary SingleRouteService A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started. class SingleRouteService : RouteService","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-route-service/#routeservice","text":"interface RouteService","title":"RouteService"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-route-service/#functions","text":"Name Summary routeAsync To find routes from A to B asynchronously. abstract fun routeAsync(query: Query , transportModeFilter: TransportModeFilter = object : TransportModeFilter {}, transitModeFilter: TransitModeFilter = object : TransitModeFilter {}): Observable< List < TripGroup >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-route-service/#inheritors","text":"Name Summary SingleRouteService A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started. class SingleRouteService : RouteService","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-route-service/route-async/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / RouteService / routeAsync routeAsync abstract fun routeAsync(query: Query , transportModeFilter: TransportModeFilter = object : TransportModeFilter {}, transitModeFilter: TransitModeFilter = object : TransitModeFilter {}): Observable< List < TripGroup >> To find routes from A to B asynchronously. Return An Observable which emits multiple of list of TripGroup s, and then completes. That means, when we subscribe it via Observable.subscribe , it will emit the first list of TripGroup s. And then it will emit the second list of TripGroup s. There may be a certain delay between the emission of the first TripGroup list and the second TripGroup list due to network latency. By default, the returned Observable will operate on rx.schedulers.Schedulers.io . So be sure to Observable.observeOn with rx.android.schedulers.AndroidSchedulers.mainThread to render TripGroup s on the main thread.","title":"Route async"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-route-service/route-async/#routeasync","text":"abstract fun routeAsync(query: Query , transportModeFilter: TransportModeFilter = object : TransportModeFilter {}, transitModeFilter: TransitModeFilter = object : TransitModeFilter {}): Observable< List < TripGroup >> To find routes from A to B asynchronously. Return An Observable which emits multiple of list of TripGroup s, and then completes. That means, when we subscribe it via Observable.subscribe , it will emit the first list of TripGroup s. And then it will emit the second list of TripGroup s. There may be a certain delay between the emission of the first TripGroup list and the second TripGroup list due to network latency. By default, the returned Observable will operate on rx.schedulers.Schedulers.io . So be sure to Observable.observeOn with rx.android.schedulers.AndroidSchedulers.mainThread to render TripGroup s on the main thread.","title":"routeAsync"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-select-best-display-trip/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / SelectBestDisplayTrip SelectBestDisplayTrip class SelectBestDisplayTrip : Function< TripGroup !, TripGroup !> Selects display trip which has lowest weighted score. If we leave after a certain query time, this helps pick the best display trip having start time that is not before the query time. Also, if we arrive by, it makes sure that display trip having end time which is after the query time will not be selected. Constructors Name Summary <init> Selects display trip which has lowest weighted score. SelectBestDisplayTrip() Functions Name Summary apply fun apply(group: TripGroup ): TripGroup","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-select-best-display-trip/#selectbestdisplaytrip","text":"class SelectBestDisplayTrip : Function< TripGroup !, TripGroup !> Selects display trip which has lowest weighted score. If we leave after a certain query time, this helps pick the best display trip having start time that is not before the query time. Also, if we arrive by, it makes sure that display trip having end time which is after the query time will not be selected.","title":"SelectBestDisplayTrip"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-select-best-display-trip/#constructors","text":"Name Summary <init> Selects display trip which has lowest weighted score. SelectBestDisplayTrip()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-select-best-display-trip/#functions","text":"Name Summary apply fun apply(group: TripGroup ): TripGroup","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-select-best-display-trip/-init-/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / SelectBestDisplayTrip / <init> <init> SelectBestDisplayTrip() Selects display trip which has lowest weighted score. If we leave after a certain query time, this helps pick the best display trip having start time that is not before the query time. Also, if we arrive by, it makes sure that display trip having end time which is after the query time will not be selected.","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-select-best-display-trip/-init-/#init","text":"SelectBestDisplayTrip() Selects display trip which has lowest weighted score. If we leave after a certain query time, this helps pick the best display trip having start time that is not before the query time. Also, if we arrive by, it makes sure that display trip having end time which is after the query time will not be selected.","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-select-best-display-trip/apply/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / SelectBestDisplayTrip / apply apply @NonNull fun apply(@NonNull group: TripGroup ): TripGroup","title":"Apply"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-select-best-display-trip/apply/#apply","text":"@NonNull fun apply(@NonNull group: TripGroup ): TripGroup","title":"apply"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-single-route-service/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / SingleRouteService SingleRouteService class SingleRouteService : RouteService A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started. Constructors Name Summary <init> A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started. SingleRouteService(routeService: RouteService ) Functions Name Summary routeAsync To find routes from A to B asynchronously. fun routeAsync(query: Query , transportModeFilter: TransportModeFilter , transitModeFilter: TransitModeFilter ): Observable< List < TripGroup >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-single-route-service/#singlerouteservice","text":"class SingleRouteService : RouteService A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started.","title":"SingleRouteService"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-single-route-service/#constructors","text":"Name Summary <init> A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started. SingleRouteService(routeService: RouteService )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-single-route-service/#functions","text":"Name Summary routeAsync To find routes from A to B asynchronously. fun routeAsync(query: Query , transportModeFilter: TransportModeFilter , transitModeFilter: TransitModeFilter ): Observable< List < TripGroup >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-single-route-service/-init-/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / SingleRouteService / <init> <init> SingleRouteService(routeService: RouteService ) A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started.","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-single-route-service/-init-/#init","text":"SingleRouteService(routeService: RouteService ) A decorator of RouteService that performs only one routing request. For example, if we ask it to route from A to B, and while that request is still progress and later we ask it to route from C to B, then the request A-to-B will be cancelled. Cancellation is invoked asynchronously. That means the execution of the request C-to-D doesn't have to wait for the cancellation of the request A-to-B to be done to get started.","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-single-route-service/route-async/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / SingleRouteService / routeAsync routeAsync fun routeAsync(query: Query , transportModeFilter: TransportModeFilter , transitModeFilter: TransitModeFilter ): Observable< List < TripGroup >> To find routes from A to B asynchronously. Return An Observable which emits multiple of list of TripGroup s, and then completes. That means, when we subscribe it via Observable.subscribe , it will emit the first list of TripGroup s. And then it will emit the second list of TripGroup s. There may be a certain delay between the emission of the first TripGroup list and the second TripGroup list due to network latency. By default, the returned Observable will operate on rx.schedulers.Schedulers.io . So be sure to Observable.observeOn with rx.android.schedulers.AndroidSchedulers.mainThread to render TripGroup s on the main thread.","title":"Route async"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-single-route-service/route-async/#routeasync","text":"fun routeAsync(query: Query , transportModeFilter: TransportModeFilter , transitModeFilter: TransitModeFilter ): Observable< List < TripGroup >> To find routes from A to B asynchronously. Return An Observable which emits multiple of list of TripGroup s, and then completes. That means, when we subscribe it via Observable.subscribe , it will emit the first list of TripGroup s. And then it will emit the second list of TripGroup s. There may be a certain delay between the emission of the first TripGroup list and the second TripGroup list due to network latency. By default, the returned Observable will operate on rx.schedulers.Schedulers.io . So be sure to Observable.observeOn with rx.android.schedulers.AndroidSchedulers.mainThread to render TripGroup s on the main thread.","title":"routeAsync"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-to-weighting-profile-string/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / ToWeightingProfileString ToWeightingProfileString object ToWeightingProfileString Functions Name Summary toWeightingProfileString fun toWeightingProfileString(query: Query ): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-to-weighting-profile-string/#toweightingprofilestring","text":"object ToWeightingProfileString","title":"ToWeightingProfileString"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-to-weighting-profile-string/#functions","text":"Name Summary toWeightingProfileString fun toWeightingProfileString(query: Query ): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-to-weighting-profile-string/to-weighting-profile-string/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / ToWeightingProfileString / toWeightingProfileString toWeightingProfileString fun toWeightingProfileString(query: Query ): String","title":"To weighting profile string"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/-to-weighting-profile-string/to-weighting-profile-string/#toweightingprofilestring","text":"fun toWeightingProfileString(query: Query ): String","title":"toWeightingProfileString"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/kotlin.-int/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / kotlin.Int Extensions for kotlin.Int Name Summary toProfileWeight Weight values are stored in app as a value in range 0-100 . The server expects weights between 0.1 and 2.0. So we convert them. fun Int .toProfileWeight(): Float","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/kotlin.-int/#extensions-for-kotlinint","text":"Name Summary toProfileWeight Weight values are stored in app as a value in range 0-100 . The server expects weights between 0.1 and 2.0. So we convert them. fun Int .toProfileWeight(): Float","title":"Extensions for kotlin.Int"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/kotlin.-int/to-profile-weight/","text":"tripkit-android / com.skedgo.tripkit.a2brouting / kotlin.Int / toProfileWeight toProfileWeight fun Int .toProfileWeight(): Float Weight values are stored in app as a value in range 0-100 . The server expects weights between 0.1 and 2.0. So we convert them. Receiver Value must be in range of 0 to 100. Return Corresponding value between 0.1 - 2.0.","title":"To profile weight"},{"location":"tripkit-android/com.skedgo.tripkit.a2brouting/kotlin.-int/to-profile-weight/#toprofileweight","text":"fun Int .toProfileWeight(): Float Weight values are stored in app as a value in range 0-100 . The server expects weights between 0.1 and 2.0. So we convert them. Receiver Value must be in range of 0 to 100. Return Corresponding value between 0.1 - 2.0.","title":"toProfileWeight"},{"location":"tripkit-android/com.skedgo.tripkit.agenda/","text":"tripkit-android / com.skedgo.tripkit.agenda Package com.skedgo.tripkit.agenda Types Name Summary ConfigRepository interface ConfigRepository","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.agenda/#package-comskedgotripkitagenda","text":"","title":"Package com.skedgo.tripkit.agenda"},{"location":"tripkit-android/com.skedgo.tripkit.agenda/#types","text":"Name Summary ConfigRepository interface ConfigRepository","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.agenda/-config-repository/","text":"tripkit-android / com.skedgo.tripkit.agenda / ConfigRepository ConfigRepository interface ConfigRepository Functions Name Summary call abstract fun call(): JsonObject Inheritors Name Summary ConfigCreator Represents configuration parameters. class ConfigCreator : ConfigRepository","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.agenda/-config-repository/#configrepository","text":"interface ConfigRepository","title":"ConfigRepository"},{"location":"tripkit-android/com.skedgo.tripkit.agenda/-config-repository/#functions","text":"Name Summary call abstract fun call(): JsonObject","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.agenda/-config-repository/#inheritors","text":"Name Summary ConfigCreator Represents configuration parameters. class ConfigCreator : ConfigRepository","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.agenda/-config-repository/call/","text":"tripkit-android / com.skedgo.tripkit.agenda / ConfigRepository / call call abstract fun call(): JsonObject","title":"Call"},{"location":"tripkit-android/com.skedgo.tripkit.agenda/-config-repository/call/#call","text":"abstract fun call(): JsonObject","title":"call"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/","text":"tripkit-android / com.skedgo.tripkit.alerts Package com.skedgo.tripkit.alerts Types Name Summary AlertBlock interface AlertBlock ModeInfo interface ModeInfo RealtimeAlertApi Use `[ RealtimeAlertService ](-realtime-alert-service/index.md) for easier usages. interface RealtimeAlertApi` RealtimeAlertResponse interface RealtimeAlertResponse RealtimeAlertService open class RealtimeAlertService Route abstract class Route","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/#package-comskedgotripkitalerts","text":"","title":"Package com.skedgo.tripkit.alerts"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/#types","text":"Name Summary AlertBlock interface AlertBlock ModeInfo interface ModeInfo RealtimeAlertApi Use `[ RealtimeAlertService ](-realtime-alert-service/index.md) for easier usages. interface RealtimeAlertApi` RealtimeAlertResponse interface RealtimeAlertResponse RealtimeAlertService open class RealtimeAlertService Route abstract class Route","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/","text":"tripkit-android / com.skedgo.tripkit.alerts / AlertBlock AlertBlock @Immutable @TypeAdapters interface AlertBlock Functions Name Summary alert abstract fun alert(): RealtimeAlert ? disruptionType abstract fun disruptionType(): String ? modeInfo abstract fun modeInfo(): ModeInfo ? operators abstract fun operators(): Array < String !>? routes abstract fun routes(): Array < Route !>? serviceTripIDs abstract fun serviceTripIDs(): Array < String !>? stopCodes abstract fun stopCodes(): Array < String !>?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/#alertblock","text":"@Immutable @TypeAdapters interface AlertBlock","title":"AlertBlock"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/#functions","text":"Name Summary alert abstract fun alert(): RealtimeAlert ? disruptionType abstract fun disruptionType(): String ? modeInfo abstract fun modeInfo(): ModeInfo ? operators abstract fun operators(): Array < String !>? routes abstract fun routes(): Array < Route !>? serviceTripIDs abstract fun serviceTripIDs(): Array < String !>? stopCodes abstract fun stopCodes(): Array < String !>?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/alert/","text":"tripkit-android / com.skedgo.tripkit.alerts / AlertBlock / alert alert @Nullable abstract fun alert(): RealtimeAlert ?","title":"Alert"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/alert/#alert","text":"@Nullable abstract fun alert(): RealtimeAlert ?","title":"alert"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/disruption-type/","text":"tripkit-android / com.skedgo.tripkit.alerts / AlertBlock / disruptionType disruptionType @Nullable abstract fun disruptionType(): String ?","title":"Disruption type"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/disruption-type/#disruptiontype","text":"@Nullable abstract fun disruptionType(): String ?","title":"disruptionType"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/mode-info/","text":"tripkit-android / com.skedgo.tripkit.alerts / AlertBlock / modeInfo modeInfo @Nullable abstract fun modeInfo(): ModeInfo ?","title":"Mode info"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/mode-info/#modeinfo","text":"@Nullable abstract fun modeInfo(): ModeInfo ?","title":"modeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/operators/","text":"tripkit-android / com.skedgo.tripkit.alerts / AlertBlock / operators operators @Nullable abstract fun operators(): Array < String !>?","title":"Operators"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/operators/#operators","text":"@Nullable abstract fun operators(): Array < String !>?","title":"operators"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/routes/","text":"tripkit-android / com.skedgo.tripkit.alerts / AlertBlock / routes routes @Nullable abstract fun routes(): Array < Route !>?","title":"Routes"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/routes/#routes","text":"@Nullable abstract fun routes(): Array < Route !>?","title":"routes"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/service-trip-i-ds/","text":"tripkit-android / com.skedgo.tripkit.alerts / AlertBlock / serviceTripIDs serviceTripIDs @Nullable abstract fun serviceTripIDs(): Array < String !>?","title":"Service trip i ds"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/service-trip-i-ds/#servicetripids","text":"@Nullable abstract fun serviceTripIDs(): Array < String !>?","title":"serviceTripIDs"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/stop-codes/","text":"tripkit-android / com.skedgo.tripkit.alerts / AlertBlock / stopCodes stopCodes @Nullable abstract fun stopCodes(): Array < String !>?","title":"Stop codes"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-alert-block/stop-codes/#stopcodes","text":"@Nullable abstract fun stopCodes(): Array < String !>?","title":"stopCodes"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-mode-info/","text":"tripkit-android / com.skedgo.tripkit.alerts / ModeInfo ModeInfo @Immutable @TypeAdapters interface ModeInfo Functions Name Summary alt abstract fun alt(): String ? color abstract fun color(): ServiceColor ? identifier abstract fun identifier(): String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-mode-info/#modeinfo","text":"@Immutable @TypeAdapters interface ModeInfo","title":"ModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-mode-info/#functions","text":"Name Summary alt abstract fun alt(): String ? color abstract fun color(): ServiceColor ? identifier abstract fun identifier(): String ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-mode-info/alt/","text":"tripkit-android / com.skedgo.tripkit.alerts / ModeInfo / alt alt @Nullable abstract fun alt(): String ?","title":"Alt"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-mode-info/alt/#alt","text":"@Nullable abstract fun alt(): String ?","title":"alt"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-mode-info/color/","text":"tripkit-android / com.skedgo.tripkit.alerts / ModeInfo / color color @Nullable abstract fun color(): ServiceColor ?","title":"Color"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-mode-info/color/#color","text":"@Nullable abstract fun color(): ServiceColor ?","title":"color"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-mode-info/identifier/","text":"tripkit-android / com.skedgo.tripkit.alerts / ModeInfo / identifier identifier @Nullable abstract fun identifier(): String ?","title":"Identifier"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-mode-info/identifier/#identifier","text":"@Nullable abstract fun identifier(): String ?","title":"identifier"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-api/","text":"tripkit-android / com.skedgo.tripkit.alerts / RealtimeAlertApi RealtimeAlertApi interface RealtimeAlertApi Use `[ RealtimeAlertService`](../-realtime-alert-service/index.md) for easier usages. Functions Name Summary fetchRealtimeAlertsAsync See http://skedgo.github.io/tripgo-api/swagger/#!/Transit/get_alerts_transit_json . abstract fun fetchRealtimeAlertsAsync(url: String !, regionName: String !): Observable< RealtimeAlertResponse !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-api/#realtimealertapi","text":"interface RealtimeAlertApi Use `[ RealtimeAlertService`](../-realtime-alert-service/index.md) for easier usages.","title":"RealtimeAlertApi"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-api/#functions","text":"Name Summary fetchRealtimeAlertsAsync See http://skedgo.github.io/tripgo-api/swagger/#!/Transit/get_alerts_transit_json . abstract fun fetchRealtimeAlertsAsync(url: String !, regionName: String !): Observable< RealtimeAlertResponse !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-api/fetch-realtime-alerts-async/","text":"tripkit-android / com.skedgo.tripkit.alerts / RealtimeAlertApi / fetchRealtimeAlertsAsync fetchRealtimeAlertsAsync @GET abstract fun fetchRealtimeAlertsAsync(@Url url: String !, @Query(\"region\") regionName: String !): Observable< RealtimeAlertResponse !>! See http://skedgo.github.io/tripgo-api/swagger/#!/Transit/get_alerts_transit_json . Parameters url - String !: e.g. https://inflationary-br-rj-riodejaneiro.tripgo.skedgo.com/satapp/alerts/transit.json . The url is a composition of an URL from `[ Region#getURLs() ](../../com.skedgo.tripkit.common.model/-region/get-u-r-ls.md) and /alerts/transit.json`. regionName - String !: Which is `[ Region#getName()`](../../com.skedgo.tripkit.common.model/-region/get-name.md).","title":"Fetch realtime alerts async"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-api/fetch-realtime-alerts-async/#fetchrealtimealertsasync","text":"@GET abstract fun fetchRealtimeAlertsAsync(@Url url: String !, @Query(\"region\") regionName: String !): Observable< RealtimeAlertResponse !>! See http://skedgo.github.io/tripgo-api/swagger/#!/Transit/get_alerts_transit_json .","title":"fetchRealtimeAlertsAsync"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-api/fetch-realtime-alerts-async/#parameters","text":"url - String !: e.g. https://inflationary-br-rj-riodejaneiro.tripgo.skedgo.com/satapp/alerts/transit.json . The url is a composition of an URL from `[ Region#getURLs() ](../../com.skedgo.tripkit.common.model/-region/get-u-r-ls.md) and /alerts/transit.json`. regionName - String !: Which is `[ Region#getName()`](../../com.skedgo.tripkit.common.model/-region/get-name.md).","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-response/","text":"tripkit-android / com.skedgo.tripkit.alerts / RealtimeAlertResponse RealtimeAlertResponse @Immutable @TypeAdapters interface RealtimeAlertResponse Functions Name Summary alerts abstract fun alerts(): MutableList < AlertBlock !>?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-response/#realtimealertresponse","text":"@Immutable @TypeAdapters interface RealtimeAlertResponse","title":"RealtimeAlertResponse"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-response/#functions","text":"Name Summary alerts abstract fun alerts(): MutableList < AlertBlock !>?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-response/alerts/","text":"tripkit-android / com.skedgo.tripkit.alerts / RealtimeAlertResponse / alerts alerts @Nullable abstract fun alerts(): MutableList < AlertBlock !>?","title":"Alerts"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-response/alerts/#alerts","text":"@Nullable abstract fun alerts(): MutableList < AlertBlock !>?","title":"alerts"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-service/","text":"tripkit-android / com.skedgo.tripkit.alerts / RealtimeAlertService RealtimeAlertService open class RealtimeAlertService Constructors Name Summary <init> RealtimeAlertService(api: RealtimeAlertApi ) Functions Name Summary fetchRealtimeAlertsAsync open fun fetchRealtimeAlertsAsync(baseUrls: MutableList < String !>?, regionName: String !): Observable< RealtimeAlertResponse !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-service/#realtimealertservice","text":"open class RealtimeAlertService","title":"RealtimeAlertService"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-service/#constructors","text":"Name Summary <init> RealtimeAlertService(api: RealtimeAlertApi )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-service/#functions","text":"Name Summary fetchRealtimeAlertsAsync open fun fetchRealtimeAlertsAsync(baseUrls: MutableList < String !>?, regionName: String !): Observable< RealtimeAlertResponse !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-service/-init-/","text":"tripkit-android / com.skedgo.tripkit.alerts / RealtimeAlertService / <init> <init> RealtimeAlertService(@NonNull api: RealtimeAlertApi )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-service/-init-/#init","text":"RealtimeAlertService(@NonNull api: RealtimeAlertApi )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-service/fetch-realtime-alerts-async/","text":"tripkit-android / com.skedgo.tripkit.alerts / RealtimeAlertService / fetchRealtimeAlertsAsync fetchRealtimeAlertsAsync open fun fetchRealtimeAlertsAsync(@Nullable baseUrls: MutableList < String !>?, @Query(\"region\") regionName: String !): Observable< RealtimeAlertResponse !>! Parameters baseUrls - MutableList < String !>?: Which can be obtained via `[ Region#getURLs()`](../../com.skedgo.tripkit.common.model/-region/get-u-r-ls.md). regionName - String !: Which can be obtained via `[ Region#getName()`](../../com.skedgo.tripkit.common.model/-region/get-name.md).","title":"Fetch realtime alerts async"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-service/fetch-realtime-alerts-async/#fetchrealtimealertsasync","text":"open fun fetchRealtimeAlertsAsync(@Nullable baseUrls: MutableList < String !>?, @Query(\"region\") regionName: String !): Observable< RealtimeAlertResponse !>!","title":"fetchRealtimeAlertsAsync"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-realtime-alert-service/fetch-realtime-alerts-async/#parameters","text":"baseUrls - MutableList < String !>?: Which can be obtained via `[ Region#getURLs()`](../../com.skedgo.tripkit.common.model/-region/get-u-r-ls.md). regionName - String !: Which can be obtained via `[ Region#getName()`](../../com.skedgo.tripkit.common.model/-region/get-name.md).","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/","text":"tripkit-android / com.skedgo.tripkit.alerts / Route Route @Immutable @TypeAdapters abstract class Route Constructors Name Summary <init> Route() Functions Name Summary id abstract fun id(): String ! modeInfo abstract fun modeInfo(): ModeInfo ? name abstract fun name(): String ? number abstract fun number(): String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/#route","text":"@Immutable @TypeAdapters abstract class Route","title":"Route"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/#constructors","text":"Name Summary <init> Route()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/#functions","text":"Name Summary id abstract fun id(): String ! modeInfo abstract fun modeInfo(): ModeInfo ? name abstract fun name(): String ? number abstract fun number(): String ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/-init-/","text":"tripkit-android / com.skedgo.tripkit.alerts / Route / <init> <init> Route()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/-init-/#init","text":"Route()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/id/","text":"tripkit-android / com.skedgo.tripkit.alerts / Route / id id abstract fun id(): String !","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/id/#id","text":"abstract fun id(): String !","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/mode-info/","text":"tripkit-android / com.skedgo.tripkit.alerts / Route / modeInfo modeInfo @Nullable abstract fun modeInfo(): ModeInfo ?","title":"Mode info"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/mode-info/#modeinfo","text":"@Nullable abstract fun modeInfo(): ModeInfo ?","title":"modeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/name/","text":"tripkit-android / com.skedgo.tripkit.alerts / Route / name name @Nullable abstract fun name(): String ?","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/name/#name","text":"@Nullable abstract fun name(): String ?","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/number/","text":"tripkit-android / com.skedgo.tripkit.alerts / Route / number number @Nullable abstract fun number(): String ?","title":"Number"},{"location":"tripkit-android/com.skedgo.tripkit.alerts/-route/number/#number","text":"@Nullable abstract fun number(): String ?","title":"number"},{"location":"tripkit-android/com.skedgo.tripkit.analytics/","text":"tripkit-android / com.skedgo.tripkit.analytics Package com.skedgo.tripkit.analytics Types Name Summary MarkTripAsPlannedWithUserInfo Example use-case: Mark a trip as planned, and then later, get push notifications about alerts relevant to the trip, or about ride sharing opportunities. interface MarkTripAsPlannedWithUserInfo","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.analytics/#package-comskedgotripkitanalytics","text":"","title":"Package com.skedgo.tripkit.analytics"},{"location":"tripkit-android/com.skedgo.tripkit.analytics/#types","text":"Name Summary MarkTripAsPlannedWithUserInfo Example use-case: Mark a trip as planned, and then later, get push notifications about alerts relevant to the trip, or about ride sharing opportunities. interface MarkTripAsPlannedWithUserInfo","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.analytics/-mark-trip-as-planned-with-user-info/","text":"tripkit-android / com.skedgo.tripkit.analytics / MarkTripAsPlannedWithUserInfo MarkTripAsPlannedWithUserInfo interface MarkTripAsPlannedWithUserInfo Example use-case: Mark a trip as planned, and then later, get push notifications about alerts relevant to the trip, or about ride sharing opportunities. Functions Name Summary execute abstract fun execute(plannedUrl: String , userInfo: MutableMap < String , Any >): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.analytics/-mark-trip-as-planned-with-user-info/#marktripasplannedwithuserinfo","text":"interface MarkTripAsPlannedWithUserInfo Example use-case: Mark a trip as planned, and then later, get push notifications about alerts relevant to the trip, or about ride sharing opportunities.","title":"MarkTripAsPlannedWithUserInfo"},{"location":"tripkit-android/com.skedgo.tripkit.analytics/-mark-trip-as-planned-with-user-info/#functions","text":"Name Summary execute abstract fun execute(plannedUrl: String , userInfo: MutableMap < String , Any >): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.analytics/-mark-trip-as-planned-with-user-info/execute/","text":"tripkit-android / com.skedgo.tripkit.analytics / MarkTripAsPlannedWithUserInfo / execute execute abstract fun execute(plannedUrl: String , userInfo: MutableMap < String , Any >): Completable Parameters userInfo - This parameter is to optionally attach a kind of arbitrary data which represents user preferences. userInfo must be able to be serialized to JSON.","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.analytics/-mark-trip-as-planned-with-user-info/execute/#execute","text":"abstract fun execute(plannedUrl: String , userInfo: MutableMap < String , Any >): Completable","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.analytics/-mark-trip-as-planned-with-user-info/execute/#parameters","text":"userInfo - This parameter is to optionally attach a kind of arbitrary data which represents user preferences. userInfo must be able to be serialized to JSON.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.android/","text":"tripkit-android / com.skedgo.tripkit.android Package com.skedgo.tripkit.android Types Name Summary A2bRoutingComponent Creates UseCases and Repositories related to the A2bRouting feature. interface A2bRoutingComponent AnalyticsComponent Creates UseCases and Repositories related to the Analytics feature. interface AnalyticsComponent DateTimeComponent Creates UseCases and Repositories related to the DateTime feature. interface DateTimeComponent FetchRegionsService class FetchRegionsService : JobService Annotations Name Summary FeatureScope annotation class FeatureScope Extensions for External Classes Name Summary io.reactivex.Observable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.android/#package-comskedgotripkitandroid","text":"","title":"Package com.skedgo.tripkit.android"},{"location":"tripkit-android/com.skedgo.tripkit.android/#types","text":"Name Summary A2bRoutingComponent Creates UseCases and Repositories related to the A2bRouting feature. interface A2bRoutingComponent AnalyticsComponent Creates UseCases and Repositories related to the Analytics feature. interface AnalyticsComponent DateTimeComponent Creates UseCases and Repositories related to the DateTime feature. interface DateTimeComponent FetchRegionsService class FetchRegionsService : JobService","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.android/#annotations","text":"Name Summary FeatureScope annotation class FeatureScope","title":"Annotations"},{"location":"tripkit-android/com.skedgo.tripkit.android/#extensions-for-external-classes","text":"Name Summary io.reactivex.Observable","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.android/-a2b-routing-component/","text":"tripkit-android / com.skedgo.tripkit.android / A2bRoutingComponent A2bRoutingComponent @Subcomponent interface A2bRoutingComponent Creates UseCases and Repositories related to the A2bRouting feature.","title":" a2b routing component"},{"location":"tripkit-android/com.skedgo.tripkit.android/-a2b-routing-component/#a2broutingcomponent","text":"@Subcomponent interface A2bRoutingComponent Creates UseCases and Repositories related to the A2bRouting feature.","title":"A2bRoutingComponent"},{"location":"tripkit-android/com.skedgo.tripkit.android/-analytics-component/","text":"tripkit-android / com.skedgo.tripkit.android / AnalyticsComponent AnalyticsComponent @Subcomponent([AnalyticsDataModule]) interface AnalyticsComponent Creates UseCases and Repositories related to the Analytics feature. Properties Name Summary markTripAsPlannedWithUserInfo abstract val markTripAsPlannedWithUserInfo: MarkTripAsPlannedWithUserInfo","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.android/-analytics-component/#analyticscomponent","text":"@Subcomponent([AnalyticsDataModule]) interface AnalyticsComponent Creates UseCases and Repositories related to the Analytics feature.","title":"AnalyticsComponent"},{"location":"tripkit-android/com.skedgo.tripkit.android/-analytics-component/#properties","text":"Name Summary markTripAsPlannedWithUserInfo abstract val markTripAsPlannedWithUserInfo: MarkTripAsPlannedWithUserInfo","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.android/-analytics-component/mark-trip-as-planned-with-user-info/","text":"tripkit-android / com.skedgo.tripkit.android / AnalyticsComponent / markTripAsPlannedWithUserInfo markTripAsPlannedWithUserInfo abstract val markTripAsPlannedWithUserInfo: MarkTripAsPlannedWithUserInfo","title":"Mark trip as planned with user info"},{"location":"tripkit-android/com.skedgo.tripkit.android/-analytics-component/mark-trip-as-planned-with-user-info/#marktripasplannedwithuserinfo","text":"abstract val markTripAsPlannedWithUserInfo: MarkTripAsPlannedWithUserInfo","title":"markTripAsPlannedWithUserInfo"},{"location":"tripkit-android/com.skedgo.tripkit.android/-date-time-component/","text":"tripkit-android / com.skedgo.tripkit.android / DateTimeComponent DateTimeComponent @Subcomponent([DateTimeDataModule]) interface DateTimeComponent Creates UseCases and Repositories related to the DateTime feature. Properties Name Summary printFullDate For example, Monday, 1 May 2017 if the default locale is java.util.Locale.US . abstract val printFullDate: PrintFullDate printTime abstract val printTime: PrintTime","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.android/-date-time-component/#datetimecomponent","text":"@Subcomponent([DateTimeDataModule]) interface DateTimeComponent Creates UseCases and Repositories related to the DateTime feature.","title":"DateTimeComponent"},{"location":"tripkit-android/com.skedgo.tripkit.android/-date-time-component/#properties","text":"Name Summary printFullDate For example, Monday, 1 May 2017 if the default locale is java.util.Locale.US . abstract val printFullDate: PrintFullDate printTime abstract val printTime: PrintTime","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.android/-date-time-component/print-full-date/","text":"tripkit-android / com.skedgo.tripkit.android / DateTimeComponent / printFullDate printFullDate abstract val printFullDate: PrintFullDate For example, Monday, 1 May 2017 if the default locale is java.util.Locale.US .","title":"Print full date"},{"location":"tripkit-android/com.skedgo.tripkit.android/-date-time-component/print-full-date/#printfulldate","text":"abstract val printFullDate: PrintFullDate For example, Monday, 1 May 2017 if the default locale is java.util.Locale.US .","title":"printFullDate"},{"location":"tripkit-android/com.skedgo.tripkit.android/-date-time-component/print-time/","text":"tripkit-android / com.skedgo.tripkit.android / DateTimeComponent / printTime printTime abstract val printTime: PrintTime","title":"Print time"},{"location":"tripkit-android/com.skedgo.tripkit.android/-date-time-component/print-time/#printtime","text":"abstract val printTime: PrintTime","title":"printTime"},{"location":"tripkit-android/com.skedgo.tripkit.android/-feature-scope/","text":"tripkit-android / com.skedgo.tripkit.android / FeatureScope FeatureScope @Scope annotation class FeatureScope Constructors Name Summary <init> FeatureScope()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.android/-feature-scope/#featurescope","text":"@Scope annotation class FeatureScope","title":"FeatureScope"},{"location":"tripkit-android/com.skedgo.tripkit.android/-feature-scope/#constructors","text":"Name Summary <init> FeatureScope()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.android/-feature-scope/-init-/","text":"tripkit-android / com.skedgo.tripkit.android / FeatureScope / <init> <init> FeatureScope()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.android/-feature-scope/-init-/#init","text":"FeatureScope()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/","text":"tripkit-android / com.skedgo.tripkit.android / FetchRegionsService FetchRegionsService class FetchRegionsService : JobService Constructors Name Summary <init> FetchRegionsService() Properties Name Summary runningJob var runningJob: Disposable? Functions Name Summary onStartJob fun onStartJob(job: JobParameters): Boolean onStopJob fun onStopJob(job: JobParameters?): Boolean Companion Object Functions Name Summary scheduleAsync fun scheduleAsync(context: Context): Observable< Void >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/#fetchregionsservice","text":"class FetchRegionsService : JobService","title":"FetchRegionsService"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/#constructors","text":"Name Summary <init> FetchRegionsService()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/#properties","text":"Name Summary runningJob var runningJob: Disposable?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/#functions","text":"Name Summary onStartJob fun onStartJob(job: JobParameters): Boolean onStopJob fun onStopJob(job: JobParameters?): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/#companion-object-functions","text":"Name Summary scheduleAsync fun scheduleAsync(context: Context): Observable< Void >","title":"Companion Object Functions"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/-init-/","text":"tripkit-android / com.skedgo.tripkit.android / FetchRegionsService / <init> <init> FetchRegionsService()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/-init-/#init","text":"FetchRegionsService()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/on-start-job/","text":"tripkit-android / com.skedgo.tripkit.android / FetchRegionsService / onStartJob onStartJob fun onStartJob(job: JobParameters): Boolean","title":"On start job"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/on-start-job/#onstartjob","text":"fun onStartJob(job: JobParameters): Boolean","title":"onStartJob"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/on-stop-job/","text":"tripkit-android / com.skedgo.tripkit.android / FetchRegionsService / onStopJob onStopJob fun onStopJob(job: JobParameters?): Boolean","title":"On stop job"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/on-stop-job/#onstopjob","text":"fun onStopJob(job: JobParameters?): Boolean","title":"onStopJob"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/running-job/","text":"tripkit-android / com.skedgo.tripkit.android / FetchRegionsService / runningJob runningJob var runningJob: Disposable?","title":"Running job"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/running-job/#runningjob","text":"var runningJob: Disposable?","title":"runningJob"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/schedule-async/","text":"tripkit-android / com.skedgo.tripkit.android / FetchRegionsService / scheduleAsync scheduleAsync fun scheduleAsync(context: Context): Observable< Void >","title":"Schedule async"},{"location":"tripkit-android/com.skedgo.tripkit.android/-fetch-regions-service/schedule-async/#scheduleasync","text":"fun scheduleAsync(context: Context): Observable< Void >","title":"scheduleAsync"},{"location":"tripkit-android/com.skedgo.tripkit.android/io.reactivex.-observable/","text":"tripkit-android / com.skedgo.tripkit.android / io.reactivex.Observable Extensions for io.reactivex.Observable Name Summary refreshRegions fun Observable< TripKit >.refreshRegions(): Observable< Unit >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.android/io.reactivex.-observable/#extensions-for-ioreactivexobservable","text":"Name Summary refreshRegions fun Observable< TripKit >.refreshRegions(): Observable< Unit >","title":"Extensions for io.reactivex.Observable"},{"location":"tripkit-android/com.skedgo.tripkit.android/io.reactivex.-observable/refresh-regions/","text":"tripkit-android / com.skedgo.tripkit.android / io.reactivex.Observable / refreshRegions refreshRegions fun Observable< TripKit >.refreshRegions(): Observable< Unit >","title":"Refresh regions"},{"location":"tripkit-android/com.skedgo.tripkit.android/io.reactivex.-observable/refresh-regions/#refreshregions","text":"fun Observable< TripKit >.refreshRegions(): Observable< Unit >","title":"refreshRegions"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders Package com.skedgo.tripkit.bookingproviders Types Name Summary BookingResolver interface BookingResolver BookingResolverImpl class BookingResolverImpl : BookingResolver UberBookingResolver class UberBookingResolver : BookingResolver Annotations Name Summary BookingProvider class BookingProvider","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/#package-comskedgotripkitbookingproviders","text":"","title":"Package com.skedgo.tripkit.bookingproviders"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/#types","text":"Name Summary BookingResolver interface BookingResolver BookingResolverImpl class BookingResolverImpl : BookingResolver UberBookingResolver class UberBookingResolver : BookingResolver","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/#annotations","text":"Name Summary BookingProvider class BookingProvider","title":"Annotations"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-provider/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingProvider BookingProvider class BookingProvider Constructors Name Summary <init> BookingProvider()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-provider/#bookingprovider","text":"class BookingProvider","title":"BookingProvider"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-provider/#constructors","text":"Name Summary <init> BookingProvider()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-provider/-init-/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingProvider / <init> <init> BookingProvider()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-provider/-init-/#init","text":"BookingProvider()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolver BookingResolver interface BookingResolver Properties Name Summary FLITWAYS static val FLITWAYS: Int GOCATCH static val GOCATCH: Int INGOGO static val INGOGO: Int LYFT static val LYFT: Int MTAXI static val MTAXI: Int OTHERS static val OTHERS: Int SMS static val SMS: Int UBER static val UBER: Int Functions Name Summary getTitleForExternalAction abstract fun getTitleForExternalAction(externalAction: String !): String ? performExternalActionAsync abstract fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>! Inheritors Name Summary BookingResolverImpl class BookingResolverImpl : BookingResolver UberBookingResolver class UberBookingResolver : BookingResolver","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/#bookingresolver","text":"interface BookingResolver","title":"BookingResolver"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/#properties","text":"Name Summary FLITWAYS static val FLITWAYS: Int GOCATCH static val GOCATCH: Int INGOGO static val INGOGO: Int LYFT static val LYFT: Int MTAXI static val MTAXI: Int OTHERS static val OTHERS: Int SMS static val SMS: Int UBER static val UBER: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/#functions","text":"Name Summary getTitleForExternalAction abstract fun getTitleForExternalAction(externalAction: String !): String ? performExternalActionAsync abstract fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/#inheritors","text":"Name Summary BookingResolverImpl class BookingResolverImpl : BookingResolver UberBookingResolver class UberBookingResolver : BookingResolver","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-f-l-i-t-w-a-y-s/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolver / FLITWAYS FLITWAYS static val FLITWAYS: Int","title":" f l i t w a y s"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-f-l-i-t-w-a-y-s/#flitways","text":"static val FLITWAYS: Int","title":"FLITWAYS"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-g-o-c-a-t-c-h/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolver / GOCATCH GOCATCH static val GOCATCH: Int","title":" g o c a t c h"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-g-o-c-a-t-c-h/#gocatch","text":"static val GOCATCH: Int","title":"GOCATCH"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-i-n-g-o-g-o/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolver / INGOGO INGOGO static val INGOGO: Int","title":" i n g o g o"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-i-n-g-o-g-o/#ingogo","text":"static val INGOGO: Int","title":"INGOGO"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-l-y-f-t/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolver / LYFT LYFT static val LYFT: Int","title":" l y f t"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-l-y-f-t/#lyft","text":"static val LYFT: Int","title":"LYFT"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-m-t-a-x-i/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolver / MTAXI MTAXI static val MTAXI: Int","title":" m t a x i"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-m-t-a-x-i/#mtaxi","text":"static val MTAXI: Int","title":"MTAXI"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-o-t-h-e-r-s/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolver / OTHERS OTHERS static val OTHERS: Int","title":" o t h e r s"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-o-t-h-e-r-s/#others","text":"static val OTHERS: Int","title":"OTHERS"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-s-m-s/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolver / SMS SMS static val SMS: Int","title":" s m s"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-s-m-s/#sms","text":"static val SMS: Int","title":"SMS"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-u-b-e-r/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolver / UBER UBER static val UBER: Int","title":" u b e r"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/-u-b-e-r/#uber","text":"static val UBER: Int","title":"UBER"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/get-title-for-external-action/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolver / getTitleForExternalAction getTitleForExternalAction @Nullable abstract fun getTitleForExternalAction(externalAction: String !): String ?","title":"Get title for external action"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/get-title-for-external-action/#gettitleforexternalaction","text":"@Nullable abstract fun getTitleForExternalAction(externalAction: String !): String ?","title":"getTitleForExternalAction"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/perform-external-action-async/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolver / performExternalActionAsync performExternalActionAsync abstract fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>!","title":"Perform external action async"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver/perform-external-action-async/#performexternalactionasync","text":"abstract fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>!","title":"performExternalActionAsync"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver-impl/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolverImpl BookingResolverImpl class BookingResolverImpl : BookingResolver Constructors Name Summary <init> BookingResolverImpl(resources: Resources, packageManager: PackageManager, geocoderFactory: ReverseGeocodable ) Functions Name Summary getTitleForExternalAction fun getTitleForExternalAction(externalAction: String !): String ? performExternalActionAsync fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver-impl/#bookingresolverimpl","text":"class BookingResolverImpl : BookingResolver","title":"BookingResolverImpl"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver-impl/#constructors","text":"Name Summary <init> BookingResolverImpl(resources: Resources, packageManager: PackageManager, geocoderFactory: ReverseGeocodable )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver-impl/#functions","text":"Name Summary getTitleForExternalAction fun getTitleForExternalAction(externalAction: String !): String ? performExternalActionAsync fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver-impl/-init-/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolverImpl / <init> <init> BookingResolverImpl(@NonNull resources: Resources, @NonNull packageManager: PackageManager, @NonNull geocoderFactory: ReverseGeocodable )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver-impl/-init-/#init","text":"BookingResolverImpl(@NonNull resources: Resources, @NonNull packageManager: PackageManager, @NonNull geocoderFactory: ReverseGeocodable )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver-impl/get-title-for-external-action/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolverImpl / getTitleForExternalAction getTitleForExternalAction @Nullable fun getTitleForExternalAction(externalAction: String !): String ?","title":"Get title for external action"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver-impl/get-title-for-external-action/#gettitleforexternalaction","text":"@Nullable fun getTitleForExternalAction(externalAction: String !): String ?","title":"getTitleForExternalAction"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver-impl/perform-external-action-async/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / BookingResolverImpl / performExternalActionAsync performExternalActionAsync fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>!","title":"Perform external action async"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-booking-resolver-impl/perform-external-action-async/#performexternalactionasync","text":"fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>!","title":"performExternalActionAsync"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-uber-booking-resolver/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / UberBookingResolver UberBookingResolver class UberBookingResolver : BookingResolver Constructors Name Summary <init> UberBookingResolver(isPackageInstalled: Function< String , Boolean >, getAppIntent: Function< String , Intent>) Functions Name Summary getTitleForExternalAction fun getTitleForExternalAction(externalAction: String ): String ? performExternalActionAsync fun performExternalActionAsync(params: ExternalActionParams ): Observable< BookingAction >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-uber-booking-resolver/#uberbookingresolver","text":"class UberBookingResolver : BookingResolver","title":"UberBookingResolver"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-uber-booking-resolver/#constructors","text":"Name Summary <init> UberBookingResolver(isPackageInstalled: Function< String , Boolean >, getAppIntent: Function< String , Intent>)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-uber-booking-resolver/#functions","text":"Name Summary getTitleForExternalAction fun getTitleForExternalAction(externalAction: String ): String ? performExternalActionAsync fun performExternalActionAsync(params: ExternalActionParams ): Observable< BookingAction >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-uber-booking-resolver/-init-/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / UberBookingResolver / <init> <init> UberBookingResolver(isPackageInstalled: Function< String , Boolean >, getAppIntent: Function< String , Intent>)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-uber-booking-resolver/-init-/#init","text":"UberBookingResolver(isPackageInstalled: Function< String , Boolean >, getAppIntent: Function< String , Intent>)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-uber-booking-resolver/get-title-for-external-action/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / UberBookingResolver / getTitleForExternalAction getTitleForExternalAction fun getTitleForExternalAction(externalAction: String ): String ?","title":"Get title for external action"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-uber-booking-resolver/get-title-for-external-action/#gettitleforexternalaction","text":"fun getTitleForExternalAction(externalAction: String ): String ?","title":"getTitleForExternalAction"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-uber-booking-resolver/perform-external-action-async/","text":"tripkit-android / com.skedgo.tripkit.bookingproviders / UberBookingResolver / performExternalActionAsync performExternalActionAsync fun performExternalActionAsync(params: ExternalActionParams ): Observable< BookingAction >","title":"Perform external action async"},{"location":"tripkit-android/com.skedgo.tripkit.bookingproviders/-uber-booking-resolver/perform-external-action-async/#performexternalactionasync","text":"fun performExternalActionAsync(params: ExternalActionParams ): Observable< BookingAction >","title":"performExternalActionAsync"},{"location":"tripkit-android/com.skedgo.tripkit.common/","text":"tripkit-android / com.skedgo.tripkit.common Package com.skedgo.tripkit.common Types Name Summary StyleManager open class StyleManager","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common/#package-comskedgotripkitcommon","text":"","title":"Package com.skedgo.tripkit.common"},{"location":"tripkit-android/com.skedgo.tripkit.common/#types","text":"Name Summary StyleManager open class StyleManager","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/","text":"tripkit-android / com.skedgo.tripkit.common / StyleManager StyleManager open class StyleManager Constructors Name Summary <init> StyleManager() Properties Name Summary FORMAT_PAIR_IDENTIFIER static val FORMAT_PAIR_IDENTIFIER: String FORMAT_TIME_SPAN_DAY static val FORMAT_TIME_SPAN_DAY: String FORMAT_TIME_SPAN_HOUR static val FORMAT_TIME_SPAN_HOUR: String FORMAT_TIME_SPAN_MIN static val FORMAT_TIME_SPAN_MIN: String FORMAT_TIME_SPAN_NOW static val FORMAT_TIME_SPAN_NOW: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/#stylemanager","text":"open class StyleManager","title":"StyleManager"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/#constructors","text":"Name Summary <init> StyleManager()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/#properties","text":"Name Summary FORMAT_PAIR_IDENTIFIER static val FORMAT_PAIR_IDENTIFIER: String FORMAT_TIME_SPAN_DAY static val FORMAT_TIME_SPAN_DAY: String FORMAT_TIME_SPAN_HOUR static val FORMAT_TIME_SPAN_HOUR: String FORMAT_TIME_SPAN_MIN static val FORMAT_TIME_SPAN_MIN: String FORMAT_TIME_SPAN_NOW static val FORMAT_TIME_SPAN_NOW: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-f-o-r-m-a-t_-p-a-i-r_-i-d-e-n-t-i-f-i-e-r/","text":"tripkit-android / com.skedgo.tripkit.common / StyleManager / FORMAT_PAIR_IDENTIFIER FORMAT_PAIR_IDENTIFIER static val FORMAT_PAIR_IDENTIFIER: String","title":" f o r m a t  p a i r  i d e n t i f i e r"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-f-o-r-m-a-t_-p-a-i-r_-i-d-e-n-t-i-f-i-e-r/#format_pair_identifier","text":"static val FORMAT_PAIR_IDENTIFIER: String","title":"FORMAT_PAIR_IDENTIFIER"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-f-o-r-m-a-t_-t-i-m-e_-s-p-a-n_-d-a-y/","text":"tripkit-android / com.skedgo.tripkit.common / StyleManager / FORMAT_TIME_SPAN_DAY FORMAT_TIME_SPAN_DAY static val FORMAT_TIME_SPAN_DAY: String","title":" f o r m a t  t i m e  s p a n  d a y"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-f-o-r-m-a-t_-t-i-m-e_-s-p-a-n_-d-a-y/#format_time_span_day","text":"static val FORMAT_TIME_SPAN_DAY: String","title":"FORMAT_TIME_SPAN_DAY"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-f-o-r-m-a-t_-t-i-m-e_-s-p-a-n_-h-o-u-r/","text":"tripkit-android / com.skedgo.tripkit.common / StyleManager / FORMAT_TIME_SPAN_HOUR FORMAT_TIME_SPAN_HOUR static val FORMAT_TIME_SPAN_HOUR: String","title":" f o r m a t  t i m e  s p a n  h o u r"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-f-o-r-m-a-t_-t-i-m-e_-s-p-a-n_-h-o-u-r/#format_time_span_hour","text":"static val FORMAT_TIME_SPAN_HOUR: String","title":"FORMAT_TIME_SPAN_HOUR"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-f-o-r-m-a-t_-t-i-m-e_-s-p-a-n_-m-i-n/","text":"tripkit-android / com.skedgo.tripkit.common / StyleManager / FORMAT_TIME_SPAN_MIN FORMAT_TIME_SPAN_MIN static val FORMAT_TIME_SPAN_MIN: String","title":" f o r m a t  t i m e  s p a n  m i n"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-f-o-r-m-a-t_-t-i-m-e_-s-p-a-n_-m-i-n/#format_time_span_min","text":"static val FORMAT_TIME_SPAN_MIN: String","title":"FORMAT_TIME_SPAN_MIN"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-f-o-r-m-a-t_-t-i-m-e_-s-p-a-n_-n-o-w/","text":"tripkit-android / com.skedgo.tripkit.common / StyleManager / FORMAT_TIME_SPAN_NOW FORMAT_TIME_SPAN_NOW static val FORMAT_TIME_SPAN_NOW: String","title":" f o r m a t  t i m e  s p a n  n o w"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-f-o-r-m-a-t_-t-i-m-e_-s-p-a-n_-n-o-w/#format_time_span_now","text":"static val FORMAT_TIME_SPAN_NOW: String","title":"FORMAT_TIME_SPAN_NOW"},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-init-/","text":"tripkit-android / com.skedgo.tripkit.common / StyleManager / <init> <init> StyleManager()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common/-style-manager/-init-/#init","text":"StyleManager()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/","text":"tripkit-android / com.skedgo.tripkit.common.agenda Package com.skedgo.tripkit.common.agenda Types Name Summary BigAlgorithmResponse open class BigAlgorithmResponse BigAlgorithmResult open class BigAlgorithmResult EventTrackItem open class EventTrackItem : TrackItem , ITimeRange IRealTimeElement Signifies a class is able to fetch timetable information interface IRealTimeElement SkedgoifyResponseParser open class SkedgoifyResponseParser TrackItem open class TrackItem TripTrackItem open class TripTrackItem : TrackItem","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/#package-comskedgotripkitcommonagenda","text":"","title":"Package com.skedgo.tripkit.common.agenda"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/#types","text":"Name Summary BigAlgorithmResponse open class BigAlgorithmResponse BigAlgorithmResult open class BigAlgorithmResult EventTrackItem open class EventTrackItem : TrackItem , ITimeRange IRealTimeElement Signifies a class is able to fetch timetable information interface IRealTimeElement SkedgoifyResponseParser open class SkedgoifyResponseParser TrackItem open class TrackItem TripTrackItem open class TripTrackItem : TrackItem","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / BigAlgorithmResponse BigAlgorithmResponse open class BigAlgorithmResponse See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/Big_Algorithm_API\">Big Algorithm API</a> Constructors Name Summary <init> BigAlgorithmResponse() Functions Name Summary getTrackItems open fun getTrackItems(): ArrayList < TrackItem !>! result open fun result(): BigAlgorithmResult ! setTrackItems open fun setTrackItems(trackItems: ArrayList < TrackItem !>!): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/#bigalgorithmresponse","text":"open class BigAlgorithmResponse See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/Big_Algorithm_API\">Big Algorithm API</a>","title":"BigAlgorithmResponse"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/#constructors","text":"Name Summary <init> BigAlgorithmResponse()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/#functions","text":"Name Summary getTrackItems open fun getTrackItems(): ArrayList < TrackItem !>! result open fun result(): BigAlgorithmResult ! setTrackItems open fun setTrackItems(trackItems: ArrayList < TrackItem !>!): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / BigAlgorithmResponse / <init> <init> BigAlgorithmResponse() See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/Big_Algorithm_API\">Big Algorithm API</a>","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/-init-/#init","text":"BigAlgorithmResponse() See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/Big_Algorithm_API\">Big Algorithm API</a>","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/get-track-items/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / BigAlgorithmResponse / getTrackItems getTrackItems open fun getTrackItems(): ArrayList < TrackItem !>!","title":"Get track items"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/get-track-items/#gettrackitems","text":"open fun getTrackItems(): ArrayList < TrackItem !>!","title":"getTrackItems"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/result/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / BigAlgorithmResponse / result result open fun result(): BigAlgorithmResult !","title":"Result"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/result/#result","text":"open fun result(): BigAlgorithmResult !","title":"result"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/set-track-items/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / BigAlgorithmResponse / setTrackItems setTrackItems open fun setTrackItems(trackItems: ArrayList < TrackItem !>!): Unit","title":"Set track items"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-response/set-track-items/#settrackitems","text":"open fun setTrackItems(trackItems: ArrayList < TrackItem !>!): Unit","title":"setTrackItems"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / BigAlgorithmResult BigAlgorithmResult open class BigAlgorithmResult See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/Big_Algorithm_API\">Big Algorithm API</a> Constructors Name Summary <init> BigAlgorithmResult() Functions Name Summary alerts open fun alerts(): MutableList < RealtimeAlert !>! segmentTemplates open fun segmentTemplates(): ArrayList <JsonObject!>! track open fun track(): ArrayList <JsonObject!>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/#bigalgorithmresult","text":"open class BigAlgorithmResult See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/Big_Algorithm_API\">Big Algorithm API</a>","title":"BigAlgorithmResult"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/#constructors","text":"Name Summary <init> BigAlgorithmResult()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/#functions","text":"Name Summary alerts open fun alerts(): MutableList < RealtimeAlert !>! segmentTemplates open fun segmentTemplates(): ArrayList <JsonObject!>! track open fun track(): ArrayList <JsonObject!>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / BigAlgorithmResult / <init> <init> BigAlgorithmResult() See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/Big_Algorithm_API\">Big Algorithm API</a>","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/-init-/#init","text":"BigAlgorithmResult() See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/Big_Algorithm_API\">Big Algorithm API</a>","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/alerts/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / BigAlgorithmResult / alerts alerts open fun alerts(): MutableList < RealtimeAlert !>!","title":"Alerts"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/alerts/#alerts","text":"open fun alerts(): MutableList < RealtimeAlert !>!","title":"alerts"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/segment-templates/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / BigAlgorithmResult / segmentTemplates segmentTemplates open fun segmentTemplates(): ArrayList <JsonObject!>!","title":"Segment templates"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/segment-templates/#segmenttemplates","text":"open fun segmentTemplates(): ArrayList <JsonObject!>!","title":"segmentTemplates"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/track/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / BigAlgorithmResult / track track open fun track(): ArrayList <JsonObject!>!","title":"Track"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-big-algorithm-result/track/#track","text":"open fun track(): ArrayList <JsonObject!>!","title":"track"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / EventTrackItem EventTrackItem open class EventTrackItem : TrackItem , ITimeRange Constructors Name Summary <init> EventTrackItem() Functions Name Summary getEndTimeInSecs open fun getEndTimeInSecs(): Long getStartTimeInSecs open fun getStartTimeInSecs(): Long setEndTimeInSecs open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit setStartTimeInSecs open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/#eventtrackitem","text":"open class EventTrackItem : TrackItem , ITimeRange","title":"EventTrackItem"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/#constructors","text":"Name Summary <init> EventTrackItem()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/#functions","text":"Name Summary getEndTimeInSecs open fun getEndTimeInSecs(): Long getStartTimeInSecs open fun getStartTimeInSecs(): Long setEndTimeInSecs open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit setStartTimeInSecs open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / EventTrackItem / <init> <init> EventTrackItem()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/-init-/#init","text":"EventTrackItem()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/get-end-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / EventTrackItem / getEndTimeInSecs getEndTimeInSecs open fun getEndTimeInSecs(): Long","title":"Get end time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/get-end-time-in-secs/#getendtimeinsecs","text":"open fun getEndTimeInSecs(): Long","title":"getEndTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/get-start-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / EventTrackItem / getStartTimeInSecs getStartTimeInSecs open fun getStartTimeInSecs(): Long","title":"Get start time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/get-start-time-in-secs/#getstarttimeinsecs","text":"open fun getStartTimeInSecs(): Long","title":"getStartTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/set-end-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / EventTrackItem / setEndTimeInSecs setEndTimeInSecs open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit","title":"Set end time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/set-end-time-in-secs/#setendtimeinsecs","text":"open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit","title":"setEndTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/set-start-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / EventTrackItem / setStartTimeInSecs setStartTimeInSecs open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit","title":"Set start time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-event-track-item/set-start-time-in-secs/#setstarttimeinsecs","text":"open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit","title":"setStartTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / IRealTimeElement IRealTimeElement interface IRealTimeElement Signifies a class is able to fetch timetable information Functions Name Summary getEndStopCode abstract fun getEndStopCode(): String ! getOperator abstract fun getOperator(): String ! getServiceTripId abstract fun getServiceTripId(): String ! getStartStopCode abstract fun getStartStopCode(): String ! getStartTimeInSecs abstract fun getStartTimeInSecs(): Long setEndStopCode abstract fun setEndStopCode(endStopCode: String !): Unit setStartStopCode abstract fun setStartStopCode(startStopCode: String !): Unit Inheritors Name Summary TimetableEntry (Aka Service) open class TimetableEntry : Parcelable, IRealTimeElement , ITimeRange , WheelchairAccessible TripSegment To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](../../com.skedgo.tripkit.routing/-trip-segment/index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL ](../../com.skedgo.tripkit.routing/-segment-type/-a-r-r-i-v-a-l.md). open class TripSegment : [ IRealTimeElement ](./index.md) , [ ITimeRange`](../../com.skedgo.tripkit.common.model/-i-time-range/index.md)","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/#irealtimeelement","text":"interface IRealTimeElement Signifies a class is able to fetch timetable information","title":"IRealTimeElement"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/#functions","text":"Name Summary getEndStopCode abstract fun getEndStopCode(): String ! getOperator abstract fun getOperator(): String ! getServiceTripId abstract fun getServiceTripId(): String ! getStartStopCode abstract fun getStartStopCode(): String ! getStartTimeInSecs abstract fun getStartTimeInSecs(): Long setEndStopCode abstract fun setEndStopCode(endStopCode: String !): Unit setStartStopCode abstract fun setStartStopCode(startStopCode: String !): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/#inheritors","text":"Name Summary TimetableEntry (Aka Service) open class TimetableEntry : Parcelable, IRealTimeElement , ITimeRange , WheelchairAccessible TripSegment To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](../../com.skedgo.tripkit.routing/-trip-segment/index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL ](../../com.skedgo.tripkit.routing/-segment-type/-a-r-r-i-v-a-l.md). open class TripSegment : [ IRealTimeElement ](./index.md) , [ ITimeRange`](../../com.skedgo.tripkit.common.model/-i-time-range/index.md)","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/get-end-stop-code/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / IRealTimeElement / getEndStopCode getEndStopCode abstract fun getEndStopCode(): String !","title":"Get end stop code"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/get-end-stop-code/#getendstopcode","text":"abstract fun getEndStopCode(): String !","title":"getEndStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/get-operator/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / IRealTimeElement / getOperator getOperator abstract fun getOperator(): String !","title":"Get operator"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/get-operator/#getoperator","text":"abstract fun getOperator(): String !","title":"getOperator"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/get-service-trip-id/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / IRealTimeElement / getServiceTripId getServiceTripId abstract fun getServiceTripId(): String !","title":"Get service trip id"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/get-service-trip-id/#getservicetripid","text":"abstract fun getServiceTripId(): String !","title":"getServiceTripId"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/get-start-stop-code/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / IRealTimeElement / getStartStopCode getStartStopCode abstract fun getStartStopCode(): String !","title":"Get start stop code"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/get-start-stop-code/#getstartstopcode","text":"abstract fun getStartStopCode(): String !","title":"getStartStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/get-start-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / IRealTimeElement / getStartTimeInSecs getStartTimeInSecs abstract fun getStartTimeInSecs(): Long","title":"Get start time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/get-start-time-in-secs/#getstarttimeinsecs","text":"abstract fun getStartTimeInSecs(): Long","title":"getStartTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/set-end-stop-code/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / IRealTimeElement / setEndStopCode setEndStopCode abstract fun setEndStopCode(endStopCode: String !): Unit","title":"Set end stop code"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/set-end-stop-code/#setendstopcode","text":"abstract fun setEndStopCode(endStopCode: String !): Unit","title":"setEndStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/set-start-stop-code/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / IRealTimeElement / setStartStopCode setStartStopCode abstract fun setStartStopCode(startStopCode: String !): Unit","title":"Set start stop code"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-i-real-time-element/set-start-stop-code/#setstartstopcode","text":"abstract fun setStartStopCode(startStopCode: String !): Unit","title":"setStartStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-skedgoify-response-parser/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / SkedgoifyResponseParser SkedgoifyResponseParser open class SkedgoifyResponseParser Constructors Name Summary <init> SkedgoifyResponseParser(resources: Resources!, gson: Gson!) Functions Name Summary parse open fun parse(responseText: String !): BigAlgorithmResponse !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-skedgoify-response-parser/#skedgoifyresponseparser","text":"open class SkedgoifyResponseParser","title":"SkedgoifyResponseParser"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-skedgoify-response-parser/#constructors","text":"Name Summary <init> SkedgoifyResponseParser(resources: Resources!, gson: Gson!)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-skedgoify-response-parser/#functions","text":"Name Summary parse open fun parse(responseText: String !): BigAlgorithmResponse !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-skedgoify-response-parser/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / SkedgoifyResponseParser / <init> <init> SkedgoifyResponseParser(resources: Resources!, gson: Gson!)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-skedgoify-response-parser/-init-/#init","text":"SkedgoifyResponseParser(resources: Resources!, gson: Gson!)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-skedgoify-response-parser/parse/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / SkedgoifyResponseParser / parse parse open fun parse(responseText: String !): BigAlgorithmResponse !","title":"Parse"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-skedgoify-response-parser/parse/#parse","text":"open fun parse(responseText: String !): BigAlgorithmResponse !","title":"parse"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-track-item/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / TrackItem TrackItem open class TrackItem Constructors Name Summary <init> TrackItem() Functions Name Summary getId open fun getId(): String ! Inheritors Name Summary EventTrackItem open class EventTrackItem : TrackItem , ITimeRange TripTrackItem open class TripTrackItem : TrackItem","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-track-item/#trackitem","text":"open class TrackItem","title":"TrackItem"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-track-item/#constructors","text":"Name Summary <init> TrackItem()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-track-item/#functions","text":"Name Summary getId open fun getId(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-track-item/#inheritors","text":"Name Summary EventTrackItem open class EventTrackItem : TrackItem , ITimeRange TripTrackItem open class TripTrackItem : TrackItem","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-track-item/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / TrackItem / <init> <init> TrackItem()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-track-item/-init-/#init","text":"TrackItem()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-track-item/get-id/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / TrackItem / getId getId open fun getId(): String !","title":"Get id"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-track-item/get-id/#getid","text":"open fun getId(): String !","title":"getId"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / TripTrackItem TripTrackItem open class TripTrackItem : TrackItem Constructors Name Summary <init> TripTrackItem() Functions Name Summary fromId open fun fromId(): String ! getGroups open fun getGroups(): ArrayList < TripGroup !>! setGroups open fun setGroups(groups: ArrayList < TripGroup !>!): Unit toId open fun toId(): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/#triptrackitem","text":"open class TripTrackItem : TrackItem","title":"TripTrackItem"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/#constructors","text":"Name Summary <init> TripTrackItem()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/#functions","text":"Name Summary fromId open fun fromId(): String ! getGroups open fun getGroups(): ArrayList < TripGroup !>! setGroups open fun setGroups(groups: ArrayList < TripGroup !>!): Unit toId open fun toId(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / TripTrackItem / <init> <init> TripTrackItem()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/-init-/#init","text":"TripTrackItem()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/from-id/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / TripTrackItem / fromId fromId open fun fromId(): String !","title":"From id"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/from-id/#fromid","text":"open fun fromId(): String !","title":"fromId"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/get-groups/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / TripTrackItem / getGroups getGroups open fun getGroups(): ArrayList < TripGroup !>!","title":"Get groups"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/get-groups/#getgroups","text":"open fun getGroups(): ArrayList < TripGroup !>!","title":"getGroups"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/set-groups/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / TripTrackItem / setGroups setGroups open fun setGroups(groups: ArrayList < TripGroup !>!): Unit","title":"Set groups"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/set-groups/#setgroups","text":"open fun setGroups(groups: ArrayList < TripGroup !>!): Unit","title":"setGroups"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/to-id/","text":"tripkit-android / com.skedgo.tripkit.common.agenda / TripTrackItem / toId toId open fun toId(): String !","title":"To id"},{"location":"tripkit-android/com.skedgo.tripkit.common.agenda/-trip-track-item/to-id/#toid","text":"open fun toId(): String !","title":"toId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/","text":"tripkit-android / com.skedgo.tripkit.common.model Package com.skedgo.tripkit.common.model Types Name Summary AlertAction abstract class AlertAction : Parcelable Booking abstract class Booking BookingConfirmation abstract class BookingConfirmation : Parcelable BookingConfirmationAction abstract class BookingConfirmationAction : Parcelable BookingConfirmationImage abstract class BookingConfirmationImage : Parcelable BookingConfirmationPurchase abstract class BookingConfirmationPurchase : Parcelable BookingConfirmationStatus abstract class BookingConfirmationStatus : Parcelable BookingProvider abstract class BookingProvider : Parcelable BookingSource abstract class BookingSource : Parcelable ITimeRange interface ITimeRange Location open class Location : Parcelable PurchaseBrand abstract class PurchaseBrand : Parcelable Query Represents a query to find routes from A to B. Note that, to avoid TransactionTooLargeException , it's discouraged to pass any instance of Query to an Intent or a Bundle . The Parcelable is subject to deletion at anytime. open class Query : Parcelable RealtimeAlert abstract class RealtimeAlert : Parcelable RealtimeAlerts class RealtimeAlerts RealTimeStatus class RealTimeStatus Region open class Region : Parcelable Regions class Regions RegionsResponse open class RegionsResponse ScheduledStop open class ScheduledStop : Location ServiceStop Represents a future stop of a service in a trip. open class ServiceStop : Location , WheelchairAccessible StopType class StopType Street abstract class Street : Parcelable TimeTag A TimeTag encapsulates a departure or arrival time, including a dynamic time of \"now\". open class TimeTag : Parcelable TransportMode open class TransportMode Units class Units WheelchairAccessible interface WheelchairAccessible Annotations Name Summary AlertSeverity class AlertSeverity","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/#package-comskedgotripkitcommonmodel","text":"","title":"Package com.skedgo.tripkit.common.model"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/#types","text":"Name Summary AlertAction abstract class AlertAction : Parcelable Booking abstract class Booking BookingConfirmation abstract class BookingConfirmation : Parcelable BookingConfirmationAction abstract class BookingConfirmationAction : Parcelable BookingConfirmationImage abstract class BookingConfirmationImage : Parcelable BookingConfirmationPurchase abstract class BookingConfirmationPurchase : Parcelable BookingConfirmationStatus abstract class BookingConfirmationStatus : Parcelable BookingProvider abstract class BookingProvider : Parcelable BookingSource abstract class BookingSource : Parcelable ITimeRange interface ITimeRange Location open class Location : Parcelable PurchaseBrand abstract class PurchaseBrand : Parcelable Query Represents a query to find routes from A to B. Note that, to avoid TransactionTooLargeException , it's discouraged to pass any instance of Query to an Intent or a Bundle . The Parcelable is subject to deletion at anytime. open class Query : Parcelable RealtimeAlert abstract class RealtimeAlert : Parcelable RealtimeAlerts class RealtimeAlerts RealTimeStatus class RealTimeStatus Region open class Region : Parcelable Regions class Regions RegionsResponse open class RegionsResponse ScheduledStop open class ScheduledStop : Location ServiceStop Represents a future stop of a service in a trip. open class ServiceStop : Location , WheelchairAccessible StopType class StopType Street abstract class Street : Parcelable TimeTag A TimeTag encapsulates a departure or arrival time, including a dynamic time of \"now\". open class TimeTag : Parcelable TransportMode open class TransportMode Units class Units WheelchairAccessible interface WheelchairAccessible","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/#annotations","text":"Name Summary AlertSeverity class AlertSeverity","title":"Annotations"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/","text":"tripkit-android / com.skedgo.tripkit.common.model / AlertAction AlertAction @Immutable @TypeAdapters abstract class AlertAction : Parcelable Constructors Name Summary <init> AlertAction() Properties Name Summary CREATOR static val CREATOR: Creator< AlertAction !>! Functions Name Summary describeContents open fun describeContents(): Int excludedStopCodes abstract fun excludedStopCodes(): MutableList < String !>? text abstract fun text(): String ? type abstract fun type(): String ? writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/#alertaction","text":"@Immutable @TypeAdapters abstract class AlertAction : Parcelable","title":"AlertAction"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/#constructors","text":"Name Summary <init> AlertAction()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< AlertAction !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/#functions","text":"Name Summary describeContents open fun describeContents(): Int excludedStopCodes abstract fun excludedStopCodes(): MutableList < String !>? text abstract fun text(): String ? type abstract fun type(): String ? writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / AlertAction / CREATOR CREATOR static val CREATOR: Creator< AlertAction !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< AlertAction !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / AlertAction / <init> <init> AlertAction()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/-init-/#init","text":"AlertAction()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / AlertAction / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/excluded-stop-codes/","text":"tripkit-android / com.skedgo.tripkit.common.model / AlertAction / excludedStopCodes excludedStopCodes @Nullable abstract fun excludedStopCodes(): MutableList < String !>?","title":"Excluded stop codes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/excluded-stop-codes/#excludedstopcodes","text":"@Nullable abstract fun excludedStopCodes(): MutableList < String !>?","title":"excludedStopCodes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/text/","text":"tripkit-android / com.skedgo.tripkit.common.model / AlertAction / text text @Nullable abstract fun text(): String ?","title":"Text"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/text/#text","text":"@Nullable abstract fun text(): String ?","title":"text"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/type/","text":"tripkit-android / com.skedgo.tripkit.common.model / AlertAction / type type @Nullable abstract fun type(): String ?","title":"Type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/type/#type","text":"@Nullable abstract fun type(): String ?","title":"type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / AlertAction / writeToParcel writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-action/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-severity/","text":"tripkit-android / com.skedgo.tripkit.common.model / AlertSeverity AlertSeverity class AlertSeverity Constructors Name Summary <init> AlertSeverity()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-severity/#alertseverity","text":"class AlertSeverity","title":"AlertSeverity"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-severity/#constructors","text":"Name Summary <init> AlertSeverity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-severity/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / AlertSeverity / <init> <init> AlertSeverity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-alert-severity/-init-/#init","text":"AlertSeverity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/","text":"tripkit-android / com.skedgo.tripkit.common.model / Booking Booking @TypeAdapters @Immutable abstract class Booking Constructors Name Summary <init> Booking() Functions Name Summary getConfirmation abstract fun getConfirmation(): BookingConfirmation ? getExternalActions abstract fun getExternalActions(): MutableList < String !>? getQuickBookingsUrl abstract fun getQuickBookingsUrl(): String ? getTitle abstract fun getTitle(): String ? getUrl abstract fun getUrl(): String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/#booking","text":"@TypeAdapters @Immutable abstract class Booking","title":"Booking"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/#constructors","text":"Name Summary <init> Booking()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/#functions","text":"Name Summary getConfirmation abstract fun getConfirmation(): BookingConfirmation ? getExternalActions abstract fun getExternalActions(): MutableList < String !>? getQuickBookingsUrl abstract fun getQuickBookingsUrl(): String ? getTitle abstract fun getTitle(): String ? getUrl abstract fun getUrl(): String ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / Booking / <init> <init> Booking()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/-init-/#init","text":"Booking()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/get-confirmation/","text":"tripkit-android / com.skedgo.tripkit.common.model / Booking / getConfirmation getConfirmation @SerializedName(\"confirmation\") @Nullable abstract fun getConfirmation(): BookingConfirmation ?","title":"Get confirmation"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/get-confirmation/#getconfirmation","text":"@SerializedName(\"confirmation\") @Nullable abstract fun getConfirmation(): BookingConfirmation ?","title":"getConfirmation"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/get-external-actions/","text":"tripkit-android / com.skedgo.tripkit.common.model / Booking / getExternalActions getExternalActions @SerializedName(\"externalActions\") @Nullable abstract fun getExternalActions(): MutableList < String !>?","title":"Get external actions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/get-external-actions/#getexternalactions","text":"@SerializedName(\"externalActions\") @Nullable abstract fun getExternalActions(): MutableList < String !>?","title":"getExternalActions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/get-quick-bookings-url/","text":"tripkit-android / com.skedgo.tripkit.common.model / Booking / getQuickBookingsUrl getQuickBookingsUrl @SerializedName(\"quickBookingsUrl\") @Nullable abstract fun getQuickBookingsUrl(): String ?","title":"Get quick bookings url"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/get-quick-bookings-url/#getquickbookingsurl","text":"@SerializedName(\"quickBookingsUrl\") @Nullable abstract fun getQuickBookingsUrl(): String ?","title":"getQuickBookingsUrl"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/get-title/","text":"tripkit-android / com.skedgo.tripkit.common.model / Booking / getTitle getTitle @SerializedName(\"title\") @Nullable abstract fun getTitle(): String ?","title":"Get title"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/get-title/#gettitle","text":"@SerializedName(\"title\") @Nullable abstract fun getTitle(): String ?","title":"getTitle"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/get-url/","text":"tripkit-android / com.skedgo.tripkit.common.model / Booking / getUrl getUrl @SerializedName(\"url\") @Nullable abstract fun getUrl(): String ?","title":"Get url"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking/get-url/#geturl","text":"@SerializedName(\"url\") @Nullable abstract fun getUrl(): String ?","title":"getUrl"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmation BookingConfirmation @TypeAdapters @Immutable abstract class BookingConfirmation : Parcelable Constructors Name Summary <init> BookingConfirmation() Properties Name Summary CREATOR static val CREATOR: Creator< BookingConfirmation !>! Functions Name Summary actions abstract fun actions(): MutableList < BookingConfirmationAction !>! describeContents open fun describeContents(): Int provider abstract fun provider(): BookingConfirmationImage ? purchase abstract fun purchase(): BookingConfirmationPurchase ? status abstract fun status(): BookingConfirmationStatus ! vehicle abstract fun vehicle(): BookingConfirmationImage ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/#bookingconfirmation","text":"@TypeAdapters @Immutable abstract class BookingConfirmation : Parcelable","title":"BookingConfirmation"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/#constructors","text":"Name Summary <init> BookingConfirmation()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< BookingConfirmation !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/#functions","text":"Name Summary actions abstract fun actions(): MutableList < BookingConfirmationAction !>! describeContents open fun describeContents(): Int provider abstract fun provider(): BookingConfirmationImage ? purchase abstract fun purchase(): BookingConfirmationPurchase ? status abstract fun status(): BookingConfirmationStatus ! vehicle abstract fun vehicle(): BookingConfirmationImage ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmation / CREATOR CREATOR static val CREATOR: Creator< BookingConfirmation !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< BookingConfirmation !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmation / <init> <init> BookingConfirmation()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/-init-/#init","text":"BookingConfirmation()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/actions/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmation / actions actions abstract fun actions(): MutableList < BookingConfirmationAction !>!","title":"Actions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/actions/#actions","text":"abstract fun actions(): MutableList < BookingConfirmationAction !>!","title":"actions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmation / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/provider/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmation / provider provider @Nullable abstract fun provider(): BookingConfirmationImage ?","title":"Provider"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/provider/#provider","text":"@Nullable abstract fun provider(): BookingConfirmationImage ?","title":"provider"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/purchase/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmation / purchase purchase @Nullable abstract fun purchase(): BookingConfirmationPurchase ?","title":"Purchase"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/purchase/#purchase","text":"@Nullable abstract fun purchase(): BookingConfirmationPurchase ?","title":"purchase"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/status/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmation / status status abstract fun status(): BookingConfirmationStatus !","title":"Status"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/status/#status","text":"abstract fun status(): BookingConfirmationStatus !","title":"status"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/vehicle/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmation / vehicle vehicle @Nullable abstract fun vehicle(): BookingConfirmationImage ?","title":"Vehicle"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/vehicle/#vehicle","text":"@Nullable abstract fun vehicle(): BookingConfirmationImage ?","title":"vehicle"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmation / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction BookingConfirmationAction @TypeAdapters @Immutable abstract class BookingConfirmationAction : Parcelable Constructors Name Summary <init> BookingConfirmationAction() Properties Name Summary CREATOR static val CREATOR: Creator< BookingConfirmationAction !>! TYPE_CALL static val TYPE_CALL: String TYPE_CANCEL static val TYPE_CANCEL: String TYPE_QR_CODE static val TYPE_QR_CODE: String Functions Name Summary describeContents open fun describeContents(): Int externalURL abstract fun externalURL(): String ? internalURL abstract fun internalURL(): String ? isDestructive abstract fun isDestructive(): Boolean title abstract fun title(): String ! type abstract fun type(): String ! writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/#bookingconfirmationaction","text":"@TypeAdapters @Immutable abstract class BookingConfirmationAction : Parcelable","title":"BookingConfirmationAction"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/#constructors","text":"Name Summary <init> BookingConfirmationAction()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< BookingConfirmationAction !>! TYPE_CALL static val TYPE_CALL: String TYPE_CANCEL static val TYPE_CANCEL: String TYPE_QR_CODE static val TYPE_QR_CODE: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/#functions","text":"Name Summary describeContents open fun describeContents(): Int externalURL abstract fun externalURL(): String ? internalURL abstract fun internalURL(): String ? isDestructive abstract fun isDestructive(): Boolean title abstract fun title(): String ! type abstract fun type(): String ! writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / CREATOR CREATOR static val CREATOR: Creator< BookingConfirmationAction !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< BookingConfirmationAction !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / <init> <init> BookingConfirmationAction()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/-init-/#init","text":"BookingConfirmationAction()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/-t-y-p-e_-c-a-l-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / TYPE_CALL TYPE_CALL static val TYPE_CALL: String","title":" t y p e  c a l l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/-t-y-p-e_-c-a-l-l/#type_call","text":"static val TYPE_CALL: String","title":"TYPE_CALL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/-t-y-p-e_-c-a-n-c-e-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / TYPE_CANCEL TYPE_CANCEL static val TYPE_CANCEL: String","title":" t y p e  c a n c e l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/-t-y-p-e_-c-a-n-c-e-l/#type_cancel","text":"static val TYPE_CANCEL: String","title":"TYPE_CANCEL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/-t-y-p-e_-q-r_-c-o-d-e/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / TYPE_QR_CODE TYPE_QR_CODE static val TYPE_QR_CODE: String","title":" t y p e  q r  c o d e"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/-t-y-p-e_-q-r_-c-o-d-e/#type_qr_code","text":"static val TYPE_QR_CODE: String","title":"TYPE_QR_CODE"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/external-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / externalURL externalURL @Nullable abstract fun externalURL(): String ?","title":"External u r l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/external-u-r-l/#externalurl","text":"@Nullable abstract fun externalURL(): String ?","title":"externalURL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/internal-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / internalURL internalURL @Nullable abstract fun internalURL(): String ?","title":"Internal u r l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/internal-u-r-l/#internalurl","text":"@Nullable abstract fun internalURL(): String ?","title":"internalURL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/is-destructive/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / isDestructive isDestructive abstract fun isDestructive(): Boolean","title":"Is destructive"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/is-destructive/#isdestructive","text":"abstract fun isDestructive(): Boolean","title":"isDestructive"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/title/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / title title abstract fun title(): String !","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/title/#title","text":"abstract fun title(): String !","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/type/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / type type abstract fun type(): String !","title":"Type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/type/#type","text":"abstract fun type(): String !","title":"type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationAction / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-action/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationImage BookingConfirmationImage @TypeAdapters @Immutable abstract class BookingConfirmationImage : Parcelable Constructors Name Summary <init> BookingConfirmationImage() Properties Name Summary CREATOR static val CREATOR: Creator< BookingConfirmationImage !>! Functions Name Summary describeContents open fun describeContents(): Int imageURL abstract fun imageURL(): String ? subtitle abstract fun subtitle(): String ! title abstract fun title(): String ! writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/#bookingconfirmationimage","text":"@TypeAdapters @Immutable abstract class BookingConfirmationImage : Parcelable","title":"BookingConfirmationImage"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/#constructors","text":"Name Summary <init> BookingConfirmationImage()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< BookingConfirmationImage !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/#functions","text":"Name Summary describeContents open fun describeContents(): Int imageURL abstract fun imageURL(): String ? subtitle abstract fun subtitle(): String ! title abstract fun title(): String ! writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationImage / CREATOR CREATOR static val CREATOR: Creator< BookingConfirmationImage !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< BookingConfirmationImage !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationImage / <init> <init> BookingConfirmationImage()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/-init-/#init","text":"BookingConfirmationImage()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationImage / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/image-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationImage / imageURL imageURL @Nullable abstract fun imageURL(): String ?","title":"Image u r l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/image-u-r-l/#imageurl","text":"@Nullable abstract fun imageURL(): String ?","title":"imageURL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/subtitle/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationImage / subtitle subtitle abstract fun subtitle(): String !","title":"Subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/subtitle/#subtitle","text":"abstract fun subtitle(): String !","title":"subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/title/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationImage / title title abstract fun title(): String !","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/title/#title","text":"abstract fun title(): String !","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationImage / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-image/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase BookingConfirmationPurchase @TypeAdapters @Immutable abstract class BookingConfirmationPurchase : Parcelable Constructors Name Summary <init> BookingConfirmationPurchase() Properties Name Summary CREATOR static val CREATOR: Creator< BookingConfirmationPurchase !>! Functions Name Summary brand abstract fun brand(): PurchaseBrand ? currency abstract fun currency(): String ! describeContents open fun describeContents(): Int id abstract fun id(): String ! price abstract fun price(): Float productName abstract fun productName(): String ! productType abstract fun productType(): String ! source abstract fun source(): BookingSource ? timezone abstract fun timezone(): String ? valid open fun valid(): Boolean validFor open fun validFor(): Long validFrom open fun validFrom(): Long writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/#bookingconfirmationpurchase","text":"@TypeAdapters @Immutable abstract class BookingConfirmationPurchase : Parcelable","title":"BookingConfirmationPurchase"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/#constructors","text":"Name Summary <init> BookingConfirmationPurchase()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< BookingConfirmationPurchase !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/#functions","text":"Name Summary brand abstract fun brand(): PurchaseBrand ? currency abstract fun currency(): String ! describeContents open fun describeContents(): Int id abstract fun id(): String ! price abstract fun price(): Float productName abstract fun productName(): String ! productType abstract fun productType(): String ! source abstract fun source(): BookingSource ? timezone abstract fun timezone(): String ? valid open fun valid(): Boolean validFor open fun validFor(): Long validFrom open fun validFrom(): Long writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / CREATOR CREATOR static val CREATOR: Creator< BookingConfirmationPurchase !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< BookingConfirmationPurchase !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / <init> <init> BookingConfirmationPurchase()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/-init-/#init","text":"BookingConfirmationPurchase()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/brand/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / brand brand @Nullable abstract fun brand(): PurchaseBrand ?","title":"Brand"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/brand/#brand","text":"@Nullable abstract fun brand(): PurchaseBrand ?","title":"brand"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/currency/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / currency currency abstract fun currency(): String !","title":"Currency"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/currency/#currency","text":"abstract fun currency(): String !","title":"currency"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/id/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / id id abstract fun id(): String !","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/id/#id","text":"abstract fun id(): String !","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/price/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / price price abstract fun price(): Float","title":"Price"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/price/#price","text":"abstract fun price(): Float","title":"price"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/product-name/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / productName productName abstract fun productName(): String !","title":"Product name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/product-name/#productname","text":"abstract fun productName(): String !","title":"productName"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/product-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / productType productType abstract fun productType(): String !","title":"Product type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/product-type/#producttype","text":"abstract fun productType(): String !","title":"productType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/source/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / source source @Nullable abstract fun source(): BookingSource ?","title":"Source"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/source/#source","text":"@Nullable abstract fun source(): BookingSource ?","title":"source"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/timezone/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / timezone timezone @Nullable abstract fun timezone(): String ?","title":"Timezone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/timezone/#timezone","text":"@Nullable abstract fun timezone(): String ?","title":"timezone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/valid-for/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / validFor validFor @Default open fun validFor(): Long","title":"Valid for"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/valid-for/#validfor","text":"@Default open fun validFor(): Long","title":"validFor"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/valid-from/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / validFrom validFrom @Default open fun validFrom(): Long","title":"Valid from"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/valid-from/#validfrom","text":"@Default open fun validFrom(): Long","title":"validFrom"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/valid/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / valid valid @Default open fun valid(): Boolean","title":"Valid"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/valid/#valid","text":"@Default open fun valid(): Boolean","title":"valid"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationPurchase / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-purchase/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationStatus BookingConfirmationStatus @TypeAdapters @Immutable abstract class BookingConfirmationStatus : Parcelable Constructors Name Summary <init> BookingConfirmationStatus() Properties Name Summary CREATOR static val CREATOR: Creator< BookingConfirmationStatus !>! Functions Name Summary describeContents open fun describeContents(): Int subtitle abstract fun subtitle(): String ? title abstract fun title(): String ! value abstract fun value(): String ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/#bookingconfirmationstatus","text":"@TypeAdapters @Immutable abstract class BookingConfirmationStatus : Parcelable","title":"BookingConfirmationStatus"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/#constructors","text":"Name Summary <init> BookingConfirmationStatus()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< BookingConfirmationStatus !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/#functions","text":"Name Summary describeContents open fun describeContents(): Int subtitle abstract fun subtitle(): String ? title abstract fun title(): String ! value abstract fun value(): String ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationStatus / CREATOR CREATOR static val CREATOR: Creator< BookingConfirmationStatus !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< BookingConfirmationStatus !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationStatus / <init> <init> BookingConfirmationStatus()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/-init-/#init","text":"BookingConfirmationStatus()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationStatus / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/subtitle/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationStatus / subtitle subtitle @Nullable abstract fun subtitle(): String ?","title":"Subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/subtitle/#subtitle","text":"@Nullable abstract fun subtitle(): String ?","title":"subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/title/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationStatus / title title abstract fun title(): String !","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/title/#title","text":"abstract fun title(): String !","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/value/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationStatus / value value @Nullable abstract fun value(): String ?","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/value/#value","text":"@Nullable abstract fun value(): String ?","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingConfirmationStatus / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-confirmation-status/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingProvider BookingProvider @TypeAdapters @Immutable abstract class BookingProvider : Parcelable Constructors Name Summary <init> BookingProvider() Properties Name Summary CREATOR static val CREATOR: Creator< BookingProvider !>! Functions Name Summary color abstract fun color(): ServiceColor ? describeContents open fun describeContents(): Int name abstract fun name(): String ? phone abstract fun phone(): String ? remoteDarkIcon abstract fun remoteDarkIcon(): String ? remoteIcon abstract fun remoteIcon(): String ? website abstract fun website(): String ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/#bookingprovider","text":"@TypeAdapters @Immutable abstract class BookingProvider : Parcelable","title":"BookingProvider"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/#constructors","text":"Name Summary <init> BookingProvider()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< BookingProvider !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/#functions","text":"Name Summary color abstract fun color(): ServiceColor ? describeContents open fun describeContents(): Int name abstract fun name(): String ? phone abstract fun phone(): String ? remoteDarkIcon abstract fun remoteDarkIcon(): String ? remoteIcon abstract fun remoteIcon(): String ? website abstract fun website(): String ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingProvider / CREATOR CREATOR static val CREATOR: Creator< BookingProvider !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< BookingProvider !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingProvider / <init> <init> BookingProvider()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/-init-/#init","text":"BookingProvider()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/color/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingProvider / color color @Nullable abstract fun color(): ServiceColor ?","title":"Color"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/color/#color","text":"@Nullable abstract fun color(): ServiceColor ?","title":"color"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingProvider / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/name/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingProvider / name name @Nullable abstract fun name(): String ?","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/name/#name","text":"@Nullable abstract fun name(): String ?","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/phone/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingProvider / phone phone @Nullable abstract fun phone(): String ?","title":"Phone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/phone/#phone","text":"@Nullable abstract fun phone(): String ?","title":"phone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/remote-dark-icon/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingProvider / remoteDarkIcon remoteDarkIcon @Nullable abstract fun remoteDarkIcon(): String ?","title":"Remote dark icon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/remote-dark-icon/#remotedarkicon","text":"@Nullable abstract fun remoteDarkIcon(): String ?","title":"remoteDarkIcon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/remote-icon/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingProvider / remoteIcon remoteIcon @Nullable abstract fun remoteIcon(): String ?","title":"Remote icon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/remote-icon/#remoteicon","text":"@Nullable abstract fun remoteIcon(): String ?","title":"remoteIcon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/website/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingProvider / website website @Nullable abstract fun website(): String ?","title":"Website"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/website/#website","text":"@Nullable abstract fun website(): String ?","title":"website"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingProvider / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-provider/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingSource BookingSource @TypeAdapters @Immutable abstract class BookingSource : Parcelable Constructors Name Summary <init> BookingSource() Properties Name Summary CREATOR static val CREATOR: Creator< BookingSource !>! Functions Name Summary describeContents open fun describeContents(): Int provider abstract fun provider(): BookingProvider ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/#bookingsource","text":"@TypeAdapters @Immutable abstract class BookingSource : Parcelable","title":"BookingSource"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/#constructors","text":"Name Summary <init> BookingSource()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< BookingSource !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/#functions","text":"Name Summary describeContents open fun describeContents(): Int provider abstract fun provider(): BookingProvider ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingSource / CREATOR CREATOR static val CREATOR: Creator< BookingSource !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< BookingSource !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingSource / <init> <init> BookingSource()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/-init-/#init","text":"BookingSource()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingSource / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/provider/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingSource / provider provider @Nullable abstract fun provider(): BookingProvider ?","title":"Provider"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/provider/#provider","text":"@Nullable abstract fun provider(): BookingProvider ?","title":"provider"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / BookingSource / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-booking-source/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/","text":"tripkit-android / com.skedgo.tripkit.common.model / ITimeRange ITimeRange interface ITimeRange Functions Name Summary getEndTimeInSecs abstract fun getEndTimeInSecs(): Long getStartTimeInSecs abstract fun getStartTimeInSecs(): Long setEndTimeInSecs abstract fun setEndTimeInSecs(endTimeInSecs: Long ): Unit setStartTimeInSecs abstract fun setStartTimeInSecs(startTimeInSecs: Long ): Unit Inheritors Name Summary EventTrackItem open class EventTrackItem : TrackItem , ITimeRange TimetableEntry (Aka Service) open class TimetableEntry : Parcelable, IRealTimeElement , ITimeRange , WheelchairAccessible Trip A [`Trip`](../../com.skedgo.tripkit.routing/-trip/index.md) will mainly hold a list of TripSegment s which denotes how to go from [`Trip#getFrom()`](../../com.skedgo.tripkit.routing/-trip/get-from.md) to Trip#getTo() . open class Trip : ITimeRange TripSegment To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](../../com.skedgo.tripkit.routing/-trip-segment/index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL ](../../com.skedgo.tripkit.routing/-segment-type/-a-r-r-i-v-a-l.md). open class TripSegment : [ IRealTimeElement ](../../com.skedgo.tripkit.common.agenda/-i-real-time-element/index.md) , [ ITimeRange`](./index.md)","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/#itimerange","text":"interface ITimeRange","title":"ITimeRange"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/#functions","text":"Name Summary getEndTimeInSecs abstract fun getEndTimeInSecs(): Long getStartTimeInSecs abstract fun getStartTimeInSecs(): Long setEndTimeInSecs abstract fun setEndTimeInSecs(endTimeInSecs: Long ): Unit setStartTimeInSecs abstract fun setStartTimeInSecs(startTimeInSecs: Long ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/#inheritors","text":"Name Summary EventTrackItem open class EventTrackItem : TrackItem , ITimeRange TimetableEntry (Aka Service) open class TimetableEntry : Parcelable, IRealTimeElement , ITimeRange , WheelchairAccessible Trip A [`Trip`](../../com.skedgo.tripkit.routing/-trip/index.md) will mainly hold a list of TripSegment s which denotes how to go from [`Trip#getFrom()`](../../com.skedgo.tripkit.routing/-trip/get-from.md) to Trip#getTo() . open class Trip : ITimeRange TripSegment To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](../../com.skedgo.tripkit.routing/-trip-segment/index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL ](../../com.skedgo.tripkit.routing/-segment-type/-a-r-r-i-v-a-l.md). open class TripSegment : [ IRealTimeElement ](../../com.skedgo.tripkit.common.agenda/-i-real-time-element/index.md) , [ ITimeRange`](./index.md)","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/get-end-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.common.model / ITimeRange / getEndTimeInSecs getEndTimeInSecs abstract fun getEndTimeInSecs(): Long","title":"Get end time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/get-end-time-in-secs/#getendtimeinsecs","text":"abstract fun getEndTimeInSecs(): Long","title":"getEndTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/get-start-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.common.model / ITimeRange / getStartTimeInSecs getStartTimeInSecs abstract fun getStartTimeInSecs(): Long","title":"Get start time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/get-start-time-in-secs/#getstarttimeinsecs","text":"abstract fun getStartTimeInSecs(): Long","title":"getStartTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/set-end-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.common.model / ITimeRange / setEndTimeInSecs setEndTimeInSecs abstract fun setEndTimeInSecs(endTimeInSecs: Long ): Unit","title":"Set end time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/set-end-time-in-secs/#setendtimeinsecs","text":"abstract fun setEndTimeInSecs(endTimeInSecs: Long ): Unit","title":"setEndTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/set-start-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.common.model / ITimeRange / setStartTimeInSecs setStartTimeInSecs abstract fun setStartTimeInSecs(startTimeInSecs: Long ): Unit","title":"Set start time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-i-time-range/set-start-time-in-secs/#setstarttimeinsecs","text":"abstract fun setStartTimeInSecs(startTimeInSecs: Long ): Unit","title":"setStartTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location Location open class Location : Parcelable Constructors Name Summary <init> Location() Location(other: Location !) Location(lat: Double , lon: Double ) Properties Name Summary CREATOR static val CREATOR: Creator< Location !>! FOURSQUARE static val FOURSQUARE: String GOOGLE static val GOOGLE: String LOCAL static val LOCAL: String mAverageRating var mAverageRating: Float mFavouriteSortOrderIndex var mFavouriteSortOrderIndex: Int mId var mId: Long mIsFavourite var mIsFavourite: Boolean mLocationType var mLocationType: Int mRatingCount var mRatingCount: Int mRatingImageUrl var mRatingImageUrl: String ! mSource var mSource: String ! NO_BEARING static val NO_BEARING: Int TRIPGO Source static val TRIPGO: String TYPE_CALENDAR Location comes from users calendar static val TYPE_CALENDAR: Int TYPE_CONTACT Location comes from a contact in the users address book static val TYPE_CONTACT: Int TYPE_HISTORY Location comes from previous search/geocoding history or long-pressed static val TYPE_HISTORY: Int TYPE_HOME Location is info from the users personal contact card (home/work address etc) static val TYPE_HOME: Int TYPE_PERSONAL Location is info from the users personal contact card (home/work address etc) static val TYPE_PERSONAL: Int TYPE_SCHEDULED_STOP The location is a scheduled stop static val TYPE_SCHEDULED_STOP: Int TYPE_SERVICE_STOP Location is a stop on a user's trip static val TYPE_SERVICE_STOP: Int TYPE_UNKNOWN No known location type static val TYPE_UNKNOWN: Int TYPE_W3W What3Words type static val TYPE_W3W: Int TYPE_WORK static val TYPE_WORK: Int ZERO_LAT static val ZERO_LAT: Double ZERO_LON static val ZERO_LON: Double Functions Name Summary describeContents open fun describeContents(): Int distanceTo open fun distanceTo(location: Location !): Int Get the distance between this and another point open fun distanceTo(lat: Double , lon: Double ): Int equals open fun equals(other: Any ?): Boolean equalsByLatLon open fun equalsByLatLon(_loc: Location !): Boolean fillFrom open fun fillFrom(other: Location !): Unit getAddress open fun getAddress(): String ! getAverageRating open fun getAverageRating(): Float getBearing open fun getBearing(): Int getBearingTo open fun getBearingTo(other: Location !): Double open fun getBearingTo(lat: Double , lon: Double ): Double getCoordinateString open fun getCoordinateString(): String ! getDisplayAddress open fun getDisplayAddress(): String ! getDisplayName To present a human-readable name of a location. Invoke this if we want to present a location to users (e.g, a pin on a map, location of an event). open fun getDisplayName(): String ! getFavouriteSortOrderIndex open fun getFavouriteSortOrderIndex(): Int getId open fun getId(): Long getLastUpdatedTime open fun getLastUpdatedTime(): Long getLat open fun getLat(): Double getLocationClass open fun getLocationClass(): String ? getLocationType open fun getLocationType(): Int getLon open fun getLon(): Double getName open fun getName(): String ! getNameOrApproximateAddress open fun getNameOrApproximateAddress(): String ! getPhoneNumber open fun getPhoneNumber(): String ! getPopularity open fun getPopularity(): Int getRatingCount open fun getRatingCount(): Int getRatingImageUrl open fun getRatingImageUrl(): String ! getSource open fun getSource(): String ! getUrl open fun getUrl(): String ! getW3w open fun getW3w(): String ! getW3wInfoURL open fun getW3wInfoURL(): String ! hasValidCoordinates open fun hasValidCoordinates(): Boolean isApproximatelyAt open fun isApproximatelyAt(other: Location !): Boolean open fun isApproximatelyAt(lat: Double , lon: Double ): Boolean isExact open fun isExact(): Boolean isFavourite open fun isFavourite(): Boolean open fun isFavourite(favourite: Boolean ): Unit isLooselyApproximatelyAt open fun isLooselyApproximatelyAt(other: Location !): Boolean isNonZeroLocation open fun isNonZeroLocation(): Boolean isValidLocation open static fun isValidLocation(loc: Location !): Boolean round open fun round(d: Double ): Double setAddress open fun setAddress(address: String !): Unit setAverageRating open fun setAverageRating(averageRating: Float ): Unit setBearing open fun setBearing(bearing: Int ): Unit setExact open fun setExact(exact: Boolean ): Unit setFavouriteSortOrderIndex open fun setFavouriteSortOrderIndex(favouriteSortOrderIndex: Int ): Unit setId open fun setId(id: Long ): Unit setLastUpdatedTime open fun setLastUpdatedTime(lastUpdatedTime: Long ): Unit setLat open fun setLat(lat: Double ): Unit setLocationClass open fun setLocationClass(locationClass: String !): Unit setLocationType open fun setLocationType(type: Int ): Unit setLon open fun setLon(lon: Double ): Unit setName open fun setName(name: String !): Unit setPhoneNumber open fun setPhoneNumber(phoneNumber: String !): Unit setPopularity open fun setPopularity(popularity: Int ): Unit setRatingCount open fun setRatingCount(ratingCount: Int ): Unit setRatingImageUrl open fun setRatingImageUrl(ratingImageUrl: String !): Unit setSource open fun setSource(source: String !): Unit setTimeZone NOTE: You should only use this setter for testing purpose. open fun setTimeZone(timeZone: String ?): Unit setUrl open fun setUrl(url: String !): Unit setW3w open fun setW3w(w3w: String !): Unit setW3wInfoURL open fun setW3wInfoURL(w3wInfoURL: String !): Unit writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit Extension Properties Name Summary dateTimeZone val Location .dateTimeZone: DateTimeZone Extension Functions Name Summary isNear fun Location .isNear(location: Location ): Boolean Inheritors Name Summary ScheduledStop open class ScheduledStop : Location ServiceStop Represents a future stop of a service in a trip. open class ServiceStop : Location , WheelchairAccessible","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/#location","text":"open class Location : Parcelable","title":"Location"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/#constructors","text":"Name Summary <init> Location() Location(other: Location !) Location(lat: Double , lon: Double )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< Location !>! FOURSQUARE static val FOURSQUARE: String GOOGLE static val GOOGLE: String LOCAL static val LOCAL: String mAverageRating var mAverageRating: Float mFavouriteSortOrderIndex var mFavouriteSortOrderIndex: Int mId var mId: Long mIsFavourite var mIsFavourite: Boolean mLocationType var mLocationType: Int mRatingCount var mRatingCount: Int mRatingImageUrl var mRatingImageUrl: String ! mSource var mSource: String ! NO_BEARING static val NO_BEARING: Int TRIPGO Source static val TRIPGO: String TYPE_CALENDAR Location comes from users calendar static val TYPE_CALENDAR: Int TYPE_CONTACT Location comes from a contact in the users address book static val TYPE_CONTACT: Int TYPE_HISTORY Location comes from previous search/geocoding history or long-pressed static val TYPE_HISTORY: Int TYPE_HOME Location is info from the users personal contact card (home/work address etc) static val TYPE_HOME: Int TYPE_PERSONAL Location is info from the users personal contact card (home/work address etc) static val TYPE_PERSONAL: Int TYPE_SCHEDULED_STOP The location is a scheduled stop static val TYPE_SCHEDULED_STOP: Int TYPE_SERVICE_STOP Location is a stop on a user's trip static val TYPE_SERVICE_STOP: Int TYPE_UNKNOWN No known location type static val TYPE_UNKNOWN: Int TYPE_W3W What3Words type static val TYPE_W3W: Int TYPE_WORK static val TYPE_WORK: Int ZERO_LAT static val ZERO_LAT: Double ZERO_LON static val ZERO_LON: Double","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/#functions","text":"Name Summary describeContents open fun describeContents(): Int distanceTo open fun distanceTo(location: Location !): Int Get the distance between this and another point open fun distanceTo(lat: Double , lon: Double ): Int equals open fun equals(other: Any ?): Boolean equalsByLatLon open fun equalsByLatLon(_loc: Location !): Boolean fillFrom open fun fillFrom(other: Location !): Unit getAddress open fun getAddress(): String ! getAverageRating open fun getAverageRating(): Float getBearing open fun getBearing(): Int getBearingTo open fun getBearingTo(other: Location !): Double open fun getBearingTo(lat: Double , lon: Double ): Double getCoordinateString open fun getCoordinateString(): String ! getDisplayAddress open fun getDisplayAddress(): String ! getDisplayName To present a human-readable name of a location. Invoke this if we want to present a location to users (e.g, a pin on a map, location of an event). open fun getDisplayName(): String ! getFavouriteSortOrderIndex open fun getFavouriteSortOrderIndex(): Int getId open fun getId(): Long getLastUpdatedTime open fun getLastUpdatedTime(): Long getLat open fun getLat(): Double getLocationClass open fun getLocationClass(): String ? getLocationType open fun getLocationType(): Int getLon open fun getLon(): Double getName open fun getName(): String ! getNameOrApproximateAddress open fun getNameOrApproximateAddress(): String ! getPhoneNumber open fun getPhoneNumber(): String ! getPopularity open fun getPopularity(): Int getRatingCount open fun getRatingCount(): Int getRatingImageUrl open fun getRatingImageUrl(): String ! getSource open fun getSource(): String ! getUrl open fun getUrl(): String ! getW3w open fun getW3w(): String ! getW3wInfoURL open fun getW3wInfoURL(): String ! hasValidCoordinates open fun hasValidCoordinates(): Boolean isApproximatelyAt open fun isApproximatelyAt(other: Location !): Boolean open fun isApproximatelyAt(lat: Double , lon: Double ): Boolean isExact open fun isExact(): Boolean isFavourite open fun isFavourite(): Boolean open fun isFavourite(favourite: Boolean ): Unit isLooselyApproximatelyAt open fun isLooselyApproximatelyAt(other: Location !): Boolean isNonZeroLocation open fun isNonZeroLocation(): Boolean isValidLocation open static fun isValidLocation(loc: Location !): Boolean round open fun round(d: Double ): Double setAddress open fun setAddress(address: String !): Unit setAverageRating open fun setAverageRating(averageRating: Float ): Unit setBearing open fun setBearing(bearing: Int ): Unit setExact open fun setExact(exact: Boolean ): Unit setFavouriteSortOrderIndex open fun setFavouriteSortOrderIndex(favouriteSortOrderIndex: Int ): Unit setId open fun setId(id: Long ): Unit setLastUpdatedTime open fun setLastUpdatedTime(lastUpdatedTime: Long ): Unit setLat open fun setLat(lat: Double ): Unit setLocationClass open fun setLocationClass(locationClass: String !): Unit setLocationType open fun setLocationType(type: Int ): Unit setLon open fun setLon(lon: Double ): Unit setName open fun setName(name: String !): Unit setPhoneNumber open fun setPhoneNumber(phoneNumber: String !): Unit setPopularity open fun setPopularity(popularity: Int ): Unit setRatingCount open fun setRatingCount(ratingCount: Int ): Unit setRatingImageUrl open fun setRatingImageUrl(ratingImageUrl: String !): Unit setSource open fun setSource(source: String !): Unit setTimeZone NOTE: You should only use this setter for testing purpose. open fun setTimeZone(timeZone: String ?): Unit setUrl open fun setUrl(url: String !): Unit setW3w open fun setW3w(w3w: String !): Unit setW3wInfoURL open fun setW3wInfoURL(w3wInfoURL: String !): Unit writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/#extension-properties","text":"Name Summary dateTimeZone val Location .dateTimeZone: DateTimeZone","title":"Extension Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/#extension-functions","text":"Name Summary isNear fun Location .isNear(location: Location ): Boolean","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/#inheritors","text":"Name Summary ScheduledStop open class ScheduledStop : Location ServiceStop Represents a future stop of a service in a trip. open class ServiceStop : Location , WheelchairAccessible","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / CREATOR CREATOR static val CREATOR: Creator< Location !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< Location !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-f-o-u-r-s-q-u-a-r-e/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / FOURSQUARE FOURSQUARE static val FOURSQUARE: String","title":" f o u r s q u a r e"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-f-o-u-r-s-q-u-a-r-e/#foursquare","text":"static val FOURSQUARE: String","title":"FOURSQUARE"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-g-o-o-g-l-e/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / GOOGLE GOOGLE static val GOOGLE: String","title":" g o o g l e"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-g-o-o-g-l-e/#google","text":"static val GOOGLE: String","title":"GOOGLE"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / <init> <init> Location() Location(other: Location !) Location(lat: Double , lon: Double )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-init-/#init","text":"Location() Location(other: Location !) Location(lat: Double , lon: Double )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-l-o-c-a-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / LOCAL LOCAL static val LOCAL: String","title":" l o c a l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-l-o-c-a-l/#local","text":"static val LOCAL: String","title":"LOCAL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-n-o_-b-e-a-r-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / NO_BEARING NO_BEARING static val NO_BEARING: Int","title":" n o  b e a r i n g"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-n-o_-b-e-a-r-i-n-g/#no_bearing","text":"static val NO_BEARING: Int","title":"NO_BEARING"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-r-i-p-g-o/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / TRIPGO TRIPGO static val TRIPGO: String Source","title":" t r i p g o"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-r-i-p-g-o/#tripgo","text":"static val TRIPGO: String Source","title":"TRIPGO"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-c-a-l-e-n-d-a-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / TYPE_CALENDAR TYPE_CALENDAR static val TYPE_CALENDAR: Int Location comes from users calendar","title":" t y p e  c a l e n d a r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-c-a-l-e-n-d-a-r/#type_calendar","text":"static val TYPE_CALENDAR: Int Location comes from users calendar","title":"TYPE_CALENDAR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-c-o-n-t-a-c-t/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / TYPE_CONTACT TYPE_CONTACT static val TYPE_CONTACT: Int Location comes from a contact in the users address book","title":" t y p e  c o n t a c t"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-c-o-n-t-a-c-t/#type_contact","text":"static val TYPE_CONTACT: Int Location comes from a contact in the users address book","title":"TYPE_CONTACT"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-h-i-s-t-o-r-y/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / TYPE_HISTORY TYPE_HISTORY static val TYPE_HISTORY: Int Location comes from previous search/geocoding history or long-pressed","title":" t y p e  h i s t o r y"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-h-i-s-t-o-r-y/#type_history","text":"static val TYPE_HISTORY: Int Location comes from previous search/geocoding history or long-pressed","title":"TYPE_HISTORY"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-h-o-m-e/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / TYPE_HOME TYPE_HOME static val TYPE_HOME: Int Location is info from the users personal contact card (home/work address etc)","title":" t y p e  h o m e"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-h-o-m-e/#type_home","text":"static val TYPE_HOME: Int Location is info from the users personal contact card (home/work address etc)","title":"TYPE_HOME"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-p-e-r-s-o-n-a-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / TYPE_PERSONAL TYPE_PERSONAL static val TYPE_PERSONAL: Int Location is info from the users personal contact card (home/work address etc)","title":" t y p e  p e r s o n a l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-p-e-r-s-o-n-a-l/#type_personal","text":"static val TYPE_PERSONAL: Int Location is info from the users personal contact card (home/work address etc)","title":"TYPE_PERSONAL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-s-c-h-e-d-u-l-e-d_-s-t-o-p/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / TYPE_SCHEDULED_STOP TYPE_SCHEDULED_STOP static val TYPE_SCHEDULED_STOP: Int The location is a scheduled stop","title":" t y p e  s c h e d u l e d  s t o p"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-s-c-h-e-d-u-l-e-d_-s-t-o-p/#type_scheduled_stop","text":"static val TYPE_SCHEDULED_STOP: Int The location is a scheduled stop","title":"TYPE_SCHEDULED_STOP"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-s-e-r-v-i-c-e_-s-t-o-p/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / TYPE_SERVICE_STOP TYPE_SERVICE_STOP static val TYPE_SERVICE_STOP: Int Location is a stop on a user's trip","title":" t y p e  s e r v i c e  s t o p"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-s-e-r-v-i-c-e_-s-t-o-p/#type_service_stop","text":"static val TYPE_SERVICE_STOP: Int Location is a stop on a user's trip","title":"TYPE_SERVICE_STOP"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-u-n-k-n-o-w-n/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / TYPE_UNKNOWN TYPE_UNKNOWN static val TYPE_UNKNOWN: Int No known location type","title":" t y p e  u n k n o w n"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-u-n-k-n-o-w-n/#type_unknown","text":"static val TYPE_UNKNOWN: Int No known location type","title":"TYPE_UNKNOWN"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-w-o-r-k/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / TYPE_WORK TYPE_WORK static val TYPE_WORK: Int","title":" t y p e  w o r k"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-w-o-r-k/#type_work","text":"static val TYPE_WORK: Int","title":"TYPE_WORK"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-w3-w/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / TYPE_W3W TYPE_W3W static val TYPE_W3W: Int What3Words type","title":" t y p e  w3 w"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-t-y-p-e_-w3-w/#type_w3w","text":"static val TYPE_W3W: Int What3Words type","title":"TYPE_W3W"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-z-e-r-o_-l-a-t/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / ZERO_LAT ZERO_LAT static val ZERO_LAT: Double","title":" z e r o  l a t"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-z-e-r-o_-l-a-t/#zero_lat","text":"static val ZERO_LAT: Double","title":"ZERO_LAT"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-z-e-r-o_-l-o-n/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / ZERO_LON ZERO_LON static val ZERO_LON: Double","title":" z e r o  l o n"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/-z-e-r-o_-l-o-n/#zero_lon","text":"static val ZERO_LON: Double","title":"ZERO_LON"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/distance-to/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / distanceTo distanceTo open fun distanceTo(location: Location !): Int open fun distanceTo(lat: Double , lon: Double ): Int Get the distance between this and another point This implementation was pulled from: CodeCodex Parameters lat - Double : lon - Double : Return Int : The distance in meters between this and that See Also <a href=\" http://en.wikipedia.org/wiki/Haversine_formula\">Haversine Formula</a>","title":"Distance to"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/distance-to/#distanceto","text":"open fun distanceTo(location: Location !): Int open fun distanceTo(lat: Double , lon: Double ): Int Get the distance between this and another point This implementation was pulled from: CodeCodex","title":"distanceTo"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/distance-to/#parameters","text":"lat - Double : lon - Double : Return Int : The distance in meters between this and that See Also <a href=\" http://en.wikipedia.org/wiki/Haversine_formula\">Haversine Formula</a>","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/equals-by-lat-lon/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / equalsByLatLon equalsByLatLon open fun equalsByLatLon(_loc: Location !): Boolean","title":"Equals by lat lon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/equals-by-lat-lon/#equalsbylatlon","text":"open fun equalsByLatLon(_loc: Location !): Boolean","title":"equalsByLatLon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/equals/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / equals equals open fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/equals/#equals","text":"open fun equals(other: Any ?): Boolean","title":"equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/fill-from/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / fillFrom fillFrom open fun fillFrom(other: Location !): Unit","title":"Fill from"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/fill-from/#fillfrom","text":"open fun fillFrom(other: Location !): Unit","title":"fillFrom"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-address/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getAddress getAddress open fun getAddress(): String !","title":"Get address"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-address/#getaddress","text":"open fun getAddress(): String !","title":"getAddress"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-average-rating/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getAverageRating getAverageRating open fun getAverageRating(): Float","title":"Get average rating"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-average-rating/#getaveragerating","text":"open fun getAverageRating(): Float","title":"getAverageRating"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-bearing-to/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getBearingTo getBearingTo open fun getBearingTo(other: Location !): Double Parameters other - Location !: Return Double : The bearing from this location to another other open fun getBearingTo(lat: Double , lon: Double ): Double Parameters lat - Double : lon - Double : Return Double : The bearing from this location to another other Kudos: http://stackoverflow.com/a/9462757/755332","title":"Get bearing to"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-bearing-to/#getbearingto","text":"open fun getBearingTo(other: Location !): Double","title":"getBearingTo"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-bearing-to/#parameters","text":"other - Location !: Return Double : The bearing from this location to another other open fun getBearingTo(lat: Double , lon: Double ): Double","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-bearing-to/#parameters_1","text":"lat - Double : lon - Double : Return Double : The bearing from this location to another other Kudos: http://stackoverflow.com/a/9462757/755332","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-bearing/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getBearing getBearing open fun getBearing(): Int","title":"Get bearing"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-bearing/#getbearing","text":"open fun getBearing(): Int","title":"getBearing"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-coordinate-string/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getCoordinateString getCoordinateString open fun getCoordinateString(): String !","title":"Get coordinate string"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-coordinate-string/#getcoordinatestring","text":"open fun getCoordinateString(): String !","title":"getCoordinateString"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-display-address/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getDisplayAddress getDisplayAddress open fun getDisplayAddress(): String !","title":"Get display address"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-display-address/#getdisplayaddress","text":"open fun getDisplayAddress(): String !","title":"getDisplayAddress"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-display-name/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getDisplayName getDisplayName open fun getDisplayName(): String ! To present a human-readable name of a location. Invoke this if we want to present a location to users (e.g, a pin on a map, location of an event).","title":"Get display name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-display-name/#getdisplayname","text":"open fun getDisplayName(): String ! To present a human-readable name of a location. Invoke this if we want to present a location to users (e.g, a pin on a map, location of an event).","title":"getDisplayName"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-favourite-sort-order-index/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getFavouriteSortOrderIndex getFavouriteSortOrderIndex open fun getFavouriteSortOrderIndex(): Int","title":"Get favourite sort order index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-favourite-sort-order-index/#getfavouritesortorderindex","text":"open fun getFavouriteSortOrderIndex(): Int","title":"getFavouriteSortOrderIndex"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getId getId open fun getId(): Long","title":"Get id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-id/#getid","text":"open fun getId(): Long","title":"getId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-last-updated-time/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getLastUpdatedTime getLastUpdatedTime open fun getLastUpdatedTime(): Long","title":"Get last updated time"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-last-updated-time/#getlastupdatedtime","text":"open fun getLastUpdatedTime(): Long","title":"getLastUpdatedTime"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-lat/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getLat getLat open fun getLat(): Double","title":"Get lat"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-lat/#getlat","text":"open fun getLat(): Double","title":"getLat"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-location-class/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getLocationClass getLocationClass @Nullable open fun getLocationClass(): String ?","title":"Get location class"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-location-class/#getlocationclass","text":"@Nullable open fun getLocationClass(): String ?","title":"getLocationClass"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-location-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getLocationType getLocationType open fun getLocationType(): Int","title":"Get location type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-location-type/#getlocationtype","text":"open fun getLocationType(): Int","title":"getLocationType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-lon/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getLon getLon open fun getLon(): Double","title":"Get lon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-lon/#getlon","text":"open fun getLon(): Double","title":"getLon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-name-or-approximate-address/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getNameOrApproximateAddress getNameOrApproximateAddress open fun getNameOrApproximateAddress(): String ! Return String !: name (if a place got a name: station, uni, .etc) or suburb's name (if that's an address)","title":"Get name or approximate address"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-name-or-approximate-address/#getnameorapproximateaddress","text":"open fun getNameOrApproximateAddress(): String ! Return String !: name (if a place got a name: station, uni, .etc) or suburb's name (if that's an address)","title":"getNameOrApproximateAddress"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-name/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getName getName open fun getName(): String !","title":"Get name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-name/#getname","text":"open fun getName(): String !","title":"getName"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-phone-number/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getPhoneNumber getPhoneNumber open fun getPhoneNumber(): String !","title":"Get phone number"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-phone-number/#getphonenumber","text":"open fun getPhoneNumber(): String !","title":"getPhoneNumber"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-popularity/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getPopularity getPopularity open fun getPopularity(): Int","title":"Get popularity"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-popularity/#getpopularity","text":"open fun getPopularity(): Int","title":"getPopularity"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-rating-count/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getRatingCount getRatingCount open fun getRatingCount(): Int","title":"Get rating count"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-rating-count/#getratingcount","text":"open fun getRatingCount(): Int","title":"getRatingCount"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-rating-image-url/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getRatingImageUrl getRatingImageUrl open fun getRatingImageUrl(): String !","title":"Get rating image url"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-rating-image-url/#getratingimageurl","text":"open fun getRatingImageUrl(): String !","title":"getRatingImageUrl"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-source/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getSource getSource open fun getSource(): String !","title":"Get source"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-source/#getsource","text":"open fun getSource(): String !","title":"getSource"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-url/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getUrl getUrl open fun getUrl(): String !","title":"Get url"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-url/#geturl","text":"open fun getUrl(): String !","title":"getUrl"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-w3w-info-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getW3wInfoURL getW3wInfoURL open fun getW3wInfoURL(): String !","title":"Get w3w info u r l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-w3w-info-u-r-l/#getw3winfourl","text":"open fun getW3wInfoURL(): String !","title":"getW3wInfoURL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-w3w/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / getW3w getW3w open fun getW3w(): String !","title":"Get w3w"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/get-w3w/#getw3w","text":"open fun getW3w(): String !","title":"getW3w"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/has-valid-coordinates/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / hasValidCoordinates hasValidCoordinates open fun hasValidCoordinates(): Boolean","title":"Has valid coordinates"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/has-valid-coordinates/#hasvalidcoordinates","text":"open fun hasValidCoordinates(): Boolean","title":"hasValidCoordinates"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-approximately-at/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / isApproximatelyAt isApproximatelyAt open fun isApproximatelyAt(other: Location !): Boolean open fun isApproximatelyAt(lat: Double , lon: Double ): Boolean","title":"Is approximately at"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-approximately-at/#isapproximatelyat","text":"open fun isApproximatelyAt(other: Location !): Boolean open fun isApproximatelyAt(lat: Double , lon: Double ): Boolean","title":"isApproximatelyAt"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-exact/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / isExact isExact open fun isExact(): Boolean","title":"Is exact"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-exact/#isexact","text":"open fun isExact(): Boolean","title":"isExact"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-favourite/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / isFavourite isFavourite open fun isFavourite(): Boolean open fun isFavourite(favourite: Boolean ): Unit","title":"Is favourite"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-favourite/#isfavourite","text":"open fun isFavourite(): Boolean open fun isFavourite(favourite: Boolean ): Unit","title":"isFavourite"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-loosely-approximately-at/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / isLooselyApproximatelyAt isLooselyApproximatelyAt open fun isLooselyApproximatelyAt(other: Location !): Boolean","title":"Is loosely approximately at"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-loosely-approximately-at/#islooselyapproximatelyat","text":"open fun isLooselyApproximatelyAt(other: Location !): Boolean","title":"isLooselyApproximatelyAt"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-non-zero-location/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / isNonZeroLocation isNonZeroLocation open fun isNonZeroLocation(): Boolean","title":"Is non zero location"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-non-zero-location/#isnonzerolocation","text":"open fun isNonZeroLocation(): Boolean","title":"isNonZeroLocation"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-valid-location/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / isValidLocation isValidLocation open static fun isValidLocation(loc: Location !): Boolean","title":"Is valid location"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/is-valid-location/#isvalidlocation","text":"open static fun isValidLocation(loc: Location !): Boolean","title":"isValidLocation"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-average-rating/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / mAverageRating mAverageRating protected var mAverageRating: Float","title":"M average rating"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-average-rating/#maveragerating","text":"protected var mAverageRating: Float","title":"mAverageRating"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-favourite-sort-order-index/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / mFavouriteSortOrderIndex mFavouriteSortOrderIndex protected var mFavouriteSortOrderIndex: Int","title":"M favourite sort order index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-favourite-sort-order-index/#mfavouritesortorderindex","text":"protected var mFavouriteSortOrderIndex: Int","title":"mFavouriteSortOrderIndex"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / mId mId protected var mId: Long","title":"M id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-id/#mid","text":"protected var mId: Long","title":"mId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-is-favourite/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / mIsFavourite mIsFavourite protected var mIsFavourite: Boolean","title":"M is favourite"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-is-favourite/#misfavourite","text":"protected var mIsFavourite: Boolean","title":"mIsFavourite"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-location-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / mLocationType mLocationType protected var mLocationType: Int","title":"M location type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-location-type/#mlocationtype","text":"protected var mLocationType: Int","title":"mLocationType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-rating-count/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / mRatingCount mRatingCount protected var mRatingCount: Int","title":"M rating count"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-rating-count/#mratingcount","text":"protected var mRatingCount: Int","title":"mRatingCount"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-rating-image-url/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / mRatingImageUrl mRatingImageUrl protected var mRatingImageUrl: String !","title":"M rating image url"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-rating-image-url/#mratingimageurl","text":"protected var mRatingImageUrl: String !","title":"mRatingImageUrl"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-source/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / mSource mSource protected var mSource: String !","title":"M source"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/m-source/#msource","text":"protected var mSource: String !","title":"mSource"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/round/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / round round protected open fun round(d: Double ): Double","title":"Round"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/round/#round","text":"protected open fun round(d: Double ): Double","title":"round"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-address/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setAddress setAddress open fun setAddress(address: String !): Unit","title":"Set address"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-address/#setaddress","text":"open fun setAddress(address: String !): Unit","title":"setAddress"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-average-rating/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setAverageRating setAverageRating open fun setAverageRating(averageRating: Float ): Unit","title":"Set average rating"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-average-rating/#setaveragerating","text":"open fun setAverageRating(averageRating: Float ): Unit","title":"setAverageRating"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-bearing/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setBearing setBearing open fun setBearing(bearing: Int ): Unit","title":"Set bearing"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-bearing/#setbearing","text":"open fun setBearing(bearing: Int ): Unit","title":"setBearing"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-exact/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setExact setExact open fun setExact(exact: Boolean ): Unit","title":"Set exact"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-exact/#setexact","text":"open fun setExact(exact: Boolean ): Unit","title":"setExact"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-favourite-sort-order-index/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setFavouriteSortOrderIndex setFavouriteSortOrderIndex open fun setFavouriteSortOrderIndex(favouriteSortOrderIndex: Int ): Unit","title":"Set favourite sort order index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-favourite-sort-order-index/#setfavouritesortorderindex","text":"open fun setFavouriteSortOrderIndex(favouriteSortOrderIndex: Int ): Unit","title":"setFavouriteSortOrderIndex"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setId setId open fun setId(id: Long ): Unit","title":"Set id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-id/#setid","text":"open fun setId(id: Long ): Unit","title":"setId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-last-updated-time/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setLastUpdatedTime setLastUpdatedTime open fun setLastUpdatedTime(lastUpdatedTime: Long ): Unit","title":"Set last updated time"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-last-updated-time/#setlastupdatedtime","text":"open fun setLastUpdatedTime(lastUpdatedTime: Long ): Unit","title":"setLastUpdatedTime"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-lat/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setLat setLat open fun setLat(lat: Double ): Unit","title":"Set lat"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-lat/#setlat","text":"open fun setLat(lat: Double ): Unit","title":"setLat"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-location-class/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setLocationClass setLocationClass open fun setLocationClass(locationClass: String !): Unit","title":"Set location class"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-location-class/#setlocationclass","text":"open fun setLocationClass(locationClass: String !): Unit","title":"setLocationClass"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-location-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setLocationType setLocationType open fun setLocationType(type: Int ): Unit","title":"Set location type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-location-type/#setlocationtype","text":"open fun setLocationType(type: Int ): Unit","title":"setLocationType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-lon/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setLon setLon open fun setLon(lon: Double ): Unit","title":"Set lon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-lon/#setlon","text":"open fun setLon(lon: Double ): Unit","title":"setLon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-name/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setName setName open fun setName(name: String !): Unit","title":"Set name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-name/#setname","text":"open fun setName(name: String !): Unit","title":"setName"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-phone-number/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setPhoneNumber setPhoneNumber open fun setPhoneNumber(phoneNumber: String !): Unit","title":"Set phone number"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-phone-number/#setphonenumber","text":"open fun setPhoneNumber(phoneNumber: String !): Unit","title":"setPhoneNumber"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-popularity/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setPopularity setPopularity open fun setPopularity(popularity: Int ): Unit","title":"Set popularity"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-popularity/#setpopularity","text":"open fun setPopularity(popularity: Int ): Unit","title":"setPopularity"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-rating-count/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setRatingCount setRatingCount open fun setRatingCount(ratingCount: Int ): Unit","title":"Set rating count"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-rating-count/#setratingcount","text":"open fun setRatingCount(ratingCount: Int ): Unit","title":"setRatingCount"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-rating-image-url/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setRatingImageUrl setRatingImageUrl open fun setRatingImageUrl(ratingImageUrl: String !): Unit","title":"Set rating image url"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-rating-image-url/#setratingimageurl","text":"open fun setRatingImageUrl(ratingImageUrl: String !): Unit","title":"setRatingImageUrl"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-source/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setSource setSource open fun setSource(source: String !): Unit","title":"Set source"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-source/#setsource","text":"open fun setSource(source: String !): Unit","title":"setSource"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-time-zone/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setTimeZone setTimeZone open fun setTimeZone(@Nullable timeZone: String ?): Unit NOTE: You should only use this setter for testing purpose.","title":"Set time zone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-time-zone/#settimezone","text":"open fun setTimeZone(@Nullable timeZone: String ?): Unit NOTE: You should only use this setter for testing purpose.","title":"setTimeZone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-url/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setUrl setUrl open fun setUrl(url: String !): Unit","title":"Set url"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-url/#seturl","text":"open fun setUrl(url: String !): Unit","title":"setUrl"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-w3w-info-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setW3wInfoURL setW3wInfoURL open fun setW3wInfoURL(w3wInfoURL: String !): Unit","title":"Set w3w info u r l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-w3w-info-u-r-l/#setw3winfourl","text":"open fun setW3wInfoURL(w3wInfoURL: String !): Unit","title":"setW3wInfoURL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-w3w/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / setW3w setW3w open fun setW3w(w3w: String !): Unit","title":"Set w3w"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/set-w3w/#setw3w","text":"open fun setW3w(w3w: String !): Unit","title":"setW3w"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / Location / writeToParcel writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-location/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/","text":"tripkit-android / com.skedgo.tripkit.common.model / PurchaseBrand PurchaseBrand @TypeAdapters @Immutable abstract class PurchaseBrand : Parcelable Constructors Name Summary <init> PurchaseBrand() Properties Name Summary CREATOR static val CREATOR: Creator< PurchaseBrand !>! Functions Name Summary color abstract fun color(): ServiceColor ! describeContents open fun describeContents(): Int name abstract fun name(): String ! remoteIcon abstract fun remoteIcon(): String ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/#purchasebrand","text":"@TypeAdapters @Immutable abstract class PurchaseBrand : Parcelable","title":"PurchaseBrand"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/#constructors","text":"Name Summary <init> PurchaseBrand()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< PurchaseBrand !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/#functions","text":"Name Summary color abstract fun color(): ServiceColor ! describeContents open fun describeContents(): Int name abstract fun name(): String ! remoteIcon abstract fun remoteIcon(): String ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / PurchaseBrand / CREATOR CREATOR static val CREATOR: Creator< PurchaseBrand !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< PurchaseBrand !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / PurchaseBrand / <init> <init> PurchaseBrand()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/-init-/#init","text":"PurchaseBrand()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/color/","text":"tripkit-android / com.skedgo.tripkit.common.model / PurchaseBrand / color color abstract fun color(): ServiceColor !","title":"Color"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/color/#color","text":"abstract fun color(): ServiceColor !","title":"color"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / PurchaseBrand / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/name/","text":"tripkit-android / com.skedgo.tripkit.common.model / PurchaseBrand / name name abstract fun name(): String !","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/name/#name","text":"abstract fun name(): String !","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/remote-icon/","text":"tripkit-android / com.skedgo.tripkit.common.model / PurchaseBrand / remoteIcon remoteIcon @Nullable abstract fun remoteIcon(): String ?","title":"Remote icon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/remote-icon/#remoteicon","text":"@Nullable abstract fun remoteIcon(): String ?","title":"remoteIcon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / PurchaseBrand / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-purchase-brand/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query Query open class Query : Parcelable Represents a query to find routes from A to B. Note that, to avoid TransactionTooLargeException , it's discouraged to pass any instance of Query to an Intent or a Bundle . The Parcelable is subject to deletion at anytime. Constructors Name Summary <init> Query() Properties Name Summary CREATOR static val CREATOR: Creator< Query !>! Functions Name Summary clone open fun clone(): Query ! open fun clone(cloneTransportMode: Boolean ): Query ! describeContents open fun describeContents(): Int destinationIsCurrentLocation open fun destinationIsCurrentLocation(): Boolean equals open fun equals(other: Any ?): Boolean getArriveBy open fun getArriveBy(): Long getBudgetWeight open fun getBudgetWeight(): Int getCyclingSpeed open fun getCyclingSpeed(): Int getDepartAfter open fun getDepartAfter(): Long getEnvironmentWeight open fun getEnvironmentWeight(): Int getExcludedStopCodes open fun getExcludedStopCodes(): MutableList < String !>! getFromLocation open fun getFromLocation(): Location ? getHassleWeight open fun getHassleWeight(): Int getMaxWalkingTime In minutes. Note that this is only used for XUM project. open fun getMaxWalkingTime(): Int getTimeTag open fun getTimeTag(): TimeTag ? getTimeWeight open fun getTimeWeight(): Int getToLocation open fun getToLocation(): Location ? getTransferTime open fun getTransferTime(): Int getUnit open fun getUnit(): String ! getWalkingSpeed open fun getWalkingSpeed(): Int hashCode open fun hashCode(): Int originIsCurrentLocation open fun originIsCurrentLocation(): Boolean setBudgetWeight open fun setBudgetWeight(weight: Int ): Unit setCyclingSpeed open fun setCyclingSpeed(cyclingSpeed: Int ): Unit setEnvironmentWeight open fun setEnvironmentWeight(weight: Int ): Unit setExcludedStopCodes open fun setExcludedStopCodes(excludedStopCodes: MutableList < String !>!): Unit setFromLocation open fun setFromLocation(location: Location !): Unit setHassleWeight open fun setHassleWeight(weight: Int ): Unit setMaxWalkingTime In minutes. Note that this is only used for XUM project. open fun setMaxWalkingTime(minutes: Int ): Unit setTimeTag open fun setTimeTag(timeTag: TimeTag ): Unit setTimeWeight open fun setTimeWeight(weight: Int ): Unit setToLocation open fun setToLocation(location: Location !): Unit setTransferTime open fun setTransferTime(transferTime: Int ): Unit setUnit open fun setUnit(unit: String !): Unit setWalkingSpeed open fun setWalkingSpeed(walkingSpeed: Int ): Unit uuid open fun uuid(): String ! writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/#query","text":"open class Query : Parcelable Represents a query to find routes from A to B. Note that, to avoid TransactionTooLargeException , it's discouraged to pass any instance of Query to an Intent or a Bundle . The Parcelable is subject to deletion at anytime.","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/#constructors","text":"Name Summary <init> Query()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< Query !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/#functions","text":"Name Summary clone open fun clone(): Query ! open fun clone(cloneTransportMode: Boolean ): Query ! describeContents open fun describeContents(): Int destinationIsCurrentLocation open fun destinationIsCurrentLocation(): Boolean equals open fun equals(other: Any ?): Boolean getArriveBy open fun getArriveBy(): Long getBudgetWeight open fun getBudgetWeight(): Int getCyclingSpeed open fun getCyclingSpeed(): Int getDepartAfter open fun getDepartAfter(): Long getEnvironmentWeight open fun getEnvironmentWeight(): Int getExcludedStopCodes open fun getExcludedStopCodes(): MutableList < String !>! getFromLocation open fun getFromLocation(): Location ? getHassleWeight open fun getHassleWeight(): Int getMaxWalkingTime In minutes. Note that this is only used for XUM project. open fun getMaxWalkingTime(): Int getTimeTag open fun getTimeTag(): TimeTag ? getTimeWeight open fun getTimeWeight(): Int getToLocation open fun getToLocation(): Location ? getTransferTime open fun getTransferTime(): Int getUnit open fun getUnit(): String ! getWalkingSpeed open fun getWalkingSpeed(): Int hashCode open fun hashCode(): Int originIsCurrentLocation open fun originIsCurrentLocation(): Boolean setBudgetWeight open fun setBudgetWeight(weight: Int ): Unit setCyclingSpeed open fun setCyclingSpeed(cyclingSpeed: Int ): Unit setEnvironmentWeight open fun setEnvironmentWeight(weight: Int ): Unit setExcludedStopCodes open fun setExcludedStopCodes(excludedStopCodes: MutableList < String !>!): Unit setFromLocation open fun setFromLocation(location: Location !): Unit setHassleWeight open fun setHassleWeight(weight: Int ): Unit setMaxWalkingTime In minutes. Note that this is only used for XUM project. open fun setMaxWalkingTime(minutes: Int ): Unit setTimeTag open fun setTimeTag(timeTag: TimeTag ): Unit setTimeWeight open fun setTimeWeight(weight: Int ): Unit setToLocation open fun setToLocation(location: Location !): Unit setTransferTime open fun setTransferTime(transferTime: Int ): Unit setUnit open fun setUnit(unit: String !): Unit setWalkingSpeed open fun setWalkingSpeed(walkingSpeed: Int ): Unit uuid open fun uuid(): String ! writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / CREATOR CREATOR static val CREATOR: Creator< Query !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< Query !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / <init> <init> Query()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/-init-/#init","text":"Query()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/clone/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / clone clone open fun clone(): Query ! open fun clone(cloneTransportMode: Boolean ): Query !","title":"Clone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/clone/#clone","text":"open fun clone(): Query ! open fun clone(cloneTransportMode: Boolean ): Query !","title":"clone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/destination-is-current-location/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / destinationIsCurrentLocation destinationIsCurrentLocation open fun destinationIsCurrentLocation(): Boolean","title":"Destination is current location"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/destination-is-current-location/#destinationiscurrentlocation","text":"open fun destinationIsCurrentLocation(): Boolean","title":"destinationIsCurrentLocation"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/equals/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / equals equals open fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/equals/#equals","text":"open fun equals(other: Any ?): Boolean","title":"equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-arrive-by/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getArriveBy getArriveBy open fun getArriveBy(): Long Return Long : Time in secs.","title":"Get arrive by"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-arrive-by/#getarriveby","text":"open fun getArriveBy(): Long Return Long : Time in secs.","title":"getArriveBy"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-budget-weight/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getBudgetWeight getBudgetWeight open fun getBudgetWeight(): Int","title":"Get budget weight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-budget-weight/#getbudgetweight","text":"open fun getBudgetWeight(): Int","title":"getBudgetWeight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-cycling-speed/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getCyclingSpeed getCyclingSpeed open fun getCyclingSpeed(): Int","title":"Get cycling speed"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-cycling-speed/#getcyclingspeed","text":"open fun getCyclingSpeed(): Int","title":"getCyclingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-depart-after/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getDepartAfter getDepartAfter open fun getDepartAfter(): Long Return Long : Time in secs.","title":"Get depart after"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-depart-after/#getdepartafter","text":"open fun getDepartAfter(): Long Return Long : Time in secs.","title":"getDepartAfter"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-environment-weight/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getEnvironmentWeight getEnvironmentWeight open fun getEnvironmentWeight(): Int","title":"Get environment weight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-environment-weight/#getenvironmentweight","text":"open fun getEnvironmentWeight(): Int","title":"getEnvironmentWeight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-excluded-stop-codes/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getExcludedStopCodes getExcludedStopCodes open fun getExcludedStopCodes(): MutableList < String !>!","title":"Get excluded stop codes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-excluded-stop-codes/#getexcludedstopcodes","text":"open fun getExcludedStopCodes(): MutableList < String !>!","title":"getExcludedStopCodes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-from-location/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getFromLocation getFromLocation @Nullable open fun getFromLocation(): Location ?","title":"Get from location"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-from-location/#getfromlocation","text":"@Nullable open fun getFromLocation(): Location ?","title":"getFromLocation"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-hassle-weight/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getHassleWeight getHassleWeight open fun getHassleWeight(): Int","title":"Get hassle weight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-hassle-weight/#gethassleweight","text":"open fun getHassleWeight(): Int","title":"getHassleWeight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-max-walking-time/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getMaxWalkingTime getMaxWalkingTime open fun getMaxWalkingTime(): Int In minutes. Note that this is only used for XUM project.","title":"Get max walking time"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-max-walking-time/#getmaxwalkingtime","text":"open fun getMaxWalkingTime(): Int In minutes. Note that this is only used for XUM project.","title":"getMaxWalkingTime"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-time-tag/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getTimeTag getTimeTag @Nullable open fun getTimeTag(): TimeTag ?","title":"Get time tag"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-time-tag/#gettimetag","text":"@Nullable open fun getTimeTag(): TimeTag ?","title":"getTimeTag"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-time-weight/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getTimeWeight getTimeWeight open fun getTimeWeight(): Int","title":"Get time weight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-time-weight/#gettimeweight","text":"open fun getTimeWeight(): Int","title":"getTimeWeight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-to-location/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getToLocation getToLocation @Nullable open fun getToLocation(): Location ?","title":"Get to location"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-to-location/#gettolocation","text":"@Nullable open fun getToLocation(): Location ?","title":"getToLocation"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-transfer-time/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getTransferTime getTransferTime open fun getTransferTime(): Int","title":"Get transfer time"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-transfer-time/#gettransfertime","text":"open fun getTransferTime(): Int","title":"getTransferTime"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-unit/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getUnit getUnit open fun getUnit(): String ! Return String !: values of Units .","title":"Get unit"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-unit/#getunit","text":"open fun getUnit(): String ! Return String !: values of Units .","title":"getUnit"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-walking-speed/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / getWalkingSpeed getWalkingSpeed open fun getWalkingSpeed(): Int","title":"Get walking speed"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/get-walking-speed/#getwalkingspeed","text":"open fun getWalkingSpeed(): Int","title":"getWalkingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/hash-code/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / hashCode hashCode open fun hashCode(): Int","title":"Hash code"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/hash-code/#hashcode","text":"open fun hashCode(): Int","title":"hashCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/origin-is-current-location/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / originIsCurrentLocation originIsCurrentLocation open fun originIsCurrentLocation(): Boolean","title":"Origin is current location"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/origin-is-current-location/#originiscurrentlocation","text":"open fun originIsCurrentLocation(): Boolean","title":"originIsCurrentLocation"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-budget-weight/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setBudgetWeight setBudgetWeight open fun setBudgetWeight(weight: Int ): Unit","title":"Set budget weight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-budget-weight/#setbudgetweight","text":"open fun setBudgetWeight(weight: Int ): Unit","title":"setBudgetWeight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-cycling-speed/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setCyclingSpeed setCyclingSpeed open fun setCyclingSpeed(cyclingSpeed: Int ): Unit","title":"Set cycling speed"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-cycling-speed/#setcyclingspeed","text":"open fun setCyclingSpeed(cyclingSpeed: Int ): Unit","title":"setCyclingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-environment-weight/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setEnvironmentWeight setEnvironmentWeight open fun setEnvironmentWeight(weight: Int ): Unit","title":"Set environment weight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-environment-weight/#setenvironmentweight","text":"open fun setEnvironmentWeight(weight: Int ): Unit","title":"setEnvironmentWeight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-excluded-stop-codes/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setExcludedStopCodes setExcludedStopCodes open fun setExcludedStopCodes(excludedStopCodes: MutableList < String !>!): Unit","title":"Set excluded stop codes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-excluded-stop-codes/#setexcludedstopcodes","text":"open fun setExcludedStopCodes(excludedStopCodes: MutableList < String !>!): Unit","title":"setExcludedStopCodes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-from-location/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setFromLocation setFromLocation open fun setFromLocation(location: Location !): Unit","title":"Set from location"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-from-location/#setfromlocation","text":"open fun setFromLocation(location: Location !): Unit","title":"setFromLocation"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-hassle-weight/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setHassleWeight setHassleWeight open fun setHassleWeight(weight: Int ): Unit","title":"Set hassle weight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-hassle-weight/#sethassleweight","text":"open fun setHassleWeight(weight: Int ): Unit","title":"setHassleWeight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-max-walking-time/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setMaxWalkingTime setMaxWalkingTime open fun setMaxWalkingTime(minutes: Int ): Unit In minutes. Note that this is only used for XUM project.","title":"Set max walking time"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-max-walking-time/#setmaxwalkingtime","text":"open fun setMaxWalkingTime(minutes: Int ): Unit In minutes. Note that this is only used for XUM project.","title":"setMaxWalkingTime"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-time-tag/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setTimeTag setTimeTag open fun setTimeTag(@NonNull timeTag: TimeTag ): Unit","title":"Set time tag"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-time-tag/#settimetag","text":"open fun setTimeTag(@NonNull timeTag: TimeTag ): Unit","title":"setTimeTag"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-time-weight/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setTimeWeight setTimeWeight open fun setTimeWeight(weight: Int ): Unit","title":"Set time weight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-time-weight/#settimeweight","text":"open fun setTimeWeight(weight: Int ): Unit","title":"setTimeWeight"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-to-location/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setToLocation setToLocation open fun setToLocation(location: Location !): Unit","title":"Set to location"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-to-location/#settolocation","text":"open fun setToLocation(location: Location !): Unit","title":"setToLocation"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-transfer-time/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setTransferTime setTransferTime open fun setTransferTime(transferTime: Int ): Unit","title":"Set transfer time"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-transfer-time/#settransfertime","text":"open fun setTransferTime(transferTime: Int ): Unit","title":"setTransferTime"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-unit/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setUnit setUnit open fun setUnit(unit: String !): Unit Parameters unit - String !: Must be values of Units .","title":"Set unit"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-unit/#setunit","text":"open fun setUnit(unit: String !): Unit","title":"setUnit"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-unit/#parameters","text":"unit - String !: Must be values of Units .","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-walking-speed/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / setWalkingSpeed setWalkingSpeed open fun setWalkingSpeed(walkingSpeed: Int ): Unit","title":"Set walking speed"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/set-walking-speed/#setwalkingspeed","text":"open fun setWalkingSpeed(walkingSpeed: Int ): Unit","title":"setWalkingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/uuid/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / uuid uuid open fun uuid(): String !","title":"Uuid"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/uuid/#uuid","text":"open fun uuid(): String !","title":"uuid"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / Query / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-query/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealTimeStatus RealTimeStatus class RealTimeStatus Enum Values Name Summary CAPABLE IS_REAL_TIME INCAPABLE Functions Name Summary from static fun from(s: String !): RealTimeStatus ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/#realtimestatus","text":"class RealTimeStatus","title":"RealTimeStatus"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/#enum-values","text":"Name Summary CAPABLE IS_REAL_TIME INCAPABLE","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/#functions","text":"Name Summary from static fun from(s: String !): RealTimeStatus ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/-c-a-p-a-b-l-e/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealTimeStatus / CAPABLE CAPABLE CAPABLE","title":" c a p a b l e"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/-c-a-p-a-b-l-e/#capable","text":"CAPABLE","title":"CAPABLE"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/-i-n-c-a-p-a-b-l-e/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealTimeStatus / INCAPABLE INCAPABLE INCAPABLE","title":" i n c a p a b l e"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/-i-n-c-a-p-a-b-l-e/#incapable","text":"INCAPABLE","title":"INCAPABLE"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/-i-s_-r-e-a-l_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealTimeStatus / IS_REAL_TIME IS_REAL_TIME IS_REAL_TIME","title":" i s  r e a l  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/-i-s_-r-e-a-l_-t-i-m-e/#is_real_time","text":"IS_REAL_TIME","title":"IS_REAL_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/from/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealTimeStatus / from from @Nullable static fun from(s: String !): RealTimeStatus ?","title":"From"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-real-time-status/from/#from","text":"@Nullable static fun from(s: String !): RealTimeStatus ?","title":"from"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert RealtimeAlert @Immutable @TypeAdapters abstract class RealtimeAlert : Parcelable See Also <a href=\" https://github.com/skedgo/skedgo-java/blob/production/RealTime/src/main/java/com/buzzhives/Realtime/RealtimeAlert.java\">RealtimeAlert</a&gt ; Constructors Name Summary <init> RealtimeAlert() Properties Name Summary CREATOR static val CREATOR: Creator< RealtimeAlert !>! SEVERITY_ALERT static val SEVERITY_ALERT: String SEVERITY_WARNING static val SEVERITY_WARNING: String Functions Name Summary alertAction abstract fun alertAction(): AlertAction ? describeContents open fun describeContents(): Int fromDate open fun fromDate(): Long lastUpdated open fun lastUpdated(): Long location abstract fun location(): Location ? remoteHashCode abstract fun remoteHashCode(): Long remoteIcon abstract fun remoteIcon(): String ? severity abstract fun severity(): String ? text abstract fun text(): String ? title abstract fun title(): String ? url abstract fun url(): String ? writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/#realtimealert","text":"@Immutable @TypeAdapters abstract class RealtimeAlert : Parcelable See Also <a href=\" https://github.com/skedgo/skedgo-java/blob/production/RealTime/src/main/java/com/buzzhives/Realtime/RealtimeAlert.java\">RealtimeAlert</a&gt ;","title":"RealtimeAlert"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/#constructors","text":"Name Summary <init> RealtimeAlert()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< RealtimeAlert !>! SEVERITY_ALERT static val SEVERITY_ALERT: String SEVERITY_WARNING static val SEVERITY_WARNING: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/#functions","text":"Name Summary alertAction abstract fun alertAction(): AlertAction ? describeContents open fun describeContents(): Int fromDate open fun fromDate(): Long lastUpdated open fun lastUpdated(): Long location abstract fun location(): Location ? remoteHashCode abstract fun remoteHashCode(): Long remoteIcon abstract fun remoteIcon(): String ? severity abstract fun severity(): String ? text abstract fun text(): String ? title abstract fun title(): String ? url abstract fun url(): String ? writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / CREATOR CREATOR static val CREATOR: Creator< RealtimeAlert !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< RealtimeAlert !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / <init> <init> RealtimeAlert() See Also <a href=\" https://github.com/skedgo/skedgo-java/blob/production/RealTime/src/main/java/com/buzzhives/Realtime/RealtimeAlert.java\">RealtimeAlert</a&gt ;","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/-init-/#init","text":"RealtimeAlert() See Also <a href=\" https://github.com/skedgo/skedgo-java/blob/production/RealTime/src/main/java/com/buzzhives/Realtime/RealtimeAlert.java\">RealtimeAlert</a&gt ;","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/-s-e-v-e-r-i-t-y_-a-l-e-r-t/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / SEVERITY_ALERT SEVERITY_ALERT static val SEVERITY_ALERT: String","title":" s e v e r i t y  a l e r t"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/-s-e-v-e-r-i-t-y_-a-l-e-r-t/#severity_alert","text":"static val SEVERITY_ALERT: String","title":"SEVERITY_ALERT"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/-s-e-v-e-r-i-t-y_-w-a-r-n-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / SEVERITY_WARNING SEVERITY_WARNING static val SEVERITY_WARNING: String","title":" s e v e r i t y  w a r n i n g"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/-s-e-v-e-r-i-t-y_-w-a-r-n-i-n-g/#severity_warning","text":"static val SEVERITY_WARNING: String","title":"SEVERITY_WARNING"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/alert-action/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / alertAction alertAction @SerializedName(\"action\") @Nullable abstract fun alertAction(): AlertAction ?","title":"Alert action"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/alert-action/#alertaction","text":"@SerializedName(\"action\") @Nullable abstract fun alertAction(): AlertAction ?","title":"alertAction"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/from-date/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / fromDate fromDate @Default open fun fromDate(): Long","title":"From date"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/from-date/#fromdate","text":"@Default open fun fromDate(): Long","title":"fromDate"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/last-updated/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / lastUpdated lastUpdated @Default open fun lastUpdated(): Long","title":"Last updated"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/last-updated/#lastupdated","text":"@Default open fun lastUpdated(): Long","title":"lastUpdated"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/location/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / location location @Nullable abstract fun location(): Location ?","title":"Location"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/location/#location","text":"@Nullable abstract fun location(): Location ?","title":"location"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/remote-hash-code/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / remoteHashCode remoteHashCode @SerializedName(\"hashCode\") abstract fun remoteHashCode(): Long","title":"Remote hash code"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/remote-hash-code/#remotehashcode","text":"@SerializedName(\"hashCode\") abstract fun remoteHashCode(): Long","title":"remoteHashCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/remote-icon/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / remoteIcon remoteIcon @Nullable abstract fun remoteIcon(): String ?","title":"Remote icon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/remote-icon/#remoteicon","text":"@Nullable abstract fun remoteIcon(): String ?","title":"remoteIcon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/severity/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / severity severity @Nullable abstract fun severity(): String ?","title":"Severity"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/severity/#severity","text":"@Nullable abstract fun severity(): String ?","title":"severity"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/text/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / text text @Nullable abstract fun text(): String ?","title":"Text"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/text/#text","text":"@Nullable abstract fun text(): String ?","title":"text"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/title/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / title title @Nullable abstract fun title(): String ?","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/title/#title","text":"@Nullable abstract fun title(): String ?","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/url/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / url url @Nullable abstract fun url(): String ?","title":"Url"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/url/#url","text":"@Nullable abstract fun url(): String ?","title":"url"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlert / writeToParcel writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alert/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alerts/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlerts RealtimeAlerts class RealtimeAlerts Functions Name Summary getDisplayText static fun getDisplayText(alert: RealtimeAlert ): String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alerts/#realtimealerts","text":"class RealtimeAlerts","title":"RealtimeAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alerts/#functions","text":"Name Summary getDisplayText static fun getDisplayText(alert: RealtimeAlert ): String ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alerts/get-display-text/","text":"tripkit-android / com.skedgo.tripkit.common.model / RealtimeAlerts / getDisplayText getDisplayText @Nullable static fun getDisplayText(@NonNull alert: RealtimeAlert ): String ?","title":"Get display text"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-realtime-alerts/get-display-text/#getdisplaytext","text":"@Nullable static fun getDisplayText(@NonNull alert: RealtimeAlert ): String ?","title":"getDisplayText"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region Region open class Region : Parcelable Types Name Summary City open class City : Location Constructors Name Summary <init> Region() Properties Name Summary CREATOR static val CREATOR: Creator< Region !>! Functions Name Summary describeContents open fun describeContents(): Int equals open fun equals(other: Any ?): Boolean getCities open fun getCities(): ArrayList <City!>? getEncodedPolyline open fun getEncodedPolyline(): String ? getName open fun getName(): String ? getTimezone open fun getTimezone(): String ! getTransportModeIds open fun getTransportModeIds(): ArrayList < String !>? getURLs open fun getURLs(): ArrayList < String !>? hashCode open fun hashCode(): Int setCities open fun setCities(cities: ArrayList <City!>!): Unit setEncodedPolyline open fun setEncodedPolyline(encodedPolyline: String !): Unit setName open fun setName(name: String !): Unit setTimezone open fun setTimezone(timezone: String !): Unit setTransportModeIds open fun setTransportModeIds(transportModeIds: ArrayList < String !>!): Unit setURLs open fun setURLs(urls: ArrayList < String !>!): Unit toString open fun toString(): String writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/#region","text":"open class Region : Parcelable","title":"Region"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/#types","text":"Name Summary City open class City : Location","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/#constructors","text":"Name Summary <init> Region()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< Region !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/#functions","text":"Name Summary describeContents open fun describeContents(): Int equals open fun equals(other: Any ?): Boolean getCities open fun getCities(): ArrayList <City!>? getEncodedPolyline open fun getEncodedPolyline(): String ? getName open fun getName(): String ? getTimezone open fun getTimezone(): String ! getTransportModeIds open fun getTransportModeIds(): ArrayList < String !>? getURLs open fun getURLs(): ArrayList < String !>? hashCode open fun hashCode(): Int setCities open fun setCities(cities: ArrayList <City!>!): Unit setEncodedPolyline open fun setEncodedPolyline(encodedPolyline: String !): Unit setName open fun setName(name: String !): Unit setTimezone open fun setTimezone(timezone: String !): Unit setTransportModeIds open fun setTransportModeIds(transportModeIds: ArrayList < String !>!): Unit setURLs open fun setURLs(urls: ArrayList < String !>!): Unit toString open fun toString(): String writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / CREATOR CREATOR static val CREATOR: Creator< Region !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< Region !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / <init> <init> Region()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/-init-/#init","text":"Region()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/equals/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / equals equals open fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/equals/#equals","text":"open fun equals(other: Any ?): Boolean","title":"equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-cities/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / getCities getCities @Nullable open fun getCities(): ArrayList <City!>?","title":"Get cities"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-cities/#getcities","text":"@Nullable open fun getCities(): ArrayList <City!>?","title":"getCities"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-encoded-polyline/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / getEncodedPolyline getEncodedPolyline @Nullable open fun getEncodedPolyline(): String ?","title":"Get encoded polyline"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-encoded-polyline/#getencodedpolyline","text":"@Nullable open fun getEncodedPolyline(): String ?","title":"getEncodedPolyline"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-name/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / getName getName @Nullable open fun getName(): String ?","title":"Get name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-name/#getname","text":"@Nullable open fun getName(): String ?","title":"getName"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-timezone/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / getTimezone getTimezone open fun getTimezone(): String !","title":"Get timezone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-timezone/#gettimezone","text":"open fun getTimezone(): String !","title":"getTimezone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-transport-mode-ids/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / getTransportModeIds getTransportModeIds @Nullable open fun getTransportModeIds(): ArrayList < String !>?","title":"Get transport mode ids"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-transport-mode-ids/#gettransportmodeids","text":"@Nullable open fun getTransportModeIds(): ArrayList < String !>?","title":"getTransportModeIds"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-u-r-ls/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / getURLs getURLs @Nullable open fun getURLs(): ArrayList < String !>?","title":"Get u r ls"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/get-u-r-ls/#geturls","text":"@Nullable open fun getURLs(): ArrayList < String !>?","title":"getURLs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/hash-code/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / hashCode hashCode open fun hashCode(): Int","title":"Hash code"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/hash-code/#hashcode","text":"open fun hashCode(): Int","title":"hashCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-cities/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / setCities setCities open fun setCities(cities: ArrayList <City!>!): Unit","title":"Set cities"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-cities/#setcities","text":"open fun setCities(cities: ArrayList <City!>!): Unit","title":"setCities"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-encoded-polyline/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / setEncodedPolyline setEncodedPolyline open fun setEncodedPolyline(encodedPolyline: String !): Unit","title":"Set encoded polyline"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-encoded-polyline/#setencodedpolyline","text":"open fun setEncodedPolyline(encodedPolyline: String !): Unit","title":"setEncodedPolyline"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-name/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / setName setName open fun setName(name: String !): Unit","title":"Set name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-name/#setname","text":"open fun setName(name: String !): Unit","title":"setName"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-timezone/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / setTimezone setTimezone open fun setTimezone(timezone: String !): Unit","title":"Set timezone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-timezone/#settimezone","text":"open fun setTimezone(timezone: String !): Unit","title":"setTimezone"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-transport-mode-ids/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / setTransportModeIds setTransportModeIds open fun setTransportModeIds(transportModeIds: ArrayList < String !>!): Unit","title":"Set transport mode ids"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-transport-mode-ids/#settransportmodeids","text":"open fun setTransportModeIds(transportModeIds: ArrayList < String !>!): Unit","title":"setTransportModeIds"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-u-r-ls/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / setURLs setURLs open fun setURLs(urls: ArrayList < String !>!): Unit","title":"Set u r ls"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/set-u-r-ls/#seturls","text":"open fun setURLs(urls: ArrayList < String !>!): Unit","title":"setURLs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/to-string/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / toString toString open fun toString(): String Return String : Region name","title":"To string"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/to-string/#tostring","text":"open fun toString(): String Return String : Region name","title":"toString"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/-city/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / City City open class City : Location Constructors Name Summary <init> City()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/-city/#city","text":"open class City : Location","title":"City"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/-city/#constructors","text":"Name Summary <init> City()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/-city/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / Region / City / <init> <init> City()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-region/-city/-init-/#init","text":"City()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions/","text":"tripkit-android / com.skedgo.tripkit.common.model / Regions Regions class Regions Functions Name Summary createInterRegion static fun createInterRegion(departureRegion: Region , arrivalRegion: Region ): Region equals static fun equals(a: Region ?, b: Region ?): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions/#regions","text":"class Regions","title":"Regions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions/#functions","text":"Name Summary createInterRegion static fun createInterRegion(departureRegion: Region , arrivalRegion: Region ): Region equals static fun equals(a: Region ?, b: Region ?): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions/create-inter-region/","text":"tripkit-android / com.skedgo.tripkit.common.model / Regions / createInterRegion createInterRegion @NonNull static fun createInterRegion(@NonNull departureRegion: Region , @NonNull arrivalRegion: Region ): Region","title":"Create inter region"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions/create-inter-region/#createinterregion","text":"@NonNull static fun createInterRegion(@NonNull departureRegion: Region , @NonNull arrivalRegion: Region ): Region","title":"createInterRegion"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions/equals/","text":"tripkit-android / com.skedgo.tripkit.common.model / Regions / equals equals static fun equals(@Nullable a: Region ?, @Nullable b: Region ?): Boolean","title":"Equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions/equals/#equals","text":"static fun equals(@Nullable a: Region ?, @Nullable b: Region ?): Boolean","title":"equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions-response/","text":"tripkit-android / com.skedgo.tripkit.common.model / RegionsResponse RegionsResponse open class RegionsResponse Constructors Name Summary <init> RegionsResponse() Functions Name Summary getRegions open fun getRegions(): ArrayList < Region !>? getTransportModes open fun getTransportModes(): MutableCollection < TransportMode !>?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions-response/#regionsresponse","text":"open class RegionsResponse","title":"RegionsResponse"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions-response/#constructors","text":"Name Summary <init> RegionsResponse()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions-response/#functions","text":"Name Summary getRegions open fun getRegions(): ArrayList < Region !>? getTransportModes open fun getTransportModes(): MutableCollection < TransportMode !>?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions-response/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / RegionsResponse / <init> <init> RegionsResponse()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions-response/-init-/#init","text":"RegionsResponse()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions-response/get-regions/","text":"tripkit-android / com.skedgo.tripkit.common.model / RegionsResponse / getRegions getRegions @Nullable open fun getRegions(): ArrayList < Region !>?","title":"Get regions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions-response/get-regions/#getregions","text":"@Nullable open fun getRegions(): ArrayList < Region !>?","title":"getRegions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions-response/get-transport-modes/","text":"tripkit-android / com.skedgo.tripkit.common.model / RegionsResponse / getTransportModes getTransportModes @Nullable open fun getTransportModes(): MutableCollection < TransportMode !>?","title":"Get transport modes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-regions-response/get-transport-modes/#gettransportmodes","text":"@Nullable open fun getTransportModes(): MutableCollection < TransportMode !>?","title":"getTransportModes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop ScheduledStop open class ScheduledStop : Location Constructors Name Summary <init> ScheduledStop() ScheduledStop(location: Location !) Properties Name Summary CREATOR static val CREATOR: Creator< ScheduledStop !>! Functions Name Summary convertStopTypeToTransportModeIcon open static fun convertStopTypeToTransportModeIcon(type: StopType !): Int convertStopTypeToVehicleMode open static fun convertStopTypeToVehicleMode(type: StopType !): VehicleMode ! equals open fun equals(other: Any ?): Boolean fillFrom open fun fillFrom(location: Location !): Unit getAlertHashCodes open fun getAlertHashCodes(): ArrayList < Long !>? getChildren open fun getChildren(): ArrayList < ScheduledStop !>! getCode open fun getCode(): String ! getCurrentFilter open fun getCurrentFilter(): String ! getEmbarkationStopCode open fun getEmbarkationStopCode(): MutableList < String !>! getLocationType open fun getLocationType(): Int getModeInfo open fun getModeInfo(): ModeInfo ! getParentId open fun getParentId(): Long getServices open fun getServices(): String ! getShortName open fun getShortName(): String ! getStopId open fun getStopId(): Long getType open fun getType(): StopType ! getWheelchairAccessible open fun getWheelchairAccessible(): Boolean ? hasChildren open fun hasChildren(): Boolean hashCode open fun hashCode(): Int isParent Alias of `[ #hasChildren() ](has-children.md). If a stop has children, it's a parent stop. open fun isParent(): [ Boolean`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html ) setAlertHashCodes open fun setAlertHashCodes(alertHashCodes: ArrayList < Long !>?): Unit setChildren open fun setChildren(children: ArrayList < ScheduledStop !>!): Unit setCode open fun setCode(code: String !): Unit setCurrentFilter open fun setCurrentFilter(filter: String !): Unit setModeInfo open fun setModeInfo(modeInfo: ModeInfo !): Unit setParent open fun setParent(parent: Long ): Unit setServices open fun setServices(services: String !): Unit setShortName open fun setShortName(shortName: String !): Unit setStopId open fun setStopId(stopId: Long ): Unit setType open fun setType(type: StopType !): Unit setWheelchairAccessible open fun setWheelchairAccessible(wheelchairAccessible: Boolean ?): Unit writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit Extension Functions Name Summary createStopMarkerOptions fun ScheduledStop .createStopMarkerOptions(): Single<MarkerOptions> getStopDisplayName fun ScheduledStop .getStopDisplayName(): String ? toEntity fun ScheduledStop .toEntity(): StopLocationEntity","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/#scheduledstop","text":"open class ScheduledStop : Location","title":"ScheduledStop"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/#constructors","text":"Name Summary <init> ScheduledStop() ScheduledStop(location: Location !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< ScheduledStop !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/#functions","text":"Name Summary convertStopTypeToTransportModeIcon open static fun convertStopTypeToTransportModeIcon(type: StopType !): Int convertStopTypeToVehicleMode open static fun convertStopTypeToVehicleMode(type: StopType !): VehicleMode ! equals open fun equals(other: Any ?): Boolean fillFrom open fun fillFrom(location: Location !): Unit getAlertHashCodes open fun getAlertHashCodes(): ArrayList < Long !>? getChildren open fun getChildren(): ArrayList < ScheduledStop !>! getCode open fun getCode(): String ! getCurrentFilter open fun getCurrentFilter(): String ! getEmbarkationStopCode open fun getEmbarkationStopCode(): MutableList < String !>! getLocationType open fun getLocationType(): Int getModeInfo open fun getModeInfo(): ModeInfo ! getParentId open fun getParentId(): Long getServices open fun getServices(): String ! getShortName open fun getShortName(): String ! getStopId open fun getStopId(): Long getType open fun getType(): StopType ! getWheelchairAccessible open fun getWheelchairAccessible(): Boolean ? hasChildren open fun hasChildren(): Boolean hashCode open fun hashCode(): Int isParent Alias of `[ #hasChildren() ](has-children.md). If a stop has children, it's a parent stop. open fun isParent(): [ Boolean`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html ) setAlertHashCodes open fun setAlertHashCodes(alertHashCodes: ArrayList < Long !>?): Unit setChildren open fun setChildren(children: ArrayList < ScheduledStop !>!): Unit setCode open fun setCode(code: String !): Unit setCurrentFilter open fun setCurrentFilter(filter: String !): Unit setModeInfo open fun setModeInfo(modeInfo: ModeInfo !): Unit setParent open fun setParent(parent: Long ): Unit setServices open fun setServices(services: String !): Unit setShortName open fun setShortName(shortName: String !): Unit setStopId open fun setStopId(stopId: Long ): Unit setType open fun setType(type: StopType !): Unit setWheelchairAccessible open fun setWheelchairAccessible(wheelchairAccessible: Boolean ?): Unit writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/#extension-functions","text":"Name Summary createStopMarkerOptions fun ScheduledStop .createStopMarkerOptions(): Single<MarkerOptions> getStopDisplayName fun ScheduledStop .getStopDisplayName(): String ? toEntity fun ScheduledStop .toEntity(): StopLocationEntity","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / CREATOR CREATOR static val CREATOR: Creator< ScheduledStop !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< ScheduledStop !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / <init> <init> ScheduledStop() ScheduledStop(location: Location !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/-init-/#init","text":"ScheduledStop() ScheduledStop(location: Location !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/convert-stop-type-to-transport-mode-icon/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / convertStopTypeToTransportModeIcon convertStopTypeToTransportModeIcon @DrawableRes open static fun convertStopTypeToTransportModeIcon(type: StopType !): Int","title":"Convert stop type to transport mode icon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/convert-stop-type-to-transport-mode-icon/#convertstoptypetotransportmodeicon","text":"@DrawableRes open static fun convertStopTypeToTransportModeIcon(type: StopType !): Int","title":"convertStopTypeToTransportModeIcon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/convert-stop-type-to-vehicle-mode/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / convertStopTypeToVehicleMode convertStopTypeToVehicleMode open static fun convertStopTypeToVehicleMode(type: StopType !): VehicleMode !","title":"Convert stop type to vehicle mode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/convert-stop-type-to-vehicle-mode/#convertstoptypetovehiclemode","text":"open static fun convertStopTypeToVehicleMode(type: StopType !): VehicleMode !","title":"convertStopTypeToVehicleMode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/equals/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / equals equals open fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/equals/#equals","text":"open fun equals(other: Any ?): Boolean","title":"equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/fill-from/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / fillFrom fillFrom open fun fillFrom(location: Location !): Unit","title":"Fill from"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/fill-from/#fillfrom","text":"open fun fillFrom(location: Location !): Unit","title":"fillFrom"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-alert-hash-codes/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getAlertHashCodes getAlertHashCodes @Nullable open fun getAlertHashCodes(): ArrayList < Long !>?","title":"Get alert hash codes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-alert-hash-codes/#getalerthashcodes","text":"@Nullable open fun getAlertHashCodes(): ArrayList < Long !>?","title":"getAlertHashCodes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-children/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getChildren getChildren open fun getChildren(): ArrayList < ScheduledStop !>!","title":"Get children"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-children/#getchildren","text":"open fun getChildren(): ArrayList < ScheduledStop !>!","title":"getChildren"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-code/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getCode getCode open fun getCode(): String !","title":"Get code"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-code/#getcode","text":"open fun getCode(): String !","title":"getCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-current-filter/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getCurrentFilter getCurrentFilter open fun getCurrentFilter(): String !","title":"Get current filter"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-current-filter/#getcurrentfilter","text":"open fun getCurrentFilter(): String !","title":"getCurrentFilter"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-embarkation-stop-code/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getEmbarkationStopCode getEmbarkationStopCode open fun getEmbarkationStopCode(): MutableList < String !>!","title":"Get embarkation stop code"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-embarkation-stop-code/#getembarkationstopcode","text":"open fun getEmbarkationStopCode(): MutableList < String !>!","title":"getEmbarkationStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-location-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getLocationType getLocationType open fun getLocationType(): Int","title":"Get location type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-location-type/#getlocationtype","text":"open fun getLocationType(): Int","title":"getLocationType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-mode-info/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getModeInfo getModeInfo open fun getModeInfo(): ModeInfo !","title":"Get mode info"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-mode-info/#getmodeinfo","text":"open fun getModeInfo(): ModeInfo !","title":"getModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-parent-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getParentId getParentId open fun getParentId(): Long","title":"Get parent id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-parent-id/#getparentid","text":"open fun getParentId(): Long","title":"getParentId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-services/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getServices getServices open fun getServices(): String !","title":"Get services"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-services/#getservices","text":"open fun getServices(): String !","title":"getServices"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-short-name/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getShortName getShortName open fun getShortName(): String !","title":"Get short name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-short-name/#getshortname","text":"open fun getShortName(): String !","title":"getShortName"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-stop-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getStopId getStopId open fun getStopId(): Long","title":"Get stop id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-stop-id/#getstopid","text":"open fun getStopId(): Long","title":"getStopId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getType getType open fun getType(): StopType !","title":"Get type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-type/#gettype","text":"open fun getType(): StopType !","title":"getType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / getWheelchairAccessible getWheelchairAccessible @Nullable open fun getWheelchairAccessible(): Boolean ?","title":"Get wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/get-wheelchair-accessible/#getwheelchairaccessible","text":"@Nullable open fun getWheelchairAccessible(): Boolean ?","title":"getWheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/has-children/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / hasChildren hasChildren open fun hasChildren(): Boolean","title":"Has children"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/has-children/#haschildren","text":"open fun hasChildren(): Boolean","title":"hasChildren"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/hash-code/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / hashCode hashCode open fun hashCode(): Int","title":"Hash code"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/hash-code/#hashcode","text":"open fun hashCode(): Int","title":"hashCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/is-parent/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / isParent isParent open fun isParent(): Boolean Alias of `[ #hasChildren()`](has-children.md). If a stop has children, it's a parent stop.","title":"Is parent"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/is-parent/#isparent","text":"open fun isParent(): Boolean Alias of `[ #hasChildren()`](has-children.md). If a stop has children, it's a parent stop.","title":"isParent"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-alert-hash-codes/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / setAlertHashCodes setAlertHashCodes open fun setAlertHashCodes(@Nullable alertHashCodes: ArrayList < Long !>?): Unit","title":"Set alert hash codes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-alert-hash-codes/#setalerthashcodes","text":"open fun setAlertHashCodes(@Nullable alertHashCodes: ArrayList < Long !>?): Unit","title":"setAlertHashCodes"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-children/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / setChildren setChildren open fun setChildren(children: ArrayList < ScheduledStop !>!): Unit","title":"Set children"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-children/#setchildren","text":"open fun setChildren(children: ArrayList < ScheduledStop !>!): Unit","title":"setChildren"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-code/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / setCode setCode open fun setCode(code: String !): Unit","title":"Set code"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-code/#setcode","text":"open fun setCode(code: String !): Unit","title":"setCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-current-filter/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / setCurrentFilter setCurrentFilter open fun setCurrentFilter(filter: String !): Unit","title":"Set current filter"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-current-filter/#setcurrentfilter","text":"open fun setCurrentFilter(filter: String !): Unit","title":"setCurrentFilter"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-mode-info/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / setModeInfo setModeInfo open fun setModeInfo(modeInfo: ModeInfo !): Unit","title":"Set mode info"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-mode-info/#setmodeinfo","text":"open fun setModeInfo(modeInfo: ModeInfo !): Unit","title":"setModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-parent/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / setParent setParent open fun setParent(parent: Long ): Unit","title":"Set parent"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-parent/#setparent","text":"open fun setParent(parent: Long ): Unit","title":"setParent"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-services/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / setServices setServices open fun setServices(services: String !): Unit","title":"Set services"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-services/#setservices","text":"open fun setServices(services: String !): Unit","title":"setServices"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-short-name/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / setShortName setShortName open fun setShortName(shortName: String !): Unit","title":"Set short name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-short-name/#setshortname","text":"open fun setShortName(shortName: String !): Unit","title":"setShortName"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-stop-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / setStopId setStopId open fun setStopId(stopId: Long ): Unit","title":"Set stop id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-stop-id/#setstopid","text":"open fun setStopId(stopId: Long ): Unit","title":"setStopId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / setType setType open fun setType(type: StopType !): Unit","title":"Set type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-type/#settype","text":"open fun setType(type: StopType !): Unit","title":"setType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / setWheelchairAccessible setWheelchairAccessible open fun setWheelchairAccessible(@Nullable wheelchairAccessible: Boolean ?): Unit","title":"Set wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/set-wheelchair-accessible/#setwheelchairaccessible","text":"open fun setWheelchairAccessible(@Nullable wheelchairAccessible: Boolean ?): Unit","title":"setWheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / ScheduledStop / writeToParcel writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-scheduled-stop/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop ServiceStop open class ServiceStop : Location , WheelchairAccessible Represents a future stop of a service in a trip. Constructors Name Summary <init> ServiceStop() ServiceStop(location: Location !) Properties Name Summary CREATOR static val CREATOR: Creator< ServiceStop !>! wheelchairAccessible open val wheelchairAccessible: Boolean ? Functions Name Summary departureSecs open fun departureSecs(): Long fillFrom open fun fillFrom(other: Location !): Unit getArrivalTime open fun getArrivalTime(): Long getCode open fun getCode(): String ! getDisplayTime open fun getDisplayTime(): Long ! getRelativeArrival open fun getRelativeArrival(): Long ? getRelativeDeparture open fun getRelativeDeparture(): Long ? getShortName open fun getShortName(): String ? getType open fun getType(): StopType ! setArrivalTime open fun setArrivalTime(arrivalTime: Long ): Unit setCode open fun setCode(code: String !): Unit setDepartureSecs open fun setDepartureSecs(secs: Long ): Unit setRelativeArrival open fun setRelativeArrival(relativeArrival: Long ?): Unit setRelativeDeparture open fun setRelativeDeparture(relativeDeparture: Long ?): Unit setShortName open fun setShortName(shortName: String ?): Unit setType open fun setType(type: StopType !): Unit setWheelchairAccessible open fun setWheelchairAccessible(wheelchairAccessible: Boolean ?): Unit writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/#servicestop","text":"open class ServiceStop : Location , WheelchairAccessible Represents a future stop of a service in a trip.","title":"ServiceStop"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/#constructors","text":"Name Summary <init> ServiceStop() ServiceStop(location: Location !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< ServiceStop !>! wheelchairAccessible open val wheelchairAccessible: Boolean ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/#functions","text":"Name Summary departureSecs open fun departureSecs(): Long fillFrom open fun fillFrom(other: Location !): Unit getArrivalTime open fun getArrivalTime(): Long getCode open fun getCode(): String ! getDisplayTime open fun getDisplayTime(): Long ! getRelativeArrival open fun getRelativeArrival(): Long ? getRelativeDeparture open fun getRelativeDeparture(): Long ? getShortName open fun getShortName(): String ? getType open fun getType(): StopType ! setArrivalTime open fun setArrivalTime(arrivalTime: Long ): Unit setCode open fun setCode(code: String !): Unit setDepartureSecs open fun setDepartureSecs(secs: Long ): Unit setRelativeArrival open fun setRelativeArrival(relativeArrival: Long ?): Unit setRelativeDeparture open fun setRelativeDeparture(relativeDeparture: Long ?): Unit setShortName open fun setShortName(shortName: String ?): Unit setType open fun setType(type: StopType !): Unit setWheelchairAccessible open fun setWheelchairAccessible(wheelchairAccessible: Boolean ?): Unit writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / CREATOR CREATOR static val CREATOR: Creator< ServiceStop !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< ServiceStop !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / <init> <init> ServiceStop() ServiceStop(location: Location !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/-init-/#init","text":"ServiceStop() ServiceStop(location: Location !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/departure-secs/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / departureSecs departureSecs open fun departureSecs(): Long","title":"Departure secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/departure-secs/#departuresecs","text":"open fun departureSecs(): Long","title":"departureSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/fill-from/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / fillFrom fillFrom open fun fillFrom(other: Location !): Unit","title":"Fill from"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/fill-from/#fillfrom","text":"open fun fillFrom(other: Location !): Unit","title":"fillFrom"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-arrival-time/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / getArrivalTime getArrivalTime open fun getArrivalTime(): Long","title":"Get arrival time"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-arrival-time/#getarrivaltime","text":"open fun getArrivalTime(): Long","title":"getArrivalTime"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-code/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / getCode getCode open fun getCode(): String !","title":"Get code"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-code/#getcode","text":"open fun getCode(): String !","title":"getCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-display-time/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / getDisplayTime getDisplayTime open fun getDisplayTime(): Long !","title":"Get display time"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-display-time/#getdisplaytime","text":"open fun getDisplayTime(): Long !","title":"getDisplayTime"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-relative-arrival/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / getRelativeArrival getRelativeArrival @Nullable open fun getRelativeArrival(): Long ?","title":"Get relative arrival"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-relative-arrival/#getrelativearrival","text":"@Nullable open fun getRelativeArrival(): Long ?","title":"getRelativeArrival"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-relative-departure/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / getRelativeDeparture getRelativeDeparture @Nullable open fun getRelativeDeparture(): Long ?","title":"Get relative departure"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-relative-departure/#getrelativedeparture","text":"@Nullable open fun getRelativeDeparture(): Long ?","title":"getRelativeDeparture"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-short-name/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / getShortName getShortName @Nullable open fun getShortName(): String ?","title":"Get short name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-short-name/#getshortname","text":"@Nullable open fun getShortName(): String ?","title":"getShortName"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / getType getType open fun getType(): StopType !","title":"Get type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/get-type/#gettype","text":"open fun getType(): StopType !","title":"getType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-arrival-time/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / setArrivalTime setArrivalTime open fun setArrivalTime(arrivalTime: Long ): Unit","title":"Set arrival time"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-arrival-time/#setarrivaltime","text":"open fun setArrivalTime(arrivalTime: Long ): Unit","title":"setArrivalTime"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-code/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / setCode setCode open fun setCode(code: String !): Unit","title":"Set code"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-code/#setcode","text":"open fun setCode(code: String !): Unit","title":"setCode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-departure-secs/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / setDepartureSecs setDepartureSecs open fun setDepartureSecs(secs: Long ): Unit","title":"Set departure secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-departure-secs/#setdeparturesecs","text":"open fun setDepartureSecs(secs: Long ): Unit","title":"setDepartureSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-relative-arrival/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / setRelativeArrival setRelativeArrival open fun setRelativeArrival(@Nullable relativeArrival: Long ?): Unit","title":"Set relative arrival"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-relative-arrival/#setrelativearrival","text":"open fun setRelativeArrival(@Nullable relativeArrival: Long ?): Unit","title":"setRelativeArrival"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-relative-departure/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / setRelativeDeparture setRelativeDeparture open fun setRelativeDeparture(@Nullable relativeDeparture: Long ?): Unit","title":"Set relative departure"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-relative-departure/#setrelativedeparture","text":"open fun setRelativeDeparture(@Nullable relativeDeparture: Long ?): Unit","title":"setRelativeDeparture"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-short-name/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / setShortName setShortName open fun setShortName(@Nullable shortName: String ?): Unit","title":"Set short name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-short-name/#setshortname","text":"open fun setShortName(@Nullable shortName: String ?): Unit","title":"setShortName"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / setType setType open fun setType(type: StopType !): Unit","title":"Set type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-type/#settype","text":"open fun setType(type: StopType !): Unit","title":"setType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / setWheelchairAccessible setWheelchairAccessible open fun setWheelchairAccessible(@Nullable wheelchairAccessible: Boolean ?): Unit","title":"Set wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/set-wheelchair-accessible/#setwheelchairaccessible","text":"open fun setWheelchairAccessible(@Nullable wheelchairAccessible: Boolean ?): Unit","title":"setWheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / wheelchairAccessible wheelchairAccessible open val wheelchairAccessible: Boolean ?","title":"Wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/wheelchair-accessible/#wheelchairaccessible","text":"open val wheelchairAccessible: Boolean ?","title":"wheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / ServiceStop / writeToParcel writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-service-stop/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType StopType class StopType Enum Values Name Summary BUS TRAIN FERRY MONORAIL SUBWAY TAXI PARKING TRAM CABLECAR Functions Name Summary from static fun from(key: String !): StopType ? toString fun toString(): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/#stoptype","text":"class StopType","title":"StopType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/#enum-values","text":"Name Summary BUS TRAIN FERRY MONORAIL SUBWAY TAXI PARKING TRAM CABLECAR","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/#functions","text":"Name Summary from static fun from(key: String !): StopType ? toString fun toString(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-b-u-s/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType / BUS BUS BUS","title":" b u s"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-b-u-s/#bus","text":"BUS","title":"BUS"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-c-a-b-l-e-c-a-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType / CABLECAR CABLECAR CABLECAR","title":" c a b l e c a r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-c-a-b-l-e-c-a-r/#cablecar","text":"CABLECAR","title":"CABLECAR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-f-e-r-r-y/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType / FERRY FERRY FERRY","title":" f e r r y"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-f-e-r-r-y/#ferry","text":"FERRY","title":"FERRY"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-m-o-n-o-r-a-i-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType / MONORAIL MONORAIL MONORAIL","title":" m o n o r a i l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-m-o-n-o-r-a-i-l/#monorail","text":"MONORAIL","title":"MONORAIL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-p-a-r-k-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType / PARKING PARKING PARKING","title":" p a r k i n g"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-p-a-r-k-i-n-g/#parking","text":"PARKING","title":"PARKING"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-s-u-b-w-a-y/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType / SUBWAY SUBWAY SUBWAY","title":" s u b w a y"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-s-u-b-w-a-y/#subway","text":"SUBWAY","title":"SUBWAY"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-t-a-x-i/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType / TAXI TAXI TAXI","title":" t a x i"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-t-a-x-i/#taxi","text":"TAXI","title":"TAXI"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-t-r-a-i-n/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType / TRAIN TRAIN TRAIN","title":" t r a i n"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-t-r-a-i-n/#train","text":"TRAIN","title":"TRAIN"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-t-r-a-m/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType / TRAM TRAM TRAM","title":" t r a m"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/-t-r-a-m/#tram","text":"TRAM","title":"TRAM"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/from/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType / from from @Nullable static fun from(key: String !): StopType ?","title":"From"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/from/#from","text":"@Nullable static fun from(key: String !): StopType ?","title":"from"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/to-string/","text":"tripkit-android / com.skedgo.tripkit.common.model / StopType / toString toString fun toString(): String","title":"To string"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-stop-type/to-string/#tostring","text":"fun toString(): String","title":"toString"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/","text":"tripkit-android / com.skedgo.tripkit.common.model / Street Street @Immutable @TypeAdapters abstract class Street : Parcelable Constructors Name Summary <init> Street() Properties Name Summary CREATOR static val CREATOR: Creator< Street !>! Functions Name Summary describeContents open fun describeContents(): Int dismount open fun dismount(): Boolean encodedWaypoints abstract fun encodedWaypoints(): String ? meters open fun meters(): Float name abstract fun name(): String ? safe open fun safe(): Boolean writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/#street","text":"@Immutable @TypeAdapters abstract class Street : Parcelable","title":"Street"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/#constructors","text":"Name Summary <init> Street()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< Street !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/#functions","text":"Name Summary describeContents open fun describeContents(): Int dismount open fun dismount(): Boolean encodedWaypoints abstract fun encodedWaypoints(): String ? meters open fun meters(): Float name abstract fun name(): String ? safe open fun safe(): Boolean writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / Street / CREATOR CREATOR static val CREATOR: Creator< Street !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< Street !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / Street / <init> <init> Street()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/-init-/#init","text":"Street()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / Street / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/dismount/","text":"tripkit-android / com.skedgo.tripkit.common.model / Street / dismount dismount @Default open fun dismount(): Boolean","title":"Dismount"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/dismount/#dismount","text":"@Default open fun dismount(): Boolean","title":"dismount"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/encoded-waypoints/","text":"tripkit-android / com.skedgo.tripkit.common.model / Street / encodedWaypoints encodedWaypoints @Nullable abstract fun encodedWaypoints(): String ?","title":"Encoded waypoints"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/encoded-waypoints/#encodedwaypoints","text":"@Nullable abstract fun encodedWaypoints(): String ?","title":"encodedWaypoints"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/meters/","text":"tripkit-android / com.skedgo.tripkit.common.model / Street / meters meters @Default open fun meters(): Float","title":"Meters"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/meters/#meters","text":"@Default open fun meters(): Float","title":"meters"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/name/","text":"tripkit-android / com.skedgo.tripkit.common.model / Street / name name @Nullable abstract fun name(): String ?","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/name/#name","text":"@Nullable abstract fun name(): String ?","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/safe/","text":"tripkit-android / com.skedgo.tripkit.common.model / Street / safe safe @Default open fun safe(): Boolean","title":"Safe"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/safe/#safe","text":"@Default open fun safe(): Boolean","title":"safe"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / Street / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-street/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag TimeTag open class TimeTag : Parcelable A TimeTag encapsulates a departure or arrival time, including a dynamic time of \"now\". Annotations Name Summary TimeType See: http://tools.android.com/tech-docs/support-annotations . class TimeType Constructors Name Summary <init> TimeTag(in: Parcel!) TimeTag() Properties Name Summary CREATOR static val CREATOR: Creator< TimeTag !>! TIME_TYPE_ARRIVE_BY The time should be used for ARRIVE_BY calculations. static val TIME_TYPE_ARRIVE_BY: Int TIME_TYPE_LEAVE_AFTER The time should be used for LEAVE_AFTER calculations (default). static val TIME_TYPE_LEAVE_AFTER: Int Functions Name Summary createForArriveBy open static fun createForArriveBy(seconds: Long ): TimeTag ! createForLeaveAfter open static fun createForLeaveAfter(seconds: Long ): TimeTag ! createForLeaveNow open static fun createForLeaveNow(): TimeTag ! createForTimeType open static fun createForTimeType(timeType: Int , seconds: Long ): TimeTag ! describeContents open fun describeContents(): Int getTimeInMillis open fun getTimeInMillis(): Long getTimeInSecs open fun getTimeInSecs(): Long getType open fun getType(): Int isDynamic open fun isDynamic(): Boolean setIsDynamic open fun setIsDynamic(isDynamic: Boolean ): Unit setTimeInSecs open fun setTimeInSecs(timeInSecs: Long ): Unit setType open fun setType(type: Int ): Unit writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit Extension Functions Name Summary formatString fun TimeTag .formatString(context: Context, timezone: String ?): String toRoutingTime fun TimeTag .toRoutingTime(tz: DateTimeZone): RoutingTime","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/#timetag","text":"open class TimeTag : Parcelable A TimeTag encapsulates a departure or arrival time, including a dynamic time of \"now\".","title":"TimeTag"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/#annotations","text":"Name Summary TimeType See: http://tools.android.com/tech-docs/support-annotations . class TimeType","title":"Annotations"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/#constructors","text":"Name Summary <init> TimeTag(in: Parcel!) TimeTag()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< TimeTag !>! TIME_TYPE_ARRIVE_BY The time should be used for ARRIVE_BY calculations. static val TIME_TYPE_ARRIVE_BY: Int TIME_TYPE_LEAVE_AFTER The time should be used for LEAVE_AFTER calculations (default). static val TIME_TYPE_LEAVE_AFTER: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/#functions","text":"Name Summary createForArriveBy open static fun createForArriveBy(seconds: Long ): TimeTag ! createForLeaveAfter open static fun createForLeaveAfter(seconds: Long ): TimeTag ! createForLeaveNow open static fun createForLeaveNow(): TimeTag ! createForTimeType open static fun createForTimeType(timeType: Int , seconds: Long ): TimeTag ! describeContents open fun describeContents(): Int getTimeInMillis open fun getTimeInMillis(): Long getTimeInSecs open fun getTimeInSecs(): Long getType open fun getType(): Int isDynamic open fun isDynamic(): Boolean setIsDynamic open fun setIsDynamic(isDynamic: Boolean ): Unit setTimeInSecs open fun setTimeInSecs(timeInSecs: Long ): Unit setType open fun setType(type: Int ): Unit writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/#extension-functions","text":"Name Summary formatString fun TimeTag .formatString(context: Context, timezone: String ?): String toRoutingTime fun TimeTag .toRoutingTime(tz: DateTimeZone): RoutingTime","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / CREATOR CREATOR static val CREATOR: Creator< TimeTag !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< TimeTag !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / <init> <init> protected TimeTag(in: Parcel!) protected TimeTag()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-init-/#init","text":"protected TimeTag(in: Parcel!) protected TimeTag()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-t-i-m-e_-t-y-p-e_-a-r-r-i-v-e_-b-y/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / TIME_TYPE_ARRIVE_BY TIME_TYPE_ARRIVE_BY static val TIME_TYPE_ARRIVE_BY: Int The time should be used for ARRIVE_BY calculations.","title":" t i m e  t y p e  a r r i v e  b y"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-t-i-m-e_-t-y-p-e_-a-r-r-i-v-e_-b-y/#time_type_arrive_by","text":"static val TIME_TYPE_ARRIVE_BY: Int The time should be used for ARRIVE_BY calculations.","title":"TIME_TYPE_ARRIVE_BY"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-t-i-m-e_-t-y-p-e_-l-e-a-v-e_-a-f-t-e-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / TIME_TYPE_LEAVE_AFTER TIME_TYPE_LEAVE_AFTER static val TIME_TYPE_LEAVE_AFTER: Int The time should be used for LEAVE_AFTER calculations (default).","title":" t i m e  t y p e  l e a v e  a f t e r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-t-i-m-e_-t-y-p-e_-l-e-a-v-e_-a-f-t-e-r/#time_type_leave_after","text":"static val TIME_TYPE_LEAVE_AFTER: Int The time should be used for LEAVE_AFTER calculations (default).","title":"TIME_TYPE_LEAVE_AFTER"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/create-for-arrive-by/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / createForArriveBy createForArriveBy open static fun createForArriveBy(seconds: Long ): TimeTag !","title":"Create for arrive by"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/create-for-arrive-by/#createforarriveby","text":"open static fun createForArriveBy(seconds: Long ): TimeTag !","title":"createForArriveBy"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/create-for-leave-after/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / createForLeaveAfter createForLeaveAfter open static fun createForLeaveAfter(seconds: Long ): TimeTag !","title":"Create for leave after"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/create-for-leave-after/#createforleaveafter","text":"open static fun createForLeaveAfter(seconds: Long ): TimeTag !","title":"createForLeaveAfter"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/create-for-leave-now/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / createForLeaveNow createForLeaveNow open static fun createForLeaveNow(): TimeTag !","title":"Create for leave now"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/create-for-leave-now/#createforleavenow","text":"open static fun createForLeaveNow(): TimeTag !","title":"createForLeaveNow"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/create-for-time-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / createForTimeType createForTimeType open static fun createForTimeType(timeType: Int , seconds: Long ): TimeTag !","title":"Create for time type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/create-for-time-type/#createfortimetype","text":"open static fun createForTimeType(timeType: Int , seconds: Long ): TimeTag !","title":"createForTimeType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/get-time-in-millis/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / getTimeInMillis getTimeInMillis open fun getTimeInMillis(): Long","title":"Get time in millis"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/get-time-in-millis/#gettimeinmillis","text":"open fun getTimeInMillis(): Long","title":"getTimeInMillis"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/get-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / getTimeInSecs getTimeInSecs open fun getTimeInSecs(): Long","title":"Get time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/get-time-in-secs/#gettimeinsecs","text":"open fun getTimeInSecs(): Long","title":"getTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/get-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / getType getType open fun getType(): Int","title":"Get type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/get-type/#gettype","text":"open fun getType(): Int","title":"getType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/is-dynamic/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / isDynamic isDynamic open fun isDynamic(): Boolean Return Boolean : True if the time was chosen as 'Now'. Otherwise, false.","title":"Is dynamic"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/is-dynamic/#isdynamic","text":"open fun isDynamic(): Boolean Return Boolean : True if the time was chosen as 'Now'. Otherwise, false.","title":"isDynamic"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/set-is-dynamic/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / setIsDynamic setIsDynamic open fun setIsDynamic(isDynamic: Boolean ): Unit","title":"Set is dynamic"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/set-is-dynamic/#setisdynamic","text":"open fun setIsDynamic(isDynamic: Boolean ): Unit","title":"setIsDynamic"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/set-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / setTimeInSecs setTimeInSecs open fun setTimeInSecs(timeInSecs: Long ): Unit","title":"Set time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/set-time-in-secs/#settimeinsecs","text":"open fun setTimeInSecs(timeInSecs: Long ): Unit","title":"setTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/set-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / setType setType open fun setType(type: Int ): Unit","title":"Set type"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/set-type/#settype","text":"open fun setType(type: Int ): Unit","title":"setType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-time-type/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / TimeType TimeType class TimeType See: http://tools.android.com/tech-docs/support-annotations . Constructors Name Summary <init> See: http://tools.android.com/tech-docs/support-annotations . TimeType()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-time-type/#timetype","text":"class TimeType See: http://tools.android.com/tech-docs/support-annotations .","title":"TimeType"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-time-type/#constructors","text":"Name Summary <init> See: http://tools.android.com/tech-docs/support-annotations . TimeType()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-time-type/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / TimeTag / TimeType / <init> <init> TimeType() See: http://tools.android.com/tech-docs/support-annotations .","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-time-tag/-time-type/-init-/#init","text":"TimeType() See: http://tools.android.com/tech-docs/support-annotations .","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode TransportMode open class TransportMode Constructors Name Summary <init> TransportMode() Properties Name Summary ID_AIR static val ID_AIR: String ID_BICYCLE static val ID_BICYCLE: String ID_CAR static val ID_CAR: String ID_MOTORBIKE static val ID_MOTORBIKE: String ID_PUBLIC_TRANSPORT static val ID_PUBLIC_TRANSPORT: String ID_SCHOOL_BUS static val ID_SCHOOL_BUS: String ID_SHUFFLE static val ID_SHUFFLE: String ID_SHUTTLE_BUS FIXME: It seems we no longer need this id. Replacement seems to be 'pt_ltd_SCHOOLBUS'. static val ID_SHUTTLE_BUS: String ID_TAXI static val ID_TAXI: String ID_TNC static val ID_TNC: String ID_WALK static val ID_WALK: String ID_WHEEL_CHAIR static val ID_WHEEL_CHAIR: String MIDDLE_FIX_BIC static val MIDDLE_FIX_BIC: String MIDDLE_FIX_CAR static val MIDDLE_FIX_CAR: String Functions Name Summary equals open fun equals(other: Any ?): Boolean fromId open static fun fromId(id: String ): TransportMode ! getColor open fun getColor(): ServiceColor ? getDarkIcon open fun getDarkIcon(): String ? getIconId open fun getIconId(): String ! getId open fun getId(): String ! getImplies open fun getImplies(): ArrayList < String !>? getLocalIconResId open static fun getLocalIconResId(identifier: String ?): Int getTitle open fun getTitle(): String ! getURL open fun getURL(): String ? isRequired open fun isRequired(): Boolean setDarkIcon open fun setDarkIcon(darkIcon: String !): Unit setIconId open fun setIconId(iconId: String !): Unit setId open fun setId(id: String !): Unit setImplies open fun setImplies(implies: ArrayList < String !>!): Unit setRequired open fun setRequired(isRequired: Boolean ): Unit setTitle open fun setTitle(title: String !): Unit setURL open fun setURL(URL: String !): Unit toString open fun toString(): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/#transportmode","text":"open class TransportMode","title":"TransportMode"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/#constructors","text":"Name Summary <init> TransportMode()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/#properties","text":"Name Summary ID_AIR static val ID_AIR: String ID_BICYCLE static val ID_BICYCLE: String ID_CAR static val ID_CAR: String ID_MOTORBIKE static val ID_MOTORBIKE: String ID_PUBLIC_TRANSPORT static val ID_PUBLIC_TRANSPORT: String ID_SCHOOL_BUS static val ID_SCHOOL_BUS: String ID_SHUFFLE static val ID_SHUFFLE: String ID_SHUTTLE_BUS FIXME: It seems we no longer need this id. Replacement seems to be 'pt_ltd_SCHOOLBUS'. static val ID_SHUTTLE_BUS: String ID_TAXI static val ID_TAXI: String ID_TNC static val ID_TNC: String ID_WALK static val ID_WALK: String ID_WHEEL_CHAIR static val ID_WHEEL_CHAIR: String MIDDLE_FIX_BIC static val MIDDLE_FIX_BIC: String MIDDLE_FIX_CAR static val MIDDLE_FIX_CAR: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/#functions","text":"Name Summary equals open fun equals(other: Any ?): Boolean fromId open static fun fromId(id: String ): TransportMode ! getColor open fun getColor(): ServiceColor ? getDarkIcon open fun getDarkIcon(): String ? getIconId open fun getIconId(): String ! getId open fun getId(): String ! getImplies open fun getImplies(): ArrayList < String !>? getLocalIconResId open static fun getLocalIconResId(identifier: String ?): Int getTitle open fun getTitle(): String ! getURL open fun getURL(): String ? isRequired open fun isRequired(): Boolean setDarkIcon open fun setDarkIcon(darkIcon: String !): Unit setIconId open fun setIconId(iconId: String !): Unit setId open fun setId(id: String !): Unit setImplies open fun setImplies(implies: ArrayList < String !>!): Unit setRequired open fun setRequired(isRequired: Boolean ): Unit setTitle open fun setTitle(title: String !): Unit setURL open fun setURL(URL: String !): Unit toString open fun toString(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-a-i-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_AIR ID_AIR static val ID_AIR: String","title":" i d  a i r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-a-i-r/#id_air","text":"static val ID_AIR: String","title":"ID_AIR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-b-i-c-y-c-l-e/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_BICYCLE ID_BICYCLE static val ID_BICYCLE: String","title":" i d  b i c y c l e"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-b-i-c-y-c-l-e/#id_bicycle","text":"static val ID_BICYCLE: String","title":"ID_BICYCLE"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-c-a-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_CAR ID_CAR static val ID_CAR: String","title":" i d  c a r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-c-a-r/#id_car","text":"static val ID_CAR: String","title":"ID_CAR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-m-o-t-o-r-b-i-k-e/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_MOTORBIKE ID_MOTORBIKE static val ID_MOTORBIKE: String","title":" i d  m o t o r b i k e"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-m-o-t-o-r-b-i-k-e/#id_motorbike","text":"static val ID_MOTORBIKE: String","title":"ID_MOTORBIKE"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-p-u-b-l-i-c_-t-r-a-n-s-p-o-r-t/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_PUBLIC_TRANSPORT ID_PUBLIC_TRANSPORT static val ID_PUBLIC_TRANSPORT: String","title":" i d  p u b l i c  t r a n s p o r t"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-p-u-b-l-i-c_-t-r-a-n-s-p-o-r-t/#id_public_transport","text":"static val ID_PUBLIC_TRANSPORT: String","title":"ID_PUBLIC_TRANSPORT"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-s-c-h-o-o-l_-b-u-s/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_SCHOOL_BUS ID_SCHOOL_BUS static val ID_SCHOOL_BUS: String","title":" i d  s c h o o l  b u s"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-s-c-h-o-o-l_-b-u-s/#id_school_bus","text":"static val ID_SCHOOL_BUS: String","title":"ID_SCHOOL_BUS"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-s-h-u-f-f-l-e/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_SHUFFLE ID_SHUFFLE static val ID_SHUFFLE: String","title":" i d  s h u f f l e"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-s-h-u-f-f-l-e/#id_shuffle","text":"static val ID_SHUFFLE: String","title":"ID_SHUFFLE"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-s-h-u-t-t-l-e_-b-u-s/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_SHUTTLE_BUS ID_SHUTTLE_BUS static val ID_SHUTTLE_BUS: String FIXME: It seems we no longer need this id. Replacement seems to be 'pt_ltd_SCHOOLBUS'.","title":" i d  s h u t t l e  b u s"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-s-h-u-t-t-l-e_-b-u-s/#id_shuttle_bus","text":"static val ID_SHUTTLE_BUS: String FIXME: It seems we no longer need this id. Replacement seems to be 'pt_ltd_SCHOOLBUS'.","title":"ID_SHUTTLE_BUS"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-t-a-x-i/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_TAXI ID_TAXI static val ID_TAXI: String","title":" i d  t a x i"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-t-a-x-i/#id_taxi","text":"static val ID_TAXI: String","title":"ID_TAXI"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-t-n-c/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_TNC ID_TNC static val ID_TNC: String","title":" i d  t n c"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-t-n-c/#id_tnc","text":"static val ID_TNC: String","title":"ID_TNC"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-w-a-l-k/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_WALK ID_WALK static val ID_WALK: String","title":" i d  w a l k"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-w-a-l-k/#id_walk","text":"static val ID_WALK: String","title":"ID_WALK"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-w-h-e-e-l_-c-h-a-i-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / ID_WHEEL_CHAIR ID_WHEEL_CHAIR static val ID_WHEEL_CHAIR: String","title":" i d  w h e e l  c h a i r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-i-d_-w-h-e-e-l_-c-h-a-i-r/#id_wheel_chair","text":"static val ID_WHEEL_CHAIR: String","title":"ID_WHEEL_CHAIR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / <init> <init> TransportMode()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-init-/#init","text":"TransportMode()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-m-i-d-d-l-e_-f-i-x_-b-i-c/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / MIDDLE_FIX_BIC MIDDLE_FIX_BIC static val MIDDLE_FIX_BIC: String","title":" m i d d l e  f i x  b i c"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-m-i-d-d-l-e_-f-i-x_-b-i-c/#middle_fix_bic","text":"static val MIDDLE_FIX_BIC: String","title":"MIDDLE_FIX_BIC"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-m-i-d-d-l-e_-f-i-x_-c-a-r/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / MIDDLE_FIX_CAR MIDDLE_FIX_CAR static val MIDDLE_FIX_CAR: String","title":" m i d d l e  f i x  c a r"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/-m-i-d-d-l-e_-f-i-x_-c-a-r/#middle_fix_car","text":"static val MIDDLE_FIX_CAR: String","title":"MIDDLE_FIX_CAR"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/equals/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / equals equals open fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/equals/#equals","text":"open fun equals(other: Any ?): Boolean","title":"equals"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/from-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / fromId fromId open static fun fromId(@NonNull id: String ): TransportMode !","title":"From id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/from-id/#fromid","text":"open static fun fromId(@NonNull id: String ): TransportMode !","title":"fromId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-color/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / getColor getColor @Nullable open fun getColor(): ServiceColor ?","title":"Get color"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-color/#getcolor","text":"@Nullable open fun getColor(): ServiceColor ?","title":"getColor"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-dark-icon/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / getDarkIcon getDarkIcon @Nullable open fun getDarkIcon(): String ?","title":"Get dark icon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-dark-icon/#getdarkicon","text":"@Nullable open fun getDarkIcon(): String ?","title":"getDarkIcon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-icon-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / getIconId getIconId open fun getIconId(): String !","title":"Get icon id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-icon-id/#geticonid","text":"open fun getIconId(): String !","title":"getIconId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / getId getId open fun getId(): String !","title":"Get id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-id/#getid","text":"open fun getId(): String !","title":"getId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-implies/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / getImplies getImplies @Nullable open fun getImplies(): ArrayList < String !>?","title":"Get implies"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-implies/#getimplies","text":"@Nullable open fun getImplies(): ArrayList < String !>?","title":"getImplies"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-local-icon-res-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / getLocalIconResId getLocalIconResId @DrawableRes open static fun getLocalIconResId(@Nullable identifier: String ?): Int","title":"Get local icon res id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-local-icon-res-id/#getlocaliconresid","text":"@DrawableRes open static fun getLocalIconResId(@Nullable identifier: String ?): Int","title":"getLocalIconResId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-title/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / getTitle getTitle open fun getTitle(): String !","title":"Get title"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-title/#gettitle","text":"open fun getTitle(): String !","title":"getTitle"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / getURL getURL @Nullable open fun getURL(): String ?","title":"Get u r l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/get-u-r-l/#geturl","text":"@Nullable open fun getURL(): String ?","title":"getURL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/is-required/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / isRequired isRequired open fun isRequired(): Boolean","title":"Is required"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/is-required/#isrequired","text":"open fun isRequired(): Boolean","title":"isRequired"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-dark-icon/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / setDarkIcon setDarkIcon open fun setDarkIcon(darkIcon: String !): Unit","title":"Set dark icon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-dark-icon/#setdarkicon","text":"open fun setDarkIcon(darkIcon: String !): Unit","title":"setDarkIcon"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-icon-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / setIconId setIconId open fun setIconId(iconId: String !): Unit","title":"Set icon id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-icon-id/#seticonid","text":"open fun setIconId(iconId: String !): Unit","title":"setIconId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-id/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / setId setId open fun setId(id: String !): Unit","title":"Set id"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-id/#setid","text":"open fun setId(id: String !): Unit","title":"setId"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-implies/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / setImplies setImplies open fun setImplies(implies: ArrayList < String !>!): Unit","title":"Set implies"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-implies/#setimplies","text":"open fun setImplies(implies: ArrayList < String !>!): Unit","title":"setImplies"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-required/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / setRequired setRequired open fun setRequired(isRequired: Boolean ): Unit","title":"Set required"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-required/#setrequired","text":"open fun setRequired(isRequired: Boolean ): Unit","title":"setRequired"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-title/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / setTitle setTitle open fun setTitle(title: String !): Unit","title":"Set title"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-title/#settitle","text":"open fun setTitle(title: String !): Unit","title":"setTitle"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / setURL setURL open fun setURL(URL: String !): Unit","title":"Set u r l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/set-u-r-l/#seturl","text":"open fun setURL(URL: String !): Unit","title":"setURL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/to-string/","text":"tripkit-android / com.skedgo.tripkit.common.model / TransportMode / toString toString open fun toString(): String","title":"To string"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-transport-mode/to-string/#tostring","text":"open fun toString(): String","title":"toString"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-units/","text":"tripkit-android / com.skedgo.tripkit.common.model / Units Units class Units Properties Name Summary UNIT_AUTO static val UNIT_AUTO: String UNIT_IMPERIAL static val UNIT_IMPERIAL: String UNIT_METRIC static val UNIT_METRIC: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-units/#units","text":"class Units","title":"Units"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-units/#properties","text":"Name Summary UNIT_AUTO static val UNIT_AUTO: String UNIT_IMPERIAL static val UNIT_IMPERIAL: String UNIT_METRIC static val UNIT_METRIC: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-units/-u-n-i-t_-a-u-t-o/","text":"tripkit-android / com.skedgo.tripkit.common.model / Units / UNIT_AUTO UNIT_AUTO static val UNIT_AUTO: String","title":" u n i t  a u t o"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-units/-u-n-i-t_-a-u-t-o/#unit_auto","text":"static val UNIT_AUTO: String","title":"UNIT_AUTO"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-units/-u-n-i-t_-i-m-p-e-r-i-a-l/","text":"tripkit-android / com.skedgo.tripkit.common.model / Units / UNIT_IMPERIAL UNIT_IMPERIAL static val UNIT_IMPERIAL: String","title":" u n i t  i m p e r i a l"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-units/-u-n-i-t_-i-m-p-e-r-i-a-l/#unit_imperial","text":"static val UNIT_IMPERIAL: String","title":"UNIT_IMPERIAL"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-units/-u-n-i-t_-m-e-t-r-i-c/","text":"tripkit-android / com.skedgo.tripkit.common.model / Units / UNIT_METRIC UNIT_METRIC static val UNIT_METRIC: String","title":" u n i t  m e t r i c"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-units/-u-n-i-t_-m-e-t-r-i-c/#unit_metric","text":"static val UNIT_METRIC: String","title":"UNIT_METRIC"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.common.model / WheelchairAccessible WheelchairAccessible interface WheelchairAccessible Properties Name Summary wheelchairAccessible abstract val wheelchairAccessible: Boolean ? Inheritors Name Summary ServiceStop Represents a future stop of a service in a trip. open class ServiceStop : Location , WheelchairAccessible TimetableEntry (Aka Service) open class TimetableEntry : Parcelable, IRealTimeElement , ITimeRange , WheelchairAccessible","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-wheelchair-accessible/#wheelchairaccessible","text":"interface WheelchairAccessible","title":"WheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-wheelchair-accessible/#properties","text":"Name Summary wheelchairAccessible abstract val wheelchairAccessible: Boolean ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-wheelchair-accessible/#inheritors","text":"Name Summary ServiceStop Represents a future stop of a service in a trip. open class ServiceStop : Location , WheelchairAccessible TimetableEntry (Aka Service) open class TimetableEntry : Parcelable, IRealTimeElement , ITimeRange , WheelchairAccessible","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-wheelchair-accessible/wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.common.model / WheelchairAccessible / wheelchairAccessible wheelchairAccessible abstract val wheelchairAccessible: Boolean ?","title":"Wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.common.model/-wheelchair-accessible/wheelchair-accessible/#wheelchairaccessible","text":"abstract val wheelchairAccessible: Boolean ?","title":"wheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/","text":"tripkit-android / com.skedgo.tripkit.common.util Package com.skedgo.tripkit.common.util Types Name Summary AbstractObjectPool abstract class AbstractObjectPool<T : Any !> Gsons class Gsons LowercaseEnumTypeAdapterFactory class LowercaseEnumTypeAdapterFactory : TypeAdapterFactory PolyUtil open class PolyUtil SphericalUtil open class SphericalUtil StringBuilderPool open class StringBuilderPool : AbstractObjectPool < StringBuilder !> StringUtils class StringUtils TimeUtils open class TimeUtils TransportModeUtils class TransportModeUtils TripKitLatLng data class TripKitLatLng TripSegmentListResolver Puts a Departure segment before head of, and puts an Arrival segment after tail of a segment list. open class TripSegmentListResolver TripSegmentUtils class TripSegmentUtils","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/#package-comskedgotripkitcommonutil","text":"","title":"Package com.skedgo.tripkit.common.util"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/#types","text":"Name Summary AbstractObjectPool abstract class AbstractObjectPool<T : Any !> Gsons class Gsons LowercaseEnumTypeAdapterFactory class LowercaseEnumTypeAdapterFactory : TypeAdapterFactory PolyUtil open class PolyUtil SphericalUtil open class SphericalUtil StringBuilderPool open class StringBuilderPool : AbstractObjectPool < StringBuilder !> StringUtils class StringUtils TimeUtils open class TimeUtils TransportModeUtils class TransportModeUtils TripKitLatLng data class TripKitLatLng TripSegmentListResolver Puts a Departure segment before head of, and puts an Arrival segment after tail of a segment list. open class TripSegmentListResolver TripSegmentUtils class TripSegmentUtils","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/","text":"tripkit-android / com.skedgo.tripkit.common.util / AbstractObjectPool AbstractObjectPool abstract class AbstractObjectPool<T : Any !> Constructors Name Summary <init> AbstractObjectPool() Functions Name Summary newObject By default, attempts to invoke a no-arg constructor on class T. open fun newObject(): T onRecycle Gives subclasses the chance to perform additional operations on an object before it is recycled. open fun onRecycle(obj: T): Unit retrieve fun retrieve(): T save fun save(obj: T): Unit Inheritors Name Summary StringBuilderPool open class StringBuilderPool : AbstractObjectPool < StringBuilder !>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/#abstractobjectpool","text":"abstract class AbstractObjectPool<T : Any !>","title":"AbstractObjectPool"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/#constructors","text":"Name Summary <init> AbstractObjectPool()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/#functions","text":"Name Summary newObject By default, attempts to invoke a no-arg constructor on class T. open fun newObject(): T onRecycle Gives subclasses the chance to perform additional operations on an object before it is recycled. open fun onRecycle(obj: T): Unit retrieve fun retrieve(): T save fun save(obj: T): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/#inheritors","text":"Name Summary StringBuilderPool open class StringBuilderPool : AbstractObjectPool < StringBuilder !>","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.util / AbstractObjectPool / <init> <init> AbstractObjectPool()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/-init-/#init","text":"AbstractObjectPool()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/new-object/","text":"tripkit-android / com.skedgo.tripkit.common.util / AbstractObjectPool / newObject newObject protected open fun newObject(): T By default, attempts to invoke a no-arg constructor on class T. Subclasses should override to implement additional logic Return T: a new instance of type T","title":"New object"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/new-object/#newobject","text":"protected open fun newObject(): T By default, attempts to invoke a no-arg constructor on class T. Subclasses should override to implement additional logic Return T: a new instance of type T","title":"newObject"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/on-recycle/","text":"tripkit-android / com.skedgo.tripkit.common.util / AbstractObjectPool / onRecycle onRecycle protected open fun onRecycle(obj: T): Unit Gives subclasses the chance to perform additional operations on an object before it is recycled. Parameters obj - T:","title":"On recycle"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/on-recycle/#onrecycle","text":"protected open fun onRecycle(obj: T): Unit Gives subclasses the chance to perform additional operations on an object before it is recycled.","title":"onRecycle"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/on-recycle/#parameters","text":"obj - T:","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/retrieve/","text":"tripkit-android / com.skedgo.tripkit.common.util / AbstractObjectPool / retrieve retrieve fun retrieve(): T","title":"Retrieve"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/retrieve/#retrieve","text":"fun retrieve(): T","title":"retrieve"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/save/","text":"tripkit-android / com.skedgo.tripkit.common.util / AbstractObjectPool / save save fun save(obj: T): Unit","title":"Save"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-abstract-object-pool/save/#save","text":"fun save(obj: T): Unit","title":"save"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-gsons/","text":"tripkit-android / com.skedgo.tripkit.common.util / Gsons Gsons class Gsons Functions Name Summary createForLowercaseEnum static fun createForLowercaseEnum(): Gson createForRegion static fun createForRegion(): Gson","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-gsons/#gsons","text":"class Gsons","title":"Gsons"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-gsons/#functions","text":"Name Summary createForLowercaseEnum static fun createForLowercaseEnum(): Gson createForRegion static fun createForRegion(): Gson","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-gsons/create-for-lowercase-enum/","text":"tripkit-android / com.skedgo.tripkit.common.util / Gsons / createForLowercaseEnum createForLowercaseEnum @NonNull static fun createForLowercaseEnum(): Gson","title":"Create for lowercase enum"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-gsons/create-for-lowercase-enum/#createforlowercaseenum","text":"@NonNull static fun createForLowercaseEnum(): Gson","title":"createForLowercaseEnum"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-gsons/create-for-region/","text":"tripkit-android / com.skedgo.tripkit.common.util / Gsons / createForRegion createForRegion @NonNull static fun createForRegion(): Gson","title":"Create for region"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-gsons/create-for-region/#createforregion","text":"@NonNull static fun createForRegion(): Gson","title":"createForRegion"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-lowercase-enum-type-adapter-factory/","text":"tripkit-android / com.skedgo.tripkit.common.util / LowercaseEnumTypeAdapterFactory LowercaseEnumTypeAdapterFactory class LowercaseEnumTypeAdapterFactory : TypeAdapterFactory See Also <a href=\" http://stackoverflow.com/q/9064433/2563009\">StackOverflow</a&gt ; Constructors Name Summary <init> LowercaseEnumTypeAdapterFactory() Functions Name Summary create fun <T : Any !> create(gson: Gson!, type: TypeToken<T>!): TypeAdapter<T>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-lowercase-enum-type-adapter-factory/#lowercaseenumtypeadapterfactory","text":"class LowercaseEnumTypeAdapterFactory : TypeAdapterFactory See Also <a href=\" http://stackoverflow.com/q/9064433/2563009\">StackOverflow</a&gt ;","title":"LowercaseEnumTypeAdapterFactory"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-lowercase-enum-type-adapter-factory/#constructors","text":"Name Summary <init> LowercaseEnumTypeAdapterFactory()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-lowercase-enum-type-adapter-factory/#functions","text":"Name Summary create fun <T : Any !> create(gson: Gson!, type: TypeToken<T>!): TypeAdapter<T>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-lowercase-enum-type-adapter-factory/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.util / LowercaseEnumTypeAdapterFactory / <init> <init> LowercaseEnumTypeAdapterFactory() See Also <a href=\" http://stackoverflow.com/q/9064433/2563009\">StackOverflow</a&gt ;","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-lowercase-enum-type-adapter-factory/-init-/#init","text":"LowercaseEnumTypeAdapterFactory() See Also <a href=\" http://stackoverflow.com/q/9064433/2563009\">StackOverflow</a&gt ;","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-lowercase-enum-type-adapter-factory/create/","text":"tripkit-android / com.skedgo.tripkit.common.util / LowercaseEnumTypeAdapterFactory / create create fun <T : Any !> create(gson: Gson!, type: TypeToken<T>!): TypeAdapter<T>!","title":"Create"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-lowercase-enum-type-adapter-factory/create/#create","text":"fun <T : Any !> create(gson: Gson!, type: TypeToken<T>!): TypeAdapter<T>!","title":"create"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/","text":"tripkit-android / com.skedgo.tripkit.common.util / PolyUtil PolyUtil open class PolyUtil Functions Name Summary containsLocation open static fun containsLocation(point: TripKitLatLng !, polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean Computes whether the given point lies inside the specified polygon. The polygon is always considered closed, regardless of whether the last point equals the first or not. Inside is defined as not containing the South Pole -- the South Pole is always outside. The polygon is formed of great circle segments if geodesic is true, and of rhumb (loxodromic) segments otherwise. open static fun containsLocation(latitude: Double , longitude: Double , polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean decode Decodes an encoded path string into a sequence of TripKitLatLngs. open static fun decode(encodedPath: String !): MutableList < TripKitLatLng !>! distanceToLine Computes the distance on the sphere between the point p and the line segment start to end. open static fun distanceToLine(p: TripKitLatLng !, start: TripKitLatLng !, end: TripKitLatLng !): Double encode Encodes a sequence of TripKitLatLngs into an encoded path string. open static fun encode(path: MutableList < TripKitLatLng !>!): String ! isClosedPolygon Returns true if the provided list of points is a closed polygon (i.e., the first and last points are the same), and false if it is not open static fun isClosedPolygon(poly: MutableList < TripKitLatLng !>!): Boolean isLocationOnEdge Computes whether the given point lies on or near the edge of a polygon, within a specified tolerance in meters. The polygon edge is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise. The polygon edge is implicitly closed -- the closing segment between the first point and the last point is included. open static fun isLocationOnEdge(point: TripKitLatLng !, polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Boolean Same as `[ #isLocationOnEdge(TripKitLatLng, List, boolean, double) ](is-location-on-edge.md) with a default tolerance of 0.1 meters. open static fun isLocationOnEdge(point: [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !, polygon: [ MutableList ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/index.html) < [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !>!, geodesic: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) ): [ Boolean`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html ) isLocationOnPath Computes whether the given point lies on or near a polyline, within a specified tolerance in meters. The polyline is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise. The polyline is not closed -- the closing segment between the first point and the last point is not included. open static fun isLocationOnPath(point: TripKitLatLng !, polyline: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Boolean Same as `[ #isLocationOnPath(TripKitLatLng, List, boolean, double) ](is-location-on-path.md) open static fun isLocationOnPath(point: [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !, polyline: [ MutableList ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/index.html) < [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !>!, geodesic: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) ): [ Boolean`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html ) locationIndexOnEdgeOrPath Computes whether (and where) a given point lies on or near a polyline, within a specified tolerance. If closed, the closing segment between the last and first points of the polyline is not considered. open static fun locationIndexOnEdgeOrPath(point: TripKitLatLng !, poly: MutableList < TripKitLatLng !>!, closed: Boolean , geodesic: Boolean , toleranceEarth: Double ): Int locationIndexOnPath Computes whether (and where) a given point lies on or near a polyline, within a specified tolerance. The polyline is not closed -- the closing segment between the first point and the last point is not included. open static fun locationIndexOnPath(point: TripKitLatLng !, poly: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Int Same as `[ #locationIndexOnPath(TripKitLatLng, List, boolean, double) ](location-index-on-path.md) open static fun locationIndexOnPath(point: [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !, polyline: [ MutableList ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/index.html) < [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !>!, geodesic: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) ): [ Int`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html ) simplify Simplifies the given poly (polyline or polygon) using the Douglas-Peucker decimation algorithm. Increasing the tolerance will result in fewer points in the simplified polyline or polygon. open static fun simplify(poly: MutableList < TripKitLatLng !>!, tolerance: Double ): MutableList < TripKitLatLng !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/#polyutil","text":"open class PolyUtil","title":"PolyUtil"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/#functions","text":"Name Summary containsLocation open static fun containsLocation(point: TripKitLatLng !, polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean Computes whether the given point lies inside the specified polygon. The polygon is always considered closed, regardless of whether the last point equals the first or not. Inside is defined as not containing the South Pole -- the South Pole is always outside. The polygon is formed of great circle segments if geodesic is true, and of rhumb (loxodromic) segments otherwise. open static fun containsLocation(latitude: Double , longitude: Double , polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean decode Decodes an encoded path string into a sequence of TripKitLatLngs. open static fun decode(encodedPath: String !): MutableList < TripKitLatLng !>! distanceToLine Computes the distance on the sphere between the point p and the line segment start to end. open static fun distanceToLine(p: TripKitLatLng !, start: TripKitLatLng !, end: TripKitLatLng !): Double encode Encodes a sequence of TripKitLatLngs into an encoded path string. open static fun encode(path: MutableList < TripKitLatLng !>!): String ! isClosedPolygon Returns true if the provided list of points is a closed polygon (i.e., the first and last points are the same), and false if it is not open static fun isClosedPolygon(poly: MutableList < TripKitLatLng !>!): Boolean isLocationOnEdge Computes whether the given point lies on or near the edge of a polygon, within a specified tolerance in meters. The polygon edge is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise. The polygon edge is implicitly closed -- the closing segment between the first point and the last point is included. open static fun isLocationOnEdge(point: TripKitLatLng !, polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Boolean Same as `[ #isLocationOnEdge(TripKitLatLng, List, boolean, double) ](is-location-on-edge.md) with a default tolerance of 0.1 meters. open static fun isLocationOnEdge(point: [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !, polygon: [ MutableList ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/index.html) < [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !>!, geodesic: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) ): [ Boolean`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html ) isLocationOnPath Computes whether the given point lies on or near a polyline, within a specified tolerance in meters. The polyline is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise. The polyline is not closed -- the closing segment between the first point and the last point is not included. open static fun isLocationOnPath(point: TripKitLatLng !, polyline: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Boolean Same as `[ #isLocationOnPath(TripKitLatLng, List, boolean, double) ](is-location-on-path.md) open static fun isLocationOnPath(point: [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !, polyline: [ MutableList ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/index.html) < [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !>!, geodesic: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) ): [ Boolean`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html ) locationIndexOnEdgeOrPath Computes whether (and where) a given point lies on or near a polyline, within a specified tolerance. If closed, the closing segment between the last and first points of the polyline is not considered. open static fun locationIndexOnEdgeOrPath(point: TripKitLatLng !, poly: MutableList < TripKitLatLng !>!, closed: Boolean , geodesic: Boolean , toleranceEarth: Double ): Int locationIndexOnPath Computes whether (and where) a given point lies on or near a polyline, within a specified tolerance. The polyline is not closed -- the closing segment between the first point and the last point is not included. open static fun locationIndexOnPath(point: TripKitLatLng !, poly: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Int Same as `[ #locationIndexOnPath(TripKitLatLng, List, boolean, double) ](location-index-on-path.md) open static fun locationIndexOnPath(point: [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !, polyline: [ MutableList ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-list/index.html) < [ TripKitLatLng ](../-trip-kit-lat-lng/index.md) !>!, geodesic: [ Boolean ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-boolean/index.html) ): [ Int`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html ) simplify Simplifies the given poly (polyline or polygon) using the Douglas-Peucker decimation algorithm. Increasing the tolerance will result in fewer points in the simplified polyline or polygon. open static fun simplify(poly: MutableList < TripKitLatLng !>!, tolerance: Double ): MutableList < TripKitLatLng !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/contains-location/","text":"tripkit-android / com.skedgo.tripkit.common.util / PolyUtil / containsLocation containsLocation open static fun containsLocation(point: TripKitLatLng !, polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean open static fun containsLocation(latitude: Double , longitude: Double , polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean Computes whether the given point lies inside the specified polygon. The polygon is always considered closed, regardless of whether the last point equals the first or not. Inside is defined as not containing the South Pole -- the South Pole is always outside. The polygon is formed of great circle segments if geodesic is true, and of rhumb (loxodromic) segments otherwise.","title":"Contains location"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/contains-location/#containslocation","text":"open static fun containsLocation(point: TripKitLatLng !, polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean open static fun containsLocation(latitude: Double , longitude: Double , polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean Computes whether the given point lies inside the specified polygon. The polygon is always considered closed, regardless of whether the last point equals the first or not. Inside is defined as not containing the South Pole -- the South Pole is always outside. The polygon is formed of great circle segments if geodesic is true, and of rhumb (loxodromic) segments otherwise.","title":"containsLocation"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/decode/","text":"tripkit-android / com.skedgo.tripkit.common.util / PolyUtil / decode decode open static fun decode(encodedPath: String !): MutableList < TripKitLatLng !>! Decodes an encoded path string into a sequence of TripKitLatLngs.","title":"Decode"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/decode/#decode","text":"open static fun decode(encodedPath: String !): MutableList < TripKitLatLng !>! Decodes an encoded path string into a sequence of TripKitLatLngs.","title":"decode"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/distance-to-line/","text":"tripkit-android / com.skedgo.tripkit.common.util / PolyUtil / distanceToLine distanceToLine open static fun distanceToLine(p: TripKitLatLng !, start: TripKitLatLng !, end: TripKitLatLng !): Double Computes the distance on the sphere between the point p and the line segment start to end. Parameters p - TripKitLatLng !: the point to be measured start - TripKitLatLng !: the beginning of the line segment end - TripKitLatLng !: the end of the line segment Return Double : the distance in meters (assuming spherical earth)","title":"Distance to line"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/distance-to-line/#distancetoline","text":"open static fun distanceToLine(p: TripKitLatLng !, start: TripKitLatLng !, end: TripKitLatLng !): Double Computes the distance on the sphere between the point p and the line segment start to end.","title":"distanceToLine"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/distance-to-line/#parameters","text":"p - TripKitLatLng !: the point to be measured start - TripKitLatLng !: the beginning of the line segment end - TripKitLatLng !: the end of the line segment Return Double : the distance in meters (assuming spherical earth)","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/encode/","text":"tripkit-android / com.skedgo.tripkit.common.util / PolyUtil / encode encode open static fun encode(path: MutableList < TripKitLatLng !>!): String ! Encodes a sequence of TripKitLatLngs into an encoded path string.","title":"Encode"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/encode/#encode","text":"open static fun encode(path: MutableList < TripKitLatLng !>!): String ! Encodes a sequence of TripKitLatLngs into an encoded path string.","title":"encode"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/is-closed-polygon/","text":"tripkit-android / com.skedgo.tripkit.common.util / PolyUtil / isClosedPolygon isClosedPolygon open static fun isClosedPolygon(poly: MutableList < TripKitLatLng !>!): Boolean Returns true if the provided list of points is a closed polygon (i.e., the first and last points are the same), and false if it is not Parameters poly - MutableList < TripKitLatLng !>!: polyline or polygon Return Boolean : true if the provided list of points is a closed polygon (i.e., the first and last points are the same), and false if it is not","title":"Is closed polygon"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/is-closed-polygon/#isclosedpolygon","text":"open static fun isClosedPolygon(poly: MutableList < TripKitLatLng !>!): Boolean Returns true if the provided list of points is a closed polygon (i.e., the first and last points are the same), and false if it is not","title":"isClosedPolygon"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/is-closed-polygon/#parameters","text":"poly - MutableList < TripKitLatLng !>!: polyline or polygon Return Boolean : true if the provided list of points is a closed polygon (i.e., the first and last points are the same), and false if it is not","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/is-location-on-edge/","text":"tripkit-android / com.skedgo.tripkit.common.util / PolyUtil / isLocationOnEdge isLocationOnEdge open static fun isLocationOnEdge(point: TripKitLatLng !, polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Boolean Computes whether the given point lies on or near the edge of a polygon, within a specified tolerance in meters. The polygon edge is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise. The polygon edge is implicitly closed -- the closing segment between the first point and the last point is included. open static fun isLocationOnEdge(point: TripKitLatLng !, polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean Same as `[ #isLocationOnEdge(TripKitLatLng, List, boolean, double)`](./is-location-on-edge.md) with a default tolerance of 0.1 meters.","title":"Is location on edge"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/is-location-on-edge/#islocationonedge","text":"open static fun isLocationOnEdge(point: TripKitLatLng !, polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Boolean Computes whether the given point lies on or near the edge of a polygon, within a specified tolerance in meters. The polygon edge is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise. The polygon edge is implicitly closed -- the closing segment between the first point and the last point is included. open static fun isLocationOnEdge(point: TripKitLatLng !, polygon: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean Same as `[ #isLocationOnEdge(TripKitLatLng, List, boolean, double)`](./is-location-on-edge.md) with a default tolerance of 0.1 meters.","title":"isLocationOnEdge"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/is-location-on-path/","text":"tripkit-android / com.skedgo.tripkit.common.util / PolyUtil / isLocationOnPath isLocationOnPath open static fun isLocationOnPath(point: TripKitLatLng !, polyline: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Boolean Computes whether the given point lies on or near a polyline, within a specified tolerance in meters. The polyline is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise. The polyline is not closed -- the closing segment between the first point and the last point is not included. open static fun isLocationOnPath(point: TripKitLatLng !, polyline: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean Same as `[ #isLocationOnPath(TripKitLatLng, List, boolean, double)`](./is-location-on-path.md) with a default tolerance of 0.1 meters.","title":"Is location on path"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/is-location-on-path/#islocationonpath","text":"open static fun isLocationOnPath(point: TripKitLatLng !, polyline: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Boolean Computes whether the given point lies on or near a polyline, within a specified tolerance in meters. The polyline is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise. The polyline is not closed -- the closing segment between the first point and the last point is not included. open static fun isLocationOnPath(point: TripKitLatLng !, polyline: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Boolean Same as `[ #isLocationOnPath(TripKitLatLng, List, boolean, double)`](./is-location-on-path.md) with a default tolerance of 0.1 meters.","title":"isLocationOnPath"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/location-index-on-edge-or-path/","text":"tripkit-android / com.skedgo.tripkit.common.util / PolyUtil / locationIndexOnEdgeOrPath locationIndexOnEdgeOrPath open static fun locationIndexOnEdgeOrPath(point: TripKitLatLng !, poly: MutableList < TripKitLatLng !>!, closed: Boolean , geodesic: Boolean , toleranceEarth: Double ): Int Computes whether (and where) a given point lies on or near a polyline, within a specified tolerance. If closed, the closing segment between the last and first points of the polyline is not considered. Parameters point - TripKitLatLng !: our needle poly - MutableList < TripKitLatLng !>!: our haystack closed - Boolean : whether the polyline should be considered closed by a segment connecting the last point back to the first one geodesic - Boolean : the polyline is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise toleranceEarth - Double : tolerance (in meters) Return Int : -1 if point does not lie on or near the polyline. 0 if point is between poly[0] and poly[1] (inclusive), 1 if between poly[1] and poly[2], ..., poly.size()-2 if between poly[poly.size() - 2] and poly[poly.size() - 1]","title":"Location index on edge or path"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/location-index-on-edge-or-path/#locationindexonedgeorpath","text":"open static fun locationIndexOnEdgeOrPath(point: TripKitLatLng !, poly: MutableList < TripKitLatLng !>!, closed: Boolean , geodesic: Boolean , toleranceEarth: Double ): Int Computes whether (and where) a given point lies on or near a polyline, within a specified tolerance. If closed, the closing segment between the last and first points of the polyline is not considered.","title":"locationIndexOnEdgeOrPath"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/location-index-on-edge-or-path/#parameters","text":"point - TripKitLatLng !: our needle poly - MutableList < TripKitLatLng !>!: our haystack closed - Boolean : whether the polyline should be considered closed by a segment connecting the last point back to the first one geodesic - Boolean : the polyline is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise toleranceEarth - Double : tolerance (in meters) Return Int : -1 if point does not lie on or near the polyline. 0 if point is between poly[0] and poly[1] (inclusive), 1 if between poly[1] and poly[2], ..., poly.size()-2 if between poly[poly.size() - 2] and poly[poly.size() - 1]","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/location-index-on-path/","text":"tripkit-android / com.skedgo.tripkit.common.util / PolyUtil / locationIndexOnPath locationIndexOnPath open static fun locationIndexOnPath(point: TripKitLatLng !, poly: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Int Computes whether (and where) a given point lies on or near a polyline, within a specified tolerance. The polyline is not closed -- the closing segment between the first point and the last point is not included. Parameters point - TripKitLatLng !: our needle poly - MutableList < TripKitLatLng !>!: our haystack geodesic - Boolean : the polyline is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise tolerance - Double : tolerance (in meters) Return Int : -1 if point does not lie on or near the polyline. 0 if point is between poly[0] and poly[1] (inclusive), 1 if between poly[1] and poly[2], ..., poly.size()-2 if between poly[poly.size() - 2] and poly[poly.size() - 1] open static fun locationIndexOnPath(point: TripKitLatLng !, polyline: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Int Same as `[ #locationIndexOnPath(TripKitLatLng, List, boolean, double)`](./location-index-on-path.md) with a default tolerance of 0.1 meters.","title":"Location index on path"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/location-index-on-path/#locationindexonpath","text":"open static fun locationIndexOnPath(point: TripKitLatLng !, poly: MutableList < TripKitLatLng !>!, geodesic: Boolean , tolerance: Double ): Int Computes whether (and where) a given point lies on or near a polyline, within a specified tolerance. The polyline is not closed -- the closing segment between the first point and the last point is not included.","title":"locationIndexOnPath"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/location-index-on-path/#parameters","text":"point - TripKitLatLng !: our needle poly - MutableList < TripKitLatLng !>!: our haystack geodesic - Boolean : the polyline is composed of great circle segments if geodesic is true, and of Rhumb segments otherwise tolerance - Double : tolerance (in meters) Return Int : -1 if point does not lie on or near the polyline. 0 if point is between poly[0] and poly[1] (inclusive), 1 if between poly[1] and poly[2], ..., poly.size()-2 if between poly[poly.size() - 2] and poly[poly.size() - 1] open static fun locationIndexOnPath(point: TripKitLatLng !, polyline: MutableList < TripKitLatLng !>!, geodesic: Boolean ): Int Same as `[ #locationIndexOnPath(TripKitLatLng, List, boolean, double)`](./location-index-on-path.md) with a default tolerance of 0.1 meters.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/simplify/","text":"tripkit-android / com.skedgo.tripkit.common.util / PolyUtil / simplify simplify open static fun simplify(poly: MutableList < TripKitLatLng !>!, tolerance: Double ): MutableList < TripKitLatLng !>! Simplifies the given poly (polyline or polygon) using the Douglas-Peucker decimation algorithm. Increasing the tolerance will result in fewer points in the simplified polyline or polygon. When the providing a polygon as input, the first and last point of the list MUST have the same latitude and longitude (i.e., the polygon must be closed). If the input polygon is not closed, the resulting polygon may not be fully simplified. The time complexity of Douglas-Peucker is O(n^2), so take care that you do not call this algorithm too frequently in your code. Parameters poly - MutableList < TripKitLatLng !>!: polyline or polygon to be simplified. Polygon should be closed (i.e., first and last points should have the same latitude and longitude). tolerance - Double : in meters. Increasing the tolerance will result in fewer points in the simplified poly. Return MutableList < TripKitLatLng !>!: a simplified poly produced by the Douglas-Peucker algorithm","title":"Simplify"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/simplify/#simplify","text":"open static fun simplify(poly: MutableList < TripKitLatLng !>!, tolerance: Double ): MutableList < TripKitLatLng !>! Simplifies the given poly (polyline or polygon) using the Douglas-Peucker decimation algorithm. Increasing the tolerance will result in fewer points in the simplified polyline or polygon. When the providing a polygon as input, the first and last point of the list MUST have the same latitude and longitude (i.e., the polygon must be closed). If the input polygon is not closed, the resulting polygon may not be fully simplified. The time complexity of Douglas-Peucker is O(n^2), so take care that you do not call this algorithm too frequently in your code.","title":"simplify"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-poly-util/simplify/#parameters","text":"poly - MutableList < TripKitLatLng !>!: polyline or polygon to be simplified. Polygon should be closed (i.e., first and last points should have the same latitude and longitude). tolerance - Double : in meters. Increasing the tolerance will result in fewer points in the simplified poly. Return MutableList < TripKitLatLng !>!: a simplified poly produced by the Douglas-Peucker algorithm","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/","text":"tripkit-android / com.skedgo.tripkit.common.util / SphericalUtil SphericalUtil open class SphericalUtil Functions Name Summary computeArea Returns the area of a closed path on Earth. open static fun computeArea(path: MutableList < TripKitLatLng !>!): Double computeDistanceBetween Returns the distance between two TripKitLatLngs, in meters. open static fun computeDistanceBetween(from: TripKitLatLng !, to: TripKitLatLng !): Double computeHeading Returns the heading from one TripKitLatLng to another TripKitLatLng. Headings are expressed in degrees clockwise from North within the range [-180,180). open static fun computeHeading(from: TripKitLatLng !, to: TripKitLatLng !): Double computeLength Returns the length of the given path, in meters, on Earth. open static fun computeLength(path: MutableList < TripKitLatLng !>!): Double computeOffset Returns the TripKitLatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north). open static fun computeOffset(from: TripKitLatLng !, distance: Double , heading: Double ): TripKitLatLng ! computeOffsetOrigin Returns the location of origin when provided with a TripKitLatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available. open static fun computeOffsetOrigin(to: TripKitLatLng !, distance: Double , heading: Double ): TripKitLatLng ! computeSignedArea Returns the signed area of a closed path on Earth. The sign of the area may be used to determine the orientation of the path. \"inside\" is the surface that does not contain the South Pole. open static fun computeSignedArea(path: MutableList < TripKitLatLng !>!): Double interpolate Returns the TripKitLatLng which lies the given fraction of the way between the origin TripKitLatLng and the destination TripKitLatLng. open static fun interpolate(from: TripKitLatLng !, to: TripKitLatLng !, fraction: Double ): TripKitLatLng !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/#sphericalutil","text":"open class SphericalUtil","title":"SphericalUtil"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/#functions","text":"Name Summary computeArea Returns the area of a closed path on Earth. open static fun computeArea(path: MutableList < TripKitLatLng !>!): Double computeDistanceBetween Returns the distance between two TripKitLatLngs, in meters. open static fun computeDistanceBetween(from: TripKitLatLng !, to: TripKitLatLng !): Double computeHeading Returns the heading from one TripKitLatLng to another TripKitLatLng. Headings are expressed in degrees clockwise from North within the range [-180,180). open static fun computeHeading(from: TripKitLatLng !, to: TripKitLatLng !): Double computeLength Returns the length of the given path, in meters, on Earth. open static fun computeLength(path: MutableList < TripKitLatLng !>!): Double computeOffset Returns the TripKitLatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north). open static fun computeOffset(from: TripKitLatLng !, distance: Double , heading: Double ): TripKitLatLng ! computeOffsetOrigin Returns the location of origin when provided with a TripKitLatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available. open static fun computeOffsetOrigin(to: TripKitLatLng !, distance: Double , heading: Double ): TripKitLatLng ! computeSignedArea Returns the signed area of a closed path on Earth. The sign of the area may be used to determine the orientation of the path. \"inside\" is the surface that does not contain the South Pole. open static fun computeSignedArea(path: MutableList < TripKitLatLng !>!): Double interpolate Returns the TripKitLatLng which lies the given fraction of the way between the origin TripKitLatLng and the destination TripKitLatLng. open static fun interpolate(from: TripKitLatLng !, to: TripKitLatLng !, fraction: Double ): TripKitLatLng !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-area/","text":"tripkit-android / com.skedgo.tripkit.common.util / SphericalUtil / computeArea computeArea open static fun computeArea(path: MutableList < TripKitLatLng !>!): Double Returns the area of a closed path on Earth. Parameters path - MutableList < TripKitLatLng !>!: A closed path. Return Double : The path's area in square meters.","title":"Compute area"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-area/#computearea","text":"open static fun computeArea(path: MutableList < TripKitLatLng !>!): Double Returns the area of a closed path on Earth.","title":"computeArea"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-area/#parameters","text":"path - MutableList < TripKitLatLng !>!: A closed path. Return Double : The path's area in square meters.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-distance-between/","text":"tripkit-android / com.skedgo.tripkit.common.util / SphericalUtil / computeDistanceBetween computeDistanceBetween open static fun computeDistanceBetween(from: TripKitLatLng !, to: TripKitLatLng !): Double Returns the distance between two TripKitLatLngs, in meters.","title":"Compute distance between"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-distance-between/#computedistancebetween","text":"open static fun computeDistanceBetween(from: TripKitLatLng !, to: TripKitLatLng !): Double Returns the distance between two TripKitLatLngs, in meters.","title":"computeDistanceBetween"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-heading/","text":"tripkit-android / com.skedgo.tripkit.common.util / SphericalUtil / computeHeading computeHeading open static fun computeHeading(from: TripKitLatLng !, to: TripKitLatLng !): Double Returns the heading from one TripKitLatLng to another TripKitLatLng. Headings are expressed in degrees clockwise from North within the range [-180,180). Return Double : The heading in degrees clockwise from north.","title":"Compute heading"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-heading/#computeheading","text":"open static fun computeHeading(from: TripKitLatLng !, to: TripKitLatLng !): Double Returns the heading from one TripKitLatLng to another TripKitLatLng. Headings are expressed in degrees clockwise from North within the range [-180,180). Return Double : The heading in degrees clockwise from north.","title":"computeHeading"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-length/","text":"tripkit-android / com.skedgo.tripkit.common.util / SphericalUtil / computeLength computeLength open static fun computeLength(path: MutableList < TripKitLatLng !>!): Double Returns the length of the given path, in meters, on Earth.","title":"Compute length"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-length/#computelength","text":"open static fun computeLength(path: MutableList < TripKitLatLng !>!): Double Returns the length of the given path, in meters, on Earth.","title":"computeLength"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-offset-origin/","text":"tripkit-android / com.skedgo.tripkit.common.util / SphericalUtil / computeOffsetOrigin computeOffsetOrigin open static fun computeOffsetOrigin(to: TripKitLatLng !, distance: Double , heading: Double ): TripKitLatLng ! Returns the location of origin when provided with a TripKitLatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available. Parameters to - TripKitLatLng !: The destination TripKitLatLng. distance - Double : The distance travelled, in meters. heading - Double : The heading in degrees clockwise from north.","title":"Compute offset origin"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-offset-origin/#computeoffsetorigin","text":"open static fun computeOffsetOrigin(to: TripKitLatLng !, distance: Double , heading: Double ): TripKitLatLng ! Returns the location of origin when provided with a TripKitLatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.","title":"computeOffsetOrigin"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-offset-origin/#parameters","text":"to - TripKitLatLng !: The destination TripKitLatLng. distance - Double : The distance travelled, in meters. heading - Double : The heading in degrees clockwise from north.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-offset/","text":"tripkit-android / com.skedgo.tripkit.common.util / SphericalUtil / computeOffset computeOffset open static fun computeOffset(from: TripKitLatLng !, distance: Double , heading: Double ): TripKitLatLng ! Returns the TripKitLatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north). Parameters from - TripKitLatLng !: The TripKitLatLng from which to start. distance - Double : The distance to travel. heading - Double : The heading in degrees clockwise from north.","title":"Compute offset"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-offset/#computeoffset","text":"open static fun computeOffset(from: TripKitLatLng !, distance: Double , heading: Double ): TripKitLatLng ! Returns the TripKitLatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north).","title":"computeOffset"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-offset/#parameters","text":"from - TripKitLatLng !: The TripKitLatLng from which to start. distance - Double : The distance to travel. heading - Double : The heading in degrees clockwise from north.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-signed-area/","text":"tripkit-android / com.skedgo.tripkit.common.util / SphericalUtil / computeSignedArea computeSignedArea open static fun computeSignedArea(path: MutableList < TripKitLatLng !>!): Double Returns the signed area of a closed path on Earth. The sign of the area may be used to determine the orientation of the path. \"inside\" is the surface that does not contain the South Pole. Parameters path - MutableList < TripKitLatLng !>!: A closed path. Return Double : The loop's area in square meters.","title":"Compute signed area"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-signed-area/#computesignedarea","text":"open static fun computeSignedArea(path: MutableList < TripKitLatLng !>!): Double Returns the signed area of a closed path on Earth. The sign of the area may be used to determine the orientation of the path. \"inside\" is the surface that does not contain the South Pole.","title":"computeSignedArea"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/compute-signed-area/#parameters","text":"path - MutableList < TripKitLatLng !>!: A closed path. Return Double : The loop's area in square meters.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/interpolate/","text":"tripkit-android / com.skedgo.tripkit.common.util / SphericalUtil / interpolate interpolate open static fun interpolate(from: TripKitLatLng !, to: TripKitLatLng !, fraction: Double ): TripKitLatLng ! Returns the TripKitLatLng which lies the given fraction of the way between the origin TripKitLatLng and the destination TripKitLatLng. Parameters from - TripKitLatLng !: The TripKitLatLng from which to start. to - TripKitLatLng !: The TripKitLatLng toward which to travel. fraction - Double : A fraction of the distance to travel. Return TripKitLatLng !: The interpolated TripKitLatLng.","title":"Interpolate"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/interpolate/#interpolate","text":"open static fun interpolate(from: TripKitLatLng !, to: TripKitLatLng !, fraction: Double ): TripKitLatLng ! Returns the TripKitLatLng which lies the given fraction of the way between the origin TripKitLatLng and the destination TripKitLatLng.","title":"interpolate"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-spherical-util/interpolate/#parameters","text":"from - TripKitLatLng !: The TripKitLatLng from which to start. to - TripKitLatLng !: The TripKitLatLng toward which to travel. fraction - Double : A fraction of the distance to travel. Return TripKitLatLng !: The interpolated TripKitLatLng.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-builder-pool/","text":"tripkit-android / com.skedgo.tripkit.common.util / StringBuilderPool StringBuilderPool open class StringBuilderPool : AbstractObjectPool < StringBuilder !> Constructors Name Summary <init> StringBuilderPool() Functions Name Summary onRecycle open fun onRecycle(obj: StringBuilder !): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-builder-pool/#stringbuilderpool","text":"open class StringBuilderPool : AbstractObjectPool < StringBuilder !>","title":"StringBuilderPool"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-builder-pool/#constructors","text":"Name Summary <init> StringBuilderPool()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-builder-pool/#functions","text":"Name Summary onRecycle open fun onRecycle(obj: StringBuilder !): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-builder-pool/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.util / StringBuilderPool / <init> <init> StringBuilderPool()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-builder-pool/-init-/#init","text":"StringBuilderPool()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-builder-pool/on-recycle/","text":"tripkit-android / com.skedgo.tripkit.common.util / StringBuilderPool / onRecycle onRecycle protected open fun onRecycle(obj: StringBuilder !): Unit","title":"On recycle"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-builder-pool/on-recycle/#onrecycle","text":"protected open fun onRecycle(obj: StringBuilder !): Unit","title":"onRecycle"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/","text":"tripkit-android / com.skedgo.tripkit.common.util / StringUtils StringUtils class StringUtils Functions Name Summary capitalizeFirst static fun capitalizeFirst(str: String !): String ! firstNonEmpty static fun firstNonEmpty(vararg values: String !): String ! join static fun join(strings: ArrayList < String !>!): String ! Joins the elements of the provided List into a single String containing the provided elements. static fun join(strings: MutableList < String !>!, separator: String !): String ! makeArgsString static fun makeArgsString(argc: Int ): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/#stringutils","text":"class StringUtils","title":"StringUtils"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/#functions","text":"Name Summary capitalizeFirst static fun capitalizeFirst(str: String !): String ! firstNonEmpty static fun firstNonEmpty(vararg values: String !): String ! join static fun join(strings: ArrayList < String !>!): String ! Joins the elements of the provided List into a single String containing the provided elements. static fun join(strings: MutableList < String !>!, separator: String !): String ! makeArgsString static fun makeArgsString(argc: Int ): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/capitalize-first/","text":"tripkit-android / com.skedgo.tripkit.common.util / StringUtils / capitalizeFirst capitalizeFirst static fun capitalizeFirst(str: String !): String !","title":"Capitalize first"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/capitalize-first/#capitalizefirst","text":"static fun capitalizeFirst(str: String !): String !","title":"capitalizeFirst"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/first-non-empty/","text":"tripkit-android / com.skedgo.tripkit.common.util / StringUtils / firstNonEmpty firstNonEmpty static fun firstNonEmpty(vararg values: String !): String !","title":"First non empty"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/first-non-empty/#firstnonempty","text":"static fun firstNonEmpty(vararg values: String !): String !","title":"firstNonEmpty"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/join/","text":"tripkit-android / com.skedgo.tripkit.common.util / StringUtils / join join static fun join(strings: ArrayList < String !>!): String !``static fun join(strings: MutableList < String !>!, separator: String !): String ! Joins the elements of the provided List into a single String containing the provided elements. Parameters strings - MutableList < String !>!: The List of values to join together, may be null separator - String !: The separator character to use Return String !: The joined String, empty if null List input","title":"Join"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/join/#join","text":"static fun join(strings: ArrayList < String !>!): String !``static fun join(strings: MutableList < String !>!, separator: String !): String ! Joins the elements of the provided List into a single String containing the provided elements.","title":"join"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/join/#parameters","text":"strings - MutableList < String !>!: The List of values to join together, may be null separator - String !: The separator character to use Return String !: The joined String, empty if null List input","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/make-args-string/","text":"tripkit-android / com.skedgo.tripkit.common.util / StringUtils / makeArgsString makeArgsString static fun makeArgsString(argc: Int ): String !","title":"Make args string"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-string-utils/make-args-string/#makeargsstring","text":"static fun makeArgsString(argc: Int ): String !","title":"makeArgsString"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils TimeUtils open class TimeUtils Types Name Summary Duration According to RFC2445, durations are like this: WEEKS InMillis class InMillis InSeconds class InSeconds Constructors Name Summary <init> TimeUtils() Properties Name Summary WHEN_TELEPORTER_EXISTS static var WHEN_TELEPORTER_EXISTS: Long Functions Name Summary getCurrentJulianDay open static fun getCurrentJulianDay(): Int getCurrentMillis open static fun getCurrentMillis(): Long getDurationInDaysHoursMins The reason to have days is to prepare for interstate trip open static fun getDurationInDaysHoursMins(seconds: Int ): String ! getDurationInHoursMins open static fun getDurationInHoursMins(seconds: Int ): String ! getDurationWithDaysInIt open static fun getDurationWithDaysInIt(seconds: Int ): String ! getJulianDay open static fun getJulianDay(t: Time!): Int open static fun getJulianDay(millis: Long ): Int getLastSecondOfPreviousDayAsTime open static fun getLastSecondOfPreviousDayAsTime(startsSecs: Long , timeZoneString: String !): Time! getMillisFrom open static fun getMillisFrom(am_pm: String !, hour: Int , minute: Int , sec: Int ): Long getTimeInDay * open static fun getTimeInDay(millis: Long ): String ! getTimeZoneDisplayName open static fun getTimeZoneDisplayName(timezoneId: String !, timeInSecs: Long , locale: Locale !): String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/#timeutils","text":"open class TimeUtils","title":"TimeUtils"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/#types","text":"Name Summary Duration According to RFC2445, durations are like this: WEEKS InMillis class InMillis InSeconds class InSeconds","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/#constructors","text":"Name Summary <init> TimeUtils()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/#properties","text":"Name Summary WHEN_TELEPORTER_EXISTS static var WHEN_TELEPORTER_EXISTS: Long","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/#functions","text":"Name Summary getCurrentJulianDay open static fun getCurrentJulianDay(): Int getCurrentMillis open static fun getCurrentMillis(): Long getDurationInDaysHoursMins The reason to have days is to prepare for interstate trip open static fun getDurationInDaysHoursMins(seconds: Int ): String ! getDurationInHoursMins open static fun getDurationInHoursMins(seconds: Int ): String ! getDurationWithDaysInIt open static fun getDurationWithDaysInIt(seconds: Int ): String ! getJulianDay open static fun getJulianDay(t: Time!): Int open static fun getJulianDay(millis: Long ): Int getLastSecondOfPreviousDayAsTime open static fun getLastSecondOfPreviousDayAsTime(startsSecs: Long , timeZoneString: String !): Time! getMillisFrom open static fun getMillisFrom(am_pm: String !, hour: Int , minute: Int , sec: Int ): Long getTimeInDay * open static fun getTimeInDay(millis: Long ): String ! getTimeZoneDisplayName open static fun getTimeZoneDisplayName(timezoneId: String !, timeInSecs: Long , locale: Locale !): String ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / <init> <init> TimeUtils()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-init-/#init","text":"TimeUtils()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-w-h-e-n_-t-e-l-e-p-o-r-t-e-r_-e-x-i-s-t-s/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / WHEN_TELEPORTER_EXISTS WHEN_TELEPORTER_EXISTS static var WHEN_TELEPORTER_EXISTS: Long","title":" w h e n  t e l e p o r t e r  e x i s t s"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-w-h-e-n_-t-e-l-e-p-o-r-t-e-r_-e-x-i-s-t-s/#when_teleporter_exists","text":"static var WHEN_TELEPORTER_EXISTS: Long","title":"WHEN_TELEPORTER_EXISTS"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-current-julian-day/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / getCurrentJulianDay getCurrentJulianDay open static fun getCurrentJulianDay(): Int","title":"Get current julian day"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-current-julian-day/#getcurrentjulianday","text":"open static fun getCurrentJulianDay(): Int","title":"getCurrentJulianDay"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-current-millis/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / getCurrentMillis getCurrentMillis open static fun getCurrentMillis(): Long","title":"Get current millis"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-current-millis/#getcurrentmillis","text":"open static fun getCurrentMillis(): Long","title":"getCurrentMillis"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-duration-in-days-hours-mins/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / getDurationInDaysHoursMins getDurationInDaysHoursMins open static fun getDurationInDaysHoursMins(seconds: Int ): String ! The reason to have days is to prepare for interstate trip Return String !: e.g, 1 day 2 hrs 30 mins","title":"Get duration in days hours mins"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-duration-in-days-hours-mins/#getdurationindayshoursmins","text":"open static fun getDurationInDaysHoursMins(seconds: Int ): String ! The reason to have days is to prepare for interstate trip Return String !: e.g, 1 day 2 hrs 30 mins","title":"getDurationInDaysHoursMins"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-duration-in-hours-mins/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / getDurationInHoursMins getDurationInHoursMins open static fun getDurationInHoursMins(seconds: Int ): String !","title":"Get duration in hours mins"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-duration-in-hours-mins/#getdurationinhoursmins","text":"open static fun getDurationInHoursMins(seconds: Int ): String !","title":"getDurationInHoursMins"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-duration-with-days-in-it/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / getDurationWithDaysInIt getDurationWithDaysInIt open static fun getDurationWithDaysInIt(seconds: Int ): String !","title":"Get duration with days in it"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-duration-with-days-in-it/#getdurationwithdaysinit","text":"open static fun getDurationWithDaysInIt(seconds: Int ): String !","title":"getDurationWithDaysInIt"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-julian-day/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / getJulianDay getJulianDay open static fun getJulianDay(t: Time!): Int open static fun getJulianDay(millis: Long ): Int","title":"Get julian day"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-julian-day/#getjulianday","text":"open static fun getJulianDay(t: Time!): Int open static fun getJulianDay(millis: Long ): Int","title":"getJulianDay"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-last-second-of-previous-day-as-time/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / getLastSecondOfPreviousDayAsTime getLastSecondOfPreviousDayAsTime open static fun getLastSecondOfPreviousDayAsTime(startsSecs: Long , timeZoneString: String !): Time!","title":"Get last second of previous day as time"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-last-second-of-previous-day-as-time/#getlastsecondofpreviousdayastime","text":"open static fun getLastSecondOfPreviousDayAsTime(startsSecs: Long , timeZoneString: String !): Time!","title":"getLastSecondOfPreviousDayAsTime"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-millis-from/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / getMillisFrom getMillisFrom open static fun getMillisFrom(am_pm: String !, hour: Int , minute: Int , sec: Int ): Long","title":"Get millis from"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-millis-from/#getmillisfrom","text":"open static fun getMillisFrom(am_pm: String !, hour: Int , minute: Int , sec: Int ): Long","title":"getMillisFrom"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-time-in-day/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / getTimeInDay getTimeInDay open static fun getTimeInDay(millis: Long ): String ! * Parameters millis - Long : Return String !: time in normal format, e.g, 3:05pm","title":"Get time in day"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-time-in-day/#gettimeinday","text":"open static fun getTimeInDay(millis: Long ): String ! *","title":"getTimeInDay"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-time-in-day/#parameters","text":"millis - Long : Return String !: time in normal format, e.g, 3:05pm","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-time-zone-display-name/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / getTimeZoneDisplayName getTimeZoneDisplayName @Nullable open static fun getTimeZoneDisplayName(timezoneId: String !, timeInSecs: Long , locale: Locale !): String ?","title":"Get time zone display name"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/get-time-zone-display-name/#gettimezonedisplayname","text":"@Nullable open static fun getTimeZoneDisplayName(timezoneId: String !, timeInSecs: Long , locale: Locale !): String ?","title":"getTimeZoneDisplayName"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / Duration Duration open class Duration According to RFC2445, durations are like this: WEEKS | DAYS [ HOURS [ MINUTES [ SECONDS ] ] ] | HOURS [ MINUTES [ SECONDS ] ] it doesn't specifically, say, but this sort of implies that you can't have 70 seconds. Constructors Name Summary <init> Duration() Properties Name Summary days var days: Int hours var hours: Int minutes var minutes: Int seconds var seconds: Int sign var sign: Int weeks var weeks: Int Functions Name Summary getMillis open fun getMillis(): Long parse Parse according to RFC2445 ss4.3.6. (It's actually a little loose with its parsing, for better or for worse) open fun parse(str: String !): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/#duration","text":"open class Duration According to RFC2445, durations are like this: WEEKS | DAYS [ HOURS [ MINUTES [ SECONDS ] ] ] | HOURS [ MINUTES [ SECONDS ] ] it doesn't specifically, say, but this sort of implies that you can't have 70 seconds.","title":"Duration"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/#constructors","text":"Name Summary <init> Duration()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/#properties","text":"Name Summary days var days: Int hours var hours: Int minutes var minutes: Int seconds var seconds: Int sign var sign: Int weeks var weeks: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/#functions","text":"Name Summary getMillis open fun getMillis(): Long parse Parse according to RFC2445 ss4.3.6. (It's actually a little loose with its parsing, for better or for worse) open fun parse(str: String !): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / Duration / <init> <init> Duration()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/-init-/#init","text":"Duration()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/days/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / Duration / days days var days: Int","title":"Days"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/days/#days","text":"var days: Int","title":"days"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/get-millis/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / Duration / getMillis getMillis open fun getMillis(): Long","title":"Get millis"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/get-millis/#getmillis","text":"open fun getMillis(): Long","title":"getMillis"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/hours/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / Duration / hours hours var hours: Int","title":"Hours"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/hours/#hours","text":"var hours: Int","title":"hours"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/minutes/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / Duration / minutes minutes var minutes: Int","title":"Minutes"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/minutes/#minutes","text":"var minutes: Int","title":"minutes"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/parse/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / Duration / parse parse open fun parse(str: String !): Unit Parse according to RFC2445 ss4.3.6. (It's actually a little loose with its parsing, for better or for worse)","title":"Parse"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/parse/#parse","text":"open fun parse(str: String !): Unit Parse according to RFC2445 ss4.3.6. (It's actually a little loose with its parsing, for better or for worse)","title":"parse"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/seconds/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / Duration / seconds seconds var seconds: Int","title":"Seconds"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/seconds/#seconds","text":"var seconds: Int","title":"seconds"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/sign/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / Duration / sign sign var sign: Int","title":"Sign"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/sign/#sign","text":"var sign: Int","title":"sign"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/weeks/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / Duration / weeks weeks var weeks: Int","title":"Weeks"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-duration/weeks/#weeks","text":"var weeks: Int","title":"weeks"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InMillis InMillis class InMillis Constructors Name Summary <init> InMillis() Properties Name Summary DAY static val DAY: Long HOUR static val HOUR: Long MINUTE static val MINUTE: Long MONTH static val MONTH: Long SECOND static val SECOND: Long WEEK static val WEEK: Long YEAR static val YEAR: Long","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/#inmillis","text":"class InMillis","title":"InMillis"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/#constructors","text":"Name Summary <init> InMillis()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/#properties","text":"Name Summary DAY static val DAY: Long HOUR static val HOUR: Long MINUTE static val MINUTE: Long MONTH static val MONTH: Long SECOND static val SECOND: Long WEEK static val WEEK: Long YEAR static val YEAR: Long","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-d-a-y/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InMillis / DAY DAY static val DAY: Long","title":" d a y"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-d-a-y/#day","text":"static val DAY: Long","title":"DAY"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-h-o-u-r/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InMillis / HOUR HOUR static val HOUR: Long","title":" h o u r"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-h-o-u-r/#hour","text":"static val HOUR: Long","title":"HOUR"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InMillis / <init> <init> InMillis()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-init-/#init","text":"InMillis()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-m-i-n-u-t-e/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InMillis / MINUTE MINUTE static val MINUTE: Long","title":" m i n u t e"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-m-i-n-u-t-e/#minute","text":"static val MINUTE: Long","title":"MINUTE"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-m-o-n-t-h/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InMillis / MONTH MONTH static val MONTH: Long","title":" m o n t h"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-m-o-n-t-h/#month","text":"static val MONTH: Long","title":"MONTH"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-s-e-c-o-n-d/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InMillis / SECOND SECOND static val SECOND: Long","title":" s e c o n d"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-s-e-c-o-n-d/#second","text":"static val SECOND: Long","title":"SECOND"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-w-e-e-k/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InMillis / WEEK WEEK static val WEEK: Long","title":" w e e k"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-w-e-e-k/#week","text":"static val WEEK: Long","title":"WEEK"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-y-e-a-r/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InMillis / YEAR YEAR static val YEAR: Long","title":" y e a r"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-millis/-y-e-a-r/#year","text":"static val YEAR: Long","title":"YEAR"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InSeconds InSeconds class InSeconds Constructors Name Summary <init> InSeconds() Properties Name Summary DAY static val DAY: Int HOUR static val HOUR: Int MINUTE static val MINUTE: Int MONTH static val MONTH: Int WEEK static val WEEK: Int YEAR static val YEAR: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/#inseconds","text":"class InSeconds","title":"InSeconds"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/#constructors","text":"Name Summary <init> InSeconds()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/#properties","text":"Name Summary DAY static val DAY: Int HOUR static val HOUR: Int MINUTE static val MINUTE: Int MONTH static val MONTH: Int WEEK static val WEEK: Int YEAR static val YEAR: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-d-a-y/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InSeconds / DAY DAY static val DAY: Int","title":" d a y"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-d-a-y/#day","text":"static val DAY: Int","title":"DAY"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-h-o-u-r/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InSeconds / HOUR HOUR static val HOUR: Int","title":" h o u r"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-h-o-u-r/#hour","text":"static val HOUR: Int","title":"HOUR"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InSeconds / <init> <init> InSeconds()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-init-/#init","text":"InSeconds()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-m-i-n-u-t-e/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InSeconds / MINUTE MINUTE static val MINUTE: Int","title":" m i n u t e"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-m-i-n-u-t-e/#minute","text":"static val MINUTE: Int","title":"MINUTE"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-m-o-n-t-h/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InSeconds / MONTH MONTH static val MONTH: Int","title":" m o n t h"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-m-o-n-t-h/#month","text":"static val MONTH: Int","title":"MONTH"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-w-e-e-k/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InSeconds / WEEK WEEK static val WEEK: Int","title":" w e e k"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-w-e-e-k/#week","text":"static val WEEK: Int","title":"WEEK"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-y-e-a-r/","text":"tripkit-android / com.skedgo.tripkit.common.util / TimeUtils / InSeconds / YEAR YEAR static val YEAR: Int","title":" y e a r"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-time-utils/-in-seconds/-y-e-a-r/#year","text":"static val YEAR: Int","title":"YEAR"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/","text":"tripkit-android / com.skedgo.tripkit.common.util / TransportModeUtils TransportModeUtils class TransportModeUtils Properties Name Summary ICON_URL_TEMPLATE static val ICON_URL_TEMPLATE: String ! Functions Name Summary getDarkIconUrlForModeInfo static fun getDarkIconUrlForModeInfo(resources: Resources, modeInfo: ModeInfo ?): String ? getDarkIconUrlForTransportMode static fun getDarkIconUrlForTransportMode(resources: Resources, mode: TransportMode ?): String ? getDensityDpiName static fun getDensityDpiName(densityDpi: Int ): String getIconUrlForId static fun getIconUrlForId(resources: Resources, iconId: String ?): String ? getIconUrlForModeInfo static fun getIconUrlForModeInfo(resources: Resources, modeInfo: ModeInfo ?): String ? getIconUrlForTransportMode static fun getIconUrlForTransportMode(resources: Resources, mode: TransportMode ?): String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/#transportmodeutils","text":"class TransportModeUtils","title":"TransportModeUtils"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/#properties","text":"Name Summary ICON_URL_TEMPLATE static val ICON_URL_TEMPLATE: String !","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/#functions","text":"Name Summary getDarkIconUrlForModeInfo static fun getDarkIconUrlForModeInfo(resources: Resources, modeInfo: ModeInfo ?): String ? getDarkIconUrlForTransportMode static fun getDarkIconUrlForTransportMode(resources: Resources, mode: TransportMode ?): String ? getDensityDpiName static fun getDensityDpiName(densityDpi: Int ): String getIconUrlForId static fun getIconUrlForId(resources: Resources, iconId: String ?): String ? getIconUrlForModeInfo static fun getIconUrlForModeInfo(resources: Resources, modeInfo: ModeInfo ?): String ? getIconUrlForTransportMode static fun getIconUrlForTransportMode(resources: Resources, mode: TransportMode ?): String ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/-i-c-o-n_-u-r-l_-t-e-m-p-l-a-t-e/","text":"tripkit-android / com.skedgo.tripkit.common.util / TransportModeUtils / ICON_URL_TEMPLATE ICON_URL_TEMPLATE static val ICON_URL_TEMPLATE: String !","title":" i c o n  u r l  t e m p l a t e"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/-i-c-o-n_-u-r-l_-t-e-m-p-l-a-t-e/#icon_url_template","text":"static val ICON_URL_TEMPLATE: String !","title":"ICON_URL_TEMPLATE"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-dark-icon-url-for-mode-info/","text":"tripkit-android / com.skedgo.tripkit.common.util / TransportModeUtils / getDarkIconUrlForModeInfo getDarkIconUrlForModeInfo @Nullable static fun getDarkIconUrlForModeInfo(@NonNull resources: Resources, @Nullable modeInfo: ModeInfo ?): String ?","title":"Get dark icon url for mode info"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-dark-icon-url-for-mode-info/#getdarkiconurlformodeinfo","text":"@Nullable static fun getDarkIconUrlForModeInfo(@NonNull resources: Resources, @Nullable modeInfo: ModeInfo ?): String ?","title":"getDarkIconUrlForModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-dark-icon-url-for-transport-mode/","text":"tripkit-android / com.skedgo.tripkit.common.util / TransportModeUtils / getDarkIconUrlForTransportMode getDarkIconUrlForTransportMode @Nullable static fun getDarkIconUrlForTransportMode(@NonNull resources: Resources, @Nullable mode: TransportMode ?): String ?","title":"Get dark icon url for transport mode"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-dark-icon-url-for-transport-mode/#getdarkiconurlfortransportmode","text":"@Nullable static fun getDarkIconUrlForTransportMode(@NonNull resources: Resources, @Nullable mode: TransportMode ?): String ?","title":"getDarkIconUrlForTransportMode"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-density-dpi-name/","text":"tripkit-android / com.skedgo.tripkit.common.util / TransportModeUtils / getDensityDpiName getDensityDpiName @NonNull static fun getDensityDpiName(densityDpi: Int ): String","title":"Get density dpi name"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-density-dpi-name/#getdensitydpiname","text":"@NonNull static fun getDensityDpiName(densityDpi: Int ): String","title":"getDensityDpiName"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-icon-url-for-id/","text":"tripkit-android / com.skedgo.tripkit.common.util / TransportModeUtils / getIconUrlForId getIconUrlForId @Nullable static fun getIconUrlForId(@NonNull resources: Resources, @Nullable iconId: String ?): String ?","title":"Get icon url for id"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-icon-url-for-id/#geticonurlforid","text":"@Nullable static fun getIconUrlForId(@NonNull resources: Resources, @Nullable iconId: String ?): String ?","title":"getIconUrlForId"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-icon-url-for-mode-info/","text":"tripkit-android / com.skedgo.tripkit.common.util / TransportModeUtils / getIconUrlForModeInfo getIconUrlForModeInfo @Nullable static fun getIconUrlForModeInfo(@NonNull resources: Resources, @Nullable modeInfo: ModeInfo ?): String ?","title":"Get icon url for mode info"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-icon-url-for-mode-info/#geticonurlformodeinfo","text":"@Nullable static fun getIconUrlForModeInfo(@NonNull resources: Resources, @Nullable modeInfo: ModeInfo ?): String ?","title":"getIconUrlForModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-icon-url-for-transport-mode/","text":"tripkit-android / com.skedgo.tripkit.common.util / TransportModeUtils / getIconUrlForTransportMode getIconUrlForTransportMode @Nullable static fun getIconUrlForTransportMode(@NonNull resources: Resources, @Nullable mode: TransportMode ?): String ?","title":"Get icon url for transport mode"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-transport-mode-utils/get-icon-url-for-transport-mode/#geticonurlfortransportmode","text":"@Nullable static fun getIconUrlForTransportMode(@NonNull resources: Resources, @Nullable mode: TransportMode ?): String ?","title":"getIconUrlForTransportMode"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-kit-lat-lng/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripKitLatLng TripKitLatLng data class TripKitLatLng Constructors Name Summary <init> TripKitLatLng(latitude: Double , longitude: Double ) Properties Name Summary latitude val latitude: Double longitude val longitude: Double","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-kit-lat-lng/#tripkitlatlng","text":"data class TripKitLatLng","title":"TripKitLatLng"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-kit-lat-lng/#constructors","text":"Name Summary <init> TripKitLatLng(latitude: Double , longitude: Double )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-kit-lat-lng/#properties","text":"Name Summary latitude val latitude: Double longitude val longitude: Double","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-kit-lat-lng/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripKitLatLng / <init> <init> TripKitLatLng(latitude: Double , longitude: Double )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-kit-lat-lng/-init-/#init","text":"TripKitLatLng(latitude: Double , longitude: Double )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-kit-lat-lng/latitude/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripKitLatLng / latitude latitude val latitude: Double","title":"Latitude"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-kit-lat-lng/latitude/#latitude","text":"val latitude: Double","title":"latitude"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-kit-lat-lng/longitude/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripKitLatLng / longitude longitude val longitude: Double","title":"Longitude"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-kit-lat-lng/longitude/#longitude","text":"val longitude: Double","title":"longitude"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentListResolver TripSegmentListResolver open class TripSegmentListResolver Puts a Departure segment before head of, and puts an Arrival segment after tail of a segment list. Also, fills identifiers for segments. Constructors Name Summary <init> TripSegmentListResolver(resources: Resources!) Functions Name Summary createArrivalSegment Creates the Arrival segment from the last segment open fun createArrivalSegment(lastSegment: TripSegment !): TripSegment ! createDepartureSegment Creates the Departure segment from the first segment open fun createDepartureSegment(firstSegment: TripSegment !): TripSegment ! resolve open fun resolve(): Unit setDestination open fun setDestination(destination: Location !): TripSegmentListResolver ! setOrigin open fun setOrigin(origin: Location !): TripSegmentListResolver ! setTripSegmentList open fun setTripSegmentList(tripSegmentList: MutableList < TripSegment !>!): TripSegmentListResolver !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/#tripsegmentlistresolver","text":"open class TripSegmentListResolver Puts a Departure segment before head of, and puts an Arrival segment after tail of a segment list. Also, fills identifiers for segments.","title":"TripSegmentListResolver"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/#constructors","text":"Name Summary <init> TripSegmentListResolver(resources: Resources!)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/#functions","text":"Name Summary createArrivalSegment Creates the Arrival segment from the last segment open fun createArrivalSegment(lastSegment: TripSegment !): TripSegment ! createDepartureSegment Creates the Departure segment from the first segment open fun createDepartureSegment(firstSegment: TripSegment !): TripSegment ! resolve open fun resolve(): Unit setDestination open fun setDestination(destination: Location !): TripSegmentListResolver ! setOrigin open fun setOrigin(origin: Location !): TripSegmentListResolver ! setTripSegmentList open fun setTripSegmentList(tripSegmentList: MutableList < TripSegment !>!): TripSegmentListResolver !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/-init-/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentListResolver / <init> <init> TripSegmentListResolver(resources: Resources!)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/-init-/#init","text":"TripSegmentListResolver(resources: Resources!)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/create-arrival-segment/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentListResolver / createArrivalSegment createArrivalSegment open fun createArrivalSegment(lastSegment: TripSegment !): TripSegment ! Creates the Arrival segment from the last segment Parameters lastSegment - TripSegment !: The last segment (or tail) of the segment list Return TripSegment !: The Arrival segment","title":"Create arrival segment"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/create-arrival-segment/#createarrivalsegment","text":"open fun createArrivalSegment(lastSegment: TripSegment !): TripSegment ! Creates the Arrival segment from the last segment","title":"createArrivalSegment"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/create-arrival-segment/#parameters","text":"lastSegment - TripSegment !: The last segment (or tail) of the segment list Return TripSegment !: The Arrival segment","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/create-departure-segment/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentListResolver / createDepartureSegment createDepartureSegment open fun createDepartureSegment(firstSegment: TripSegment !): TripSegment ! Creates the Departure segment from the first segment Parameters firstSegment - TripSegment !: The first segment (or head) of the segment list Return TripSegment !: The Departure segment","title":"Create departure segment"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/create-departure-segment/#createdeparturesegment","text":"open fun createDepartureSegment(firstSegment: TripSegment !): TripSegment ! Creates the Departure segment from the first segment","title":"createDepartureSegment"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/create-departure-segment/#parameters","text":"firstSegment - TripSegment !: The first segment (or head) of the segment list Return TripSegment !: The Departure segment","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/resolve/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentListResolver / resolve resolve open fun resolve(): Unit","title":"Resolve"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/resolve/#resolve","text":"open fun resolve(): Unit","title":"resolve"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/set-destination/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentListResolver / setDestination setDestination open fun setDestination(destination: Location !): TripSegmentListResolver ! Parameters destination - Location !: The location that we finally arrive","title":"Set destination"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/set-destination/#setdestination","text":"open fun setDestination(destination: Location !): TripSegmentListResolver !","title":"setDestination"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/set-destination/#parameters","text":"destination - Location !: The location that we finally arrive","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/set-origin/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentListResolver / setOrigin setOrigin open fun setOrigin(origin: Location !): TripSegmentListResolver ! Parameters origin - Location !: The location that we depart","title":"Set origin"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/set-origin/#setorigin","text":"open fun setOrigin(origin: Location !): TripSegmentListResolver !","title":"setOrigin"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/set-origin/#parameters","text":"origin - Location !: The location that we depart","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/set-trip-segment-list/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentListResolver / setTripSegmentList setTripSegmentList open fun setTripSegmentList(tripSegmentList: MutableList < TripSegment !>!): TripSegmentListResolver !","title":"Set trip segment list"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-list-resolver/set-trip-segment-list/#settripsegmentlist","text":"open fun setTripSegmentList(tripSegmentList: MutableList < TripSegment !>!): TripSegmentListResolver !","title":"setTripSegmentList"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentUtils TripSegmentUtils class TripSegmentUtils Functions Name Summary getDurationFromMinutes static fun getDurationFromMinutes(minutes: Long ): String ! getFirstNonNullLocation TODO Should move this method into so-called 'LocationUtils' static fun getFirstNonNullLocation(vararg locations: Location !): Location ! getLocationName TODO Should move this method into so-called 'LocationUtils' static fun getLocationName(location: Location !): String ! getTripSegmentAction static fun getTripSegmentAction(context: Context!, segment: TripSegment !): String ? processDurationTemplate static fun processDurationTemplate(templateText: String ?, pattern: String ?, startTimeInSecs: Long , endTimeInSecs: Long ): String ? processTimeTemplate static fun processTimeTemplate(context: Context!, templateText: String !, timezone: String !, timeInMillis: Long ): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/#tripsegmentutils","text":"class TripSegmentUtils","title":"TripSegmentUtils"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/#functions","text":"Name Summary getDurationFromMinutes static fun getDurationFromMinutes(minutes: Long ): String ! getFirstNonNullLocation TODO Should move this method into so-called 'LocationUtils' static fun getFirstNonNullLocation(vararg locations: Location !): Location ! getLocationName TODO Should move this method into so-called 'LocationUtils' static fun getLocationName(location: Location !): String ! getTripSegmentAction static fun getTripSegmentAction(context: Context!, segment: TripSegment !): String ? processDurationTemplate static fun processDurationTemplate(templateText: String ?, pattern: String ?, startTimeInSecs: Long , endTimeInSecs: Long ): String ? processTimeTemplate static fun processTimeTemplate(context: Context!, templateText: String !, timezone: String !, timeInMillis: Long ): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/get-duration-from-minutes/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentUtils / getDurationFromMinutes getDurationFromMinutes static fun getDurationFromMinutes(minutes: Long ): String ! Parameters minutes - Long : number of seconds to format Return String !: A string formatted representation of the input See Also <a","title":"Get duration from minutes"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/get-duration-from-minutes/#getdurationfromminutes","text":"static fun getDurationFromMinutes(minutes: Long ): String !","title":"getDurationFromMinutes"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/get-duration-from-minutes/#parameters","text":"minutes - Long : number of seconds to format Return String !: A string formatted representation of the input See Also <a","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/get-first-non-null-location/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentUtils / getFirstNonNullLocation getFirstNonNullLocation static fun getFirstNonNullLocation(vararg locations: Location !): Location ! TODO Should move this method into so-called 'LocationUtils'","title":"Get first non null location"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/get-first-non-null-location/#getfirstnonnulllocation","text":"static fun getFirstNonNullLocation(vararg locations: Location !): Location ! TODO Should move this method into so-called 'LocationUtils'","title":"getFirstNonNullLocation"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/get-location-name/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentUtils / getLocationName getLocationName static fun getLocationName(location: Location !): String ! TODO Should move this method into so-called 'LocationUtils'","title":"Get location name"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/get-location-name/#getlocationname","text":"static fun getLocationName(location: Location !): String ! TODO Should move this method into so-called 'LocationUtils'","title":"getLocationName"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/get-trip-segment-action/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentUtils / getTripSegmentAction getTripSegmentAction @Nullable static fun getTripSegmentAction(context: Context!, segment: TripSegment !): String ?","title":"Get trip segment action"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/get-trip-segment-action/#gettripsegmentaction","text":"@Nullable static fun getTripSegmentAction(context: Context!, segment: TripSegment !): String ?","title":"getTripSegmentAction"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/process-duration-template/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentUtils / processDurationTemplate processDurationTemplate @Nullable static fun processDurationTemplate(@Nullable templateText: String ?, @Nullable pattern: String ?, startTimeInSecs: Long , endTimeInSecs: Long ): String ?","title":"Process duration template"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/process-duration-template/#processdurationtemplate","text":"@Nullable static fun processDurationTemplate(@Nullable templateText: String ?, @Nullable pattern: String ?, startTimeInSecs: Long , endTimeInSecs: Long ): String ?","title":"processDurationTemplate"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/process-time-template/","text":"tripkit-android / com.skedgo.tripkit.common.util / TripSegmentUtils / processTimeTemplate processTimeTemplate static fun processTimeTemplate(context: Context!, templateText: String !, timezone: String !, timeInMillis: Long ): String !","title":"Process time template"},{"location":"tripkit-android/com.skedgo.tripkit.common.util/-trip-segment-utils/process-time-template/#processtimetemplate","text":"static fun processTimeTemplate(context: Context!, templateText: String !, timezone: String !, timeInMillis: Long ): String !","title":"processTimeTemplate"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/","text":"tripkit-android / com.skedgo.tripkit.configuration Package com.skedgo.tripkit.configuration Types Name Summary AppVersionNameRepository interface AppVersionNameRepository GetAppVersion open class GetAppVersion Key sealed class Key Server enum class Server","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/#package-comskedgotripkitconfiguration","text":"","title":"Package com.skedgo.tripkit.configuration"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/#types","text":"Name Summary AppVersionNameRepository interface AppVersionNameRepository GetAppVersion open class GetAppVersion Key sealed class Key Server enum class Server","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-app-version-name-repository/","text":"tripkit-android / com.skedgo.tripkit.configuration / AppVersionNameRepository AppVersionNameRepository interface AppVersionNameRepository Functions Name Summary getAppVersionName abstract fun getAppVersionName(): Observable< String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-app-version-name-repository/#appversionnamerepository","text":"interface AppVersionNameRepository","title":"AppVersionNameRepository"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-app-version-name-repository/#functions","text":"Name Summary getAppVersionName abstract fun getAppVersionName(): Observable< String >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-app-version-name-repository/get-app-version-name/","text":"tripkit-android / com.skedgo.tripkit.configuration / AppVersionNameRepository / getAppVersionName getAppVersionName abstract fun getAppVersionName(): Observable< String >","title":"Get app version name"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-app-version-name-repository/get-app-version-name/#getappversionname","text":"abstract fun getAppVersionName(): Observable< String >","title":"getAppVersionName"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-get-app-version/","text":"tripkit-android / com.skedgo.tripkit.configuration / GetAppVersion GetAppVersion open class GetAppVersion Constructors Name Summary <init> GetAppVersion(appVersionNameRepository: AppVersionNameRepository ) Functions Name Summary execute open fun execute(): Observable< String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-get-app-version/#getappversion","text":"open class GetAppVersion","title":"GetAppVersion"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-get-app-version/#constructors","text":"Name Summary <init> GetAppVersion(appVersionNameRepository: AppVersionNameRepository )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-get-app-version/#functions","text":"Name Summary execute open fun execute(): Observable< String >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-get-app-version/-init-/","text":"tripkit-android / com.skedgo.tripkit.configuration / GetAppVersion / <init> <init> GetAppVersion(appVersionNameRepository: AppVersionNameRepository )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-get-app-version/-init-/#init","text":"GetAppVersion(appVersionNameRepository: AppVersionNameRepository )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-get-app-version/execute/","text":"tripkit-android / com.skedgo.tripkit.configuration / GetAppVersion / execute execute open fun execute(): Observable< String >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-get-app-version/execute/#execute","text":"open fun execute(): Observable< String >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-key/","text":"tripkit-android / com.skedgo.tripkit.configuration / Key Key sealed class Key Types Name Summary ApiKey An API key is necessary to use TripKit's services, such as A-2-B routing, and all-day routing. In order to obtain an API key, you can sign up here . data class ApiKey : Key","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-key/#key","text":"sealed class Key","title":"Key"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-key/#types","text":"Name Summary ApiKey An API key is necessary to use TripKit's services, such as A-2-B routing, and all-day routing. In order to obtain an API key, you can sign up here . data class ApiKey : Key","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-key/-api-key/","text":"tripkit-android / com.skedgo.tripkit.configuration / Key / ApiKey ApiKey data class ApiKey : Key An API key is necessary to use TripKit's services, such as A-2-B routing, and all-day routing. In order to obtain an API key, you can sign up here . Constructors Name Summary <init> An API key is necessary to use TripKit's services, such as A-2-B routing, and all-day routing. In order to obtain an API key, you can sign up here . ApiKey(value: String ) Properties Name Summary value val value: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-key/-api-key/#apikey","text":"data class ApiKey : Key An API key is necessary to use TripKit's services, such as A-2-B routing, and all-day routing. In order to obtain an API key, you can sign up here .","title":"ApiKey"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-key/-api-key/#constructors","text":"Name Summary <init> An API key is necessary to use TripKit's services, such as A-2-B routing, and all-day routing. In order to obtain an API key, you can sign up here . ApiKey(value: String )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-key/-api-key/#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-key/-api-key/-init-/","text":"tripkit-android / com.skedgo.tripkit.configuration / Key / ApiKey / <init> <init> ApiKey(value: String ) An API key is necessary to use TripKit's services, such as A-2-B routing, and all-day routing. In order to obtain an API key, you can sign up here .","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-key/-api-key/-init-/#init","text":"ApiKey(value: String ) An API key is necessary to use TripKit's services, such as A-2-B routing, and all-day routing. In order to obtain an API key, you can sign up here .","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-key/-api-key/value/","text":"tripkit-android / com.skedgo.tripkit.configuration / Key / ApiKey / value value val value: String","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-key/-api-key/value/#value","text":"val value: String","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-server/","text":"tripkit-android / com.skedgo.tripkit.configuration / Server Server enum class Server Enum Values Name Summary ApiTripGo BigBang Properties Name Summary value val value: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-server/#server","text":"enum class Server","title":"Server"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-server/#enum-values","text":"Name Summary ApiTripGo BigBang","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-server/#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-server/-api-trip-go/","text":"tripkit-android / com.skedgo.tripkit.configuration / Server / ApiTripGo ApiTripGo ApiTripGo","title":" api trip go"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-server/-api-trip-go/#apitripgo","text":"ApiTripGo","title":"ApiTripGo"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-server/-big-bang/","text":"tripkit-android / com.skedgo.tripkit.configuration / Server / BigBang BigBang BigBang","title":" big bang"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-server/-big-bang/#bigbang","text":"BigBang","title":"BigBang"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-server/value/","text":"tripkit-android / com.skedgo.tripkit.configuration / Server / value value val value: String","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.configuration/-server/value/#value","text":"val value: String","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/","text":"tripkit-android / com.skedgo.tripkit.data.connectivity Package com.skedgo.tripkit.data.connectivity Types Name Summary ConnectivityService interface ConnectivityService ConnectivityServiceImpl class ConnectivityServiceImpl : ConnectivityService","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/#package-comskedgotripkitdataconnectivity","text":"","title":"Package com.skedgo.tripkit.data.connectivity"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/#types","text":"Name Summary ConnectivityService interface ConnectivityService ConnectivityServiceImpl class ConnectivityServiceImpl : ConnectivityService","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service/","text":"tripkit-android / com.skedgo.tripkit.data.connectivity / ConnectivityService ConnectivityService interface ConnectivityService Properties Name Summary isNetworkConnected abstract val isNetworkConnected: Boolean Inheritors Name Summary ConnectivityServiceImpl class ConnectivityServiceImpl : ConnectivityService","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service/#connectivityservice","text":"interface ConnectivityService","title":"ConnectivityService"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service/#properties","text":"Name Summary isNetworkConnected abstract val isNetworkConnected: Boolean","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service/#inheritors","text":"Name Summary ConnectivityServiceImpl class ConnectivityServiceImpl : ConnectivityService","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service/is-network-connected/","text":"tripkit-android / com.skedgo.tripkit.data.connectivity / ConnectivityService / isNetworkConnected isNetworkConnected abstract val isNetworkConnected: Boolean","title":"Is network connected"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service/is-network-connected/#isnetworkconnected","text":"abstract val isNetworkConnected: Boolean","title":"isNetworkConnected"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service-impl/","text":"tripkit-android / com.skedgo.tripkit.data.connectivity / ConnectivityServiceImpl ConnectivityServiceImpl class ConnectivityServiceImpl : ConnectivityService Constructors Name Summary <init> ConnectivityServiceImpl(context: Context) Properties Name Summary context val context: Context isNetworkConnected val isNetworkConnected: Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service-impl/#connectivityserviceimpl","text":"class ConnectivityServiceImpl : ConnectivityService","title":"ConnectivityServiceImpl"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service-impl/#constructors","text":"Name Summary <init> ConnectivityServiceImpl(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service-impl/#properties","text":"Name Summary context val context: Context isNetworkConnected val isNetworkConnected: Boolean","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service-impl/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.connectivity / ConnectivityServiceImpl / <init> <init> ConnectivityServiceImpl(context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service-impl/-init-/#init","text":"ConnectivityServiceImpl(context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service-impl/context/","text":"tripkit-android / com.skedgo.tripkit.data.connectivity / ConnectivityServiceImpl / context context val context: Context","title":"Context"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service-impl/context/#context","text":"val context: Context","title":"context"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service-impl/is-network-connected/","text":"tripkit-android / com.skedgo.tripkit.data.connectivity / ConnectivityServiceImpl / isNetworkConnected isNetworkConnected val isNetworkConnected: Boolean","title":"Is network connected"},{"location":"tripkit-android/com.skedgo.tripkit.data.connectivity/-connectivity-service-impl/is-network-connected/#isnetworkconnected","text":"val isNetworkConnected: Boolean","title":"isNetworkConnected"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/","text":"tripkit-android / com.skedgo.tripkit.data.database Package com.skedgo.tripkit.data.database Types Name Summary DatabaseMigrator open class DatabaseMigrator DbFields class DbFields DbHelper class DbHelper : SQLiteOpenHelper DbTables class DbTables TripKitDatabase abstract class TripKitDatabase : RoomDatabase","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/#package-comskedgotripkitdatadatabase","text":"","title":"Package com.skedgo.tripkit.data.database"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/#types","text":"Name Summary DatabaseMigrator open class DatabaseMigrator DbFields class DbFields DbHelper class DbHelper : SQLiteOpenHelper DbTables class DbTables TripKitDatabase abstract class TripKitDatabase : RoomDatabase","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-database-migrator/","text":"tripkit-android / com.skedgo.tripkit.data.database / DatabaseMigrator DatabaseMigrator open class DatabaseMigrator Constructors Name Summary <init> DatabaseMigrator(database: TripKitDatabase !) Functions Name Summary onUpgrade open fun onUpgrade(database: SQLiteDatabase!, oldVersion: Int , newVersion: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-database-migrator/#databasemigrator","text":"open class DatabaseMigrator","title":"DatabaseMigrator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-database-migrator/#constructors","text":"Name Summary <init> DatabaseMigrator(database: TripKitDatabase !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-database-migrator/#functions","text":"Name Summary onUpgrade open fun onUpgrade(database: SQLiteDatabase!, oldVersion: Int , newVersion: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-database-migrator/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database / DatabaseMigrator / <init> <init> DatabaseMigrator(database: TripKitDatabase !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-database-migrator/-init-/#init","text":"DatabaseMigrator(database: TripKitDatabase !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-database-migrator/on-upgrade/","text":"tripkit-android / com.skedgo.tripkit.data.database / DatabaseMigrator / onUpgrade onUpgrade open fun onUpgrade(database: SQLiteDatabase!, oldVersion: Int , newVersion: Int ): Unit","title":"On upgrade"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-database-migrator/on-upgrade/#onupgrade","text":"open fun onUpgrade(database: SQLiteDatabase!, oldVersion: Int , newVersion: Int ): Unit","title":"onUpgrade"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields DbFields class DbFields Properties Name Summary ADDRESS static val ADDRESS: DatabaseField! ARRIVAL_TIME static val ARRIVAL_TIME: DatabaseField! ARRIVAL_TIME_AT_END static val ARRIVAL_TIME_AT_END: DatabaseField! ARRIVAL_TIME_AT_START static val ARRIVAL_TIME_AT_START: DatabaseField! AUTO_ID static val AUTO_ID: DatabaseField! AVERAGE_RATING static val AVERAGE_RATING: DatabaseField! BEARING static val BEARING: DatabaseField! CELL_CODE static val CELL_CODE: DatabaseField! CODE static val CODE: DatabaseField! DEPARTURE_TIME static val DEPARTURE_TIME: DatabaseField! DISPLAY_TRIP_ID static val DISPLAY_TRIP_ID: DatabaseField! DOWNLOAD_TIME static val DOWNLOAD_TIME: DatabaseField! END_STOP_CODE static val END_STOP_CODE: DatabaseField! END_TIME static val END_TIME: DatabaseField! EXACT static val EXACT: DatabaseField! FAVOURITE static val FAVOURITE: DatabaseField! FAVOURITE_SORT_ORDER_POSITION static val FAVOURITE_SORT_ORDER_POSITION: DatabaseField! FILTER static val FILTER: DatabaseField! FREQUENCY static val FREQUENCY: DatabaseField! HAS_ALERTS static val HAS_ALERTS: DatabaseField! HAS_BICYCLE static val HAS_BICYCLE: DatabaseField! HAS_CAR static val HAS_CAR: DatabaseField! HAS_MOTORBIKE static val HAS_MOTORBIKE: DatabaseField! HAS_MULTIPLE_TRIPS static val HAS_MULTIPLE_TRIPS: DatabaseField! HAS_PUB_TRANS static val HAS_PUB_TRANS: DatabaseField! HAS_SERVICE_STOPS static val HAS_SERVICE_STOPS: DatabaseField! HAS_SHUTTLE static val HAS_SHUTTLE: DatabaseField! HAS_TAXI static val HAS_TAXI: DatabaseField! HASH_CODE static val HASH_CODE: DatabaseField! HASH_CODE_2 static val HASH_CODE_2: DatabaseField! ID static val ID: DatabaseField! IS_DYNAMIC static val IS_DYNAMIC: DatabaseField! IS_PARENT static val IS_PARENT: DatabaseField! LABEL static val LABEL: DatabaseField! LAST_UPDATE_TIME static val LAST_UPDATE_TIME: DatabaseField! LAT static val LAT: DatabaseField! LOCATION_CLASS static val LOCATION_CLASS: DatabaseField! LOCATION_ID static val LOCATION_ID: DatabaseField! LOCATION_TYPE static val LOCATION_TYPE: DatabaseField! LON static val LON: DatabaseField! MODE static val MODE: DatabaseField! MODE_INFO static val MODE_INFO: DatabaseField! NAME static val NAME: DatabaseField! OCCUPANCY static val OCCUPANCY: DatabaseField! PAIR_IDENTIFIER static val PAIR_IDENTIFIER: DatabaseField! PARENT_ID static val PARENT_ID: DatabaseField! PHONE_NUMBER static val PHONE_NUMBER: DatabaseField! POPULARITY static val POPULARITY: DatabaseField! RATING_COUNT static val RATING_COUNT: DatabaseField! RATING_IMAGE_URL static val RATING_IMAGE_URL: DatabaseField! REAL_TIME_STATUS static val REAL_TIME_STATUS: DatabaseField! SCHEDULED_SERVICE_ID static val SCHEDULED_SERVICE_ID: DatabaseField! SCHEDULED_STOP_CODE static val SCHEDULED_STOP_CODE: DatabaseField! SEARCH_STRING static val SEARCH_STRING: DatabaseField! SEGMENT_ID static val SEGMENT_ID: DatabaseField! SERVICE_COLOR static val SERVICE_COLOR: DatabaseField! SERVICE_COLOR_BLUE static val SERVICE_COLOR_BLUE: DatabaseField! SERVICE_COLOR_GREEN static val SERVICE_COLOR_GREEN: DatabaseField! SERVICE_COLOR_RED static val SERVICE_COLOR_RED: DatabaseField! SERVICE_DIRECTION static val SERVICE_DIRECTION: DatabaseField! SERVICE_NAME static val SERVICE_NAME: DatabaseField! SERVICE_NUMBER static val SERVICE_NUMBER: DatabaseField! SERVICE_OPERATOR static val SERVICE_OPERATOR: DatabaseField! SERVICE_SHAPE_ID static val SERVICE_SHAPE_ID: DatabaseField! SERVICE_STOP_ID static val SERVICE_STOP_ID: DatabaseField! SERVICE_TIME static val SERVICE_TIME: DatabaseField! SERVICE_TRIP_ID static val SERVICE_TRIP_ID: DatabaseField! SERVICES static val SERVICES: DatabaseField! SHORT_NAME static val SHORT_NAME: DatabaseField! SOURCE static val SOURCE: DatabaseField! START_STOP_SHORT_NAME static val START_STOP_SHORT_NAME: DatabaseField! START_TIME static val START_TIME: DatabaseField! STOP_CODE static val STOP_CODE: DatabaseField! STOP_TYPE static val STOP_TYPE: DatabaseField! TEXT static val TEXT: DatabaseField! TIMEZONE static val TIMEZONE: DatabaseField! TITLE static val TITLE: DatabaseField! TRAVELLED static val TRAVELLED: DatabaseField! TRIP_SEGMENT_ID static val TRIP_SEGMENT_ID: DatabaseField! URL static val URL: DatabaseField! W3W static val W3W: DatabaseField! W3W_INFO_URL static val W3W_INFO_URL: DatabaseField! WAYPOINT_ENCODING static val WAYPOINT_ENCODING: DatabaseField! WHEELCHAIR_ACCESSIBLE static val WHEELCHAIR_ACCESSIBLE: DatabaseField!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/#dbfields","text":"class DbFields","title":"DbFields"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/#properties","text":"Name Summary ADDRESS static val ADDRESS: DatabaseField! ARRIVAL_TIME static val ARRIVAL_TIME: DatabaseField! ARRIVAL_TIME_AT_END static val ARRIVAL_TIME_AT_END: DatabaseField! ARRIVAL_TIME_AT_START static val ARRIVAL_TIME_AT_START: DatabaseField! AUTO_ID static val AUTO_ID: DatabaseField! AVERAGE_RATING static val AVERAGE_RATING: DatabaseField! BEARING static val BEARING: DatabaseField! CELL_CODE static val CELL_CODE: DatabaseField! CODE static val CODE: DatabaseField! DEPARTURE_TIME static val DEPARTURE_TIME: DatabaseField! DISPLAY_TRIP_ID static val DISPLAY_TRIP_ID: DatabaseField! DOWNLOAD_TIME static val DOWNLOAD_TIME: DatabaseField! END_STOP_CODE static val END_STOP_CODE: DatabaseField! END_TIME static val END_TIME: DatabaseField! EXACT static val EXACT: DatabaseField! FAVOURITE static val FAVOURITE: DatabaseField! FAVOURITE_SORT_ORDER_POSITION static val FAVOURITE_SORT_ORDER_POSITION: DatabaseField! FILTER static val FILTER: DatabaseField! FREQUENCY static val FREQUENCY: DatabaseField! HAS_ALERTS static val HAS_ALERTS: DatabaseField! HAS_BICYCLE static val HAS_BICYCLE: DatabaseField! HAS_CAR static val HAS_CAR: DatabaseField! HAS_MOTORBIKE static val HAS_MOTORBIKE: DatabaseField! HAS_MULTIPLE_TRIPS static val HAS_MULTIPLE_TRIPS: DatabaseField! HAS_PUB_TRANS static val HAS_PUB_TRANS: DatabaseField! HAS_SERVICE_STOPS static val HAS_SERVICE_STOPS: DatabaseField! HAS_SHUTTLE static val HAS_SHUTTLE: DatabaseField! HAS_TAXI static val HAS_TAXI: DatabaseField! HASH_CODE static val HASH_CODE: DatabaseField! HASH_CODE_2 static val HASH_CODE_2: DatabaseField! ID static val ID: DatabaseField! IS_DYNAMIC static val IS_DYNAMIC: DatabaseField! IS_PARENT static val IS_PARENT: DatabaseField! LABEL static val LABEL: DatabaseField! LAST_UPDATE_TIME static val LAST_UPDATE_TIME: DatabaseField! LAT static val LAT: DatabaseField! LOCATION_CLASS static val LOCATION_CLASS: DatabaseField! LOCATION_ID static val LOCATION_ID: DatabaseField! LOCATION_TYPE static val LOCATION_TYPE: DatabaseField! LON static val LON: DatabaseField! MODE static val MODE: DatabaseField! MODE_INFO static val MODE_INFO: DatabaseField! NAME static val NAME: DatabaseField! OCCUPANCY static val OCCUPANCY: DatabaseField! PAIR_IDENTIFIER static val PAIR_IDENTIFIER: DatabaseField! PARENT_ID static val PARENT_ID: DatabaseField! PHONE_NUMBER static val PHONE_NUMBER: DatabaseField! POPULARITY static val POPULARITY: DatabaseField! RATING_COUNT static val RATING_COUNT: DatabaseField! RATING_IMAGE_URL static val RATING_IMAGE_URL: DatabaseField! REAL_TIME_STATUS static val REAL_TIME_STATUS: DatabaseField! SCHEDULED_SERVICE_ID static val SCHEDULED_SERVICE_ID: DatabaseField! SCHEDULED_STOP_CODE static val SCHEDULED_STOP_CODE: DatabaseField! SEARCH_STRING static val SEARCH_STRING: DatabaseField! SEGMENT_ID static val SEGMENT_ID: DatabaseField! SERVICE_COLOR static val SERVICE_COLOR: DatabaseField! SERVICE_COLOR_BLUE static val SERVICE_COLOR_BLUE: DatabaseField! SERVICE_COLOR_GREEN static val SERVICE_COLOR_GREEN: DatabaseField! SERVICE_COLOR_RED static val SERVICE_COLOR_RED: DatabaseField! SERVICE_DIRECTION static val SERVICE_DIRECTION: DatabaseField! SERVICE_NAME static val SERVICE_NAME: DatabaseField! SERVICE_NUMBER static val SERVICE_NUMBER: DatabaseField! SERVICE_OPERATOR static val SERVICE_OPERATOR: DatabaseField! SERVICE_SHAPE_ID static val SERVICE_SHAPE_ID: DatabaseField! SERVICE_STOP_ID static val SERVICE_STOP_ID: DatabaseField! SERVICE_TIME static val SERVICE_TIME: DatabaseField! SERVICE_TRIP_ID static val SERVICE_TRIP_ID: DatabaseField! SERVICES static val SERVICES: DatabaseField! SHORT_NAME static val SHORT_NAME: DatabaseField! SOURCE static val SOURCE: DatabaseField! START_STOP_SHORT_NAME static val START_STOP_SHORT_NAME: DatabaseField! START_TIME static val START_TIME: DatabaseField! STOP_CODE static val STOP_CODE: DatabaseField! STOP_TYPE static val STOP_TYPE: DatabaseField! TEXT static val TEXT: DatabaseField! TIMEZONE static val TIMEZONE: DatabaseField! TITLE static val TITLE: DatabaseField! TRAVELLED static val TRAVELLED: DatabaseField! TRIP_SEGMENT_ID static val TRIP_SEGMENT_ID: DatabaseField! URL static val URL: DatabaseField! W3W static val W3W: DatabaseField! W3W_INFO_URL static val W3W_INFO_URL: DatabaseField! WAYPOINT_ENCODING static val WAYPOINT_ENCODING: DatabaseField! WHEELCHAIR_ACCESSIBLE static val WHEELCHAIR_ACCESSIBLE: DatabaseField!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-d-d-r-e-s-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / ADDRESS ADDRESS static val ADDRESS: DatabaseField!","title":" a d d r e s s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-d-d-r-e-s-s/#address","text":"static val ADDRESS: DatabaseField!","title":"ADDRESS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-r-r-i-v-a-l_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / ARRIVAL_TIME ARRIVAL_TIME static val ARRIVAL_TIME: DatabaseField!","title":" a r r i v a l  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-r-r-i-v-a-l_-t-i-m-e/#arrival_time","text":"static val ARRIVAL_TIME: DatabaseField!","title":"ARRIVAL_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-r-r-i-v-a-l_-t-i-m-e_-a-t_-e-n-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / ARRIVAL_TIME_AT_END ARRIVAL_TIME_AT_END static val ARRIVAL_TIME_AT_END: DatabaseField!","title":" a r r i v a l  t i m e  a t  e n d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-r-r-i-v-a-l_-t-i-m-e_-a-t_-e-n-d/#arrival_time_at_end","text":"static val ARRIVAL_TIME_AT_END: DatabaseField!","title":"ARRIVAL_TIME_AT_END"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-r-r-i-v-a-l_-t-i-m-e_-a-t_-s-t-a-r-t/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / ARRIVAL_TIME_AT_START ARRIVAL_TIME_AT_START static val ARRIVAL_TIME_AT_START: DatabaseField!","title":" a r r i v a l  t i m e  a t  s t a r t"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-r-r-i-v-a-l_-t-i-m-e_-a-t_-s-t-a-r-t/#arrival_time_at_start","text":"static val ARRIVAL_TIME_AT_START: DatabaseField!","title":"ARRIVAL_TIME_AT_START"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-u-t-o_-i-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / AUTO_ID AUTO_ID static val AUTO_ID: DatabaseField! See Also <a href=\" http://www.tutorialspoint.com/sqlite/sqlite_using_autoincrement.htm\">What is it?</a>","title":" a u t o  i d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-u-t-o_-i-d/#auto_id","text":"static val AUTO_ID: DatabaseField! See Also <a href=\" http://www.tutorialspoint.com/sqlite/sqlite_using_autoincrement.htm\">What is it?</a>","title":"AUTO_ID"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-v-e-r-a-g-e_-r-a-t-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / AVERAGE_RATING AVERAGE_RATING static val AVERAGE_RATING: DatabaseField!","title":" a v e r a g e  r a t i n g"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-a-v-e-r-a-g-e_-r-a-t-i-n-g/#average_rating","text":"static val AVERAGE_RATING: DatabaseField!","title":"AVERAGE_RATING"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-b-e-a-r-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / BEARING BEARING static val BEARING: DatabaseField!","title":" b e a r i n g"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-b-e-a-r-i-n-g/#bearing","text":"static val BEARING: DatabaseField!","title":"BEARING"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-c-e-l-l_-c-o-d-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / CELL_CODE CELL_CODE static val CELL_CODE: DatabaseField!","title":" c e l l  c o d e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-c-e-l-l_-c-o-d-e/#cell_code","text":"static val CELL_CODE: DatabaseField!","title":"CELL_CODE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-c-o-d-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / CODE CODE static val CODE: DatabaseField!","title":" c o d e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-c-o-d-e/#code","text":"static val CODE: DatabaseField!","title":"CODE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-d-e-p-a-r-t-u-r-e_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / DEPARTURE_TIME DEPARTURE_TIME static val DEPARTURE_TIME: DatabaseField!","title":" d e p a r t u r e  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-d-e-p-a-r-t-u-r-e_-t-i-m-e/#departure_time","text":"static val DEPARTURE_TIME: DatabaseField!","title":"DEPARTURE_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-d-i-s-p-l-a-y_-t-r-i-p_-i-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / DISPLAY_TRIP_ID DISPLAY_TRIP_ID static val DISPLAY_TRIP_ID: DatabaseField!","title":" d i s p l a y  t r i p  i d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-d-i-s-p-l-a-y_-t-r-i-p_-i-d/#display_trip_id","text":"static val DISPLAY_TRIP_ID: DatabaseField!","title":"DISPLAY_TRIP_ID"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-d-o-w-n-l-o-a-d_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / DOWNLOAD_TIME DOWNLOAD_TIME static val DOWNLOAD_TIME: DatabaseField!","title":" d o w n l o a d  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-d-o-w-n-l-o-a-d_-t-i-m-e/#download_time","text":"static val DOWNLOAD_TIME: DatabaseField!","title":"DOWNLOAD_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-e-n-d_-s-t-o-p_-c-o-d-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / END_STOP_CODE END_STOP_CODE static val END_STOP_CODE: DatabaseField!","title":" e n d  s t o p  c o d e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-e-n-d_-s-t-o-p_-c-o-d-e/#end_stop_code","text":"static val END_STOP_CODE: DatabaseField!","title":"END_STOP_CODE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-e-n-d_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / END_TIME END_TIME static val END_TIME: DatabaseField!","title":" e n d  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-e-n-d_-t-i-m-e/#end_time","text":"static val END_TIME: DatabaseField!","title":"END_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-e-x-a-c-t/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / EXACT EXACT static val EXACT: DatabaseField!","title":" e x a c t"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-e-x-a-c-t/#exact","text":"static val EXACT: DatabaseField!","title":"EXACT"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-f-a-v-o-u-r-i-t-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / FAVOURITE FAVOURITE static val FAVOURITE: DatabaseField!","title":" f a v o u r i t e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-f-a-v-o-u-r-i-t-e/#favourite","text":"static val FAVOURITE: DatabaseField!","title":"FAVOURITE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-f-a-v-o-u-r-i-t-e_-s-o-r-t_-o-r-d-e-r_-p-o-s-i-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / FAVOURITE_SORT_ORDER_POSITION FAVOURITE_SORT_ORDER_POSITION static val FAVOURITE_SORT_ORDER_POSITION: DatabaseField!","title":" f a v o u r i t e  s o r t  o r d e r  p o s i t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-f-a-v-o-u-r-i-t-e_-s-o-r-t_-o-r-d-e-r_-p-o-s-i-t-i-o-n/#favourite_sort_order_position","text":"static val FAVOURITE_SORT_ORDER_POSITION: DatabaseField!","title":"FAVOURITE_SORT_ORDER_POSITION"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-f-i-l-t-e-r/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / FILTER FILTER static val FILTER: DatabaseField!","title":" f i l t e r"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-f-i-l-t-e-r/#filter","text":"static val FILTER: DatabaseField!","title":"FILTER"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-f-r-e-q-u-e-n-c-y/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / FREQUENCY FREQUENCY static val FREQUENCY: DatabaseField!","title":" f r e q u e n c y"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-f-r-e-q-u-e-n-c-y/#frequency","text":"static val FREQUENCY: DatabaseField!","title":"FREQUENCY"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s-h_-c-o-d-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / HASH_CODE HASH_CODE static val HASH_CODE: DatabaseField!","title":" h a s h  c o d e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s-h_-c-o-d-e/#hash_code","text":"static val HASH_CODE: DatabaseField!","title":"HASH_CODE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s-h_-c-o-d-e_2/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / HASH_CODE_2 HASH_CODE_2 static val HASH_CODE_2: DatabaseField!","title":" h a s h  c o d e 2"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s-h_-c-o-d-e_2/#hash_code_2","text":"static val HASH_CODE_2: DatabaseField!","title":"HASH_CODE_2"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-a-l-e-r-t-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / HAS_ALERTS HAS_ALERTS static val HAS_ALERTS: DatabaseField!","title":" h a s  a l e r t s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-a-l-e-r-t-s/#has_alerts","text":"static val HAS_ALERTS: DatabaseField!","title":"HAS_ALERTS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-b-i-c-y-c-l-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / HAS_BICYCLE HAS_BICYCLE static val HAS_BICYCLE: DatabaseField!","title":" h a s  b i c y c l e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-b-i-c-y-c-l-e/#has_bicycle","text":"static val HAS_BICYCLE: DatabaseField!","title":"HAS_BICYCLE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-c-a-r/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / HAS_CAR HAS_CAR static val HAS_CAR: DatabaseField!","title":" h a s  c a r"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-c-a-r/#has_car","text":"static val HAS_CAR: DatabaseField!","title":"HAS_CAR"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-m-o-t-o-r-b-i-k-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / HAS_MOTORBIKE HAS_MOTORBIKE static val HAS_MOTORBIKE: DatabaseField!","title":" h a s  m o t o r b i k e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-m-o-t-o-r-b-i-k-e/#has_motorbike","text":"static val HAS_MOTORBIKE: DatabaseField!","title":"HAS_MOTORBIKE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-m-u-l-t-i-p-l-e_-t-r-i-p-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / HAS_MULTIPLE_TRIPS HAS_MULTIPLE_TRIPS static val HAS_MULTIPLE_TRIPS: DatabaseField!","title":" h a s  m u l t i p l e  t r i p s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-m-u-l-t-i-p-l-e_-t-r-i-p-s/#has_multiple_trips","text":"static val HAS_MULTIPLE_TRIPS: DatabaseField!","title":"HAS_MULTIPLE_TRIPS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-p-u-b_-t-r-a-n-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / HAS_PUB_TRANS HAS_PUB_TRANS static val HAS_PUB_TRANS: DatabaseField!","title":" h a s  p u b  t r a n s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-p-u-b_-t-r-a-n-s/#has_pub_trans","text":"static val HAS_PUB_TRANS: DatabaseField!","title":"HAS_PUB_TRANS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-s-e-r-v-i-c-e_-s-t-o-p-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / HAS_SERVICE_STOPS HAS_SERVICE_STOPS static val HAS_SERVICE_STOPS: DatabaseField!","title":" h a s  s e r v i c e  s t o p s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-s-e-r-v-i-c-e_-s-t-o-p-s/#has_service_stops","text":"static val HAS_SERVICE_STOPS: DatabaseField!","title":"HAS_SERVICE_STOPS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-s-h-u-t-t-l-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / HAS_SHUTTLE HAS_SHUTTLE static val HAS_SHUTTLE: DatabaseField!","title":" h a s  s h u t t l e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-s-h-u-t-t-l-e/#has_shuttle","text":"static val HAS_SHUTTLE: DatabaseField!","title":"HAS_SHUTTLE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-t-a-x-i/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / HAS_TAXI HAS_TAXI static val HAS_TAXI: DatabaseField!","title":" h a s  t a x i"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-h-a-s_-t-a-x-i/#has_taxi","text":"static val HAS_TAXI: DatabaseField!","title":"HAS_TAXI"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-i-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / ID ID static val ID: DatabaseField!","title":" i d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-i-d/#id","text":"static val ID: DatabaseField!","title":"ID"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-i-s_-d-y-n-a-m-i-c/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / IS_DYNAMIC IS_DYNAMIC static val IS_DYNAMIC: DatabaseField!","title":" i s  d y n a m i c"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-i-s_-d-y-n-a-m-i-c/#is_dynamic","text":"static val IS_DYNAMIC: DatabaseField!","title":"IS_DYNAMIC"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-i-s_-p-a-r-e-n-t/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / IS_PARENT IS_PARENT static val IS_PARENT: DatabaseField!","title":" i s  p a r e n t"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-i-s_-p-a-r-e-n-t/#is_parent","text":"static val IS_PARENT: DatabaseField!","title":"IS_PARENT"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-a-b-e-l/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / LABEL LABEL static val LABEL: DatabaseField!","title":" l a b e l"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-a-b-e-l/#label","text":"static val LABEL: DatabaseField!","title":"LABEL"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-a-s-t_-u-p-d-a-t-e_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / LAST_UPDATE_TIME LAST_UPDATE_TIME static val LAST_UPDATE_TIME: DatabaseField!","title":" l a s t  u p d a t e  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-a-s-t_-u-p-d-a-t-e_-t-i-m-e/#last_update_time","text":"static val LAST_UPDATE_TIME: DatabaseField!","title":"LAST_UPDATE_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-a-t/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / LAT LAT static val LAT: DatabaseField!","title":" l a t"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-a-t/#lat","text":"static val LAT: DatabaseField!","title":"LAT"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-o-c-a-t-i-o-n_-c-l-a-s-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / LOCATION_CLASS LOCATION_CLASS static val LOCATION_CLASS: DatabaseField!","title":" l o c a t i o n  c l a s s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-o-c-a-t-i-o-n_-c-l-a-s-s/#location_class","text":"static val LOCATION_CLASS: DatabaseField!","title":"LOCATION_CLASS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-o-c-a-t-i-o-n_-i-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / LOCATION_ID LOCATION_ID static val LOCATION_ID: DatabaseField!","title":" l o c a t i o n  i d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-o-c-a-t-i-o-n_-i-d/#location_id","text":"static val LOCATION_ID: DatabaseField!","title":"LOCATION_ID"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-o-c-a-t-i-o-n_-t-y-p-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / LOCATION_TYPE LOCATION_TYPE static val LOCATION_TYPE: DatabaseField!","title":" l o c a t i o n  t y p e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-o-c-a-t-i-o-n_-t-y-p-e/#location_type","text":"static val LOCATION_TYPE: DatabaseField!","title":"LOCATION_TYPE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-o-n/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / LON LON static val LON: DatabaseField!","title":" l o n"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-l-o-n/#lon","text":"static val LON: DatabaseField!","title":"LON"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-m-o-d-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / MODE MODE static val MODE: DatabaseField!","title":" m o d e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-m-o-d-e/#mode","text":"static val MODE: DatabaseField!","title":"MODE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-m-o-d-e_-i-n-f-o/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / MODE_INFO MODE_INFO static val MODE_INFO: DatabaseField!","title":" m o d e  i n f o"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-m-o-d-e_-i-n-f-o/#mode_info","text":"static val MODE_INFO: DatabaseField!","title":"MODE_INFO"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-n-a-m-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / NAME NAME static val NAME: DatabaseField!","title":" n a m e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-n-a-m-e/#name","text":"static val NAME: DatabaseField!","title":"NAME"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-o-c-c-u-p-a-n-c-y/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / OCCUPANCY OCCUPANCY static val OCCUPANCY: DatabaseField!","title":" o c c u p a n c y"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-o-c-c-u-p-a-n-c-y/#occupancy","text":"static val OCCUPANCY: DatabaseField!","title":"OCCUPANCY"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-p-a-i-r_-i-d-e-n-t-i-f-i-e-r/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / PAIR_IDENTIFIER PAIR_IDENTIFIER static val PAIR_IDENTIFIER: DatabaseField!","title":" p a i r  i d e n t i f i e r"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-p-a-i-r_-i-d-e-n-t-i-f-i-e-r/#pair_identifier","text":"static val PAIR_IDENTIFIER: DatabaseField!","title":"PAIR_IDENTIFIER"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-p-a-r-e-n-t_-i-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / PARENT_ID PARENT_ID static val PARENT_ID: DatabaseField!","title":" p a r e n t  i d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-p-a-r-e-n-t_-i-d/#parent_id","text":"static val PARENT_ID: DatabaseField!","title":"PARENT_ID"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-p-h-o-n-e_-n-u-m-b-e-r/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / PHONE_NUMBER PHONE_NUMBER static val PHONE_NUMBER: DatabaseField!","title":" p h o n e  n u m b e r"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-p-h-o-n-e_-n-u-m-b-e-r/#phone_number","text":"static val PHONE_NUMBER: DatabaseField!","title":"PHONE_NUMBER"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-p-o-p-u-l-a-r-i-t-y/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / POPULARITY POPULARITY static val POPULARITY: DatabaseField!","title":" p o p u l a r i t y"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-p-o-p-u-l-a-r-i-t-y/#popularity","text":"static val POPULARITY: DatabaseField!","title":"POPULARITY"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-r-a-t-i-n-g_-c-o-u-n-t/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / RATING_COUNT RATING_COUNT static val RATING_COUNT: DatabaseField!","title":" r a t i n g  c o u n t"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-r-a-t-i-n-g_-c-o-u-n-t/#rating_count","text":"static val RATING_COUNT: DatabaseField!","title":"RATING_COUNT"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-r-a-t-i-n-g_-i-m-a-g-e_-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / RATING_IMAGE_URL RATING_IMAGE_URL static val RATING_IMAGE_URL: DatabaseField!","title":" r a t i n g  i m a g e  u r l"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-r-a-t-i-n-g_-i-m-a-g-e_-u-r-l/#rating_image_url","text":"static val RATING_IMAGE_URL: DatabaseField!","title":"RATING_IMAGE_URL"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-r-e-a-l_-t-i-m-e_-s-t-a-t-u-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / REAL_TIME_STATUS REAL_TIME_STATUS static val REAL_TIME_STATUS: DatabaseField!","title":" r e a l  t i m e  s t a t u s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-r-e-a-l_-t-i-m-e_-s-t-a-t-u-s/#real_time_status","text":"static val REAL_TIME_STATUS: DatabaseField!","title":"REAL_TIME_STATUS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-c-h-e-d-u-l-e-d_-s-e-r-v-i-c-e_-i-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SCHEDULED_SERVICE_ID SCHEDULED_SERVICE_ID static val SCHEDULED_SERVICE_ID: DatabaseField!","title":" s c h e d u l e d  s e r v i c e  i d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-c-h-e-d-u-l-e-d_-s-e-r-v-i-c-e_-i-d/#scheduled_service_id","text":"static val SCHEDULED_SERVICE_ID: DatabaseField!","title":"SCHEDULED_SERVICE_ID"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-c-h-e-d-u-l-e-d_-s-t-o-p_-c-o-d-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SCHEDULED_STOP_CODE SCHEDULED_STOP_CODE static val SCHEDULED_STOP_CODE: DatabaseField!","title":" s c h e d u l e d  s t o p  c o d e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-c-h-e-d-u-l-e-d_-s-t-o-p_-c-o-d-e/#scheduled_stop_code","text":"static val SCHEDULED_STOP_CODE: DatabaseField!","title":"SCHEDULED_STOP_CODE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-a-r-c-h_-s-t-r-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SEARCH_STRING SEARCH_STRING static val SEARCH_STRING: DatabaseField!","title":" s e a r c h  s t r i n g"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-a-r-c-h_-s-t-r-i-n-g/#search_string","text":"static val SEARCH_STRING: DatabaseField!","title":"SEARCH_STRING"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-g-m-e-n-t_-i-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SEGMENT_ID SEGMENT_ID static val SEGMENT_ID: DatabaseField!","title":" s e g m e n t  i d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-g-m-e-n-t_-i-d/#segment_id","text":"static val SEGMENT_ID: DatabaseField!","title":"SEGMENT_ID"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICES SERVICES static val SERVICES: DatabaseField!","title":" s e r v i c e s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e-s/#services","text":"static val SERVICES: DatabaseField!","title":"SERVICES"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-c-o-l-o-r/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_COLOR SERVICE_COLOR static val SERVICE_COLOR: DatabaseField!","title":" s e r v i c e  c o l o r"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-c-o-l-o-r/#service_color","text":"static val SERVICE_COLOR: DatabaseField!","title":"SERVICE_COLOR"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-c-o-l-o-r_-b-l-u-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_COLOR_BLUE SERVICE_COLOR_BLUE static val SERVICE_COLOR_BLUE: DatabaseField!","title":" s e r v i c e  c o l o r  b l u e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-c-o-l-o-r_-b-l-u-e/#service_color_blue","text":"static val SERVICE_COLOR_BLUE: DatabaseField!","title":"SERVICE_COLOR_BLUE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-c-o-l-o-r_-g-r-e-e-n/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_COLOR_GREEN SERVICE_COLOR_GREEN static val SERVICE_COLOR_GREEN: DatabaseField!","title":" s e r v i c e  c o l o r  g r e e n"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-c-o-l-o-r_-g-r-e-e-n/#service_color_green","text":"static val SERVICE_COLOR_GREEN: DatabaseField!","title":"SERVICE_COLOR_GREEN"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-c-o-l-o-r_-r-e-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_COLOR_RED SERVICE_COLOR_RED static val SERVICE_COLOR_RED: DatabaseField!","title":" s e r v i c e  c o l o r  r e d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-c-o-l-o-r_-r-e-d/#service_color_red","text":"static val SERVICE_COLOR_RED: DatabaseField!","title":"SERVICE_COLOR_RED"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-d-i-r-e-c-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_DIRECTION SERVICE_DIRECTION static val SERVICE_DIRECTION: DatabaseField!","title":" s e r v i c e  d i r e c t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-d-i-r-e-c-t-i-o-n/#service_direction","text":"static val SERVICE_DIRECTION: DatabaseField!","title":"SERVICE_DIRECTION"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-n-a-m-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_NAME SERVICE_NAME static val SERVICE_NAME: DatabaseField!","title":" s e r v i c e  n a m e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-n-a-m-e/#service_name","text":"static val SERVICE_NAME: DatabaseField!","title":"SERVICE_NAME"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-n-u-m-b-e-r/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_NUMBER SERVICE_NUMBER static val SERVICE_NUMBER: DatabaseField!","title":" s e r v i c e  n u m b e r"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-n-u-m-b-e-r/#service_number","text":"static val SERVICE_NUMBER: DatabaseField!","title":"SERVICE_NUMBER"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-o-p-e-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_OPERATOR SERVICE_OPERATOR static val SERVICE_OPERATOR: DatabaseField!","title":" s e r v i c e  o p e r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-o-p-e-r-a-t-o-r/#service_operator","text":"static val SERVICE_OPERATOR: DatabaseField!","title":"SERVICE_OPERATOR"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-s-h-a-p-e_-i-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_SHAPE_ID SERVICE_SHAPE_ID static val SERVICE_SHAPE_ID: DatabaseField!","title":" s e r v i c e  s h a p e  i d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-s-h-a-p-e_-i-d/#service_shape_id","text":"static val SERVICE_SHAPE_ID: DatabaseField!","title":"SERVICE_SHAPE_ID"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-s-t-o-p_-i-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_STOP_ID SERVICE_STOP_ID static val SERVICE_STOP_ID: DatabaseField!","title":" s e r v i c e  s t o p  i d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-s-t-o-p_-i-d/#service_stop_id","text":"static val SERVICE_STOP_ID: DatabaseField!","title":"SERVICE_STOP_ID"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_TIME SERVICE_TIME static val SERVICE_TIME: DatabaseField!","title":" s e r v i c e  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-t-i-m-e/#service_time","text":"static val SERVICE_TIME: DatabaseField!","title":"SERVICE_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-t-r-i-p_-i-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SERVICE_TRIP_ID SERVICE_TRIP_ID static val SERVICE_TRIP_ID: DatabaseField!","title":" s e r v i c e  t r i p  i d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-e-r-v-i-c-e_-t-r-i-p_-i-d/#service_trip_id","text":"static val SERVICE_TRIP_ID: DatabaseField!","title":"SERVICE_TRIP_ID"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-h-o-r-t_-n-a-m-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SHORT_NAME SHORT_NAME static val SHORT_NAME: DatabaseField!","title":" s h o r t  n a m e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-h-o-r-t_-n-a-m-e/#short_name","text":"static val SHORT_NAME: DatabaseField!","title":"SHORT_NAME"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-o-u-r-c-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / SOURCE SOURCE static val SOURCE: DatabaseField!","title":" s o u r c e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-o-u-r-c-e/#source","text":"static val SOURCE: DatabaseField!","title":"SOURCE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-t-a-r-t_-s-t-o-p_-s-h-o-r-t_-n-a-m-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / START_STOP_SHORT_NAME START_STOP_SHORT_NAME static val START_STOP_SHORT_NAME: DatabaseField!","title":" s t a r t  s t o p  s h o r t  n a m e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-t-a-r-t_-s-t-o-p_-s-h-o-r-t_-n-a-m-e/#start_stop_short_name","text":"static val START_STOP_SHORT_NAME: DatabaseField!","title":"START_STOP_SHORT_NAME"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-t-a-r-t_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / START_TIME START_TIME static val START_TIME: DatabaseField!","title":" s t a r t  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-t-a-r-t_-t-i-m-e/#start_time","text":"static val START_TIME: DatabaseField!","title":"START_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-t-o-p_-c-o-d-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / STOP_CODE STOP_CODE static val STOP_CODE: DatabaseField!","title":" s t o p  c o d e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-t-o-p_-c-o-d-e/#stop_code","text":"static val STOP_CODE: DatabaseField!","title":"STOP_CODE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-t-o-p_-t-y-p-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / STOP_TYPE STOP_TYPE static val STOP_TYPE: DatabaseField!","title":" s t o p  t y p e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-s-t-o-p_-t-y-p-e/#stop_type","text":"static val STOP_TYPE: DatabaseField!","title":"STOP_TYPE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-t-e-x-t/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / TEXT TEXT static val TEXT: DatabaseField!","title":" t e x t"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-t-e-x-t/#text","text":"static val TEXT: DatabaseField!","title":"TEXT"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-t-i-m-e-z-o-n-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / TIMEZONE TIMEZONE static val TIMEZONE: DatabaseField!","title":" t i m e z o n e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-t-i-m-e-z-o-n-e/#timezone","text":"static val TIMEZONE: DatabaseField!","title":"TIMEZONE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-t-i-t-l-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / TITLE TITLE static val TITLE: DatabaseField!","title":" t i t l e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-t-i-t-l-e/#title","text":"static val TITLE: DatabaseField!","title":"TITLE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-t-r-a-v-e-l-l-e-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / TRAVELLED TRAVELLED static val TRAVELLED: DatabaseField!","title":" t r a v e l l e d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-t-r-a-v-e-l-l-e-d/#travelled","text":"static val TRAVELLED: DatabaseField!","title":"TRAVELLED"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-t-r-i-p_-s-e-g-m-e-n-t_-i-d/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / TRIP_SEGMENT_ID TRIP_SEGMENT_ID static val TRIP_SEGMENT_ID: DatabaseField!","title":" t r i p  s e g m e n t  i d"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-t-r-i-p_-s-e-g-m-e-n-t_-i-d/#trip_segment_id","text":"static val TRIP_SEGMENT_ID: DatabaseField!","title":"TRIP_SEGMENT_ID"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / URL URL static val URL: DatabaseField!","title":" u r l"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-u-r-l/#url","text":"static val URL: DatabaseField!","title":"URL"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-w-a-y-p-o-i-n-t_-e-n-c-o-d-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / WAYPOINT_ENCODING WAYPOINT_ENCODING static val WAYPOINT_ENCODING: DatabaseField!","title":" w a y p o i n t  e n c o d i n g"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-w-a-y-p-o-i-n-t_-e-n-c-o-d-i-n-g/#waypoint_encoding","text":"static val WAYPOINT_ENCODING: DatabaseField!","title":"WAYPOINT_ENCODING"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-w-h-e-e-l-c-h-a-i-r_-a-c-c-e-s-s-i-b-l-e/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / WHEELCHAIR_ACCESSIBLE WHEELCHAIR_ACCESSIBLE static val WHEELCHAIR_ACCESSIBLE: DatabaseField!","title":" w h e e l c h a i r  a c c e s s i b l e"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-w-h-e-e-l-c-h-a-i-r_-a-c-c-e-s-s-i-b-l-e/#wheelchair_accessible","text":"static val WHEELCHAIR_ACCESSIBLE: DatabaseField!","title":"WHEELCHAIR_ACCESSIBLE"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-w3-w/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / W3W W3W static val W3W: DatabaseField!","title":" w3 w"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-w3-w/#w3w","text":"static val W3W: DatabaseField!","title":"W3W"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-w3-w_-i-n-f-o_-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbFields / W3W_INFO_URL W3W_INFO_URL static val W3W_INFO_URL: DatabaseField!","title":" w3 w  i n f o  u r l"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-fields/-w3-w_-i-n-f-o_-u-r-l/#w3w_info_url","text":"static val W3W_INFO_URL: DatabaseField!","title":"W3W_INFO_URL"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-helper/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbHelper DbHelper class DbHelper : SQLiteOpenHelper Constructors Name Summary <init> DbHelper(context: Context, databaseName: String , databaseMigrator: DatabaseMigrator ) Functions Name Summary onCreate fun onCreate(database: SQLiteDatabase!): Unit onUpgrade fun onUpgrade(database: SQLiteDatabase!, oldVersion: Int , newVersion: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-helper/#dbhelper","text":"class DbHelper : SQLiteOpenHelper","title":"DbHelper"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-helper/#constructors","text":"Name Summary <init> DbHelper(context: Context, databaseName: String , databaseMigrator: DatabaseMigrator )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-helper/#functions","text":"Name Summary onCreate fun onCreate(database: SQLiteDatabase!): Unit onUpgrade fun onUpgrade(database: SQLiteDatabase!, oldVersion: Int , newVersion: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-helper/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbHelper / <init> <init> DbHelper(@NonNull context: Context, @NonNull databaseName: String , @NonNull databaseMigrator: DatabaseMigrator )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-helper/-init-/#init","text":"DbHelper(@NonNull context: Context, @NonNull databaseName: String , @NonNull databaseMigrator: DatabaseMigrator )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-helper/on-create/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbHelper / onCreate onCreate fun onCreate(database: SQLiteDatabase!): Unit","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-helper/on-create/#oncreate","text":"fun onCreate(database: SQLiteDatabase!): Unit","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-helper/on-upgrade/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbHelper / onUpgrade onUpgrade fun onUpgrade(database: SQLiteDatabase!, oldVersion: Int , newVersion: Int ): Unit","title":"On upgrade"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-helper/on-upgrade/#onupgrade","text":"fun onUpgrade(database: SQLiteDatabase!, oldVersion: Int , newVersion: Int ): Unit","title":"onUpgrade"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbTables DbTables class DbTables Properties Name Summary LOCATIONS static val LOCATIONS: DatabaseTable! PRIVATE_VEHICLES static val PRIVATE_VEHICLES: DatabaseTable! REAL_TIME_UPDATES static val REAL_TIME_UPDATES: DatabaseTable! SCHEDULED_SERVICES Represents TimetableEntry static val SCHEDULED_SERVICES: DatabaseTable! SCHEDULED_STOP_DOWNLOAD_HISTORY static val SCHEDULED_STOP_DOWNLOAD_HISTORY: DatabaseTable! SCHEDULED_STOPS static val SCHEDULED_STOPS: DatabaseTable! SEGMENT_SHAPES static val SEGMENT_SHAPES: DatabaseTable! SERVICE_ALERTS static val SERVICE_ALERTS: DatabaseTable! SERVICE_STOPS static val SERVICE_STOPS: DatabaseTable! TABLE_LOCATIONS static val TABLE_LOCATIONS: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/#dbtables","text":"class DbTables","title":"DbTables"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/#properties","text":"Name Summary LOCATIONS static val LOCATIONS: DatabaseTable! PRIVATE_VEHICLES static val PRIVATE_VEHICLES: DatabaseTable! REAL_TIME_UPDATES static val REAL_TIME_UPDATES: DatabaseTable! SCHEDULED_SERVICES Represents TimetableEntry static val SCHEDULED_SERVICES: DatabaseTable! SCHEDULED_STOP_DOWNLOAD_HISTORY static val SCHEDULED_STOP_DOWNLOAD_HISTORY: DatabaseTable! SCHEDULED_STOPS static val SCHEDULED_STOPS: DatabaseTable! SEGMENT_SHAPES static val SEGMENT_SHAPES: DatabaseTable! SERVICE_ALERTS static val SERVICE_ALERTS: DatabaseTable! SERVICE_STOPS static val SERVICE_STOPS: DatabaseTable! TABLE_LOCATIONS static val TABLE_LOCATIONS: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-l-o-c-a-t-i-o-n-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbTables / LOCATIONS LOCATIONS static val LOCATIONS: DatabaseTable!","title":" l o c a t i o n s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-l-o-c-a-t-i-o-n-s/#locations","text":"static val LOCATIONS: DatabaseTable!","title":"LOCATIONS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-p-r-i-v-a-t-e_-v-e-h-i-c-l-e-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbTables / PRIVATE_VEHICLES PRIVATE_VEHICLES static val PRIVATE_VEHICLES: DatabaseTable!","title":" p r i v a t e  v e h i c l e s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-p-r-i-v-a-t-e_-v-e-h-i-c-l-e-s/#private_vehicles","text":"static val PRIVATE_VEHICLES: DatabaseTable!","title":"PRIVATE_VEHICLES"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-r-e-a-l_-t-i-m-e_-u-p-d-a-t-e-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbTables / REAL_TIME_UPDATES REAL_TIME_UPDATES static val REAL_TIME_UPDATES: DatabaseTable!","title":" r e a l  t i m e  u p d a t e s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-r-e-a-l_-t-i-m-e_-u-p-d-a-t-e-s/#real_time_updates","text":"static val REAL_TIME_UPDATES: DatabaseTable!","title":"REAL_TIME_UPDATES"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-c-h-e-d-u-l-e-d_-s-e-r-v-i-c-e-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbTables / SCHEDULED_SERVICES SCHEDULED_SERVICES static val SCHEDULED_SERVICES: DatabaseTable! Represents TimetableEntry","title":" s c h e d u l e d  s e r v i c e s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-c-h-e-d-u-l-e-d_-s-e-r-v-i-c-e-s/#scheduled_services","text":"static val SCHEDULED_SERVICES: DatabaseTable! Represents TimetableEntry","title":"SCHEDULED_SERVICES"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-c-h-e-d-u-l-e-d_-s-t-o-p-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbTables / SCHEDULED_STOPS SCHEDULED_STOPS static val SCHEDULED_STOPS: DatabaseTable!","title":" s c h e d u l e d  s t o p s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-c-h-e-d-u-l-e-d_-s-t-o-p-s/#scheduled_stops","text":"static val SCHEDULED_STOPS: DatabaseTable!","title":"SCHEDULED_STOPS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-c-h-e-d-u-l-e-d_-s-t-o-p_-d-o-w-n-l-o-a-d_-h-i-s-t-o-r-y/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbTables / SCHEDULED_STOP_DOWNLOAD_HISTORY SCHEDULED_STOP_DOWNLOAD_HISTORY static val SCHEDULED_STOP_DOWNLOAD_HISTORY: DatabaseTable!","title":" s c h e d u l e d  s t o p  d o w n l o a d  h i s t o r y"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-c-h-e-d-u-l-e-d_-s-t-o-p_-d-o-w-n-l-o-a-d_-h-i-s-t-o-r-y/#scheduled_stop_download_history","text":"static val SCHEDULED_STOP_DOWNLOAD_HISTORY: DatabaseTable!","title":"SCHEDULED_STOP_DOWNLOAD_HISTORY"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-e-g-m-e-n-t_-s-h-a-p-e-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbTables / SEGMENT_SHAPES SEGMENT_SHAPES static val SEGMENT_SHAPES: DatabaseTable!","title":" s e g m e n t  s h a p e s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-e-g-m-e-n-t_-s-h-a-p-e-s/#segment_shapes","text":"static val SEGMENT_SHAPES: DatabaseTable!","title":"SEGMENT_SHAPES"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-e-r-v-i-c-e_-a-l-e-r-t-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbTables / SERVICE_ALERTS SERVICE_ALERTS static val SERVICE_ALERTS: DatabaseTable!","title":" s e r v i c e  a l e r t s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-e-r-v-i-c-e_-a-l-e-r-t-s/#service_alerts","text":"static val SERVICE_ALERTS: DatabaseTable!","title":"SERVICE_ALERTS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-e-r-v-i-c-e_-s-t-o-p-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbTables / SERVICE_STOPS SERVICE_STOPS static val SERVICE_STOPS: DatabaseTable!","title":" s e r v i c e  s t o p s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-s-e-r-v-i-c-e_-s-t-o-p-s/#service_stops","text":"static val SERVICE_STOPS: DatabaseTable!","title":"SERVICE_STOPS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-t-a-b-l-e_-l-o-c-a-t-i-o-n-s/","text":"tripkit-android / com.skedgo.tripkit.data.database / DbTables / TABLE_LOCATIONS TABLE_LOCATIONS static val TABLE_LOCATIONS: String","title":" t a b l e  l o c a t i o n s"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-db-tables/-t-a-b-l-e_-l-o-c-a-t-i-o-n-s/#table_locations","text":"static val TABLE_LOCATIONS: String","title":"TABLE_LOCATIONS"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/","text":"tripkit-android / com.skedgo.tripkit.data.database / TripKitDatabase TripKitDatabase abstract class TripKitDatabase : RoomDatabase Constructors Name Summary <init> TripKitDatabase() Functions Name Summary bikePodDao abstract fun bikePodDao(): BikePodDao carParkDao abstract fun carParkDao(): CarParkDao carPodDao abstract fun carPodDao(): CarPodDao onStreetParkingDao abstract fun onStreetParkingDao(): OnStreetParkingDao parentStopDao abstract fun parentStopDao(): ParentStopDao scheduledServiceRealtimeInfoDao abstract fun scheduledServiceRealtimeInfoDao(): ScheduledServiceRealtimeInfoDao serviceAlertsDao abstract fun serviceAlertsDao(): ServiceAlertsDao stopLocationDao abstract fun stopLocationDao(): StopLocationDao Companion Object Functions Name Summary getInstance fun getInstance(context: Context): TripKitDatabase","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/#tripkitdatabase","text":"abstract class TripKitDatabase : RoomDatabase","title":"TripKitDatabase"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/#constructors","text":"Name Summary <init> TripKitDatabase()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/#functions","text":"Name Summary bikePodDao abstract fun bikePodDao(): BikePodDao carParkDao abstract fun carParkDao(): CarParkDao carPodDao abstract fun carPodDao(): CarPodDao onStreetParkingDao abstract fun onStreetParkingDao(): OnStreetParkingDao parentStopDao abstract fun parentStopDao(): ParentStopDao scheduledServiceRealtimeInfoDao abstract fun scheduledServiceRealtimeInfoDao(): ScheduledServiceRealtimeInfoDao serviceAlertsDao abstract fun serviceAlertsDao(): ServiceAlertsDao stopLocationDao abstract fun stopLocationDao(): StopLocationDao","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/#companion-object-functions","text":"Name Summary getInstance fun getInstance(context: Context): TripKitDatabase","title":"Companion Object Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database / TripKitDatabase / <init> <init> TripKitDatabase()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/-init-/#init","text":"TripKitDatabase()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/bike-pod-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database / TripKitDatabase / bikePodDao bikePodDao abstract fun bikePodDao(): BikePodDao","title":"Bike pod dao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/bike-pod-dao/#bikepoddao","text":"abstract fun bikePodDao(): BikePodDao","title":"bikePodDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/car-park-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database / TripKitDatabase / carParkDao carParkDao abstract fun carParkDao(): CarParkDao","title":"Car park dao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/car-park-dao/#carparkdao","text":"abstract fun carParkDao(): CarParkDao","title":"carParkDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/car-pod-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database / TripKitDatabase / carPodDao carPodDao abstract fun carPodDao(): CarPodDao","title":"Car pod dao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/car-pod-dao/#carpoddao","text":"abstract fun carPodDao(): CarPodDao","title":"carPodDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/get-instance/","text":"tripkit-android / com.skedgo.tripkit.data.database / TripKitDatabase / getInstance getInstance fun getInstance(context: Context): TripKitDatabase","title":"Get instance"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/get-instance/#getinstance","text":"fun getInstance(context: Context): TripKitDatabase","title":"getInstance"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/on-street-parking-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database / TripKitDatabase / onStreetParkingDao onStreetParkingDao abstract fun onStreetParkingDao(): OnStreetParkingDao","title":"On street parking dao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/on-street-parking-dao/#onstreetparkingdao","text":"abstract fun onStreetParkingDao(): OnStreetParkingDao","title":"onStreetParkingDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/parent-stop-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database / TripKitDatabase / parentStopDao parentStopDao abstract fun parentStopDao(): ParentStopDao","title":"Parent stop dao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/parent-stop-dao/#parentstopdao","text":"abstract fun parentStopDao(): ParentStopDao","title":"parentStopDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/scheduled-service-realtime-info-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database / TripKitDatabase / scheduledServiceRealtimeInfoDao scheduledServiceRealtimeInfoDao abstract fun scheduledServiceRealtimeInfoDao(): ScheduledServiceRealtimeInfoDao","title":"Scheduled service realtime info dao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/scheduled-service-realtime-info-dao/#scheduledservicerealtimeinfodao","text":"abstract fun scheduledServiceRealtimeInfoDao(): ScheduledServiceRealtimeInfoDao","title":"scheduledServiceRealtimeInfoDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/service-alerts-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database / TripKitDatabase / serviceAlertsDao serviceAlertsDao abstract fun serviceAlertsDao(): ServiceAlertsDao","title":"Service alerts dao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/service-alerts-dao/#servicealertsdao","text":"abstract fun serviceAlertsDao(): ServiceAlertsDao","title":"serviceAlertsDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/stop-location-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database / TripKitDatabase / stopLocationDao stopLocationDao abstract fun stopLocationDao(): StopLocationDao","title":"Stop location dao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database/-trip-kit-database/stop-location-dao/#stoplocationdao","text":"abstract fun stopLocationDao(): StopLocationDao","title":"stopLocationDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods Package com.skedgo.tripkit.data.database.locations.bikepods Types Name Summary AppInfoEntity class AppInfoEntity BikePodDao abstract class BikePodDao BikePodEntity class BikePodEntity BikePodLocationEntity class BikePodLocationEntity BikePodRepository interface BikePodRepository BikePodRepositoryImpl class BikePodRepositoryImpl : BikePodRepository CompanyInfo class CompanyInfo DataSourceAttribution class DataSourceAttribution ModeInfoEntity class ModeInfoEntity Operator class Operator ServiceColorEntity class ServiceColorEntity","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/#package-comskedgotripkitdatadatabaselocationsbikepods","text":"","title":"Package com.skedgo.tripkit.data.database.locations.bikepods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/#types","text":"Name Summary AppInfoEntity class AppInfoEntity BikePodDao abstract class BikePodDao BikePodEntity class BikePodEntity BikePodLocationEntity class BikePodLocationEntity BikePodRepository interface BikePodRepository BikePodRepositoryImpl class BikePodRepositoryImpl : BikePodRepository CompanyInfo class CompanyInfo DataSourceAttribution class DataSourceAttribution ModeInfoEntity class ModeInfoEntity Operator class Operator ServiceColorEntity class ServiceColorEntity","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-app-info-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / AppInfoEntity AppInfoEntity class AppInfoEntity Constructors Name Summary <init> AppInfoEntity() Properties Name Summary appURLAndroid var appURLAndroid: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-app-info-entity/#appinfoentity","text":"class AppInfoEntity","title":"AppInfoEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-app-info-entity/#constructors","text":"Name Summary <init> AppInfoEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-app-info-entity/#properties","text":"Name Summary appURLAndroid var appURLAndroid: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-app-info-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / AppInfoEntity / <init> <init> AppInfoEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-app-info-entity/-init-/#init","text":"AppInfoEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-app-info-entity/app-u-r-l-android/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / AppInfoEntity / appURLAndroid appURLAndroid var appURLAndroid: String ?","title":"App u r l android"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-app-info-entity/app-u-r-l-android/#appurlandroid","text":"var appURLAndroid: String ?","title":"appURLAndroid"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodDao BikePodDao abstract class BikePodDao Constructors Name Summary <init> BikePodDao() Functions Name Summary getAllByCellsAndLatLngBounds abstract fun getAllByCellsAndLatLngBounds(cellIds: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < BikePodLocationEntity >> getAllInCells abstract fun getAllInCells(cellIds: List < String >): Flowable< List < BikePodLocationEntity >> getById abstract fun getById(id: String ): BikePodLocationEntity saveAll abstract fun saveAll(bikePods: List < BikePodLocationEntity >): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/#bikepoddao","text":"abstract class BikePodDao","title":"BikePodDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/#constructors","text":"Name Summary <init> BikePodDao()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/#functions","text":"Name Summary getAllByCellsAndLatLngBounds abstract fun getAllByCellsAndLatLngBounds(cellIds: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < BikePodLocationEntity >> getAllInCells abstract fun getAllInCells(cellIds: List < String >): Flowable< List < BikePodLocationEntity >> getById abstract fun getById(id: String ): BikePodLocationEntity saveAll abstract fun saveAll(bikePods: List < BikePodLocationEntity >): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodDao / <init> <init> BikePodDao()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/-init-/#init","text":"BikePodDao()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/get-all-by-cells-and-lat-lng-bounds/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodDao / getAllByCellsAndLatLngBounds getAllByCellsAndLatLngBounds abstract fun getAllByCellsAndLatLngBounds(cellIds: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < BikePodLocationEntity >>","title":"Get all by cells and lat lng bounds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/get-all-by-cells-and-lat-lng-bounds/#getallbycellsandlatlngbounds","text":"abstract fun getAllByCellsAndLatLngBounds(cellIds: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < BikePodLocationEntity >>","title":"getAllByCellsAndLatLngBounds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/get-all-in-cells/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodDao / getAllInCells getAllInCells abstract fun getAllInCells(cellIds: List < String >): Flowable< List < BikePodLocationEntity >>","title":"Get all in cells"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/get-all-in-cells/#getallincells","text":"abstract fun getAllInCells(cellIds: List < String >): Flowable< List < BikePodLocationEntity >>","title":"getAllInCells"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/get-by-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodDao / getById getById abstract fun getById(id: String ): BikePodLocationEntity","title":"Get by id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/get-by-id/#getbyid","text":"abstract fun getById(id: String ): BikePodLocationEntity","title":"getById"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/save-all/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodDao / saveAll saveAll abstract fun saveAll(bikePods: List < BikePodLocationEntity >): Unit","title":"Save all"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-dao/save-all/#saveall","text":"abstract fun saveAll(bikePods: List < BikePodLocationEntity >): Unit","title":"saveAll"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodEntity BikePodEntity class BikePodEntity Constructors Name Summary <init> BikePodEntity() Properties Name Summary availableBikes var availableBikes: Int ? dataSource var dataSource: DataSourceAttribution ? deepLink var deepLink: String ? identifier lateinit var identifier: String inService var inService: Boolean ? lastUpdate var lastUpdate: Long ? modeInfo var modeInfo: ModeInfoEntity ? operator lateinit var operator: Operator totalSpaces var totalSpaces: Int ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/#bikepodentity","text":"class BikePodEntity","title":"BikePodEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/#constructors","text":"Name Summary <init> BikePodEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/#properties","text":"Name Summary availableBikes var availableBikes: Int ? dataSource var dataSource: DataSourceAttribution ? deepLink var deepLink: String ? identifier lateinit var identifier: String inService var inService: Boolean ? lastUpdate var lastUpdate: Long ? modeInfo var modeInfo: ModeInfoEntity ? operator lateinit var operator: Operator totalSpaces var totalSpaces: Int ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodEntity / <init> <init> BikePodEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/-init-/#init","text":"BikePodEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/available-bikes/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodEntity / availableBikes availableBikes var availableBikes: Int ?","title":"Available bikes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/available-bikes/#availablebikes","text":"var availableBikes: Int ?","title":"availableBikes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/data-source/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodEntity / dataSource dataSource var dataSource: DataSourceAttribution ?","title":"Data source"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/data-source/#datasource","text":"var dataSource: DataSourceAttribution ?","title":"dataSource"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/deep-link/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodEntity / deepLink deepLink var deepLink: String ?","title":"Deep link"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/deep-link/#deeplink","text":"var deepLink: String ?","title":"deepLink"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/identifier/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodEntity / identifier identifier lateinit var identifier: String","title":"Identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/identifier/#identifier","text":"lateinit var identifier: String","title":"identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/in-service/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodEntity / inService inService var inService: Boolean ?","title":"In service"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/in-service/#inservice","text":"var inService: Boolean ?","title":"inService"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/last-update/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodEntity / lastUpdate lastUpdate var lastUpdate: Long ?","title":"Last update"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/last-update/#lastupdate","text":"var lastUpdate: Long ?","title":"lastUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/mode-info/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodEntity / modeInfo modeInfo var modeInfo: ModeInfoEntity ?","title":"Mode info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/mode-info/#modeinfo","text":"var modeInfo: ModeInfoEntity ?","title":"modeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/operator/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodEntity / operator operator lateinit var operator: Operator","title":"Operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/operator/#operator","text":"lateinit var operator: Operator","title":"operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/total-spaces/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodEntity / totalSpaces totalSpaces var totalSpaces: Int ?","title":"Total spaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-entity/total-spaces/#totalspaces","text":"var totalSpaces: Int ?","title":"totalSpaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodLocationEntity BikePodLocationEntity class BikePodLocationEntity Constructors Name Summary <init> BikePodLocationEntity() Properties Name Summary address var address: String ? bikePod lateinit var bikePod: BikePodEntity cellId var cellId: String ? identifier lateinit var identifier: String lat var lat: Double lng var lng: Double timezone var timezone: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/#bikepodlocationentity","text":"class BikePodLocationEntity","title":"BikePodLocationEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/#constructors","text":"Name Summary <init> BikePodLocationEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/#properties","text":"Name Summary address var address: String ? bikePod lateinit var bikePod: BikePodEntity cellId var cellId: String ? identifier lateinit var identifier: String lat var lat: Double lng var lng: Double timezone var timezone: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodLocationEntity / <init> <init> BikePodLocationEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/-init-/#init","text":"BikePodLocationEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/address/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodLocationEntity / address address var address: String ?","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/address/#address","text":"var address: String ?","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/bike-pod/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodLocationEntity / bikePod bikePod lateinit var bikePod: BikePodEntity","title":"Bike pod"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/bike-pod/#bikepod","text":"lateinit var bikePod: BikePodEntity","title":"bikePod"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/cell-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodLocationEntity / cellId cellId var cellId: String ?","title":"Cell id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/cell-id/#cellid","text":"var cellId: String ?","title":"cellId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/identifier/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodLocationEntity / identifier identifier lateinit var identifier: String","title":"Identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/identifier/#identifier","text":"lateinit var identifier: String","title":"identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/lat/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodLocationEntity / lat lat var lat: Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/lat/#lat","text":"var lat: Double","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/lng/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodLocationEntity / lng lng var lng: Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/lng/#lng","text":"var lng: Double","title":"lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/timezone/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodLocationEntity / timezone timezone var timezone: String ?","title":"Timezone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-location-entity/timezone/#timezone","text":"var timezone: String ?","title":"timezone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepository BikePodRepository interface BikePodRepository Functions Name Summary getBikePod abstract fun getBikePod(id: String ): Single< BikePodLocationEntity > getBikePods abstract fun getBikePods(cellIds: List < String >): Observable< List < BikePodLocationEntity >> getBikePodsWithinBounds abstract fun getBikePodsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < BikePodLocationEntity >> saveBikePods abstract fun saveBikePods(key: String , bikePods: List < BikePodLocationEntity >): Completable Inheritors Name Summary BikePodRepositoryImpl class BikePodRepositoryImpl : BikePodRepository","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/#bikepodrepository","text":"interface BikePodRepository","title":"BikePodRepository"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/#functions","text":"Name Summary getBikePod abstract fun getBikePod(id: String ): Single< BikePodLocationEntity > getBikePods abstract fun getBikePods(cellIds: List < String >): Observable< List < BikePodLocationEntity >> getBikePodsWithinBounds abstract fun getBikePodsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < BikePodLocationEntity >> saveBikePods abstract fun saveBikePods(key: String , bikePods: List < BikePodLocationEntity >): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/#inheritors","text":"Name Summary BikePodRepositoryImpl class BikePodRepositoryImpl : BikePodRepository","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/get-bike-pod/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepository / getBikePod getBikePod abstract fun getBikePod(id: String ): Single< BikePodLocationEntity >","title":"Get bike pod"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/get-bike-pod/#getbikepod","text":"abstract fun getBikePod(id: String ): Single< BikePodLocationEntity >","title":"getBikePod"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/get-bike-pods-within-bounds/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepository / getBikePodsWithinBounds getBikePodsWithinBounds abstract fun getBikePodsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < BikePodLocationEntity >>","title":"Get bike pods within bounds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/get-bike-pods-within-bounds/#getbikepodswithinbounds","text":"abstract fun getBikePodsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < BikePodLocationEntity >>","title":"getBikePodsWithinBounds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/get-bike-pods/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepository / getBikePods getBikePods abstract fun getBikePods(cellIds: List < String >): Observable< List < BikePodLocationEntity >>","title":"Get bike pods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/get-bike-pods/#getbikepods","text":"abstract fun getBikePods(cellIds: List < String >): Observable< List < BikePodLocationEntity >>","title":"getBikePods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/save-bike-pods/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepository / saveBikePods saveBikePods abstract fun saveBikePods(key: String , bikePods: List < BikePodLocationEntity >): Completable","title":"Save bike pods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository/save-bike-pods/#savebikepods","text":"abstract fun saveBikePods(key: String , bikePods: List < BikePodLocationEntity >): Completable","title":"saveBikePods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepositoryImpl BikePodRepositoryImpl class BikePodRepositoryImpl : BikePodRepository Constructors Name Summary <init> BikePodRepositoryImpl(tripGoDatabase2: TripKitDatabase ) Properties Name Summary tripGoDatabase2 val tripGoDatabase2: TripKitDatabase Functions Name Summary getBikePod fun getBikePod(id: String ): Single< BikePodLocationEntity > getBikePods fun getBikePods(cellIds: List < String >): Observable< List < BikePodLocationEntity >> getBikePodsWithinBounds fun getBikePodsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < BikePodLocationEntity >> saveBikePods fun saveBikePods(key: String , bikePods: List < BikePodLocationEntity >): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/#bikepodrepositoryimpl","text":"class BikePodRepositoryImpl : BikePodRepository","title":"BikePodRepositoryImpl"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/#constructors","text":"Name Summary <init> BikePodRepositoryImpl(tripGoDatabase2: TripKitDatabase )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/#properties","text":"Name Summary tripGoDatabase2 val tripGoDatabase2: TripKitDatabase","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/#functions","text":"Name Summary getBikePod fun getBikePod(id: String ): Single< BikePodLocationEntity > getBikePods fun getBikePods(cellIds: List < String >): Observable< List < BikePodLocationEntity >> getBikePodsWithinBounds fun getBikePodsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < BikePodLocationEntity >> saveBikePods fun saveBikePods(key: String , bikePods: List < BikePodLocationEntity >): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepositoryImpl / <init> <init> BikePodRepositoryImpl(tripGoDatabase2: TripKitDatabase )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/-init-/#init","text":"BikePodRepositoryImpl(tripGoDatabase2: TripKitDatabase )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/get-bike-pod/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepositoryImpl / getBikePod getBikePod fun getBikePod(id: String ): Single< BikePodLocationEntity >","title":"Get bike pod"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/get-bike-pod/#getbikepod","text":"fun getBikePod(id: String ): Single< BikePodLocationEntity >","title":"getBikePod"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/get-bike-pods-within-bounds/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepositoryImpl / getBikePodsWithinBounds getBikePodsWithinBounds fun getBikePodsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < BikePodLocationEntity >>","title":"Get bike pods within bounds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/get-bike-pods-within-bounds/#getbikepodswithinbounds","text":"fun getBikePodsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < BikePodLocationEntity >>","title":"getBikePodsWithinBounds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/get-bike-pods/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepositoryImpl / getBikePods getBikePods fun getBikePods(cellIds: List < String >): Observable< List < BikePodLocationEntity >>","title":"Get bike pods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/get-bike-pods/#getbikepods","text":"fun getBikePods(cellIds: List < String >): Observable< List < BikePodLocationEntity >>","title":"getBikePods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/save-bike-pods/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepositoryImpl / saveBikePods saveBikePods fun saveBikePods(key: String , bikePods: List < BikePodLocationEntity >): Completable","title":"Save bike pods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/save-bike-pods/#savebikepods","text":"fun saveBikePods(key: String , bikePods: List < BikePodLocationEntity >): Completable","title":"saveBikePods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/trip-go-database2/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / BikePodRepositoryImpl / tripGoDatabase2 tripGoDatabase2 val tripGoDatabase2: TripKitDatabase","title":"Trip go database2"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-bike-pod-repository-impl/trip-go-database2/#tripgodatabase2","text":"val tripGoDatabase2: TripKitDatabase","title":"tripGoDatabase2"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / CompanyInfo CompanyInfo class CompanyInfo Constructors Name Summary <init> CompanyInfo() Properties Name Summary name lateinit var name: String phone var phone: String ? website var website: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/#companyinfo","text":"class CompanyInfo","title":"CompanyInfo"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/#constructors","text":"Name Summary <init> CompanyInfo()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/#properties","text":"Name Summary name lateinit var name: String phone var phone: String ? website var website: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / CompanyInfo / <init> <init> CompanyInfo()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/-init-/#init","text":"CompanyInfo()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / CompanyInfo / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/phone/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / CompanyInfo / phone phone var phone: String ?","title":"Phone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/phone/#phone","text":"var phone: String ?","title":"phone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/website/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / CompanyInfo / website website var website: String ?","title":"Website"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-company-info/website/#website","text":"var website: String ?","title":"website"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-data-source-attribution/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / DataSourceAttribution DataSourceAttribution class DataSourceAttribution Constructors Name Summary <init> DataSourceAttribution() Properties Name Summary disclaimer var disclaimer: String ? provider var provider: CompanyInfo ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-data-source-attribution/#datasourceattribution","text":"class DataSourceAttribution","title":"DataSourceAttribution"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-data-source-attribution/#constructors","text":"Name Summary <init> DataSourceAttribution()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-data-source-attribution/#properties","text":"Name Summary disclaimer var disclaimer: String ? provider var provider: CompanyInfo ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-data-source-attribution/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / DataSourceAttribution / <init> <init> DataSourceAttribution()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-data-source-attribution/-init-/#init","text":"DataSourceAttribution()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-data-source-attribution/disclaimer/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / DataSourceAttribution / disclaimer disclaimer var disclaimer: String ?","title":"Disclaimer"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-data-source-attribution/disclaimer/#disclaimer","text":"var disclaimer: String ?","title":"disclaimer"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-data-source-attribution/provider/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / DataSourceAttribution / provider provider var provider: CompanyInfo ?","title":"Provider"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-data-source-attribution/provider/#provider","text":"var provider: CompanyInfo ?","title":"provider"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ModeInfoEntity ModeInfoEntity class ModeInfoEntity Constructors Name Summary <init> ModeInfoEntity() Properties Name Summary alt var alt: String ? color var color: ServiceColorEntity ? description var description: String ? identifier var identifier: String ? localIcon var localIcon: String ? remoteDarkIcon var remoteDarkIcon: String ? remoteIcon var remoteIcon: String ? remoteIconIsTemplate var remoteIconIsTemplate: Boolean Extension Functions Name Summary toModeInfo fun ModeInfoEntity .toModeInfo(): ModeInfo","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/#modeinfoentity","text":"class ModeInfoEntity","title":"ModeInfoEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/#constructors","text":"Name Summary <init> ModeInfoEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/#properties","text":"Name Summary alt var alt: String ? color var color: ServiceColorEntity ? description var description: String ? identifier var identifier: String ? localIcon var localIcon: String ? remoteDarkIcon var remoteDarkIcon: String ? remoteIcon var remoteIcon: String ? remoteIconIsTemplate var remoteIconIsTemplate: Boolean","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/#extension-functions","text":"Name Summary toModeInfo fun ModeInfoEntity .toModeInfo(): ModeInfo","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ModeInfoEntity / <init> <init> ModeInfoEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/-init-/#init","text":"ModeInfoEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/alt/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ModeInfoEntity / alt alt var alt: String ?","title":"Alt"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/alt/#alt","text":"var alt: String ?","title":"alt"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/color/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ModeInfoEntity / color color var color: ServiceColorEntity ?","title":"Color"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/color/#color","text":"var color: ServiceColorEntity ?","title":"color"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/description/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ModeInfoEntity / description description var description: String ?","title":"Description"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/description/#description","text":"var description: String ?","title":"description"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/identifier/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ModeInfoEntity / identifier identifier var identifier: String ?","title":"Identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/identifier/#identifier","text":"var identifier: String ?","title":"identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/local-icon/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ModeInfoEntity / localIcon localIcon var localIcon: String ?","title":"Local icon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/local-icon/#localicon","text":"var localIcon: String ?","title":"localIcon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/remote-dark-icon/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ModeInfoEntity / remoteDarkIcon remoteDarkIcon var remoteDarkIcon: String ?","title":"Remote dark icon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/remote-dark-icon/#remotedarkicon","text":"var remoteDarkIcon: String ?","title":"remoteDarkIcon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/remote-icon-is-template/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ModeInfoEntity / remoteIconIsTemplate remoteIconIsTemplate var remoteIconIsTemplate: Boolean","title":"Remote icon is template"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/remote-icon-is-template/#remoteiconistemplate","text":"var remoteIconIsTemplate: Boolean","title":"remoteIconIsTemplate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/remote-icon/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ModeInfoEntity / remoteIcon remoteIcon var remoteIcon: String ?","title":"Remote icon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-mode-info-entity/remote-icon/#remoteicon","text":"var remoteIcon: String ?","title":"remoteIcon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / Operator Operator class Operator Constructors Name Summary <init> Operator() Properties Name Summary appInfo var appInfo: AppInfoEntity ? name lateinit var name: String phone var phone: String ? website var website: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/#operator","text":"class Operator","title":"Operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/#constructors","text":"Name Summary <init> Operator()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/#properties","text":"Name Summary appInfo var appInfo: AppInfoEntity ? name lateinit var name: String phone var phone: String ? website var website: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / Operator / <init> <init> Operator()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/-init-/#init","text":"Operator()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/app-info/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / Operator / appInfo appInfo var appInfo: AppInfoEntity ?","title":"App info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/app-info/#appinfo","text":"var appInfo: AppInfoEntity ?","title":"appInfo"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / Operator / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/phone/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / Operator / phone phone var phone: String ?","title":"Phone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/phone/#phone","text":"var phone: String ?","title":"phone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/website/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / Operator / website website var website: String ?","title":"Website"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-operator/website/#website","text":"var website: String ?","title":"website"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ServiceColorEntity ServiceColorEntity class ServiceColorEntity Constructors Name Summary <init> ServiceColorEntity() Properties Name Summary blue var blue: Int green var green: Int red var red: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/#servicecolorentity","text":"class ServiceColorEntity","title":"ServiceColorEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/#constructors","text":"Name Summary <init> ServiceColorEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/#properties","text":"Name Summary blue var blue: Int green var green: Int red var red: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ServiceColorEntity / <init> <init> ServiceColorEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/-init-/#init","text":"ServiceColorEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/blue/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ServiceColorEntity / blue blue var blue: Int","title":"Blue"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/blue/#blue","text":"var blue: Int","title":"blue"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/green/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ServiceColorEntity / green green var green: Int","title":"Green"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/green/#green","text":"var green: Int","title":"green"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/red/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.bikepods / ServiceColorEntity / red red var red: Int","title":"Red"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.bikepods/-service-color-entity/red/#red","text":"var red: Int","title":"red"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks Package com.skedgo.tripkit.data.database.locations.carparks Types Name Summary CarPark interface CarPark CarParkDao interface CarParkDao CarParkLocation interface CarParkLocation CarParkLocationEntity class CarParkLocationEntity CarParkMapper open class CarParkMapper CarParkPersistor open class CarParkPersistor OpeningDay interface OpeningDay OpeningDayEntity class OpeningDayEntity OpeningHours interface OpeningHours OpeningTime interface OpeningTime OpeningTimeEntity class OpeningTimeEntity OpeningTimeResult class OpeningTimeResult ParkingModule class ParkingModule ParkingOperator interface ParkingOperator ParkingOperatorEntity class ParkingOperatorEntity PricingEntry interface PricingEntry PricingEntryEntity class PricingEntryEntity PricingTable interface PricingTable PricingTableEntity class PricingTableEntity","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/#package-comskedgotripkitdatadatabaselocationscarparks","text":"","title":"Package com.skedgo.tripkit.data.database.locations.carparks"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/#types","text":"Name Summary CarPark interface CarPark CarParkDao interface CarParkDao CarParkLocation interface CarParkLocation CarParkLocationEntity class CarParkLocationEntity CarParkMapper open class CarParkMapper CarParkPersistor open class CarParkPersistor OpeningDay interface OpeningDay OpeningDayEntity class OpeningDayEntity OpeningHours interface OpeningHours OpeningTime interface OpeningTime OpeningTimeEntity class OpeningTimeEntity OpeningTimeResult class OpeningTimeResult ParkingModule class ParkingModule ParkingOperator interface ParkingOperator ParkingOperatorEntity class ParkingOperatorEntity PricingEntry interface PricingEntry PricingEntryEntity class PricingEntryEntity PricingTable interface PricingTable PricingTableEntity class PricingTableEntity","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarPark CarPark @Immutable @TypeAdapters interface CarPark Functions Name Summary info abstract fun info(): String ? openingHours abstract fun openingHours(): OpeningHours ? operator abstract fun operator(): ParkingOperator pricingTables abstract fun pricingTables(): List < PricingTable >?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park/#carpark","text":"@Immutable @TypeAdapters interface CarPark","title":"CarPark"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park/#functions","text":"Name Summary info abstract fun info(): String ? openingHours abstract fun openingHours(): OpeningHours ? operator abstract fun operator(): ParkingOperator pricingTables abstract fun pricingTables(): List < PricingTable >?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park/info/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarPark / info info abstract fun info(): String ?","title":"Info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park/info/#info","text":"abstract fun info(): String ?","title":"info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park/opening-hours/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarPark / openingHours openingHours abstract fun openingHours(): OpeningHours ?","title":"Opening hours"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park/opening-hours/#openinghours","text":"abstract fun openingHours(): OpeningHours ?","title":"openingHours"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park/operator/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarPark / operator operator abstract fun operator(): ParkingOperator","title":"Operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park/operator/#operator","text":"abstract fun operator(): ParkingOperator","title":"operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park/pricing-tables/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarPark / pricingTables pricingTables abstract fun pricingTables(): List < PricingTable >?","title":"Pricing tables"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park/pricing-tables/#pricingtables","text":"abstract fun pricingTables(): List < PricingTable >?","title":"pricingTables"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkDao CarParkDao interface CarParkDao Functions Name Summary getByCellIds abstract fun getByCellIds(ids: List < String >): Flowable< List < CarParkLocationEntity >> getOpeningTimesByCarParkId abstract fun getOpeningTimesByCarParkId(carParkId: String ): List < OpeningTimeResult > getPricingEntriesByPricingTableId abstract fun getPricingEntriesByPricingTableId(pricingTableId: String ): List < PricingEntryEntity > getPricingTablesByCarParkId abstract fun getPricingTablesByCarParkId(carParkId: String ): List < PricingTableEntity > saveAll abstract fun saveAll(carParks: List < CarParkLocationEntity >, openingDays: List < OpeningDayEntity >, openingTimes: List < OpeningTimeEntity >, pricingTables: List < PricingTableEntity >, pricingEntries: List < PricingEntryEntity >): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/#carparkdao","text":"interface CarParkDao","title":"CarParkDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/#functions","text":"Name Summary getByCellIds abstract fun getByCellIds(ids: List < String >): Flowable< List < CarParkLocationEntity >> getOpeningTimesByCarParkId abstract fun getOpeningTimesByCarParkId(carParkId: String ): List < OpeningTimeResult > getPricingEntriesByPricingTableId abstract fun getPricingEntriesByPricingTableId(pricingTableId: String ): List < PricingEntryEntity > getPricingTablesByCarParkId abstract fun getPricingTablesByCarParkId(carParkId: String ): List < PricingTableEntity > saveAll abstract fun saveAll(carParks: List < CarParkLocationEntity >, openingDays: List < OpeningDayEntity >, openingTimes: List < OpeningTimeEntity >, pricingTables: List < PricingTableEntity >, pricingEntries: List < PricingEntryEntity >): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/get-by-cell-ids/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkDao / getByCellIds getByCellIds abstract fun getByCellIds(ids: List < String >): Flowable< List < CarParkLocationEntity >>","title":"Get by cell ids"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/get-by-cell-ids/#getbycellids","text":"abstract fun getByCellIds(ids: List < String >): Flowable< List < CarParkLocationEntity >>","title":"getByCellIds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/get-opening-times-by-car-park-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkDao / getOpeningTimesByCarParkId getOpeningTimesByCarParkId abstract fun getOpeningTimesByCarParkId(carParkId: String ): List < OpeningTimeResult >","title":"Get opening times by car park id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/get-opening-times-by-car-park-id/#getopeningtimesbycarparkid","text":"abstract fun getOpeningTimesByCarParkId(carParkId: String ): List < OpeningTimeResult >","title":"getOpeningTimesByCarParkId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/get-pricing-entries-by-pricing-table-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkDao / getPricingEntriesByPricingTableId getPricingEntriesByPricingTableId abstract fun getPricingEntriesByPricingTableId(pricingTableId: String ): List < PricingEntryEntity >","title":"Get pricing entries by pricing table id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/get-pricing-entries-by-pricing-table-id/#getpricingentriesbypricingtableid","text":"abstract fun getPricingEntriesByPricingTableId(pricingTableId: String ): List < PricingEntryEntity >","title":"getPricingEntriesByPricingTableId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/get-pricing-tables-by-car-park-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkDao / getPricingTablesByCarParkId getPricingTablesByCarParkId abstract fun getPricingTablesByCarParkId(carParkId: String ): List < PricingTableEntity >","title":"Get pricing tables by car park id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/get-pricing-tables-by-car-park-id/#getpricingtablesbycarparkid","text":"abstract fun getPricingTablesByCarParkId(carParkId: String ): List < PricingTableEntity >","title":"getPricingTablesByCarParkId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/save-all/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkDao / saveAll saveAll abstract fun saveAll(carParks: List < CarParkLocationEntity >, openingDays: List < OpeningDayEntity >, openingTimes: List < OpeningTimeEntity >, pricingTables: List < PricingTableEntity >, pricingEntries: List < PricingEntryEntity >): Unit","title":"Save all"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-dao/save-all/#saveall","text":"abstract fun saveAll(carParks: List < CarParkLocationEntity >, openingDays: List < OpeningDayEntity >, openingTimes: List < OpeningTimeEntity >, pricingTables: List < PricingTableEntity >, pricingEntries: List < PricingEntryEntity >): Unit","title":"saveAll"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocation CarParkLocation @Immutable @TypeAdapters interface CarParkLocation Functions Name Summary address abstract fun address(): String ? carPark abstract fun carPark(): CarPark id abstract fun id(): String lat abstract fun lat(): Double lng abstract fun lng(): Double modeInfo abstract fun modeInfo(): ModeInfo name abstract fun name(): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/#carparklocation","text":"@Immutable @TypeAdapters interface CarParkLocation","title":"CarParkLocation"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/#functions","text":"Name Summary address abstract fun address(): String ? carPark abstract fun carPark(): CarPark id abstract fun id(): String lat abstract fun lat(): Double lng abstract fun lng(): Double modeInfo abstract fun modeInfo(): ModeInfo name abstract fun name(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/address/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocation / address address abstract fun address(): String ?","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/address/#address","text":"abstract fun address(): String ?","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/car-park/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocation / carPark carPark abstract fun carPark(): CarPark","title":"Car park"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/car-park/#carpark","text":"abstract fun carPark(): CarPark","title":"carPark"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocation / id id abstract fun id(): String","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/id/#id","text":"abstract fun id(): String","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/lat/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocation / lat lat abstract fun lat(): Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/lat/#lat","text":"abstract fun lat(): Double","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/lng/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocation / lng lng abstract fun lng(): Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/lng/#lng","text":"abstract fun lng(): Double","title":"lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/mode-info/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocation / modeInfo modeInfo abstract fun modeInfo(): ModeInfo","title":"Mode info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/mode-info/#modeinfo","text":"abstract fun modeInfo(): ModeInfo","title":"modeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocation / name name abstract fun name(): String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location/name/#name","text":"abstract fun name(): String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity CarParkLocationEntity class CarParkLocationEntity Constructors Name Summary <init> CarParkLocationEntity() Properties Name Summary address var address: String ? cellId lateinit var cellId: String identifier lateinit var identifier: String info var info: String ? lat var lat: Double lng var lng: Double localIconName lateinit var localIconName: String modeIdentifier var modeIdentifier: String ? name lateinit var name: String operator lateinit var operator: ParkingOperatorEntity remoteIconName var remoteIconName: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/#carparklocationentity","text":"class CarParkLocationEntity","title":"CarParkLocationEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/#constructors","text":"Name Summary <init> CarParkLocationEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/#properties","text":"Name Summary address var address: String ? cellId lateinit var cellId: String identifier lateinit var identifier: String info var info: String ? lat var lat: Double lng var lng: Double localIconName lateinit var localIconName: String modeIdentifier var modeIdentifier: String ? name lateinit var name: String operator lateinit var operator: ParkingOperatorEntity remoteIconName var remoteIconName: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / <init> <init> CarParkLocationEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/-init-/#init","text":"CarParkLocationEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/address/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / address address var address: String ?","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/address/#address","text":"var address: String ?","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/cell-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / cellId cellId lateinit var cellId: String","title":"Cell id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/cell-id/#cellid","text":"lateinit var cellId: String","title":"cellId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/identifier/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / identifier identifier lateinit var identifier: String","title":"Identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/identifier/#identifier","text":"lateinit var identifier: String","title":"identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/info/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / info info var info: String ?","title":"Info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/info/#info","text":"var info: String ?","title":"info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/lat/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / lat lat var lat: Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/lat/#lat","text":"var lat: Double","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/lng/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / lng lng var lng: Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/lng/#lng","text":"var lng: Double","title":"lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/local-icon-name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / localIconName localIconName lateinit var localIconName: String","title":"Local icon name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/local-icon-name/#localiconname","text":"lateinit var localIconName: String","title":"localIconName"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/mode-identifier/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / modeIdentifier modeIdentifier var modeIdentifier: String ?","title":"Mode identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/mode-identifier/#modeidentifier","text":"var modeIdentifier: String ?","title":"modeIdentifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/operator/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / operator operator lateinit var operator: ParkingOperatorEntity","title":"Operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/operator/#operator","text":"lateinit var operator: ParkingOperatorEntity","title":"operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/remote-icon-name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkLocationEntity / remoteIconName remoteIconName var remoteIconName: String ?","title":"Remote icon name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-location-entity/remote-icon-name/#remoteiconname","text":"var remoteIconName: String ?","title":"remoteIconName"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-mapper/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkMapper CarParkMapper open class CarParkMapper Constructors Name Summary <init> CarParkMapper() Functions Name Summary toEntity fun toEntity(cellId: String , carParks: List < CarParkLocation >): List < Triple < CarParkLocationEntity , Map < OpeningDayEntity , List < OpeningTimeEntity >>, Map < PricingTableEntity , List < PricingEntryEntity >>>>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-mapper/#carparkmapper","text":"open class CarParkMapper","title":"CarParkMapper"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-mapper/#constructors","text":"Name Summary <init> CarParkMapper()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-mapper/#functions","text":"Name Summary toEntity fun toEntity(cellId: String , carParks: List < CarParkLocation >): List < Triple < CarParkLocationEntity , Map < OpeningDayEntity , List < OpeningTimeEntity >>, Map < PricingTableEntity , List < PricingEntryEntity >>>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-mapper/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkMapper / <init> <init> CarParkMapper()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-mapper/-init-/#init","text":"CarParkMapper()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-mapper/to-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkMapper / toEntity toEntity fun toEntity(cellId: String , carParks: List < CarParkLocation >): List < Triple < CarParkLocationEntity , Map < OpeningDayEntity , List < OpeningTimeEntity >>, Map < PricingTableEntity , List < PricingEntryEntity >>>>","title":"To entity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-mapper/to-entity/#toentity","text":"fun toEntity(cellId: String , carParks: List < CarParkLocation >): List < Triple < CarParkLocationEntity , Map < OpeningDayEntity , List < OpeningTimeEntity >>, Map < PricingTableEntity , List < PricingEntryEntity >>>>","title":"toEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-persistor/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkPersistor CarParkPersistor open class CarParkPersistor Constructors Name Summary <init> CarParkPersistor(tripKitDatabase: TripKitDatabase ) Properties Name Summary tripKitDatabase val tripKitDatabase: TripKitDatabase Functions Name Summary saveCarParks fun saveCarParks(carParkEntity: List < Triple < CarParkLocationEntity , Map < OpeningDayEntity , List < OpeningTimeEntity >>, Map < PricingTableEntity , List < PricingEntryEntity >>>>): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-persistor/#carparkpersistor","text":"open class CarParkPersistor","title":"CarParkPersistor"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-persistor/#constructors","text":"Name Summary <init> CarParkPersistor(tripKitDatabase: TripKitDatabase )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-persistor/#properties","text":"Name Summary tripKitDatabase val tripKitDatabase: TripKitDatabase","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-persistor/#functions","text":"Name Summary saveCarParks fun saveCarParks(carParkEntity: List < Triple < CarParkLocationEntity , Map < OpeningDayEntity , List < OpeningTimeEntity >>, Map < PricingTableEntity , List < PricingEntryEntity >>>>): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-persistor/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkPersistor / <init> <init> CarParkPersistor(tripKitDatabase: TripKitDatabase )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-persistor/-init-/#init","text":"CarParkPersistor(tripKitDatabase: TripKitDatabase )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-persistor/save-car-parks/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkPersistor / saveCarParks saveCarParks fun saveCarParks(carParkEntity: List < Triple < CarParkLocationEntity , Map < OpeningDayEntity , List < OpeningTimeEntity >>, Map < PricingTableEntity , List < PricingEntryEntity >>>>): Completable","title":"Save car parks"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-persistor/save-car-parks/#savecarparks","text":"fun saveCarParks(carParkEntity: List < Triple < CarParkLocationEntity , Map < OpeningDayEntity , List < OpeningTimeEntity >>, Map < PricingTableEntity , List < PricingEntryEntity >>>>): Completable","title":"saveCarParks"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-persistor/trip-kit-database/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / CarParkPersistor / tripKitDatabase tripKitDatabase val tripKitDatabase: TripKitDatabase","title":"Trip kit database"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-car-park-persistor/trip-kit-database/#tripkitdatabase","text":"val tripKitDatabase: TripKitDatabase","title":"tripKitDatabase"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningDay OpeningDay @Immutable @TypeAdapters interface OpeningDay Functions Name Summary name abstract fun name(): String times abstract fun times(): List < OpeningTime >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day/#openingday","text":"@Immutable @TypeAdapters interface OpeningDay","title":"OpeningDay"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day/#functions","text":"Name Summary name abstract fun name(): String times abstract fun times(): List < OpeningTime >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningDay / name name abstract fun name(): String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day/name/#name","text":"abstract fun name(): String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day/times/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningDay / times times abstract fun times(): List < OpeningTime >","title":"Times"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day/times/#times","text":"abstract fun times(): List < OpeningTime >","title":"times"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningDayEntity OpeningDayEntity class OpeningDayEntity Constructors Name Summary <init> OpeningDayEntity() Properties Name Summary carParkId lateinit var carParkId: String id lateinit var id: String name lateinit var name: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/#openingdayentity","text":"class OpeningDayEntity","title":"OpeningDayEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/#constructors","text":"Name Summary <init> OpeningDayEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/#properties","text":"Name Summary carParkId lateinit var carParkId: String id lateinit var id: String name lateinit var name: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningDayEntity / <init> <init> OpeningDayEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/-init-/#init","text":"OpeningDayEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/car-park-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningDayEntity / carParkId carParkId lateinit var carParkId: String","title":"Car park id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/car-park-id/#carparkid","text":"lateinit var carParkId: String","title":"carParkId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningDayEntity / id id lateinit var id: String","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/id/#id","text":"lateinit var id: String","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningDayEntity / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-day-entity/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-hours/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningHours OpeningHours @Immutable @TypeAdapters interface OpeningHours Functions Name Summary days abstract fun days(): List < OpeningDay >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-hours/#openinghours","text":"@Immutable @TypeAdapters interface OpeningHours","title":"OpeningHours"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-hours/#functions","text":"Name Summary days abstract fun days(): List < OpeningDay >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-hours/days/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningHours / days days abstract fun days(): List < OpeningDay >","title":"Days"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-hours/days/#days","text":"abstract fun days(): List < OpeningDay >","title":"days"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTime OpeningTime @Immutable @TypeAdapters interface OpeningTime Functions Name Summary closes abstract fun closes(): String opens abstract fun opens(): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time/#openingtime","text":"@Immutable @TypeAdapters interface OpeningTime","title":"OpeningTime"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time/#functions","text":"Name Summary closes abstract fun closes(): String opens abstract fun opens(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time/closes/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTime / closes closes abstract fun closes(): String","title":"Closes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time/closes/#closes","text":"abstract fun closes(): String","title":"closes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time/opens/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTime / opens opens abstract fun opens(): String","title":"Opens"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time/opens/#opens","text":"abstract fun opens(): String","title":"opens"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTimeEntity OpeningTimeEntity class OpeningTimeEntity Constructors Name Summary <init> OpeningTimeEntity() Properties Name Summary closes lateinit var closes: String id var id: Int openingDayId lateinit var openingDayId: String opens lateinit var opens: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/#openingtimeentity","text":"class OpeningTimeEntity","title":"OpeningTimeEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/#constructors","text":"Name Summary <init> OpeningTimeEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/#properties","text":"Name Summary closes lateinit var closes: String id var id: Int openingDayId lateinit var openingDayId: String opens lateinit var opens: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTimeEntity / <init> <init> OpeningTimeEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/-init-/#init","text":"OpeningTimeEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/closes/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTimeEntity / closes closes lateinit var closes: String","title":"Closes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/closes/#closes","text":"lateinit var closes: String","title":"closes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTimeEntity / id id var id: Int","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/id/#id","text":"var id: Int","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/opening-day-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTimeEntity / openingDayId openingDayId lateinit var openingDayId: String","title":"Opening day id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/opening-day-id/#openingdayid","text":"lateinit var openingDayId: String","title":"openingDayId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/opens/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTimeEntity / opens opens lateinit var opens: String","title":"Opens"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-entity/opens/#opens","text":"lateinit var opens: String","title":"opens"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTimeResult OpeningTimeResult class OpeningTimeResult Constructors Name Summary <init> OpeningTimeResult() Properties Name Summary closes lateinit var closes: String name lateinit var name: String opens lateinit var opens: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/#openingtimeresult","text":"class OpeningTimeResult","title":"OpeningTimeResult"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/#constructors","text":"Name Summary <init> OpeningTimeResult()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/#properties","text":"Name Summary closes lateinit var closes: String name lateinit var name: String opens lateinit var opens: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTimeResult / <init> <init> OpeningTimeResult()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/-init-/#init","text":"OpeningTimeResult()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/closes/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTimeResult / closes closes lateinit var closes: String","title":"Closes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/closes/#closes","text":"lateinit var closes: String","title":"closes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTimeResult / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/opens/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / OpeningTimeResult / opens opens lateinit var opens: String","title":"Opens"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-opening-time-result/opens/#opens","text":"lateinit var opens: String","title":"opens"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-module/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingModule ParkingModule @Module class ParkingModule Constructors Name Summary <init> ParkingModule() Functions Name Summary parkingRepository fun parkingRepository(api: LocationsApi , stopFetcher: StopsFetcher , regionService: RegionService , tripKitDatabase: TripKitDatabase ): ParkingRepository","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-module/#parkingmodule","text":"@Module class ParkingModule","title":"ParkingModule"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-module/#constructors","text":"Name Summary <init> ParkingModule()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-module/#functions","text":"Name Summary parkingRepository fun parkingRepository(api: LocationsApi , stopFetcher: StopsFetcher , regionService: RegionService , tripKitDatabase: TripKitDatabase ): ParkingRepository","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-module/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingModule / <init> <init> ParkingModule()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-module/-init-/#init","text":"ParkingModule()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-module/parking-repository/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingModule / parkingRepository parkingRepository @Provides fun parkingRepository(api: LocationsApi , stopFetcher: StopsFetcher , regionService: RegionService , tripKitDatabase: TripKitDatabase ): ParkingRepository","title":"Parking repository"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-module/parking-repository/#parkingrepository","text":"@Provides fun parkingRepository(api: LocationsApi , stopFetcher: StopsFetcher , regionService: RegionService , tripKitDatabase: TripKitDatabase ): ParkingRepository","title":"parkingRepository"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingOperator ParkingOperator @Immutable @TypeAdapters interface ParkingOperator Functions Name Summary name abstract fun name(): String phone abstract fun phone(): String ? website abstract fun website(): String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator/#parkingoperator","text":"@Immutable @TypeAdapters interface ParkingOperator","title":"ParkingOperator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator/#functions","text":"Name Summary name abstract fun name(): String phone abstract fun phone(): String ? website abstract fun website(): String ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingOperator / name name abstract fun name(): String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator/name/#name","text":"abstract fun name(): String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator/phone/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingOperator / phone phone abstract fun phone(): String ?","title":"Phone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator/phone/#phone","text":"abstract fun phone(): String ?","title":"phone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator/website/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingOperator / website website abstract fun website(): String ?","title":"Website"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator/website/#website","text":"abstract fun website(): String ?","title":"website"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingOperatorEntity ParkingOperatorEntity class ParkingOperatorEntity Constructors Name Summary <init> ParkingOperatorEntity() Properties Name Summary name lateinit var name: String phone var phone: String ? website var website: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/#parkingoperatorentity","text":"class ParkingOperatorEntity","title":"ParkingOperatorEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/#constructors","text":"Name Summary <init> ParkingOperatorEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/#properties","text":"Name Summary name lateinit var name: String phone var phone: String ? website var website: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingOperatorEntity / <init> <init> ParkingOperatorEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/-init-/#init","text":"ParkingOperatorEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingOperatorEntity / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/phone/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingOperatorEntity / phone phone var phone: String ?","title":"Phone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/phone/#phone","text":"var phone: String ?","title":"phone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/website/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / ParkingOperatorEntity / website website var website: String ?","title":"Website"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-parking-operator-entity/website/#website","text":"var website: String ?","title":"website"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingEntry PricingEntry @Immutable @TypeAdapters interface PricingEntry Functions Name Summary label abstract fun label(): String ? maxDurationInMinutes abstract fun maxDurationInMinutes(): Int ? price abstract fun price(): Float","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry/#pricingentry","text":"@Immutable @TypeAdapters interface PricingEntry","title":"PricingEntry"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry/#functions","text":"Name Summary label abstract fun label(): String ? maxDurationInMinutes abstract fun maxDurationInMinutes(): Int ? price abstract fun price(): Float","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry/label/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingEntry / label label abstract fun label(): String ?","title":"Label"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry/label/#label","text":"abstract fun label(): String ?","title":"label"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry/max-duration-in-minutes/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingEntry / maxDurationInMinutes maxDurationInMinutes abstract fun maxDurationInMinutes(): Int ?","title":"Max duration in minutes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry/max-duration-in-minutes/#maxdurationinminutes","text":"abstract fun maxDurationInMinutes(): Int ?","title":"maxDurationInMinutes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry/price/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingEntry / price price abstract fun price(): Float","title":"Price"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry/price/#price","text":"abstract fun price(): Float","title":"price"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingEntryEntity PricingEntryEntity class PricingEntryEntity Constructors Name Summary <init> PricingEntryEntity() Properties Name Summary id var id: Int label var label: String ? maxDurationInMinutes var maxDurationInMinutes: Int ? price var price: Float pricingTableId lateinit var pricingTableId: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/#pricingentryentity","text":"class PricingEntryEntity","title":"PricingEntryEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/#constructors","text":"Name Summary <init> PricingEntryEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/#properties","text":"Name Summary id var id: Int label var label: String ? maxDurationInMinutes var maxDurationInMinutes: Int ? price var price: Float pricingTableId lateinit var pricingTableId: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingEntryEntity / <init> <init> PricingEntryEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/-init-/#init","text":"PricingEntryEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingEntryEntity / id id var id: Int","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/id/#id","text":"var id: Int","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/label/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingEntryEntity / label label var label: String ?","title":"Label"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/label/#label","text":"var label: String ?","title":"label"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/max-duration-in-minutes/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingEntryEntity / maxDurationInMinutes maxDurationInMinutes var maxDurationInMinutes: Int ?","title":"Max duration in minutes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/max-duration-in-minutes/#maxdurationinminutes","text":"var maxDurationInMinutes: Int ?","title":"maxDurationInMinutes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/price/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingEntryEntity / price price var price: Float","title":"Price"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/price/#price","text":"var price: Float","title":"price"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/pricing-table-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingEntryEntity / pricingTableId pricingTableId lateinit var pricingTableId: String","title":"Pricing table id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-entry-entity/pricing-table-id/#pricingtableid","text":"lateinit var pricingTableId: String","title":"pricingTableId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTable PricingTable @Immutable @TypeAdapters interface PricingTable Functions Name Summary currency abstract fun currency(): String currencySymbol abstract fun currencySymbol(): String entries abstract fun entries(): List < PricingEntry > subtitle abstract fun subtitle(): String ? title abstract fun title(): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/#pricingtable","text":"@Immutable @TypeAdapters interface PricingTable","title":"PricingTable"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/#functions","text":"Name Summary currency abstract fun currency(): String currencySymbol abstract fun currencySymbol(): String entries abstract fun entries(): List < PricingEntry > subtitle abstract fun subtitle(): String ? title abstract fun title(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/currency-symbol/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTable / currencySymbol currencySymbol abstract fun currencySymbol(): String","title":"Currency symbol"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/currency-symbol/#currencysymbol","text":"abstract fun currencySymbol(): String","title":"currencySymbol"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/currency/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTable / currency currency abstract fun currency(): String","title":"Currency"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/currency/#currency","text":"abstract fun currency(): String","title":"currency"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/entries/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTable / entries entries abstract fun entries(): List < PricingEntry >","title":"Entries"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/entries/#entries","text":"abstract fun entries(): List < PricingEntry >","title":"entries"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/subtitle/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTable / subtitle subtitle abstract fun subtitle(): String ?","title":"Subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/subtitle/#subtitle","text":"abstract fun subtitle(): String ?","title":"subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/title/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTable / title title abstract fun title(): String","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table/title/#title","text":"abstract fun title(): String","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTableEntity PricingTableEntity class PricingTableEntity Constructors Name Summary <init> PricingTableEntity() Properties Name Summary carParkId lateinit var carParkId: String currency lateinit var currency: String currencySymbol lateinit var currencySymbol: String id lateinit var id: String subtitle var subtitle: String ? title lateinit var title: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/#pricingtableentity","text":"class PricingTableEntity","title":"PricingTableEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/#constructors","text":"Name Summary <init> PricingTableEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/#properties","text":"Name Summary carParkId lateinit var carParkId: String currency lateinit var currency: String currencySymbol lateinit var currencySymbol: String id lateinit var id: String subtitle var subtitle: String ? title lateinit var title: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTableEntity / <init> <init> PricingTableEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/-init-/#init","text":"PricingTableEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/car-park-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTableEntity / carParkId carParkId lateinit var carParkId: String","title":"Car park id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/car-park-id/#carparkid","text":"lateinit var carParkId: String","title":"carParkId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/currency-symbol/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTableEntity / currencySymbol currencySymbol lateinit var currencySymbol: String","title":"Currency symbol"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/currency-symbol/#currencysymbol","text":"lateinit var currencySymbol: String","title":"currencySymbol"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/currency/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTableEntity / currency currency lateinit var currency: String","title":"Currency"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/currency/#currency","text":"lateinit var currency: String","title":"currency"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTableEntity / id id lateinit var id: String","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/id/#id","text":"lateinit var id: String","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/subtitle/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTableEntity / subtitle subtitle var subtitle: String ?","title":"Subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/subtitle/#subtitle","text":"var subtitle: String ?","title":"subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/title/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carparks / PricingTableEntity / title title lateinit var title: String","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carparks/-pricing-table-entity/title/#title","text":"lateinit var title: String","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods Package com.skedgo.tripkit.data.database.locations.carpods Types Name Summary CarPodDao interface CarPodDao CarPodEntity class CarPodEntity CarPodLocation class CarPodLocation CarPodMapper open class CarPodMapper CarPodRepository open class CarPodRepository CarPodVehicle class CarPodVehicle","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/#package-comskedgotripkitdatadatabaselocationscarpods","text":"","title":"Package com.skedgo.tripkit.data.database.locations.carpods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/#types","text":"Name Summary CarPodDao interface CarPodDao CarPodEntity class CarPodEntity CarPodLocation class CarPodLocation CarPodMapper open class CarPodMapper CarPodRepository open class CarPodRepository CarPodVehicle class CarPodVehicle","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodDao CarPodDao interface CarPodDao Functions Name Summary getCarPodById abstract fun getCarPodById(id: String ): CarPodEntity getCarPodsByCellIds abstract fun getCarPodsByCellIds(cellIds: List < String >): Flowable< List < CarPodEntity >> getCarPodsByCellIdsWithinBounds abstract fun getCarPodsByCellIdsWithinBounds(cellIds: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < CarPodEntity >> getVehiclesByCarPodId abstract fun getVehiclesByCarPodId(carPodId: String ): List < CarPodVehicle >? saveAll abstract fun saveAll(entities: List < CarPodEntity >, vehicles: List < CarPodVehicle >): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/#carpoddao","text":"interface CarPodDao","title":"CarPodDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/#functions","text":"Name Summary getCarPodById abstract fun getCarPodById(id: String ): CarPodEntity getCarPodsByCellIds abstract fun getCarPodsByCellIds(cellIds: List < String >): Flowable< List < CarPodEntity >> getCarPodsByCellIdsWithinBounds abstract fun getCarPodsByCellIdsWithinBounds(cellIds: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < CarPodEntity >> getVehiclesByCarPodId abstract fun getVehiclesByCarPodId(carPodId: String ): List < CarPodVehicle >? saveAll abstract fun saveAll(entities: List < CarPodEntity >, vehicles: List < CarPodVehicle >): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/get-car-pod-by-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodDao / getCarPodById getCarPodById abstract fun getCarPodById(id: String ): CarPodEntity","title":"Get car pod by id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/get-car-pod-by-id/#getcarpodbyid","text":"abstract fun getCarPodById(id: String ): CarPodEntity","title":"getCarPodById"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/get-car-pods-by-cell-ids-within-bounds/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodDao / getCarPodsByCellIdsWithinBounds getCarPodsByCellIdsWithinBounds abstract fun getCarPodsByCellIdsWithinBounds(cellIds: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < CarPodEntity >>","title":"Get car pods by cell ids within bounds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/get-car-pods-by-cell-ids-within-bounds/#getcarpodsbycellidswithinbounds","text":"abstract fun getCarPodsByCellIdsWithinBounds(cellIds: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < CarPodEntity >>","title":"getCarPodsByCellIdsWithinBounds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/get-car-pods-by-cell-ids/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodDao / getCarPodsByCellIds getCarPodsByCellIds abstract fun getCarPodsByCellIds(cellIds: List < String >): Flowable< List < CarPodEntity >>","title":"Get car pods by cell ids"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/get-car-pods-by-cell-ids/#getcarpodsbycellids","text":"abstract fun getCarPodsByCellIds(cellIds: List < String >): Flowable< List < CarPodEntity >>","title":"getCarPodsByCellIds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/get-vehicles-by-car-pod-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodDao / getVehiclesByCarPodId getVehiclesByCarPodId abstract fun getVehiclesByCarPodId(carPodId: String ): List < CarPodVehicle >?","title":"Get vehicles by car pod id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/get-vehicles-by-car-pod-id/#getvehiclesbycarpodid","text":"abstract fun getVehiclesByCarPodId(carPodId: String ): List < CarPodVehicle >?","title":"getVehiclesByCarPodId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/save-all/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodDao / saveAll saveAll abstract fun saveAll(entities: List < CarPodEntity >, vehicles: List < CarPodVehicle >): Unit","title":"Save all"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-dao/save-all/#saveall","text":"abstract fun saveAll(entities: List < CarPodEntity >, vehicles: List < CarPodVehicle >): Unit","title":"saveAll"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity CarPodEntity class CarPodEntity Constructors Name Summary <init> CarPodEntity() Properties Name Summary address var address: String ? appURLAndroid var appURLAndroid: String ? availableChargingSpaces var availableChargingSpaces: Int ? availableVehicles var availableVehicles: Int ? cellId lateinit var cellId: String deepLink var deepLink: String ? id lateinit var id: String inService var inService: Boolean ? lastUpdate var lastUpdate: Long ? lat var lat: Double lng var lng: Double localIcon lateinit var localIcon: String name lateinit var name: String operatorName lateinit var operatorName: String operatorPhone var operatorPhone: String ? operatorWebsite var operatorWebsite: String ? remoteIcon var remoteIcon: String ? totalSpaces var totalSpaces: Int ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/#carpodentity","text":"class CarPodEntity","title":"CarPodEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/#constructors","text":"Name Summary <init> CarPodEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/#properties","text":"Name Summary address var address: String ? appURLAndroid var appURLAndroid: String ? availableChargingSpaces var availableChargingSpaces: Int ? availableVehicles var availableVehicles: Int ? cellId lateinit var cellId: String deepLink var deepLink: String ? id lateinit var id: String inService var inService: Boolean ? lastUpdate var lastUpdate: Long ? lat var lat: Double lng var lng: Double localIcon lateinit var localIcon: String name lateinit var name: String operatorName lateinit var operatorName: String operatorPhone var operatorPhone: String ? operatorWebsite var operatorWebsite: String ? remoteIcon var remoteIcon: String ? totalSpaces var totalSpaces: Int ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / <init> <init> CarPodEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/-init-/#init","text":"CarPodEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/address/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / address address var address: String ?","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/address/#address","text":"var address: String ?","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/app-u-r-l-android/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / appURLAndroid appURLAndroid var appURLAndroid: String ?","title":"App u r l android"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/app-u-r-l-android/#appurlandroid","text":"var appURLAndroid: String ?","title":"appURLAndroid"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/available-charging-spaces/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / availableChargingSpaces availableChargingSpaces var availableChargingSpaces: Int ?","title":"Available charging spaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/available-charging-spaces/#availablechargingspaces","text":"var availableChargingSpaces: Int ?","title":"availableChargingSpaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/available-vehicles/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / availableVehicles availableVehicles var availableVehicles: Int ?","title":"Available vehicles"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/available-vehicles/#availablevehicles","text":"var availableVehicles: Int ?","title":"availableVehicles"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/cell-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / cellId cellId lateinit var cellId: String","title":"Cell id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/cell-id/#cellid","text":"lateinit var cellId: String","title":"cellId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/deep-link/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / deepLink deepLink var deepLink: String ?","title":"Deep link"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/deep-link/#deeplink","text":"var deepLink: String ?","title":"deepLink"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / id id lateinit var id: String","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/id/#id","text":"lateinit var id: String","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/in-service/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / inService inService var inService: Boolean ?","title":"In service"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/in-service/#inservice","text":"var inService: Boolean ?","title":"inService"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/last-update/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / lastUpdate lastUpdate var lastUpdate: Long ?","title":"Last update"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/last-update/#lastupdate","text":"var lastUpdate: Long ?","title":"lastUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/lat/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / lat lat var lat: Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/lat/#lat","text":"var lat: Double","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/lng/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / lng lng var lng: Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/lng/#lng","text":"var lng: Double","title":"lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/local-icon/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / localIcon localIcon lateinit var localIcon: String","title":"Local icon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/local-icon/#localicon","text":"lateinit var localIcon: String","title":"localIcon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/operator-name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / operatorName operatorName lateinit var operatorName: String","title":"Operator name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/operator-name/#operatorname","text":"lateinit var operatorName: String","title":"operatorName"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/operator-phone/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / operatorPhone operatorPhone var operatorPhone: String ?","title":"Operator phone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/operator-phone/#operatorphone","text":"var operatorPhone: String ?","title":"operatorPhone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/operator-website/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / operatorWebsite operatorWebsite var operatorWebsite: String ?","title":"Operator website"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/operator-website/#operatorwebsite","text":"var operatorWebsite: String ?","title":"operatorWebsite"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/remote-icon/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / remoteIcon remoteIcon var remoteIcon: String ?","title":"Remote icon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/remote-icon/#remoteicon","text":"var remoteIcon: String ?","title":"remoteIcon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/total-spaces/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodEntity / totalSpaces totalSpaces var totalSpaces: Int ?","title":"Total spaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-entity/total-spaces/#totalspaces","text":"var totalSpaces: Int ?","title":"totalSpaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation CarPodLocation class CarPodLocation Types Name Summary AppInfoEntity class AppInfoEntity CarPod class CarPod Operator class Operator Vehicle class Vehicle Constructors Name Summary <init> CarPodLocation() Properties Name Summary address var address: String ? carPod lateinit var carPod: CarPod id lateinit var id: String lat var lat: Double lng var lng: Double modeInfo lateinit var modeInfo: ModeInfo name lateinit var name: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/#carpodlocation","text":"class CarPodLocation","title":"CarPodLocation"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/#types","text":"Name Summary AppInfoEntity class AppInfoEntity CarPod class CarPod Operator class Operator Vehicle class Vehicle","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/#constructors","text":"Name Summary <init> CarPodLocation()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/#properties","text":"Name Summary address var address: String ? carPod lateinit var carPod: CarPod id lateinit var id: String lat var lat: Double lng var lng: Double modeInfo lateinit var modeInfo: ModeInfo name lateinit var name: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / <init> <init> CarPodLocation()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-init-/#init","text":"CarPodLocation()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/address/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / address address var address: String ?","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/address/#address","text":"var address: String ?","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/car-pod/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / carPod carPod lateinit var carPod: CarPod","title":"Car pod"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/car-pod/#carpod","text":"lateinit var carPod: CarPod","title":"carPod"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / id id lateinit var id: String","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/id/#id","text":"lateinit var id: String","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/lat/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / lat lat var lat: Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/lat/#lat","text":"var lat: Double","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/lng/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / lng lng var lng: Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/lng/#lng","text":"var lng: Double","title":"lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/mode-info/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / modeInfo modeInfo lateinit var modeInfo: ModeInfo","title":"Mode info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/mode-info/#modeinfo","text":"lateinit var modeInfo: ModeInfo","title":"modeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-app-info-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / AppInfoEntity AppInfoEntity class AppInfoEntity Constructors Name Summary <init> AppInfoEntity() Properties Name Summary appURLAndroid var appURLAndroid: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-app-info-entity/#appinfoentity","text":"class AppInfoEntity","title":"AppInfoEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-app-info-entity/#constructors","text":"Name Summary <init> AppInfoEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-app-info-entity/#properties","text":"Name Summary appURLAndroid var appURLAndroid: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-app-info-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / AppInfoEntity / <init> <init> AppInfoEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-app-info-entity/-init-/#init","text":"AppInfoEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-app-info-entity/app-u-r-l-android/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / AppInfoEntity / appURLAndroid appURLAndroid var appURLAndroid: String ?","title":"App u r l android"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-app-info-entity/app-u-r-l-android/#appurlandroid","text":"var appURLAndroid: String ?","title":"appURLAndroid"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / CarPod CarPod class CarPod Constructors Name Summary <init> CarPod() Properties Name Summary availableChargingSpaces var availableChargingSpaces: Int ? availableVehicles var availableVehicles: Int ? deepLink var deepLink: String ? inService var inService: Boolean ? lastUpdate var lastUpdate: Long ? operator lateinit var operator: Operator totalSpaces var totalSpaces: Int ? vehicles var vehicles: List <Vehicle>?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/#carpod","text":"class CarPod","title":"CarPod"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/#constructors","text":"Name Summary <init> CarPod()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/#properties","text":"Name Summary availableChargingSpaces var availableChargingSpaces: Int ? availableVehicles var availableVehicles: Int ? deepLink var deepLink: String ? inService var inService: Boolean ? lastUpdate var lastUpdate: Long ? operator lateinit var operator: Operator totalSpaces var totalSpaces: Int ? vehicles var vehicles: List <Vehicle>?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / CarPod / <init> <init> CarPod()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/-init-/#init","text":"CarPod()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/available-charging-spaces/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / CarPod / availableChargingSpaces availableChargingSpaces var availableChargingSpaces: Int ?","title":"Available charging spaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/available-charging-spaces/#availablechargingspaces","text":"var availableChargingSpaces: Int ?","title":"availableChargingSpaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/available-vehicles/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / CarPod / availableVehicles availableVehicles var availableVehicles: Int ?","title":"Available vehicles"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/available-vehicles/#availablevehicles","text":"var availableVehicles: Int ?","title":"availableVehicles"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/deep-link/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / CarPod / deepLink deepLink var deepLink: String ?","title":"Deep link"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/deep-link/#deeplink","text":"var deepLink: String ?","title":"deepLink"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/in-service/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / CarPod / inService inService var inService: Boolean ?","title":"In service"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/in-service/#inservice","text":"var inService: Boolean ?","title":"inService"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/last-update/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / CarPod / lastUpdate lastUpdate var lastUpdate: Long ?","title":"Last update"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/last-update/#lastupdate","text":"var lastUpdate: Long ?","title":"lastUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/operator/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / CarPod / operator operator lateinit var operator: Operator","title":"Operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/operator/#operator","text":"lateinit var operator: Operator","title":"operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/total-spaces/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / CarPod / totalSpaces totalSpaces var totalSpaces: Int ?","title":"Total spaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/total-spaces/#totalspaces","text":"var totalSpaces: Int ?","title":"totalSpaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/vehicles/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / CarPod / vehicles vehicles var vehicles: List <Vehicle>?","title":"Vehicles"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-car-pod/vehicles/#vehicles","text":"var vehicles: List <Vehicle>?","title":"vehicles"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / Operator Operator class Operator Constructors Name Summary <init> Operator() Properties Name Summary appInfo var appInfo: AppInfoEntity? name lateinit var name: String phone var phone: String ? website var website: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/#operator","text":"class Operator","title":"Operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/#constructors","text":"Name Summary <init> Operator()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/#properties","text":"Name Summary appInfo var appInfo: AppInfoEntity? name lateinit var name: String phone var phone: String ? website var website: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / Operator / <init> <init> Operator()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/-init-/#init","text":"Operator()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/app-info/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / Operator / appInfo appInfo var appInfo: AppInfoEntity?","title":"App info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/app-info/#appinfo","text":"var appInfo: AppInfoEntity?","title":"appInfo"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / Operator / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/phone/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / Operator / phone phone var phone: String ?","title":"Phone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/phone/#phone","text":"var phone: String ?","title":"phone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/website/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / Operator / website website var website: String ?","title":"Website"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-operator/website/#website","text":"var website: String ?","title":"website"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / Vehicle Vehicle class Vehicle Constructors Name Summary <init> Vehicle() Properties Name Summary fuelType var fuelType: String ? licensePlate var licensePlate: String ? name lateinit var name: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/#vehicle","text":"class Vehicle","title":"Vehicle"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/#constructors","text":"Name Summary <init> Vehicle()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/#properties","text":"Name Summary fuelType var fuelType: String ? licensePlate var licensePlate: String ? name lateinit var name: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / Vehicle / <init> <init> Vehicle()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/-init-/#init","text":"Vehicle()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/fuel-type/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / Vehicle / fuelType fuelType var fuelType: String ?","title":"Fuel type"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/fuel-type/#fueltype","text":"var fuelType: String ?","title":"fuelType"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/license-plate/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / Vehicle / licensePlate licensePlate var licensePlate: String ?","title":"License plate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/license-plate/#licenseplate","text":"var licensePlate: String ?","title":"licensePlate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodLocation / Vehicle / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-location/-vehicle/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-mapper/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodMapper CarPodMapper open class CarPodMapper Constructors Name Summary <init> CarPodMapper() Functions Name Summary toEntity fun toEntity(key: String , carPods: List < CarPodLocation >): List < Pair < CarPodEntity , List < CarPodVehicle >?>>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-mapper/#carpodmapper","text":"open class CarPodMapper","title":"CarPodMapper"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-mapper/#constructors","text":"Name Summary <init> CarPodMapper()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-mapper/#functions","text":"Name Summary toEntity fun toEntity(key: String , carPods: List < CarPodLocation >): List < Pair < CarPodEntity , List < CarPodVehicle >?>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-mapper/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodMapper / <init> <init> CarPodMapper()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-mapper/-init-/#init","text":"CarPodMapper()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-mapper/to-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodMapper / toEntity toEntity fun toEntity(key: String , carPods: List < CarPodLocation >): List < Pair < CarPodEntity , List < CarPodVehicle >?>>","title":"To entity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-mapper/to-entity/#toentity","text":"fun toEntity(key: String , carPods: List < CarPodLocation >): List < Pair < CarPodEntity , List < CarPodVehicle >?>>","title":"toEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodRepository CarPodRepository open class CarPodRepository Constructors Name Summary <init> CarPodRepository(database: TripKitDatabase ) Functions Name Summary getCarPod fun getCarPod(id: String ): Single< CarPod > getCarPodsByCellIds fun getCarPodsByCellIds(cellIds: List < String >): Observable< List < CarPod >> getCarPodsByCellIdsWithinBounds fun getCarPodsByCellIdsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < CarPod >> saveCarPods fun saveCarPods(carPodEntities: List < Pair < CarPodEntity , List < CarPodVehicle >?>>): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/#carpodrepository","text":"open class CarPodRepository","title":"CarPodRepository"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/#constructors","text":"Name Summary <init> CarPodRepository(database: TripKitDatabase )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/#functions","text":"Name Summary getCarPod fun getCarPod(id: String ): Single< CarPod > getCarPodsByCellIds fun getCarPodsByCellIds(cellIds: List < String >): Observable< List < CarPod >> getCarPodsByCellIdsWithinBounds fun getCarPodsByCellIdsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < CarPod >> saveCarPods fun saveCarPods(carPodEntities: List < Pair < CarPodEntity , List < CarPodVehicle >?>>): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodRepository / <init> <init> CarPodRepository(database: TripKitDatabase )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/-init-/#init","text":"CarPodRepository(database: TripKitDatabase )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/get-car-pod/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodRepository / getCarPod getCarPod fun getCarPod(id: String ): Single< CarPod >","title":"Get car pod"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/get-car-pod/#getcarpod","text":"fun getCarPod(id: String ): Single< CarPod >","title":"getCarPod"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/get-car-pods-by-cell-ids-within-bounds/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodRepository / getCarPodsByCellIdsWithinBounds getCarPodsByCellIdsWithinBounds fun getCarPodsByCellIdsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < CarPod >>","title":"Get car pods by cell ids within bounds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/get-car-pods-by-cell-ids-within-bounds/#getcarpodsbycellidswithinbounds","text":"fun getCarPodsByCellIdsWithinBounds(cellIds: List < String >, southwest: GeoPoint , northEast: GeoPoint ): Observable< List < CarPod >>","title":"getCarPodsByCellIdsWithinBounds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/get-car-pods-by-cell-ids/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodRepository / getCarPodsByCellIds getCarPodsByCellIds fun getCarPodsByCellIds(cellIds: List < String >): Observable< List < CarPod >>","title":"Get car pods by cell ids"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/get-car-pods-by-cell-ids/#getcarpodsbycellids","text":"fun getCarPodsByCellIds(cellIds: List < String >): Observable< List < CarPod >>","title":"getCarPodsByCellIds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/save-car-pods/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodRepository / saveCarPods saveCarPods fun saveCarPods(carPodEntities: List < Pair < CarPodEntity , List < CarPodVehicle >?>>): Completable","title":"Save car pods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-repository/save-car-pods/#savecarpods","text":"fun saveCarPods(carPodEntities: List < Pair < CarPodEntity , List < CarPodVehicle >?>>): Completable","title":"saveCarPods"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodVehicle CarPodVehicle class CarPodVehicle Constructors Name Summary <init> CarPodVehicle() Properties Name Summary carPodId lateinit var carPodId: String fuelType var fuelType: String ? id var id: Int licensePlate var licensePlate: String ? name lateinit var name: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/#carpodvehicle","text":"class CarPodVehicle","title":"CarPodVehicle"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/#constructors","text":"Name Summary <init> CarPodVehicle()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/#properties","text":"Name Summary carPodId lateinit var carPodId: String fuelType var fuelType: String ? id var id: Int licensePlate var licensePlate: String ? name lateinit var name: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodVehicle / <init> <init> CarPodVehicle()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/-init-/#init","text":"CarPodVehicle()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/car-pod-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodVehicle / carPodId carPodId lateinit var carPodId: String","title":"Car pod id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/car-pod-id/#carpodid","text":"lateinit var carPodId: String","title":"carPodId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/fuel-type/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodVehicle / fuelType fuelType var fuelType: String ?","title":"Fuel type"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/fuel-type/#fueltype","text":"var fuelType: String ?","title":"fuelType"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodVehicle / id id var id: Int","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/id/#id","text":"var id: Int","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/license-plate/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodVehicle / licensePlate licensePlate var licensePlate: String ?","title":"License plate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/license-plate/#licenseplate","text":"var licensePlate: String ?","title":"licensePlate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.carpods / CarPodVehicle / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.carpods/-car-pod-vehicle/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking Package com.skedgo.tripkit.data.database.locations.onstreetparking Types Name Summary OnStreetParking interface OnStreetParking OnStreetParkingApi interface OnStreetParkingApi OnStreetParkingDao interface OnStreetParkingDao OnStreetParkingDetailsDto interface OnStreetParkingDetailsDto OnStreetParkingEntity class OnStreetParkingEntity OnStreetParkingLocation interface OnStreetParkingLocation OnStreetParkingLocationDto interface OnStreetParkingLocationDto OnStreetParkingMapper open class OnStreetParkingMapper OnStreetParkingModule class OnStreetParkingModule OnStreetParkingPersistor open class OnStreetParkingPersistor OnStreetParkingRepositoryImpl class OnStreetParkingRepositoryImpl : OnStreetParkingRepository ParkingProvider interface ParkingProvider RestrictionDayAndTimeDto interface RestrictionDayAndTimeDto RestrictionDayDto interface RestrictionDayDto RestrictionDto interface RestrictionDto RestrictionTimeDto interface RestrictionTimeDto VacancyConverters object VacancyConverters","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/#package-comskedgotripkitdatadatabaselocationsonstreetparking","text":"","title":"Package com.skedgo.tripkit.data.database.locations.onstreetparking"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/#types","text":"Name Summary OnStreetParking interface OnStreetParking OnStreetParkingApi interface OnStreetParkingApi OnStreetParkingDao interface OnStreetParkingDao OnStreetParkingDetailsDto interface OnStreetParkingDetailsDto OnStreetParkingEntity class OnStreetParkingEntity OnStreetParkingLocation interface OnStreetParkingLocation OnStreetParkingLocationDto interface OnStreetParkingLocationDto OnStreetParkingMapper open class OnStreetParkingMapper OnStreetParkingModule class OnStreetParkingModule OnStreetParkingPersistor open class OnStreetParkingPersistor OnStreetParkingRepositoryImpl class OnStreetParkingRepositoryImpl : OnStreetParkingRepository ParkingProvider interface ParkingProvider RestrictionDayAndTimeDto interface RestrictionDayAndTimeDto RestrictionDayDto interface RestrictionDayDto RestrictionDto interface RestrictionDto RestrictionTimeDto interface RestrictionTimeDto VacancyConverters object VacancyConverters","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParking OnStreetParking @Immutable @TypeAdapters interface OnStreetParking Functions Name Summary availableContent abstract fun availableContent(): Array < String > description abstract fun description(): String encodedPolyline abstract fun encodedPolyline(): String parkingVacancy abstract fun parkingVacancy(): Vacancy source abstract fun source(): ParkingProvider","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/#onstreetparking","text":"@Immutable @TypeAdapters interface OnStreetParking","title":"OnStreetParking"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/#functions","text":"Name Summary availableContent abstract fun availableContent(): Array < String > description abstract fun description(): String encodedPolyline abstract fun encodedPolyline(): String parkingVacancy abstract fun parkingVacancy(): Vacancy source abstract fun source(): ParkingProvider","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/available-content/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParking / availableContent availableContent abstract fun availableContent(): Array < String >","title":"Available content"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/available-content/#availablecontent","text":"abstract fun availableContent(): Array < String >","title":"availableContent"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/description/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParking / description description abstract fun description(): String","title":"Description"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/description/#description","text":"abstract fun description(): String","title":"description"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/encoded-polyline/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParking / encodedPolyline encodedPolyline abstract fun encodedPolyline(): String","title":"Encoded polyline"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/encoded-polyline/#encodedpolyline","text":"abstract fun encodedPolyline(): String","title":"encodedPolyline"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/parking-vacancy/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParking / parkingVacancy parkingVacancy abstract fun parkingVacancy(): Vacancy","title":"Parking vacancy"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/parking-vacancy/#parkingvacancy","text":"abstract fun parkingVacancy(): Vacancy","title":"parkingVacancy"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/source/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParking / source source abstract fun source(): ParkingProvider","title":"Source"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking/source/#source","text":"abstract fun source(): ParkingProvider","title":"source"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-api/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingApi OnStreetParkingApi interface OnStreetParkingApi Functions Name Summary fetchLocationInfoAsync abstract fun fetchLocationInfoAsync(identifier: String ): Single< OnStreetParkingLocationDto >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-api/#onstreetparkingapi","text":"interface OnStreetParkingApi","title":"OnStreetParkingApi"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-api/#functions","text":"Name Summary fetchLocationInfoAsync abstract fun fetchLocationInfoAsync(identifier: String ): Single< OnStreetParkingLocationDto >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-api/fetch-location-info-async/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingApi / fetchLocationInfoAsync fetchLocationInfoAsync @GET(\"locationInfo.json?app=beta\") abstract fun fetchLocationInfoAsync(@Query(\"identifier\") identifier: String ): Single< OnStreetParkingLocationDto >","title":"Fetch location info async"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-api/fetch-location-info-async/#fetchlocationinfoasync","text":"@GET(\"locationInfo.json?app=beta\") abstract fun fetchLocationInfoAsync(@Query(\"identifier\") identifier: String ): Single< OnStreetParkingLocationDto >","title":"fetchLocationInfoAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingDao OnStreetParkingDao interface OnStreetParkingDao Functions Name Summary getByCellIds abstract fun getByCellIds(ids: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < OnStreetParkingEntity >> saveAll abstract fun saveAll(onStreetParkings: List < OnStreetParkingEntity >): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-dao/#onstreetparkingdao","text":"interface OnStreetParkingDao","title":"OnStreetParkingDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-dao/#functions","text":"Name Summary getByCellIds abstract fun getByCellIds(ids: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < OnStreetParkingEntity >> saveAll abstract fun saveAll(onStreetParkings: List < OnStreetParkingEntity >): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-dao/get-by-cell-ids/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingDao / getByCellIds getByCellIds abstract fun getByCellIds(ids: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < OnStreetParkingEntity >>","title":"Get by cell ids"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-dao/get-by-cell-ids/#getbycellids","text":"abstract fun getByCellIds(ids: List < String >, southWestLat: Double , southWestLng: Double , northEastLat: Double , northEastLng: Double ): Flowable< List < OnStreetParkingEntity >>","title":"getByCellIds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-dao/save-all/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingDao / saveAll saveAll abstract fun saveAll(onStreetParkings: List < OnStreetParkingEntity >): Unit","title":"Save all"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-dao/save-all/#saveall","text":"abstract fun saveAll(onStreetParkings: List < OnStreetParkingEntity >): Unit","title":"saveAll"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingDetailsDto OnStreetParkingDetailsDto @Immutable @TypeAdapters interface OnStreetParkingDetailsDto Functions Name Summary actualRate abstract fun actualRate(): String ? availableSpaces abstract fun availableSpaces(): Int ? lastUpdate abstract fun lastUpdate(): Long ? paymentTypes abstract fun paymentTypes(): List < String >? restrictions abstract fun restrictions(): List < RestrictionDto >? totalSpaces abstract fun totalSpaces(): Int ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/#onstreetparkingdetailsdto","text":"@Immutable @TypeAdapters interface OnStreetParkingDetailsDto","title":"OnStreetParkingDetailsDto"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/#functions","text":"Name Summary actualRate abstract fun actualRate(): String ? availableSpaces abstract fun availableSpaces(): Int ? lastUpdate abstract fun lastUpdate(): Long ? paymentTypes abstract fun paymentTypes(): List < String >? restrictions abstract fun restrictions(): List < RestrictionDto >? totalSpaces abstract fun totalSpaces(): Int ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/actual-rate/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingDetailsDto / actualRate actualRate abstract fun actualRate(): String ?","title":"Actual rate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/actual-rate/#actualrate","text":"abstract fun actualRate(): String ?","title":"actualRate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/available-spaces/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingDetailsDto / availableSpaces availableSpaces abstract fun availableSpaces(): Int ?","title":"Available spaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/available-spaces/#availablespaces","text":"abstract fun availableSpaces(): Int ?","title":"availableSpaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/last-update/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingDetailsDto / lastUpdate lastUpdate abstract fun lastUpdate(): Long ?","title":"Last update"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/last-update/#lastupdate","text":"abstract fun lastUpdate(): Long ?","title":"lastUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/payment-types/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingDetailsDto / paymentTypes paymentTypes abstract fun paymentTypes(): List < String >?","title":"Payment types"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/payment-types/#paymenttypes","text":"abstract fun paymentTypes(): List < String >?","title":"paymentTypes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/restrictions/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingDetailsDto / restrictions restrictions abstract fun restrictions(): List < RestrictionDto >?","title":"Restrictions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/restrictions/#restrictions","text":"abstract fun restrictions(): List < RestrictionDto >?","title":"restrictions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/total-spaces/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingDetailsDto / totalSpaces totalSpaces abstract fun totalSpaces(): Int ?","title":"Total spaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-details-dto/total-spaces/#totalspaces","text":"abstract fun totalSpaces(): Int ?","title":"totalSpaces"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity OnStreetParkingEntity class OnStreetParkingEntity Constructors Name Summary <init> OnStreetParkingEntity() Properties Name Summary address var address: String ? availableContent lateinit var availableContent: String cellId lateinit var cellId: String encodedPolyline lateinit var encodedPolyline: String identifier lateinit var identifier: String info lateinit var info: String lat var lat: Double lng var lng: Double localIconName lateinit var localIconName: String modeIdentifier var modeIdentifier: String ? name lateinit var name: String operator lateinit var operator: ParkingOperatorEntity parkingVacancy var parkingVacancy: Vacancy? remoteIconName var remoteIconName: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/#onstreetparkingentity","text":"class OnStreetParkingEntity","title":"OnStreetParkingEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/#constructors","text":"Name Summary <init> OnStreetParkingEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/#properties","text":"Name Summary address var address: String ? availableContent lateinit var availableContent: String cellId lateinit var cellId: String encodedPolyline lateinit var encodedPolyline: String identifier lateinit var identifier: String info lateinit var info: String lat var lat: Double lng var lng: Double localIconName lateinit var localIconName: String modeIdentifier var modeIdentifier: String ? name lateinit var name: String operator lateinit var operator: ParkingOperatorEntity parkingVacancy var parkingVacancy: Vacancy? remoteIconName var remoteIconName: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / <init> <init> OnStreetParkingEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/-init-/#init","text":"OnStreetParkingEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/address/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / address address var address: String ?","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/address/#address","text":"var address: String ?","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/available-content/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / availableContent availableContent lateinit var availableContent: String","title":"Available content"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/available-content/#availablecontent","text":"lateinit var availableContent: String","title":"availableContent"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/cell-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / cellId cellId lateinit var cellId: String","title":"Cell id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/cell-id/#cellid","text":"lateinit var cellId: String","title":"cellId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/encoded-polyline/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / encodedPolyline encodedPolyline lateinit var encodedPolyline: String","title":"Encoded polyline"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/encoded-polyline/#encodedpolyline","text":"lateinit var encodedPolyline: String","title":"encodedPolyline"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/identifier/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / identifier identifier lateinit var identifier: String","title":"Identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/identifier/#identifier","text":"lateinit var identifier: String","title":"identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/info/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / info info lateinit var info: String","title":"Info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/info/#info","text":"lateinit var info: String","title":"info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/lat/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / lat lat var lat: Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/lat/#lat","text":"var lat: Double","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/lng/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / lng lng var lng: Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/lng/#lng","text":"var lng: Double","title":"lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/local-icon-name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / localIconName localIconName lateinit var localIconName: String","title":"Local icon name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/local-icon-name/#localiconname","text":"lateinit var localIconName: String","title":"localIconName"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/mode-identifier/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / modeIdentifier modeIdentifier var modeIdentifier: String ?","title":"Mode identifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/mode-identifier/#modeidentifier","text":"var modeIdentifier: String ?","title":"modeIdentifier"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/operator/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / operator operator lateinit var operator: ParkingOperatorEntity","title":"Operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/operator/#operator","text":"lateinit var operator: ParkingOperatorEntity","title":"operator"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/parking-vacancy/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / parkingVacancy parkingVacancy var parkingVacancy: Vacancy?","title":"Parking vacancy"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/parking-vacancy/#parkingvacancy","text":"var parkingVacancy: Vacancy?","title":"parkingVacancy"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/remote-icon-name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingEntity / remoteIconName remoteIconName var remoteIconName: String ?","title":"Remote icon name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-entity/remote-icon-name/#remoteiconname","text":"var remoteIconName: String ?","title":"remoteIconName"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingLocation OnStreetParkingLocation @Immutable @TypeAdapters interface OnStreetParkingLocation Functions Name Summary address abstract fun address(): String ? id abstract fun id(): String lat abstract fun lat(): Double lng abstract fun lng(): Double modeInfo abstract fun modeInfo(): ModeInfo name abstract fun name(): String onStreetParking abstract fun onStreetParking(): OnStreetParking","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/#onstreetparkinglocation","text":"@Immutable @TypeAdapters interface OnStreetParkingLocation","title":"OnStreetParkingLocation"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/#functions","text":"Name Summary address abstract fun address(): String ? id abstract fun id(): String lat abstract fun lat(): Double lng abstract fun lng(): Double modeInfo abstract fun modeInfo(): ModeInfo name abstract fun name(): String onStreetParking abstract fun onStreetParking(): OnStreetParking","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/address/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingLocation / address address abstract fun address(): String ?","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/address/#address","text":"abstract fun address(): String ?","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/id/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingLocation / id id abstract fun id(): String","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/id/#id","text":"abstract fun id(): String","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/lat/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingLocation / lat lat abstract fun lat(): Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/lat/#lat","text":"abstract fun lat(): Double","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/lng/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingLocation / lng lng abstract fun lng(): Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/lng/#lng","text":"abstract fun lng(): Double","title":"lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/mode-info/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingLocation / modeInfo modeInfo abstract fun modeInfo(): ModeInfo","title":"Mode info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/mode-info/#modeinfo","text":"abstract fun modeInfo(): ModeInfo","title":"modeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingLocation / name name abstract fun name(): String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/name/#name","text":"abstract fun name(): String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/on-street-parking/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingLocation / onStreetParking onStreetParking abstract fun onStreetParking(): OnStreetParking","title":"On street parking"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location/on-street-parking/#onstreetparking","text":"abstract fun onStreetParking(): OnStreetParking","title":"onStreetParking"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location-dto/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingLocationDto OnStreetParkingLocationDto @Immutable @TypeAdapters interface OnStreetParkingLocationDto Functions Name Summary onStreetParking abstract fun onStreetParking(): OnStreetParkingDetailsDto","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location-dto/#onstreetparkinglocationdto","text":"@Immutable @TypeAdapters interface OnStreetParkingLocationDto","title":"OnStreetParkingLocationDto"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location-dto/#functions","text":"Name Summary onStreetParking abstract fun onStreetParking(): OnStreetParkingDetailsDto","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location-dto/on-street-parking/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingLocationDto / onStreetParking onStreetParking abstract fun onStreetParking(): OnStreetParkingDetailsDto","title":"On street parking"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-location-dto/on-street-parking/#onstreetparking","text":"abstract fun onStreetParking(): OnStreetParkingDetailsDto","title":"onStreetParking"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-mapper/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingMapper OnStreetParkingMapper open class OnStreetParkingMapper Constructors Name Summary <init> OnStreetParkingMapper() Functions Name Summary toEntity fun toEntity(cellId: String , onStreetParkingLocations: List < OnStreetParkingLocation >): List < OnStreetParkingEntity >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-mapper/#onstreetparkingmapper","text":"open class OnStreetParkingMapper","title":"OnStreetParkingMapper"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-mapper/#constructors","text":"Name Summary <init> OnStreetParkingMapper()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-mapper/#functions","text":"Name Summary toEntity fun toEntity(cellId: String , onStreetParkingLocations: List < OnStreetParkingLocation >): List < OnStreetParkingEntity >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-mapper/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingMapper / <init> <init> OnStreetParkingMapper()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-mapper/-init-/#init","text":"OnStreetParkingMapper()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-mapper/to-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingMapper / toEntity toEntity fun toEntity(cellId: String , onStreetParkingLocations: List < OnStreetParkingLocation >): List < OnStreetParkingEntity >","title":"To entity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-mapper/to-entity/#toentity","text":"fun toEntity(cellId: String , onStreetParkingLocations: List < OnStreetParkingLocation >): List < OnStreetParkingEntity >","title":"toEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-module/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingModule OnStreetParkingModule @Module class OnStreetParkingModule Constructors Name Summary <init> OnStreetParkingModule() Functions Name Summary onStreetParkingApi fun onStreetParkingApi(retrofit: Retrofit): OnStreetParkingApi onStreetParkingRepository fun onStreetParkingRepository(repository: OnStreetParkingRepositoryImpl ): OnStreetParkingRepository","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-module/#onstreetparkingmodule","text":"@Module class OnStreetParkingModule","title":"OnStreetParkingModule"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-module/#constructors","text":"Name Summary <init> OnStreetParkingModule()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-module/#functions","text":"Name Summary onStreetParkingApi fun onStreetParkingApi(retrofit: Retrofit): OnStreetParkingApi onStreetParkingRepository fun onStreetParkingRepository(repository: OnStreetParkingRepositoryImpl ): OnStreetParkingRepository","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-module/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingModule / <init> <init> OnStreetParkingModule()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-module/-init-/#init","text":"OnStreetParkingModule()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-module/on-street-parking-api/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingModule / onStreetParkingApi onStreetParkingApi @Provides fun onStreetParkingApi(retrofit: Retrofit): OnStreetParkingApi","title":"On street parking api"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-module/on-street-parking-api/#onstreetparkingapi","text":"@Provides fun onStreetParkingApi(retrofit: Retrofit): OnStreetParkingApi","title":"onStreetParkingApi"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-module/on-street-parking-repository/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingModule / onStreetParkingRepository onStreetParkingRepository @Provides fun onStreetParkingRepository(repository: OnStreetParkingRepositoryImpl ): OnStreetParkingRepository","title":"On street parking repository"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-module/on-street-parking-repository/#onstreetparkingrepository","text":"@Provides fun onStreetParkingRepository(repository: OnStreetParkingRepositoryImpl ): OnStreetParkingRepository","title":"onStreetParkingRepository"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-persistor/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingPersistor OnStreetParkingPersistor open class OnStreetParkingPersistor Constructors Name Summary <init> OnStreetParkingPersistor(tripKitDatabase: TripKitDatabase ) Properties Name Summary tripKitDatabase val tripKitDatabase: TripKitDatabase Functions Name Summary saveOnStreetParkings fun saveOnStreetParkings(onStreetParkings: List < OnStreetParkingEntity >): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-persistor/#onstreetparkingpersistor","text":"open class OnStreetParkingPersistor","title":"OnStreetParkingPersistor"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-persistor/#constructors","text":"Name Summary <init> OnStreetParkingPersistor(tripKitDatabase: TripKitDatabase )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-persistor/#properties","text":"Name Summary tripKitDatabase val tripKitDatabase: TripKitDatabase","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-persistor/#functions","text":"Name Summary saveOnStreetParkings fun saveOnStreetParkings(onStreetParkings: List < OnStreetParkingEntity >): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-persistor/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingPersistor / <init> <init> OnStreetParkingPersistor(tripKitDatabase: TripKitDatabase )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-persistor/-init-/#init","text":"OnStreetParkingPersistor(tripKitDatabase: TripKitDatabase )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-persistor/save-on-street-parkings/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingPersistor / saveOnStreetParkings saveOnStreetParkings fun saveOnStreetParkings(onStreetParkings: List < OnStreetParkingEntity >): Completable","title":"Save on street parkings"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-persistor/save-on-street-parkings/#saveonstreetparkings","text":"fun saveOnStreetParkings(onStreetParkings: List < OnStreetParkingEntity >): Completable","title":"saveOnStreetParkings"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-persistor/trip-kit-database/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingPersistor / tripKitDatabase tripKitDatabase val tripKitDatabase: TripKitDatabase","title":"Trip kit database"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-persistor/trip-kit-database/#tripkitdatabase","text":"val tripKitDatabase: TripKitDatabase","title":"tripKitDatabase"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingRepositoryImpl OnStreetParkingRepositoryImpl class OnStreetParkingRepositoryImpl : OnStreetParkingRepository Constructors Name Summary <init> OnStreetParkingRepositoryImpl(onStreetParkingApi: OnStreetParkingApi , tripKitDatabase: TripKitDatabase ) Properties Name Summary onStreetParkingApi val onStreetParkingApi: OnStreetParkingApi tripKitDatabase val tripKitDatabase: TripKitDatabase Functions Name Summary getByCellIds fun getByCellIds(ids: List < String >, southWest: GeoPoint , northEast: GeoPoint ): Observable< List < OnStreetParking >> getParkingDetails fun getParkingDetails(onStreetParking: OnStreetParking ): Single< OnStreetParkingDetails >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/#onstreetparkingrepositoryimpl","text":"class OnStreetParkingRepositoryImpl : OnStreetParkingRepository","title":"OnStreetParkingRepositoryImpl"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/#constructors","text":"Name Summary <init> OnStreetParkingRepositoryImpl(onStreetParkingApi: OnStreetParkingApi , tripKitDatabase: TripKitDatabase )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/#properties","text":"Name Summary onStreetParkingApi val onStreetParkingApi: OnStreetParkingApi tripKitDatabase val tripKitDatabase: TripKitDatabase","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/#functions","text":"Name Summary getByCellIds fun getByCellIds(ids: List < String >, southWest: GeoPoint , northEast: GeoPoint ): Observable< List < OnStreetParking >> getParkingDetails fun getParkingDetails(onStreetParking: OnStreetParking ): Single< OnStreetParkingDetails >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingRepositoryImpl / <init> <init> OnStreetParkingRepositoryImpl(onStreetParkingApi: OnStreetParkingApi , tripKitDatabase: TripKitDatabase )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/-init-/#init","text":"OnStreetParkingRepositoryImpl(onStreetParkingApi: OnStreetParkingApi , tripKitDatabase: TripKitDatabase )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/get-by-cell-ids/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingRepositoryImpl / getByCellIds getByCellIds fun getByCellIds(ids: List < String >, southWest: GeoPoint , northEast: GeoPoint ): Observable< List < OnStreetParking >>","title":"Get by cell ids"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/get-by-cell-ids/#getbycellids","text":"fun getByCellIds(ids: List < String >, southWest: GeoPoint , northEast: GeoPoint ): Observable< List < OnStreetParking >>","title":"getByCellIds"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/get-parking-details/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingRepositoryImpl / getParkingDetails getParkingDetails fun getParkingDetails(onStreetParking: OnStreetParking ): Single< OnStreetParkingDetails >","title":"Get parking details"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/get-parking-details/#getparkingdetails","text":"fun getParkingDetails(onStreetParking: OnStreetParking ): Single< OnStreetParkingDetails >","title":"getParkingDetails"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/on-street-parking-api/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingRepositoryImpl / onStreetParkingApi onStreetParkingApi val onStreetParkingApi: OnStreetParkingApi","title":"On street parking api"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/on-street-parking-api/#onstreetparkingapi","text":"val onStreetParkingApi: OnStreetParkingApi","title":"onStreetParkingApi"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/trip-kit-database/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / OnStreetParkingRepositoryImpl / tripKitDatabase tripKitDatabase val tripKitDatabase: TripKitDatabase","title":"Trip kit database"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-on-street-parking-repository-impl/trip-kit-database/#tripkitdatabase","text":"val tripKitDatabase: TripKitDatabase","title":"tripKitDatabase"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-parking-provider/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / ParkingProvider ParkingProvider @Immutable @TypeAdapters interface ParkingProvider Functions Name Summary provider abstract fun provider(): ParkingOperator","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-parking-provider/#parkingprovider","text":"@Immutable @TypeAdapters interface ParkingProvider","title":"ParkingProvider"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-parking-provider/#functions","text":"Name Summary provider abstract fun provider(): ParkingOperator","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-parking-provider/provider/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / ParkingProvider / provider provider abstract fun provider(): ParkingOperator","title":"Provider"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-parking-provider/provider/#provider","text":"abstract fun provider(): ParkingOperator","title":"provider"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-and-time-dto/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDayAndTimeDto RestrictionDayAndTimeDto @Immutable @TypeAdapters interface RestrictionDayAndTimeDto Functions Name Summary days abstract fun days(): List < RestrictionDayDto > timeZone abstract fun timeZone(): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-and-time-dto/#restrictiondayandtimedto","text":"@Immutable @TypeAdapters interface RestrictionDayAndTimeDto","title":"RestrictionDayAndTimeDto"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-and-time-dto/#functions","text":"Name Summary days abstract fun days(): List < RestrictionDayDto > timeZone abstract fun timeZone(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-and-time-dto/days/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDayAndTimeDto / days days abstract fun days(): List < RestrictionDayDto >","title":"Days"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-and-time-dto/days/#days","text":"abstract fun days(): List < RestrictionDayDto >","title":"days"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-and-time-dto/time-zone/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDayAndTimeDto / timeZone timeZone abstract fun timeZone(): String","title":"Time zone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-and-time-dto/time-zone/#timezone","text":"abstract fun timeZone(): String","title":"timeZone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-dto/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDayDto RestrictionDayDto @Immutable @TypeAdapters interface RestrictionDayDto Functions Name Summary name abstract fun name(): String times abstract fun times(): List < RestrictionTimeDto >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-dto/#restrictiondaydto","text":"@Immutable @TypeAdapters interface RestrictionDayDto","title":"RestrictionDayDto"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-dto/#functions","text":"Name Summary name abstract fun name(): String times abstract fun times(): List < RestrictionTimeDto >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-dto/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDayDto / name name abstract fun name(): String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-dto/name/#name","text":"abstract fun name(): String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-dto/times/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDayDto / times times abstract fun times(): List < RestrictionTimeDto >","title":"Times"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-day-dto/times/#times","text":"abstract fun times(): List < RestrictionTimeDto >","title":"times"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDto RestrictionDto @Immutable @TypeAdapters interface RestrictionDto Functions Name Summary color abstract fun color(): String daysAndTimes abstract fun daysAndTimes(): RestrictionDayAndTimeDto maximumParkingMinutes abstract fun maximumParkingMinutes(): Int ? parkingSymbol abstract fun parkingSymbol(): String type abstract fun type(): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/#restrictiondto","text":"@Immutable @TypeAdapters interface RestrictionDto","title":"RestrictionDto"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/#functions","text":"Name Summary color abstract fun color(): String daysAndTimes abstract fun daysAndTimes(): RestrictionDayAndTimeDto maximumParkingMinutes abstract fun maximumParkingMinutes(): Int ? parkingSymbol abstract fun parkingSymbol(): String type abstract fun type(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/color/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDto / color color abstract fun color(): String","title":"Color"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/color/#color","text":"abstract fun color(): String","title":"color"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/days-and-times/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDto / daysAndTimes daysAndTimes abstract fun daysAndTimes(): RestrictionDayAndTimeDto","title":"Days and times"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/days-and-times/#daysandtimes","text":"abstract fun daysAndTimes(): RestrictionDayAndTimeDto","title":"daysAndTimes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/maximum-parking-minutes/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDto / maximumParkingMinutes maximumParkingMinutes abstract fun maximumParkingMinutes(): Int ?","title":"Maximum parking minutes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/maximum-parking-minutes/#maximumparkingminutes","text":"abstract fun maximumParkingMinutes(): Int ?","title":"maximumParkingMinutes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/parking-symbol/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDto / parkingSymbol parkingSymbol abstract fun parkingSymbol(): String","title":"Parking symbol"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/parking-symbol/#parkingsymbol","text":"abstract fun parkingSymbol(): String","title":"parkingSymbol"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/type/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionDto / type type abstract fun type(): String","title":"Type"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-dto/type/#type","text":"abstract fun type(): String","title":"type"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-time-dto/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionTimeDto RestrictionTimeDto @Immutable @TypeAdapters interface RestrictionTimeDto Functions Name Summary closes abstract fun closes(): String opens abstract fun opens(): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-time-dto/#restrictiontimedto","text":"@Immutable @TypeAdapters interface RestrictionTimeDto","title":"RestrictionTimeDto"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-time-dto/#functions","text":"Name Summary closes abstract fun closes(): String opens abstract fun opens(): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-time-dto/closes/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionTimeDto / closes closes abstract fun closes(): String","title":"Closes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-time-dto/closes/#closes","text":"abstract fun closes(): String","title":"closes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-time-dto/opens/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / RestrictionTimeDto / opens opens abstract fun opens(): String","title":"Opens"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-restriction-time-dto/opens/#opens","text":"abstract fun opens(): String","title":"opens"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-vacancy-converters/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / VacancyConverters VacancyConverters object VacancyConverters Functions Name Summary stringToVacancy fun stringToVacancy(s: String ?): Vacancy? vacancyToString fun vacancyToString(vacancy: Vacancy?): String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-vacancy-converters/#vacancyconverters","text":"object VacancyConverters","title":"VacancyConverters"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-vacancy-converters/#functions","text":"Name Summary stringToVacancy fun stringToVacancy(s: String ?): Vacancy? vacancyToString fun vacancyToString(vacancy: Vacancy?): String ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-vacancy-converters/string-to-vacancy/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / VacancyConverters / stringToVacancy stringToVacancy @JvmStatic fun stringToVacancy(s: String ?): Vacancy?","title":"String to vacancy"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-vacancy-converters/string-to-vacancy/#stringtovacancy","text":"@JvmStatic fun stringToVacancy(s: String ?): Vacancy?","title":"stringToVacancy"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-vacancy-converters/vacancy-to-string/","text":"tripkit-android / com.skedgo.tripkit.data.database.locations.onstreetparking / VacancyConverters / vacancyToString vacancyToString @JvmStatic fun vacancyToString(vacancy: Vacancy?): String ?","title":"Vacancy to string"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.locations.onstreetparking/-vacancy-converters/vacancy-to-string/#vacancytostring","text":"@JvmStatic fun vacancyToString(vacancy: Vacancy?): String ?","title":"vacancyToString"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops Package com.skedgo.tripkit.data.database.stops Types Name Summary StopLocationDao abstract class StopLocationDao StopLocationEntity class StopLocationEntity Functions Name Summary toEntity fun ModeInfo .toEntity(): ModeInfoEntity fun ScheduledStop .toEntity(): StopLocationEntity toModeInfo fun ModeInfoEntity .toModeInfo(): ModeInfo toScheduledStop fun StopLocationEntity .toScheduledStop(): ScheduledStop","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/#package-comskedgotripkitdatadatabasestops","text":"","title":"Package com.skedgo.tripkit.data.database.stops"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/#types","text":"Name Summary StopLocationDao abstract class StopLocationDao StopLocationEntity class StopLocationEntity","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/#functions","text":"Name Summary toEntity fun ModeInfo .toEntity(): ModeInfoEntity fun ScheduledStop .toEntity(): StopLocationEntity toModeInfo fun ModeInfoEntity .toModeInfo(): ModeInfo toScheduledStop fun StopLocationEntity .toScheduledStop(): ScheduledStop","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/to-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / toEntity toEntity fun ModeInfo .toEntity(): ModeInfoEntity fun ScheduledStop .toEntity(): StopLocationEntity","title":"To entity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/to-entity/#toentity","text":"fun ModeInfo .toEntity(): ModeInfoEntity fun ScheduledStop .toEntity(): StopLocationEntity","title":"toEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/to-mode-info/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / toModeInfo toModeInfo fun ModeInfoEntity .toModeInfo(): ModeInfo","title":"To mode info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/to-mode-info/#tomodeinfo","text":"fun ModeInfoEntity .toModeInfo(): ModeInfo","title":"toModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/to-scheduled-stop/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / toScheduledStop toScheduledStop fun StopLocationEntity .toScheduledStop(): ScheduledStop","title":"To scheduled stop"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/to-scheduled-stop/#toscheduledstop","text":"fun StopLocationEntity .toScheduledStop(): ScheduledStop","title":"toScheduledStop"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationDao StopLocationDao abstract class StopLocationDao Constructors Name Summary <init> StopLocationDao() Functions Name Summary getStopsByStopCodes abstract fun getStopsByStopCodes(stopCodes: List < String >): List < StopLocationEntity > saveAll abstract fun saveAll(stopLocations: List < StopLocationEntity >): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-dao/#stoplocationdao","text":"abstract class StopLocationDao","title":"StopLocationDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-dao/#constructors","text":"Name Summary <init> StopLocationDao()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-dao/#functions","text":"Name Summary getStopsByStopCodes abstract fun getStopsByStopCodes(stopCodes: List < String >): List < StopLocationEntity > saveAll abstract fun saveAll(stopLocations: List < StopLocationEntity >): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-dao/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationDao / <init> <init> StopLocationDao()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-dao/-init-/#init","text":"StopLocationDao()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-dao/get-stops-by-stop-codes/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationDao / getStopsByStopCodes getStopsByStopCodes abstract fun getStopsByStopCodes(stopCodes: List < String >): List < StopLocationEntity >","title":"Get stops by stop codes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-dao/get-stops-by-stop-codes/#getstopsbystopcodes","text":"abstract fun getStopsByStopCodes(stopCodes: List < String >): List < StopLocationEntity >","title":"getStopsByStopCodes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-dao/save-all/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationDao / saveAll saveAll abstract fun saveAll(stopLocations: List < StopLocationEntity >): Unit","title":"Save all"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-dao/save-all/#saveall","text":"abstract fun saveAll(stopLocations: List < StopLocationEntity >): Unit","title":"saveAll"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity StopLocationEntity class StopLocationEntity Constructors Name Summary <init> StopLocationEntity() Properties Name Summary address var address: String ? code lateinit var code: String lat var lat: Double lng var lng: Double modeInfo lateinit var modeInfo: ModeInfoEntity name lateinit var name: String popularify var popularify: Int services lateinit var services: String stopType lateinit var stopType: String timeZone var timeZone: String ? wheelchairAccessible var wheelchairAccessible: Boolean Extension Functions Name Summary toScheduledStop fun StopLocationEntity .toScheduledStop(): ScheduledStop","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/#stoplocationentity","text":"class StopLocationEntity","title":"StopLocationEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/#constructors","text":"Name Summary <init> StopLocationEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/#properties","text":"Name Summary address var address: String ? code lateinit var code: String lat var lat: Double lng var lng: Double modeInfo lateinit var modeInfo: ModeInfoEntity name lateinit var name: String popularify var popularify: Int services lateinit var services: String stopType lateinit var stopType: String timeZone var timeZone: String ? wheelchairAccessible var wheelchairAccessible: Boolean","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/#extension-functions","text":"Name Summary toScheduledStop fun StopLocationEntity .toScheduledStop(): ScheduledStop","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / <init> <init> StopLocationEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/-init-/#init","text":"StopLocationEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/address/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / address address var address: String ?","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/address/#address","text":"var address: String ?","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/code/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / code code lateinit var code: String","title":"Code"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/code/#code","text":"lateinit var code: String","title":"code"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/lat/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / lat lat var lat: Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/lat/#lat","text":"var lat: Double","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/lng/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / lng lng var lng: Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/lng/#lng","text":"var lng: Double","title":"lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/mode-info/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / modeInfo modeInfo lateinit var modeInfo: ModeInfoEntity","title":"Mode info"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/mode-info/#modeinfo","text":"lateinit var modeInfo: ModeInfoEntity","title":"modeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/name/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / name name lateinit var name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/name/#name","text":"lateinit var name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/popularify/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / popularify popularify var popularify: Int","title":"Popularify"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/popularify/#popularify","text":"var popularify: Int","title":"popularify"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/services/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / services services lateinit var services: String","title":"Services"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/services/#services","text":"lateinit var services: String","title":"services"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/stop-type/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / stopType stopType lateinit var stopType: String","title":"Stop type"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/stop-type/#stoptype","text":"lateinit var stopType: String","title":"stopType"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/time-zone/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / timeZone timeZone var timeZone: String ?","title":"Time zone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/time-zone/#timezone","text":"var timeZone: String ?","title":"timeZone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.data.database.stops / StopLocationEntity / wheelchairAccessible wheelchairAccessible var wheelchairAccessible: Boolean","title":"Wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.stops/-stop-location-entity/wheelchair-accessible/#wheelchairaccessible","text":"var wheelchairAccessible: Boolean","title":"wheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables Package com.skedgo.tripkit.data.database.timetables Types Name Summary AlertActionEntity data class AlertActionEntity AlertLocationEntity data class AlertLocationEntity ScheduledServiceRealtimeInfoDao interface ScheduledServiceRealtimeInfoDao ScheduledServiceRealtimeInfoEntity class ScheduledServiceRealtimeInfoEntity ServiceAlertDataModule class ServiceAlertDataModule ServiceAlertMapper class ServiceAlertMapper ServiceAlertsDao interface ServiceAlertsDao ServiceAlertsEntity data class ServiceAlertsEntity","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/#package-comskedgotripkitdatadatabasetimetables","text":"","title":"Package com.skedgo.tripkit.data.database.timetables"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/#types","text":"Name Summary AlertActionEntity data class AlertActionEntity AlertLocationEntity data class AlertLocationEntity ScheduledServiceRealtimeInfoDao interface ScheduledServiceRealtimeInfoDao ScheduledServiceRealtimeInfoEntity class ScheduledServiceRealtimeInfoEntity ServiceAlertDataModule class ServiceAlertDataModule ServiceAlertMapper class ServiceAlertMapper ServiceAlertsDao interface ServiceAlertsDao ServiceAlertsEntity data class ServiceAlertsEntity","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / AlertActionEntity AlertActionEntity data class AlertActionEntity Constructors Name Summary <init> AlertActionEntity(text: String , type: String , excludedStopCodes: String ) Properties Name Summary excludedStopCodes val excludedStopCodes: String text val text: String type val type: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/#alertactionentity","text":"data class AlertActionEntity","title":"AlertActionEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/#constructors","text":"Name Summary <init> AlertActionEntity(text: String , type: String , excludedStopCodes: String )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/#properties","text":"Name Summary excludedStopCodes val excludedStopCodes: String text val text: String type val type: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / AlertActionEntity / <init> <init> AlertActionEntity(text: String , type: String , excludedStopCodes: String )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/-init-/#init","text":"AlertActionEntity(text: String , type: String , excludedStopCodes: String )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/excluded-stop-codes/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / AlertActionEntity / excludedStopCodes excludedStopCodes val excludedStopCodes: String","title":"Excluded stop codes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/excluded-stop-codes/#excludedstopcodes","text":"val excludedStopCodes: String","title":"excludedStopCodes"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/text/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / AlertActionEntity / text text val text: String","title":"Text"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/text/#text","text":"val text: String","title":"text"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/type/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / AlertActionEntity / type type val type: String","title":"Type"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-action-entity/type/#type","text":"val type: String","title":"type"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / AlertLocationEntity AlertLocationEntity data class AlertLocationEntity Constructors Name Summary <init> AlertLocationEntity(lat: Double , lng: Double , timezone: String , address: String ? = null) Properties Name Summary address val address: String ? lat val lat: Double lng val lng: Double timezone val timezone: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/#alertlocationentity","text":"data class AlertLocationEntity","title":"AlertLocationEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/#constructors","text":"Name Summary <init> AlertLocationEntity(lat: Double , lng: Double , timezone: String , address: String ? = null)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/#properties","text":"Name Summary address val address: String ? lat val lat: Double lng val lng: Double timezone val timezone: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / AlertLocationEntity / <init> <init> AlertLocationEntity(lat: Double , lng: Double , timezone: String , address: String ? = null)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/-init-/#init","text":"AlertLocationEntity(lat: Double , lng: Double , timezone: String , address: String ? = null)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/address/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / AlertLocationEntity / address address val address: String ?","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/address/#address","text":"val address: String ?","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/lat/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / AlertLocationEntity / lat lat val lat: Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/lat/#lat","text":"val lat: Double","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/lng/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / AlertLocationEntity / lng lng val lng: Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/lng/#lng","text":"val lng: Double","title":"lng"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/timezone/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / AlertLocationEntity / timezone timezone val timezone: String","title":"Timezone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-alert-location-entity/timezone/#timezone","text":"val timezone: String","title":"timezone"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ScheduledServiceRealtimeInfoDao ScheduledServiceRealtimeInfoDao interface ScheduledServiceRealtimeInfoDao Functions Name Summary getRealtimeInfoByService abstract fun getRealtimeInfoByService(serviceIds: List < Long >): Cursor insert abstract fun insert(entities: List < ScheduledServiceRealtimeInfoEntity >): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-dao/#scheduledservicerealtimeinfodao","text":"interface ScheduledServiceRealtimeInfoDao","title":"ScheduledServiceRealtimeInfoDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-dao/#functions","text":"Name Summary getRealtimeInfoByService abstract fun getRealtimeInfoByService(serviceIds: List < Long >): Cursor insert abstract fun insert(entities: List < ScheduledServiceRealtimeInfoEntity >): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-dao/get-realtime-info-by-service/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ScheduledServiceRealtimeInfoDao / getRealtimeInfoByService getRealtimeInfoByService abstract fun getRealtimeInfoByService(serviceIds: List < Long >): Cursor","title":"Get realtime info by service"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-dao/get-realtime-info-by-service/#getrealtimeinfobyservice","text":"abstract fun getRealtimeInfoByService(serviceIds: List < Long >): Cursor","title":"getRealtimeInfoByService"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-dao/insert/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ScheduledServiceRealtimeInfoDao / insert insert abstract fun insert(entities: List < ScheduledServiceRealtimeInfoEntity >): Unit","title":"Insert"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-dao/insert/#insert","text":"abstract fun insert(entities: List < ScheduledServiceRealtimeInfoEntity >): Unit","title":"insert"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ScheduledServiceRealtimeInfoEntity ScheduledServiceRealtimeInfoEntity class ScheduledServiceRealtimeInfoEntity Constructors Name Summary <init> ScheduledServiceRealtimeInfoEntity() Properties Name Summary id var id: Long realTimeArrival var realTimeArrival: Int realTimeDeparture var realTimeDeparture: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/#scheduledservicerealtimeinfoentity","text":"class ScheduledServiceRealtimeInfoEntity","title":"ScheduledServiceRealtimeInfoEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/#constructors","text":"Name Summary <init> ScheduledServiceRealtimeInfoEntity()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/#properties","text":"Name Summary id var id: Long realTimeArrival var realTimeArrival: Int realTimeDeparture var realTimeDeparture: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ScheduledServiceRealtimeInfoEntity / <init> <init> ScheduledServiceRealtimeInfoEntity()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/-init-/#init","text":"ScheduledServiceRealtimeInfoEntity()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/id/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ScheduledServiceRealtimeInfoEntity / id id var id: Long","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/id/#id","text":"var id: Long","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/real-time-arrival/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ScheduledServiceRealtimeInfoEntity / realTimeArrival realTimeArrival var realTimeArrival: Int","title":"Real time arrival"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/real-time-arrival/#realtimearrival","text":"var realTimeArrival: Int","title":"realTimeArrival"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/real-time-departure/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ScheduledServiceRealtimeInfoEntity / realTimeDeparture realTimeDeparture var realTimeDeparture: Int","title":"Real time departure"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-scheduled-service-realtime-info-entity/real-time-departure/#realtimedeparture","text":"var realTimeDeparture: Int","title":"realTimeDeparture"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-data-module/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertDataModule ServiceAlertDataModule @Module class ServiceAlertDataModule Constructors Name Summary <init> ServiceAlertDataModule()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-data-module/#servicealertdatamodule","text":"@Module class ServiceAlertDataModule","title":"ServiceAlertDataModule"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-data-module/#constructors","text":"Name Summary <init> ServiceAlertDataModule()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-data-module/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertDataModule / <init> <init> ServiceAlertDataModule()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-data-module/-init-/#init","text":"ServiceAlertDataModule()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-mapper/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertMapper ServiceAlertMapper class ServiceAlertMapper Constructors Name Summary <init> ServiceAlertMapper() Functions Name Summary toEntity fun toEntity(serviceTripId: String , realtimeAlert: RealtimeAlert ): ServiceAlertsEntity toModel fun toModel(serviceAlertsEntity: ServiceAlertsEntity ): RealtimeAlert","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-mapper/#servicealertmapper","text":"class ServiceAlertMapper","title":"ServiceAlertMapper"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-mapper/#constructors","text":"Name Summary <init> ServiceAlertMapper()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-mapper/#functions","text":"Name Summary toEntity fun toEntity(serviceTripId: String , realtimeAlert: RealtimeAlert ): ServiceAlertsEntity toModel fun toModel(serviceAlertsEntity: ServiceAlertsEntity ): RealtimeAlert","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-mapper/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertMapper / <init> <init> ServiceAlertMapper()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-mapper/-init-/#init","text":"ServiceAlertMapper()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-mapper/to-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertMapper / toEntity toEntity fun toEntity(serviceTripId: String , realtimeAlert: RealtimeAlert ): ServiceAlertsEntity","title":"To entity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-mapper/to-entity/#toentity","text":"fun toEntity(serviceTripId: String , realtimeAlert: RealtimeAlert ): ServiceAlertsEntity","title":"toEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-mapper/to-model/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertMapper / toModel toModel fun toModel(serviceAlertsEntity: ServiceAlertsEntity ): RealtimeAlert","title":"To model"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alert-mapper/to-model/#tomodel","text":"fun toModel(serviceAlertsEntity: ServiceAlertsEntity ): RealtimeAlert","title":"toModel"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-dao/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsDao ServiceAlertsDao interface ServiceAlertsDao Functions Name Summary deleteAlertByService abstract fun deleteAlertByService(alerts: List < ServiceAlertsEntity >): Unit getAlertForService abstract fun getAlertForService(serviceId: String ): Single< List < ServiceAlertsEntity >> insertAlerts abstract fun insertAlerts(alerts: List < ServiceAlertsEntity >): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-dao/#servicealertsdao","text":"interface ServiceAlertsDao","title":"ServiceAlertsDao"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-dao/#functions","text":"Name Summary deleteAlertByService abstract fun deleteAlertByService(alerts: List < ServiceAlertsEntity >): Unit getAlertForService abstract fun getAlertForService(serviceId: String ): Single< List < ServiceAlertsEntity >> insertAlerts abstract fun insertAlerts(alerts: List < ServiceAlertsEntity >): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-dao/delete-alert-by-service/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsDao / deleteAlertByService deleteAlertByService abstract fun deleteAlertByService(alerts: List < ServiceAlertsEntity >): Unit","title":"Delete alert by service"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-dao/delete-alert-by-service/#deletealertbyservice","text":"abstract fun deleteAlertByService(alerts: List < ServiceAlertsEntity >): Unit","title":"deleteAlertByService"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-dao/get-alert-for-service/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsDao / getAlertForService getAlertForService abstract fun getAlertForService(serviceId: String ): Single< List < ServiceAlertsEntity >>","title":"Get alert for service"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-dao/get-alert-for-service/#getalertforservice","text":"abstract fun getAlertForService(serviceId: String ): Single< List < ServiceAlertsEntity >>","title":"getAlertForService"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-dao/insert-alerts/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsDao / insertAlerts insertAlerts abstract fun insertAlerts(alerts: List < ServiceAlertsEntity >): Unit","title":"Insert alerts"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-dao/insert-alerts/#insertalerts","text":"abstract fun insertAlerts(alerts: List < ServiceAlertsEntity >): Unit","title":"insertAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity ServiceAlertsEntity data class ServiceAlertsEntity Constructors Name Summary <init> ServiceAlertsEntity(id: String , serviceTripId: String , title: String , remoteHashCode: Long , severity: String , text: String ? = null, url: String ? = null, remoteIcon: String ? = null, location: AlertLocationEntity ? = null, lastUpdated: Long = -1, fromDate: Long = -1, action: AlertActionEntity ? = null) Properties Name Summary action val action: AlertActionEntity ? fromDate val fromDate: Long id val id: String lastUpdated val lastUpdated: Long location val location: AlertLocationEntity ? remoteHashCode val remoteHashCode: Long remoteIcon val remoteIcon: String ? serviceTripId val serviceTripId: String severity val severity: String text val text: String ? title val title: String url val url: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/#servicealertsentity","text":"data class ServiceAlertsEntity","title":"ServiceAlertsEntity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/#constructors","text":"Name Summary <init> ServiceAlertsEntity(id: String , serviceTripId: String , title: String , remoteHashCode: Long , severity: String , text: String ? = null, url: String ? = null, remoteIcon: String ? = null, location: AlertLocationEntity ? = null, lastUpdated: Long = -1, fromDate: Long = -1, action: AlertActionEntity ? = null)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/#properties","text":"Name Summary action val action: AlertActionEntity ? fromDate val fromDate: Long id val id: String lastUpdated val lastUpdated: Long location val location: AlertLocationEntity ? remoteHashCode val remoteHashCode: Long remoteIcon val remoteIcon: String ? serviceTripId val serviceTripId: String severity val severity: String text val text: String ? title val title: String url val url: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / <init> <init> ServiceAlertsEntity(id: String , serviceTripId: String , title: String , remoteHashCode: Long , severity: String , text: String ? = null, url: String ? = null, remoteIcon: String ? = null, location: AlertLocationEntity ? = null, lastUpdated: Long = -1, fromDate: Long = -1, action: AlertActionEntity ? = null)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/-init-/#init","text":"ServiceAlertsEntity(id: String , serviceTripId: String , title: String , remoteHashCode: Long , severity: String , text: String ? = null, url: String ? = null, remoteIcon: String ? = null, location: AlertLocationEntity ? = null, lastUpdated: Long = -1, fromDate: Long = -1, action: AlertActionEntity ? = null)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/action/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / action action val action: AlertActionEntity ?","title":"Action"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/action/#action","text":"val action: AlertActionEntity ?","title":"action"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/from-date/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / fromDate fromDate val fromDate: Long","title":"From date"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/from-date/#fromdate","text":"val fromDate: Long","title":"fromDate"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/id/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / id id val id: String","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/id/#id","text":"val id: String","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/last-updated/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / lastUpdated lastUpdated val lastUpdated: Long","title":"Last updated"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/last-updated/#lastupdated","text":"val lastUpdated: Long","title":"lastUpdated"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/location/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / location location val location: AlertLocationEntity ?","title":"Location"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/location/#location","text":"val location: AlertLocationEntity ?","title":"location"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/remote-hash-code/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / remoteHashCode remoteHashCode val remoteHashCode: Long","title":"Remote hash code"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/remote-hash-code/#remotehashcode","text":"val remoteHashCode: Long","title":"remoteHashCode"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/remote-icon/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / remoteIcon remoteIcon val remoteIcon: String ?","title":"Remote icon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/remote-icon/#remoteicon","text":"val remoteIcon: String ?","title":"remoteIcon"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/service-trip-id/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / serviceTripId serviceTripId val serviceTripId: String","title":"Service trip id"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/service-trip-id/#servicetripid","text":"val serviceTripId: String","title":"serviceTripId"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/severity/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / severity severity val severity: String","title":"Severity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/severity/#severity","text":"val severity: String","title":"severity"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/text/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / text text val text: String ?","title":"Text"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/text/#text","text":"val text: String ?","title":"text"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/title/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / title title val title: String","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/title/#title","text":"val title: String","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/url/","text":"tripkit-android / com.skedgo.tripkit.data.database.timetables / ServiceAlertsEntity / url url val url: String ?","title":"Url"},{"location":"tripkit-android/com.skedgo.tripkit.data.database.timetables/-service-alerts-entity/url/#url","text":"val url: String ?","title":"url"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/","text":"tripkit-android / com.skedgo.tripkit.data.datetime Package com.skedgo.tripkit.data.datetime Types Name Summary DateTimeDataModule class DateTimeDataModule","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/#package-comskedgotripkitdatadatetime","text":"","title":"Package com.skedgo.tripkit.data.datetime"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/#types","text":"Name Summary DateTimeDataModule class DateTimeDataModule","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/-date-time-data-module/","text":"tripkit-android / com.skedgo.tripkit.data.datetime / DateTimeDataModule DateTimeDataModule @Module class DateTimeDataModule Constructors Name Summary <init> DateTimeDataModule() Functions Name Summary printFullDate fun printFullDate(): PrintFullDate printTime fun printTime(context: Context): PrintTime","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/-date-time-data-module/#datetimedatamodule","text":"@Module class DateTimeDataModule","title":"DateTimeDataModule"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/-date-time-data-module/#constructors","text":"Name Summary <init> DateTimeDataModule()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/-date-time-data-module/#functions","text":"Name Summary printFullDate fun printFullDate(): PrintFullDate printTime fun printTime(context: Context): PrintTime","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/-date-time-data-module/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.datetime / DateTimeDataModule / <init> <init> DateTimeDataModule()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/-date-time-data-module/-init-/#init","text":"DateTimeDataModule()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/-date-time-data-module/print-full-date/","text":"tripkit-android / com.skedgo.tripkit.data.datetime / DateTimeDataModule / printFullDate printFullDate @Provides fun printFullDate(): PrintFullDate","title":"Print full date"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/-date-time-data-module/print-full-date/#printfulldate","text":"@Provides fun printFullDate(): PrintFullDate","title":"printFullDate"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/-date-time-data-module/print-time/","text":"tripkit-android / com.skedgo.tripkit.data.datetime / DateTimeDataModule / printTime printTime @Provides fun printTime(context: Context): PrintTime","title":"Print time"},{"location":"tripkit-android/com.skedgo.tripkit.data.datetime/-date-time-data-module/print-time/#printtime","text":"@Provides fun printTime(context: Context): PrintTime","title":"printTime"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/","text":"tripkit-android / com.skedgo.tripkit.data.locations Package com.skedgo.tripkit.data.locations Types Name Summary LocationsApi interface LocationsApi LocationsRequestBody class LocationsRequestBody LocationsResponse open class LocationsResponse StopsFetcher open class StopsFetcher","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/#package-comskedgotripkitdatalocations","text":"","title":"Package com.skedgo.tripkit.data.locations"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/#types","text":"Name Summary LocationsApi interface LocationsApi LocationsRequestBody class LocationsRequestBody LocationsResponse open class LocationsResponse StopsFetcher open class StopsFetcher","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-api/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsApi LocationsApi interface LocationsApi Functions Name Summary fetchLocationsAsync abstract fun fetchLocationsAsync(url: String !, body: LocationsRequestBody !): Observable< LocationsResponse !> fetchLocationsAsync abstract fun fetchLocationsAsync(url: String , lat: Double , lng: Double , limit: int , radius: int , modes: List< String >): Observable< LocationsResponse >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-api/#locationsapi","text":"interface LocationsApi","title":"LocationsApi"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-api/#functions","text":"Name Summary fetchLocationsAsync abstract fun fetchLocationsAsync(url: String !, body: LocationsRequestBody !): Observable< LocationsResponse !> fetchLocationsAsync abstract fun fetchLocationsAsync(url: String , lat: Double , lng: Double , limit: int , radius: int , modes: List< String >): Observable< LocationsResponse >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-api/fetch-locations-async-get/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsApi / fetchLocationsAsync fetchLocationsAsync @GET fun fetchLocationsAsync(@Url url: String , lat: Double , lng: Double , limit: int , radius: int , modes: List< String > ): Observable< LocationsResponse !>! Parameters url - String : A concatenation of an item of Region#getURLs() and \"locations.json\". For example, \" https://sydney-au-nsw-sydney.tripgo.skedgo.com/satapp/locations.json \". lat - Double : Latitude from Location lng - Double : Longitude from Location limit - int radius - int modes - List< String >","title":"Fetch locations async get"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-api/fetch-locations-async-get/#fetchlocationsasync","text":"@GET fun fetchLocationsAsync(@Url url: String , lat: Double , lng: Double , limit: int , radius: int , modes: List< String > ): Observable< LocationsResponse !>!","title":"fetchLocationsAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-api/fetch-locations-async-get/#parameters","text":"url - String : A concatenation of an item of Region#getURLs() and \"locations.json\". For example, \" https://sydney-au-nsw-sydney.tripgo.skedgo.com/satapp/locations.json \". lat - Double : Latitude from Location lng - Double : Longitude from Location limit - int radius - int modes - List< String >","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-api/fetch-locations-async/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsApi / fetchLocationsAsync fetchLocationsAsync @POST abstract fun fetchLocationsAsync(@Url url: String !, @Body body: LocationsRequestBody !): Observable< LocationsResponse !>! Parameters url - String !: A concatenation of an item of Region#getURLs() and \"locations.json\". For example, \" https://sydney-au-nsw-sydney.tripgo.skedgo.com/satapp/locations.json \".","title":"Fetch locations async"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-api/fetch-locations-async/#fetchlocationsasync","text":"@POST abstract fun fetchLocationsAsync(@Url url: String !, @Body body: LocationsRequestBody !): Observable< LocationsResponse !>!","title":"fetchLocationsAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-api/fetch-locations-async/#parameters","text":"url - String !: A concatenation of an item of Region#getURLs() and \"locations.json\". For example, \" https://sydney-au-nsw-sydney.tripgo.skedgo.com/satapp/locations.json \".","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsRequestBody LocationsRequestBody class LocationsRequestBody Properties Name Summary cellIds val cellIds: ArrayList < String !>! config val config: JsonObject! existingCells val existingCells: MutableMap < String !, Long !>! level val level: Int modes val modes: MutableList < String !>! regionName val regionName: String ! Functions Name Summary createForNewlyFetching static fun createForNewlyFetching(region: Region , cellIds: ArrayList < String !>, level: Int , config: JsonObject?): LocationsRequestBody ! createForUpdating static fun createForUpdating(region: Region , existingCells: MutableMap < String !, Long !>, level: Int , config: JsonObject?): LocationsRequestBody !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/#locationsrequestbody","text":"class LocationsRequestBody","title":"LocationsRequestBody"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/#properties","text":"Name Summary cellIds val cellIds: ArrayList < String !>! config val config: JsonObject! existingCells val existingCells: MutableMap < String !, Long !>! level val level: Int modes val modes: MutableList < String !>! regionName val regionName: String !","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/#functions","text":"Name Summary createForNewlyFetching static fun createForNewlyFetching(region: Region , cellIds: ArrayList < String !>, level: Int , config: JsonObject?): LocationsRequestBody ! createForUpdating static fun createForUpdating(region: Region , existingCells: MutableMap < String !, Long !>, level: Int , config: JsonObject?): LocationsRequestBody !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/cell-ids/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsRequestBody / cellIds cellIds @SerializedName(\"cellIDs\") val cellIds: ArrayList < String !>!","title":"Cell ids"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/cell-ids/#cellids","text":"@SerializedName(\"cellIDs\") val cellIds: ArrayList < String !>!","title":"cellIds"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/config/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsRequestBody / config config @SerializedName(\"config\") val config: JsonObject!","title":"Config"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/config/#config","text":"@SerializedName(\"config\") val config: JsonObject!","title":"config"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/create-for-newly-fetching/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsRequestBody / createForNewlyFetching createForNewlyFetching static fun createForNewlyFetching(@NonNull region: Region , @NonNull cellIds: ArrayList < String !>, level: Int , @Nullable config: JsonObject?): LocationsRequestBody !","title":"Create for newly fetching"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/create-for-newly-fetching/#createfornewlyfetching","text":"static fun createForNewlyFetching(@NonNull region: Region , @NonNull cellIds: ArrayList < String !>, level: Int , @Nullable config: JsonObject?): LocationsRequestBody !","title":"createForNewlyFetching"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/create-for-updating/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsRequestBody / createForUpdating createForUpdating static fun createForUpdating(@NonNull region: Region , @NonNull existingCells: MutableMap < String !, Long !>, level: Int , @Nullable config: JsonObject?): LocationsRequestBody !","title":"Create for updating"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/create-for-updating/#createforupdating","text":"static fun createForUpdating(@NonNull region: Region , @NonNull existingCells: MutableMap < String !, Long !>, level: Int , @Nullable config: JsonObject?): LocationsRequestBody !","title":"createForUpdating"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/existing-cells/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsRequestBody / existingCells existingCells @SerializedName(\"cellIDHashCodes\") val existingCells: MutableMap < String !, Long !>!","title":"Existing cells"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/existing-cells/#existingcells","text":"@SerializedName(\"cellIDHashCodes\") val existingCells: MutableMap < String !, Long !>!","title":"existingCells"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/level/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsRequestBody / level level @SerializedName(\"level\") val level: Int","title":"Level"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/level/#level","text":"@SerializedName(\"level\") val level: Int","title":"level"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/modes/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsRequestBody / modes modes @SerializedName(\"modes\") val modes: MutableList < String !>!","title":"Modes"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/modes/#modes","text":"@SerializedName(\"modes\") val modes: MutableList < String !>!","title":"modes"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/region-name/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsRequestBody / regionName regionName @SerializedName(\"region\") val regionName: String !","title":"Region name"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-request-body/region-name/#regionname","text":"@SerializedName(\"region\") val regionName: String !","title":"regionName"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsResponse LocationsResponse open class LocationsResponse Types Name Summary Group open class Group Constructors Name Summary <init> LocationsResponse() Functions Name Summary getGroups open fun getGroups(): ArrayList <Group!>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/#locationsresponse","text":"open class LocationsResponse","title":"LocationsResponse"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/#types","text":"Name Summary Group open class Group","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/#constructors","text":"Name Summary <init> LocationsResponse()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/#functions","text":"Name Summary getGroups open fun getGroups(): ArrayList <Group!>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsResponse / <init> <init> LocationsResponse()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-init-/#init","text":"LocationsResponse()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/get-groups/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsResponse / getGroups getGroups open fun getGroups(): ArrayList <Group!>!","title":"Get groups"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/get-groups/#getgroups","text":"open fun getGroups(): ArrayList <Group!>!","title":"getGroups"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsResponse / Group Group open class Group Constructors Name Summary <init> For [`Gson`](#).`Group() Group(hashCode: [ Long ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-long/index.html) , key: [ String ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html) !)` Functions Name Summary getHashCode open fun getHashCode(): Long getKey open fun getKey(): String ! getStops open fun getStops(): ArrayList < ScheduledStop !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/#group","text":"open class Group","title":"Group"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/#constructors","text":"Name Summary <init> For [`Gson`](#).`Group() Group(hashCode: [ Long ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-long/index.html) , key: [ String ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html) !)`","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/#functions","text":"Name Summary getHashCode open fun getHashCode(): Long getKey open fun getKey(): String ! getStops open fun getStops(): ArrayList < ScheduledStop !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsResponse / Group / <init> <init> Group() For `[ Gson`](#). Group(hashCode: Long , key: String !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/-init-/#init","text":"Group() For `[ Gson`](#). Group(hashCode: Long , key: String !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/get-hash-code/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsResponse / Group / getHashCode getHashCode open fun getHashCode(): Long","title":"Get hash code"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/get-hash-code/#gethashcode","text":"open fun getHashCode(): Long","title":"getHashCode"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/get-key/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsResponse / Group / getKey getKey open fun getKey(): String !","title":"Get key"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/get-key/#getkey","text":"open fun getKey(): String !","title":"getKey"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/get-stops/","text":"tripkit-android / com.skedgo.tripkit.data.locations / LocationsResponse / Group / getStops getStops open fun getStops(): ArrayList < ScheduledStop !>!","title":"Get stops"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-locations-response/-group/get-stops/#getstops","text":"open fun getStops(): ArrayList < ScheduledStop !>!","title":"getStops"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/","text":"tripkit-android / com.skedgo.tripkit.data.locations / StopsFetcher StopsFetcher open class StopsFetcher Types Name Summary ICellsLoader interface ICellsLoader ICellsPersistor interface ICellsPersistor IStopsPersistor interface IStopsPersistor Constructors Name Summary <init> StopsFetcher(api: LocationsApi , cellsLoader: ICellsLoader, cellsPersistor: ICellsPersistor, stopsPersistor: IStopsPersistor, configCreator: ConfigRepository , bikePodRepository: BikePodRepository , carParkPersistor: CarParkPersistor , onStreetParkingPersistor: OnStreetParkingPersistor , carParkMapper: CarParkMapper , carPodMapper: CarPodMapper , onStreetParkingMapper: OnStreetParkingMapper , carPodRepository: CarPodRepository ) Functions Name Summary fetchAsync open fun fetchAsync(cellIds: List < String >, region: Region , level: Int ): Observable< List <Group>>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/#stopsfetcher","text":"open class StopsFetcher","title":"StopsFetcher"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/#types","text":"Name Summary ICellsLoader interface ICellsLoader ICellsPersistor interface ICellsPersistor IStopsPersistor interface IStopsPersistor","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/#constructors","text":"Name Summary <init> StopsFetcher(api: LocationsApi , cellsLoader: ICellsLoader, cellsPersistor: ICellsPersistor, stopsPersistor: IStopsPersistor, configCreator: ConfigRepository , bikePodRepository: BikePodRepository , carParkPersistor: CarParkPersistor , onStreetParkingPersistor: OnStreetParkingPersistor , carParkMapper: CarParkMapper , carPodMapper: CarPodMapper , onStreetParkingMapper: OnStreetParkingMapper , carPodRepository: CarPodRepository )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/#functions","text":"Name Summary fetchAsync open fun fetchAsync(cellIds: List < String >, region: Region , level: Int ): Observable< List <Group>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.locations / StopsFetcher / <init> <init> StopsFetcher(api: LocationsApi , cellsLoader: ICellsLoader, cellsPersistor: ICellsPersistor, stopsPersistor: IStopsPersistor, configCreator: ConfigRepository , bikePodRepository: BikePodRepository , carParkPersistor: CarParkPersistor , onStreetParkingPersistor: OnStreetParkingPersistor , carParkMapper: CarParkMapper , carPodMapper: CarPodMapper , onStreetParkingMapper: OnStreetParkingMapper , carPodRepository: CarPodRepository )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-init-/#init","text":"StopsFetcher(api: LocationsApi , cellsLoader: ICellsLoader, cellsPersistor: ICellsPersistor, stopsPersistor: IStopsPersistor, configCreator: ConfigRepository , bikePodRepository: BikePodRepository , carParkPersistor: CarParkPersistor , onStreetParkingPersistor: OnStreetParkingPersistor , carParkMapper: CarParkMapper , carPodMapper: CarPodMapper , onStreetParkingMapper: OnStreetParkingMapper , carPodRepository: CarPodRepository )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/fetch-async/","text":"tripkit-android / com.skedgo.tripkit.data.locations / StopsFetcher / fetchAsync fetchAsync open fun fetchAsync(cellIds: List < String >, region: Region , level: Int ): Observable< List <Group>>","title":"Fetch async"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/fetch-async/#fetchasync","text":"open fun fetchAsync(cellIds: List < String >, region: Region , level: Int ): Observable< List <Group>>","title":"fetchAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-cells-loader/","text":"tripkit-android / com.skedgo.tripkit.data.locations / StopsFetcher / ICellsLoader ICellsLoader interface ICellsLoader Functions Name Summary loadSavedCellsAsync abstract fun loadSavedCellsAsync(cellIds: List < String >): Observable< List <Group>>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-cells-loader/#icellsloader","text":"interface ICellsLoader","title":"ICellsLoader"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-cells-loader/#functions","text":"Name Summary loadSavedCellsAsync abstract fun loadSavedCellsAsync(cellIds: List < String >): Observable< List <Group>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-cells-loader/load-saved-cells-async/","text":"tripkit-android / com.skedgo.tripkit.data.locations / StopsFetcher / ICellsLoader / loadSavedCellsAsync loadSavedCellsAsync abstract fun loadSavedCellsAsync(cellIds: List < String >): Observable< List <Group>>","title":"Load saved cells async"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-cells-loader/load-saved-cells-async/#loadsavedcellsasync","text":"abstract fun loadSavedCellsAsync(cellIds: List < String >): Observable< List <Group>>","title":"loadSavedCellsAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-cells-persistor/","text":"tripkit-android / com.skedgo.tripkit.data.locations / StopsFetcher / ICellsPersistor ICellsPersistor interface ICellsPersistor Functions Name Summary saveCellsSync abstract fun saveCellsSync(cells: List <Group>): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-cells-persistor/#icellspersistor","text":"interface ICellsPersistor","title":"ICellsPersistor"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-cells-persistor/#functions","text":"Name Summary saveCellsSync abstract fun saveCellsSync(cells: List <Group>): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-cells-persistor/save-cells-sync/","text":"tripkit-android / com.skedgo.tripkit.data.locations / StopsFetcher / ICellsPersistor / saveCellsSync saveCellsSync abstract fun saveCellsSync(cells: List <@JvmSuppressWildcards Group>): Unit","title":"Save cells sync"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-cells-persistor/save-cells-sync/#savecellssync","text":"abstract fun saveCellsSync(cells: List <@JvmSuppressWildcards Group>): Unit","title":"saveCellsSync"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-stops-persistor/","text":"tripkit-android / com.skedgo.tripkit.data.locations / StopsFetcher / IStopsPersistor IStopsPersistor interface IStopsPersistor Functions Name Summary saveStopsSync abstract fun saveStopsSync(cells: List <Group>): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-stops-persistor/#istopspersistor","text":"interface IStopsPersistor","title":"IStopsPersistor"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-stops-persistor/#functions","text":"Name Summary saveStopsSync abstract fun saveStopsSync(cells: List <Group>): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-stops-persistor/save-stops-sync/","text":"tripkit-android / com.skedgo.tripkit.data.locations / StopsFetcher / IStopsPersistor / saveStopsSync saveStopsSync abstract fun saveStopsSync(cells: List <@JvmSuppressWildcards Group>): Unit","title":"Save stops sync"},{"location":"tripkit-android/com.skedgo.tripkit.data.locations/-stops-fetcher/-i-stops-persistor/save-stops-sync/#savestopssync","text":"abstract fun saveStopsSync(cells: List <@JvmSuppressWildcards Group>): Unit","title":"saveStopsSync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/","text":"tripkit-android / com.skedgo.tripkit.data.regions Package com.skedgo.tripkit.data.regions Types Name Summary RegionService interface RegionService","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/#package-comskedgotripkitdataregions","text":"","title":"Package com.skedgo.tripkit.data.regions"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/#types","text":"Name Summary RegionService interface RegionService","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService RegionService interface RegionService Functions Name Summary fetchParatransitByRegionAsync abstract fun fetchParatransitByRegionAsync(region: Region ): Observable< Paratransit > getCitiesAsync abstract fun getCitiesAsync(): Observable< Location > getCitiesByNameAsync abstract fun getCitiesByNameAsync(name: String ?): Observable< Location > getRegionByLocationAsync abstract fun getRegionByLocationAsync(latitude: Double , longitude: Double ): Observable< Region > abstract fun getRegionByLocationAsync(location: Location ?): Observable< Region > getRegionByNameAsync abstract fun getRegionByNameAsync(regionName: String ): Observable< Region > getRegionInfoByRegionAsync abstract fun getRegionInfoByRegionAsync(region: Region ): Observable< RegionInfo > getRegionsAsync abstract fun getRegionsAsync(): Observable< List < Region >> getTransitModesByRegionAsync abstract fun getTransitModesByRegionAsync(region: Region ): Observable< List < ModeInfo >> getTransportModeByIdAsync abstract fun getTransportModeByIdAsync(modeId: String ): Observable< TransportMode > getTransportModesAsync abstract fun getTransportModesAsync(): Observable< Map < String , TransportMode >> getTransportModesByIdsAsync abstract fun getTransportModesByIdsAsync(modeIds: List < String >): Observable< List < TransportMode >> getTransportModesByLocationAsync abstract fun getTransportModesByLocationAsync(location: Location ): Observable< List < TransportMode >> getTransportModesByRegionAsync abstract fun getTransportModesByRegionAsync(region: Region ): Observable< List < TransportMode >> refreshAsync abstract fun refreshAsync(): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/#regionservice","text":"interface RegionService","title":"RegionService"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/#functions","text":"Name Summary fetchParatransitByRegionAsync abstract fun fetchParatransitByRegionAsync(region: Region ): Observable< Paratransit > getCitiesAsync abstract fun getCitiesAsync(): Observable< Location > getCitiesByNameAsync abstract fun getCitiesByNameAsync(name: String ?): Observable< Location > getRegionByLocationAsync abstract fun getRegionByLocationAsync(latitude: Double , longitude: Double ): Observable< Region > abstract fun getRegionByLocationAsync(location: Location ?): Observable< Region > getRegionByNameAsync abstract fun getRegionByNameAsync(regionName: String ): Observable< Region > getRegionInfoByRegionAsync abstract fun getRegionInfoByRegionAsync(region: Region ): Observable< RegionInfo > getRegionsAsync abstract fun getRegionsAsync(): Observable< List < Region >> getTransitModesByRegionAsync abstract fun getTransitModesByRegionAsync(region: Region ): Observable< List < ModeInfo >> getTransportModeByIdAsync abstract fun getTransportModeByIdAsync(modeId: String ): Observable< TransportMode > getTransportModesAsync abstract fun getTransportModesAsync(): Observable< Map < String , TransportMode >> getTransportModesByIdsAsync abstract fun getTransportModesByIdsAsync(modeIds: List < String >): Observable< List < TransportMode >> getTransportModesByLocationAsync abstract fun getTransportModesByLocationAsync(location: Location ): Observable< List < TransportMode >> getTransportModesByRegionAsync abstract fun getTransportModesByRegionAsync(region: Region ): Observable< List < TransportMode >> refreshAsync abstract fun refreshAsync(): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/fetch-paratransit-by-region-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / fetchParatransitByRegionAsync fetchParatransitByRegionAsync abstract fun fetchParatransitByRegionAsync(region: Region ): Observable< Paratransit >","title":"Fetch paratransit by region async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/fetch-paratransit-by-region-async/#fetchparatransitbyregionasync","text":"abstract fun fetchParatransitByRegionAsync(region: Region ): Observable< Paratransit >","title":"fetchParatransitByRegionAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-cities-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getCitiesAsync getCitiesAsync abstract fun getCitiesAsync(): Observable< Location >","title":"Get cities async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-cities-async/#getcitiesasync","text":"abstract fun getCitiesAsync(): Observable< Location >","title":"getCitiesAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-cities-by-name-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getCitiesByNameAsync getCitiesByNameAsync abstract fun getCitiesByNameAsync(name: String ?): Observable< Location >","title":"Get cities by name async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-cities-by-name-async/#getcitiesbynameasync","text":"abstract fun getCitiesByNameAsync(name: String ?): Observable< Location >","title":"getCitiesByNameAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-region-by-location-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getRegionByLocationAsync getRegionByLocationAsync abstract fun getRegionByLocationAsync(latitude: Double , longitude: Double ): Observable< Region > abstract fun getRegionByLocationAsync(location: Location ?): Observable< Region >","title":"Get region by location async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-region-by-location-async/#getregionbylocationasync","text":"abstract fun getRegionByLocationAsync(latitude: Double , longitude: Double ): Observable< Region > abstract fun getRegionByLocationAsync(location: Location ?): Observable< Region >","title":"getRegionByLocationAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-region-by-name-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getRegionByNameAsync getRegionByNameAsync abstract fun getRegionByNameAsync(regionName: String ): Observable< Region >","title":"Get region by name async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-region-by-name-async/#getregionbynameasync","text":"abstract fun getRegionByNameAsync(regionName: String ): Observable< Region >","title":"getRegionByNameAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-region-info-by-region-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getRegionInfoByRegionAsync getRegionInfoByRegionAsync abstract fun getRegionInfoByRegionAsync(region: Region ): Observable< RegionInfo >","title":"Get region info by region async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-region-info-by-region-async/#getregioninfobyregionasync","text":"abstract fun getRegionInfoByRegionAsync(region: Region ): Observable< RegionInfo >","title":"getRegionInfoByRegionAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-regions-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getRegionsAsync getRegionsAsync abstract fun getRegionsAsync(): Observable< List < Region >>","title":"Get regions async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-regions-async/#getregionsasync","text":"abstract fun getRegionsAsync(): Observable< List < Region >>","title":"getRegionsAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transit-modes-by-region-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getTransitModesByRegionAsync getTransitModesByRegionAsync abstract fun getTransitModesByRegionAsync(region: Region ): Observable< List < ModeInfo >>","title":"Get transit modes by region async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transit-modes-by-region-async/#gettransitmodesbyregionasync","text":"abstract fun getTransitModesByRegionAsync(region: Region ): Observable< List < ModeInfo >>","title":"getTransitModesByRegionAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transport-mode-by-id-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getTransportModeByIdAsync getTransportModeByIdAsync abstract fun getTransportModeByIdAsync(modeId: String ): Observable< TransportMode >","title":"Get transport mode by id async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transport-mode-by-id-async/#gettransportmodebyidasync","text":"abstract fun getTransportModeByIdAsync(modeId: String ): Observable< TransportMode >","title":"getTransportModeByIdAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transport-modes-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getTransportModesAsync getTransportModesAsync abstract fun getTransportModesAsync(): Observable< Map < String , TransportMode >>","title":"Get transport modes async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transport-modes-async/#gettransportmodesasync","text":"abstract fun getTransportModesAsync(): Observable< Map < String , TransportMode >>","title":"getTransportModesAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transport-modes-by-ids-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getTransportModesByIdsAsync getTransportModesByIdsAsync abstract fun getTransportModesByIdsAsync(modeIds: List < String >): Observable< List < TransportMode >>","title":"Get transport modes by ids async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transport-modes-by-ids-async/#gettransportmodesbyidsasync","text":"abstract fun getTransportModesByIdsAsync(modeIds: List < String >): Observable< List < TransportMode >>","title":"getTransportModesByIdsAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transport-modes-by-location-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getTransportModesByLocationAsync getTransportModesByLocationAsync abstract fun getTransportModesByLocationAsync(location: Location ): Observable< List < TransportMode >>","title":"Get transport modes by location async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transport-modes-by-location-async/#gettransportmodesbylocationasync","text":"abstract fun getTransportModesByLocationAsync(location: Location ): Observable< List < TransportMode >>","title":"getTransportModesByLocationAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transport-modes-by-region-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / getTransportModesByRegionAsync getTransportModesByRegionAsync abstract fun getTransportModesByRegionAsync(region: Region ): Observable< List < TransportMode >>","title":"Get transport modes by region async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/get-transport-modes-by-region-async/#gettransportmodesbyregionasync","text":"abstract fun getTransportModesByRegionAsync(region: Region ): Observable< List < TransportMode >>","title":"getTransportModesByRegionAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/refresh-async/","text":"tripkit-android / com.skedgo.tripkit.data.regions / RegionService / refreshAsync refreshAsync abstract fun refreshAsync(): Completable","title":"Refresh async"},{"location":"tripkit-android/com.skedgo.tripkit.data.regions/-region-service/refresh-async/#refreshasync","text":"abstract fun refreshAsync(): Completable","title":"refreshAsync"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/","text":"tripkit-android / com.skedgo.tripkit.data.routingstatus Package com.skedgo.tripkit.data.routingstatus Types Name Summary RoutingStatusRepositoryImpl class RoutingStatusRepositoryImpl : RoutingStatusRepository","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/#package-comskedgotripkitdataroutingstatus","text":"","title":"Package com.skedgo.tripkit.data.routingstatus"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/#types","text":"Name Summary RoutingStatusRepositoryImpl class RoutingStatusRepositoryImpl : RoutingStatusRepository","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/-routing-status-repository-impl/","text":"tripkit-android / com.skedgo.tripkit.data.routingstatus / RoutingStatusRepositoryImpl RoutingStatusRepositoryImpl @Singleton class RoutingStatusRepositoryImpl : RoutingStatusRepository Constructors Name Summary <init> RoutingStatusRepositoryImpl(routingStatusStore: RoutingStatusStore) Functions Name Summary getRoutingStatus fun getRoutingStatus(requestId: String ): Observable< RoutingStatus > putRoutingStatus fun putRoutingStatus(routingStatus: RoutingStatus ): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/-routing-status-repository-impl/#routingstatusrepositoryimpl","text":"@Singleton class RoutingStatusRepositoryImpl : RoutingStatusRepository","title":"RoutingStatusRepositoryImpl"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/-routing-status-repository-impl/#constructors","text":"Name Summary <init> RoutingStatusRepositoryImpl(routingStatusStore: RoutingStatusStore)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/-routing-status-repository-impl/#functions","text":"Name Summary getRoutingStatus fun getRoutingStatus(requestId: String ): Observable< RoutingStatus > putRoutingStatus fun putRoutingStatus(routingStatus: RoutingStatus ): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/-routing-status-repository-impl/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.routingstatus / RoutingStatusRepositoryImpl / <init> <init> RoutingStatusRepositoryImpl(routingStatusStore: RoutingStatusStore)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/-routing-status-repository-impl/-init-/#init","text":"RoutingStatusRepositoryImpl(routingStatusStore: RoutingStatusStore)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/-routing-status-repository-impl/get-routing-status/","text":"tripkit-android / com.skedgo.tripkit.data.routingstatus / RoutingStatusRepositoryImpl / getRoutingStatus getRoutingStatus fun getRoutingStatus(requestId: String ): Observable< RoutingStatus >","title":"Get routing status"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/-routing-status-repository-impl/get-routing-status/#getroutingstatus","text":"fun getRoutingStatus(requestId: String ): Observable< RoutingStatus >","title":"getRoutingStatus"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/-routing-status-repository-impl/put-routing-status/","text":"tripkit-android / com.skedgo.tripkit.data.routingstatus / RoutingStatusRepositoryImpl / putRoutingStatus putRoutingStatus fun putRoutingStatus(routingStatus: RoutingStatus ): Completable","title":"Put routing status"},{"location":"tripkit-android/com.skedgo.tripkit.data.routingstatus/-routing-status-repository-impl/put-routing-status/#putroutingstatus","text":"fun putRoutingStatus(routingStatus: RoutingStatus ): Completable","title":"putRoutingStatus"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/","text":"tripkit-android / com.skedgo.tripkit.data.tsp Package com.skedgo.tripkit.data.tsp Types Name Summary Paratransit open class Paratransit RegionInfo abstract class RegionInfo","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/#package-comskedgotripkitdatatsp","text":"","title":"Package com.skedgo.tripkit.data.tsp"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/#types","text":"Name Summary Paratransit open class Paratransit RegionInfo abstract class RegionInfo","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / Paratransit Paratransit open class Paratransit Constructors Name Summary <init> Paratransit() Paratransit(url: String !, name: String !, number: String !) Functions Name Summary name open fun name(): String ? number open fun number(): String ? url open fun url(): String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/#paratransit","text":"open class Paratransit","title":"Paratransit"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/#constructors","text":"Name Summary <init> Paratransit() Paratransit(url: String !, name: String !, number: String !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/#functions","text":"Name Summary name open fun name(): String ? number open fun number(): String ? url open fun url(): String ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / Paratransit / <init> <init> Paratransit() Paratransit(url: String !, name: String !, number: String !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/-init-/#init","text":"Paratransit() Paratransit(url: String !, name: String !, number: String !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/name/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / Paratransit / name name @Nullable open fun name(): String ?","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/name/#name","text":"@Nullable open fun name(): String ?","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/number/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / Paratransit / number number @Nullable open fun number(): String ?","title":"Number"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/number/#number","text":"@Nullable open fun number(): String ?","title":"number"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/url/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / Paratransit / url url @Nullable open fun url(): String ?","title":"Url"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-paratransit/url/#url","text":"@Nullable open fun url(): String ?","title":"url"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / RegionInfo RegionInfo @Immutable @TypeAdapters abstract class RegionInfo Constructors Name Summary <init> RegionInfo() Functions Name Summary paratransit abstract fun paratransit(): Paratransit ? streetWheelchairAccessibility open fun streetWheelchairAccessibility(): Boolean supportsConcessionPricing open fun supportsConcessionPricing(): Boolean transitModes abstract fun transitModes(): MutableList < ModeInfo !>? transitWheelchairAccessibility open fun transitWheelchairAccessibility(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/#regioninfo","text":"@Immutable @TypeAdapters abstract class RegionInfo","title":"RegionInfo"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/#constructors","text":"Name Summary <init> RegionInfo()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/#functions","text":"Name Summary paratransit abstract fun paratransit(): Paratransit ? streetWheelchairAccessibility open fun streetWheelchairAccessibility(): Boolean supportsConcessionPricing open fun supportsConcessionPricing(): Boolean transitModes abstract fun transitModes(): MutableList < ModeInfo !>? transitWheelchairAccessibility open fun transitWheelchairAccessibility(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/-init-/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / RegionInfo / <init> <init> RegionInfo()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/-init-/#init","text":"RegionInfo()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/paratransit/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / RegionInfo / paratransit paratransit @Nullable abstract fun paratransit(): Paratransit ?","title":"Paratransit"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/paratransit/#paratransit","text":"@Nullable abstract fun paratransit(): Paratransit ?","title":"paratransit"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/street-wheelchair-accessibility/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / RegionInfo / streetWheelchairAccessibility streetWheelchairAccessibility @Default open fun streetWheelchairAccessibility(): Boolean","title":"Street wheelchair accessibility"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/street-wheelchair-accessibility/#streetwheelchairaccessibility","text":"@Default open fun streetWheelchairAccessibility(): Boolean","title":"streetWheelchairAccessibility"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/supports-concession-pricing/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / RegionInfo / supportsConcessionPricing supportsConcessionPricing @Default open fun supportsConcessionPricing(): Boolean","title":"Supports concession pricing"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/supports-concession-pricing/#supportsconcessionpricing","text":"@Default open fun supportsConcessionPricing(): Boolean","title":"supportsConcessionPricing"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/transit-modes/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / RegionInfo / transitModes transitModes @Nullable abstract fun transitModes(): MutableList < ModeInfo !>?","title":"Transit modes"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/transit-modes/#transitmodes","text":"@Nullable abstract fun transitModes(): MutableList < ModeInfo !>?","title":"transitModes"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/transit-wheelchair-accessibility/","text":"tripkit-android / com.skedgo.tripkit.data.tsp / RegionInfo / transitWheelchairAccessibility transitWheelchairAccessibility @Default open fun transitWheelchairAccessibility(): Boolean Return Boolean : If true, indicates that we have wheelchair accessibility information for public transport for the current region. Otherwise, no wheelchair accessibility info.","title":"Transit wheelchair accessibility"},{"location":"tripkit-android/com.skedgo.tripkit.data.tsp/-region-info/transit-wheelchair-accessibility/#transitwheelchairaccessibility","text":"@Default open fun transitWheelchairAccessibility(): Boolean Return Boolean : If true, indicates that we have wheelchair accessibility information for public transport for the current region. Otherwise, no wheelchair accessibility info.","title":"transitWheelchairAccessibility"},{"location":"tripkit-android/com.skedgo.tripkit.data.util/","text":"tripkit-android / com.skedgo.tripkit.data.util Package com.skedgo.tripkit.data.util Types Name Summary PreferenceKey typealias PreferenceKey = String Extensions for External Classes Name Summary android.content.SharedPreferences","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.util/#package-comskedgotripkitdatautil","text":"","title":"Package com.skedgo.tripkit.data.util"},{"location":"tripkit-android/com.skedgo.tripkit.data.util/#types","text":"Name Summary PreferenceKey typealias PreferenceKey = String","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.data.util/#extensions-for-external-classes","text":"Name Summary android.content.SharedPreferences","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.data.util/-preference-key/","text":"tripkit-android / com.skedgo.tripkit.data.util / PreferenceKey PreferenceKey typealias PreferenceKey = String","title":" preference key"},{"location":"tripkit-android/com.skedgo.tripkit.data.util/-preference-key/#preferencekey","text":"typealias PreferenceKey = String","title":"PreferenceKey"},{"location":"tripkit-android/com.skedgo.tripkit.data.util/android.content.-shared-preferences/","text":"tripkit-android / com.skedgo.tripkit.data.util / android.content.SharedPreferences Extensions for android.content.SharedPreferences Name Summary onChanged fun SharedPreferences.onChanged(): Observable< PreferenceKey >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.data.util/android.content.-shared-preferences/#extensions-for-androidcontentsharedpreferences","text":"Name Summary onChanged fun SharedPreferences.onChanged(): Observable< PreferenceKey >","title":"Extensions for android.content.SharedPreferences"},{"location":"tripkit-android/com.skedgo.tripkit.data.util/android.content.-shared-preferences/on-changed/","text":"tripkit-android / com.skedgo.tripkit.data.util / android.content.SharedPreferences / onChanged onChanged fun SharedPreferences.onChanged(): Observable< PreferenceKey >","title":"On changed"},{"location":"tripkit-android/com.skedgo.tripkit.data.util/android.content.-shared-preferences/on-changed/#onchanged","text":"fun SharedPreferences.onChanged(): Observable< PreferenceKey >","title":"onChanged"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/","text":"tripkit-android / com.skedgo.tripkit.datetime Package com.skedgo.tripkit.datetime Types Name Summary PrintFullDate interface PrintFullDate PrintTime An UseCase to print time with respect of 24-hour (or 12-hour) setting on users' device. interface PrintTime","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/#package-comskedgotripkitdatetime","text":"","title":"Package com.skedgo.tripkit.datetime"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/#types","text":"Name Summary PrintFullDate interface PrintFullDate PrintTime An UseCase to print time with respect of 24-hour (or 12-hour) setting on users' device. interface PrintTime","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-full-date/","text":"tripkit-android / com.skedgo.tripkit.datetime / PrintFullDate PrintFullDate interface PrintFullDate Functions Name Summary execute abstract fun execute(dateTime: DateTime): Flowable< String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-full-date/#printfulldate","text":"interface PrintFullDate","title":"PrintFullDate"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-full-date/#functions","text":"Name Summary execute abstract fun execute(dateTime: DateTime): Flowable< String >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-full-date/execute/","text":"tripkit-android / com.skedgo.tripkit.datetime / PrintFullDate / execute execute abstract fun execute(dateTime: DateTime): Flowable< String >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-full-date/execute/#execute","text":"abstract fun execute(dateTime: DateTime): Flowable< String >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-time/","text":"tripkit-android / com.skedgo.tripkit.datetime / PrintTime PrintTime interface PrintTime An UseCase to print time with respect of 24-hour (or 12-hour) setting on users' device. Functions Name Summary execute abstract fun execute(dateTime: DateTime): Flowable< String > print abstract fun print(dateTime: DateTime): String printLocalTime abstract fun printLocalTime(localTime: LocalTime): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-time/#printtime","text":"interface PrintTime An UseCase to print time with respect of 24-hour (or 12-hour) setting on users' device.","title":"PrintTime"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-time/#functions","text":"Name Summary execute abstract fun execute(dateTime: DateTime): Flowable< String > print abstract fun print(dateTime: DateTime): String printLocalTime abstract fun printLocalTime(localTime: LocalTime): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-time/execute/","text":"tripkit-android / com.skedgo.tripkit.datetime / PrintTime / execute execute abstract fun execute(dateTime: DateTime): Flowable< String >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-time/execute/#execute","text":"abstract fun execute(dateTime: DateTime): Flowable< String >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-time/print-local-time/","text":"tripkit-android / com.skedgo.tripkit.datetime / PrintTime / printLocalTime printLocalTime abstract fun printLocalTime(localTime: LocalTime): String","title":"Print local time"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-time/print-local-time/#printlocaltime","text":"abstract fun printLocalTime(localTime: LocalTime): String","title":"printLocalTime"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-time/print/","text":"tripkit-android / com.skedgo.tripkit.datetime / PrintTime / print print abstract fun print(dateTime: DateTime): String","title":"Print"},{"location":"tripkit-android/com.skedgo.tripkit.datetime/-print-time/print/#print","text":"abstract fun print(dateTime: DateTime): String","title":"print"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/","text":"tripkit-android / com.skedgo.tripkit.geocoding Package com.skedgo.tripkit.geocoding Types Name Summary Geocodable interface Geocodable ReverseGeocodable interface ReverseGeocodable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/#package-comskedgotripkitgeocoding","text":"","title":"Package com.skedgo.tripkit.geocoding"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/#types","text":"Name Summary Geocodable interface Geocodable ReverseGeocodable interface ReverseGeocodable","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/-geocodable/","text":"tripkit-android / com.skedgo.tripkit.geocoding / Geocodable Geocodable interface Geocodable Functions Name Summary getCoordinates abstract fun getCoordinates(address: String , region: Region ? = null): Observable< Pair < Double , Double >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/-geocodable/#geocodable","text":"interface Geocodable","title":"Geocodable"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/-geocodable/#functions","text":"Name Summary getCoordinates abstract fun getCoordinates(address: String , region: Region ? = null): Observable< Pair < Double , Double >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/-geocodable/get-coordinates/","text":"tripkit-android / com.skedgo.tripkit.geocoding / Geocodable / getCoordinates getCoordinates abstract fun getCoordinates(address: String , region: Region ? = null): Observable< Pair < Double , Double >>","title":"Get coordinates"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/-geocodable/get-coordinates/#getcoordinates","text":"abstract fun getCoordinates(address: String , region: Region ? = null): Observable< Pair < Double , Double >>","title":"getCoordinates"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/-reverse-geocodable/","text":"tripkit-android / com.skedgo.tripkit.geocoding / ReverseGeocodable ReverseGeocodable interface ReverseGeocodable Functions Name Summary getAddress abstract fun getAddress(latitude: Double , longitude: Double ): Observable< String > Inheritors Name Summary AndroidGeocoder class AndroidGeocoder : ReverseGeocodable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/-reverse-geocodable/#reversegeocodable","text":"interface ReverseGeocodable","title":"ReverseGeocodable"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/-reverse-geocodable/#functions","text":"Name Summary getAddress abstract fun getAddress(latitude: Double , longitude: Double ): Observable< String >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/-reverse-geocodable/#inheritors","text":"Name Summary AndroidGeocoder class AndroidGeocoder : ReverseGeocodable","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/-reverse-geocodable/get-address/","text":"tripkit-android / com.skedgo.tripkit.geocoding / ReverseGeocodable / getAddress getAddress abstract fun getAddress(latitude: Double , longitude: Double ): Observable< String >","title":"Get address"},{"location":"tripkit-android/com.skedgo.tripkit.geocoding/-reverse-geocodable/get-address/#getaddress","text":"abstract fun getAddress(latitude: Double , longitude: Double ): Observable< String >","title":"getAddress"},{"location":"tripkit-android/com.skedgo.tripkit.location/","text":"tripkit-android / com.skedgo.tripkit.location Package com.skedgo.tripkit.location Types Name Summary GeoPoint Represents a point on the Earth's surface, in latitude and longitude coordinates. Nothing more! data class GeoPoint","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.location/#package-comskedgotripkitlocation","text":"","title":"Package com.skedgo.tripkit.location"},{"location":"tripkit-android/com.skedgo.tripkit.location/#types","text":"Name Summary GeoPoint Represents a point on the Earth's surface, in latitude and longitude coordinates. Nothing more! data class GeoPoint","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.location/-geo-point/","text":"tripkit-android / com.skedgo.tripkit.location / GeoPoint GeoPoint data class GeoPoint Represents a point on the Earth's surface, in latitude and longitude coordinates. Nothing more! Constructors Name Summary <init> Represents a point on the Earth's surface, in latitude and longitude coordinates. Nothing more! GeoPoint(latitude: Double = 0.0, longitude: Double = 0.0) Properties Name Summary latitude val latitude: Double longitude val longitude: Double","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.location/-geo-point/#geopoint","text":"data class GeoPoint Represents a point on the Earth's surface, in latitude and longitude coordinates. Nothing more!","title":"GeoPoint"},{"location":"tripkit-android/com.skedgo.tripkit.location/-geo-point/#constructors","text":"Name Summary <init> Represents a point on the Earth's surface, in latitude and longitude coordinates. Nothing more! GeoPoint(latitude: Double = 0.0, longitude: Double = 0.0)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.location/-geo-point/#properties","text":"Name Summary latitude val latitude: Double longitude val longitude: Double","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.location/-geo-point/-init-/","text":"tripkit-android / com.skedgo.tripkit.location / GeoPoint / <init> <init> GeoPoint(latitude: Double = 0.0, longitude: Double = 0.0) Represents a point on the Earth's surface, in latitude and longitude coordinates. Nothing more!","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.location/-geo-point/-init-/#init","text":"GeoPoint(latitude: Double = 0.0, longitude: Double = 0.0) Represents a point on the Earth's surface, in latitude and longitude coordinates. Nothing more!","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.location/-geo-point/latitude/","text":"tripkit-android / com.skedgo.tripkit.location / GeoPoint / latitude latitude val latitude: Double","title":"Latitude"},{"location":"tripkit-android/com.skedgo.tripkit.location/-geo-point/latitude/#latitude","text":"val latitude: Double","title":"latitude"},{"location":"tripkit-android/com.skedgo.tripkit.location/-geo-point/longitude/","text":"tripkit-android / com.skedgo.tripkit.location / GeoPoint / longitude longitude val longitude: Double","title":"Longitude"},{"location":"tripkit-android/com.skedgo.tripkit.location/-geo-point/longitude/#longitude","text":"val longitude: Double","title":"longitude"},{"location":"tripkit-android/com.skedgo.tripkit.locations/","text":"tripkit-android / com.skedgo.tripkit.locations Package com.skedgo.tripkit.locations Types Name Summary CarPod class CarPod Operator class Operator RealTimeInfo class RealTimeInfo Vehicle class Vehicle","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.locations/#package-comskedgotripkitlocations","text":"","title":"Package com.skedgo.tripkit.locations"},{"location":"tripkit-android/com.skedgo.tripkit.locations/#types","text":"Name Summary CarPod class CarPod Operator class Operator RealTimeInfo class RealTimeInfo Vehicle class Vehicle","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod CarPod class CarPod Constructors Name Summary <init> CarPod(id: String , address: String ?, lat: Double , lng: Double , name: String , localIcon: String , remoteIcon: String ?, deepLink: String ?, appLinkAndroid: String ?, realTimeInfo: RealTimeInfo ?, operator: Operator , vehicles: List < Vehicle >?) Properties Name Summary address val address: String ? appLinkAndroid val appLinkAndroid: String ? deepLink val deepLink: String ? id val id: String lat val lat: Double lng val lng: Double localIcon val localIcon: String name val name: String operator val operator: Operator realTimeInfo val realTimeInfo: RealTimeInfo ? remoteIcon val remoteIcon: String ? vehicles val vehicles: List < Vehicle >?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/#carpod","text":"class CarPod","title":"CarPod"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/#constructors","text":"Name Summary <init> CarPod(id: String , address: String ?, lat: Double , lng: Double , name: String , localIcon: String , remoteIcon: String ?, deepLink: String ?, appLinkAndroid: String ?, realTimeInfo: RealTimeInfo ?, operator: Operator , vehicles: List < Vehicle >?)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/#properties","text":"Name Summary address val address: String ? appLinkAndroid val appLinkAndroid: String ? deepLink val deepLink: String ? id val id: String lat val lat: Double lng val lng: Double localIcon val localIcon: String name val name: String operator val operator: Operator realTimeInfo val realTimeInfo: RealTimeInfo ? remoteIcon val remoteIcon: String ? vehicles val vehicles: List < Vehicle >?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/-init-/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / <init> <init> CarPod(id: String , address: String ?, lat: Double , lng: Double , name: String , localIcon: String , remoteIcon: String ?, deepLink: String ?, appLinkAndroid: String ?, realTimeInfo: RealTimeInfo ?, operator: Operator , vehicles: List < Vehicle >?)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/-init-/#init","text":"CarPod(id: String , address: String ?, lat: Double , lng: Double , name: String , localIcon: String , remoteIcon: String ?, deepLink: String ?, appLinkAndroid: String ?, realTimeInfo: RealTimeInfo ?, operator: Operator , vehicles: List < Vehicle >?)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/address/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / address address val address: String ?","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/address/#address","text":"val address: String ?","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/app-link-android/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / appLinkAndroid appLinkAndroid val appLinkAndroid: String ?","title":"App link android"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/app-link-android/#applinkandroid","text":"val appLinkAndroid: String ?","title":"appLinkAndroid"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/deep-link/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / deepLink deepLink val deepLink: String ?","title":"Deep link"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/deep-link/#deeplink","text":"val deepLink: String ?","title":"deepLink"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/id/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / id id val id: String","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/id/#id","text":"val id: String","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/lat/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / lat lat val lat: Double","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/lat/#lat","text":"val lat: Double","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/lng/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / lng lng val lng: Double","title":"Lng"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/lng/#lng","text":"val lng: Double","title":"lng"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/local-icon/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / localIcon localIcon val localIcon: String","title":"Local icon"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/local-icon/#localicon","text":"val localIcon: String","title":"localIcon"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/name/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / name name val name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/name/#name","text":"val name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/operator/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / operator operator val operator: Operator","title":"Operator"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/operator/#operator","text":"val operator: Operator","title":"operator"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/real-time-info/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / realTimeInfo realTimeInfo val realTimeInfo: RealTimeInfo ?","title":"Real time info"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/real-time-info/#realtimeinfo","text":"val realTimeInfo: RealTimeInfo ?","title":"realTimeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/remote-icon/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / remoteIcon remoteIcon val remoteIcon: String ?","title":"Remote icon"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/remote-icon/#remoteicon","text":"val remoteIcon: String ?","title":"remoteIcon"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/vehicles/","text":"tripkit-android / com.skedgo.tripkit.locations / CarPod / vehicles vehicles val vehicles: List < Vehicle >?","title":"Vehicles"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-car-pod/vehicles/#vehicles","text":"val vehicles: List < Vehicle >?","title":"vehicles"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/","text":"tripkit-android / com.skedgo.tripkit.locations / Operator Operator class Operator Constructors Name Summary <init> Operator(name: String , phone: String ?, website: String ?) Properties Name Summary name val name: String phone var phone: String ? website var website: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/#operator","text":"class Operator","title":"Operator"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/#constructors","text":"Name Summary <init> Operator(name: String , phone: String ?, website: String ?)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/#properties","text":"Name Summary name val name: String phone var phone: String ? website var website: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/-init-/","text":"tripkit-android / com.skedgo.tripkit.locations / Operator / <init> <init> Operator(name: String , phone: String ?, website: String ?)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/-init-/#init","text":"Operator(name: String , phone: String ?, website: String ?)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/name/","text":"tripkit-android / com.skedgo.tripkit.locations / Operator / name name val name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/name/#name","text":"val name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/phone/","text":"tripkit-android / com.skedgo.tripkit.locations / Operator / phone phone var phone: String ?","title":"Phone"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/phone/#phone","text":"var phone: String ?","title":"phone"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/website/","text":"tripkit-android / com.skedgo.tripkit.locations / Operator / website website var website: String ?","title":"Website"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-operator/website/#website","text":"var website: String ?","title":"website"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/","text":"tripkit-android / com.skedgo.tripkit.locations / RealTimeInfo RealTimeInfo class RealTimeInfo Constructors Name Summary <init> RealTimeInfo(availableChargingSpaces: Int , availableVehicles: Int , totalSpaces: Int , lastUpdate: Long , inService: Boolean ) Properties Name Summary availableChargingSpaces val availableChargingSpaces: Int availableVehicles val availableVehicles: Int inService val inService: Boolean lastUpdate val lastUpdate: Long totalSpaces val totalSpaces: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/#realtimeinfo","text":"class RealTimeInfo","title":"RealTimeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/#constructors","text":"Name Summary <init> RealTimeInfo(availableChargingSpaces: Int , availableVehicles: Int , totalSpaces: Int , lastUpdate: Long , inService: Boolean )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/#properties","text":"Name Summary availableChargingSpaces val availableChargingSpaces: Int availableVehicles val availableVehicles: Int inService val inService: Boolean lastUpdate val lastUpdate: Long totalSpaces val totalSpaces: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/-init-/","text":"tripkit-android / com.skedgo.tripkit.locations / RealTimeInfo / <init> <init> RealTimeInfo(availableChargingSpaces: Int , availableVehicles: Int , totalSpaces: Int , lastUpdate: Long , inService: Boolean )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/-init-/#init","text":"RealTimeInfo(availableChargingSpaces: Int , availableVehicles: Int , totalSpaces: Int , lastUpdate: Long , inService: Boolean )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/available-charging-spaces/","text":"tripkit-android / com.skedgo.tripkit.locations / RealTimeInfo / availableChargingSpaces availableChargingSpaces val availableChargingSpaces: Int","title":"Available charging spaces"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/available-charging-spaces/#availablechargingspaces","text":"val availableChargingSpaces: Int","title":"availableChargingSpaces"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/available-vehicles/","text":"tripkit-android / com.skedgo.tripkit.locations / RealTimeInfo / availableVehicles availableVehicles val availableVehicles: Int","title":"Available vehicles"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/available-vehicles/#availablevehicles","text":"val availableVehicles: Int","title":"availableVehicles"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/in-service/","text":"tripkit-android / com.skedgo.tripkit.locations / RealTimeInfo / inService inService val inService: Boolean","title":"In service"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/in-service/#inservice","text":"val inService: Boolean","title":"inService"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/last-update/","text":"tripkit-android / com.skedgo.tripkit.locations / RealTimeInfo / lastUpdate lastUpdate val lastUpdate: Long","title":"Last update"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/last-update/#lastupdate","text":"val lastUpdate: Long","title":"lastUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/total-spaces/","text":"tripkit-android / com.skedgo.tripkit.locations / RealTimeInfo / totalSpaces totalSpaces val totalSpaces: Int","title":"Total spaces"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-real-time-info/total-spaces/#totalspaces","text":"val totalSpaces: Int","title":"totalSpaces"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/","text":"tripkit-android / com.skedgo.tripkit.locations / Vehicle Vehicle class Vehicle Constructors Name Summary <init> Vehicle(name: String , fuelType: String ?, licensePlate: String ?) Properties Name Summary fuelType val fuelType: String ? licensePlate val licensePlate: String ? name val name: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/#vehicle","text":"class Vehicle","title":"Vehicle"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/#constructors","text":"Name Summary <init> Vehicle(name: String , fuelType: String ?, licensePlate: String ?)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/#properties","text":"Name Summary fuelType val fuelType: String ? licensePlate val licensePlate: String ? name val name: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/-init-/","text":"tripkit-android / com.skedgo.tripkit.locations / Vehicle / <init> <init> Vehicle(name: String , fuelType: String ?, licensePlate: String ?)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/-init-/#init","text":"Vehicle(name: String , fuelType: String ?, licensePlate: String ?)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/fuel-type/","text":"tripkit-android / com.skedgo.tripkit.locations / Vehicle / fuelType fuelType val fuelType: String ?","title":"Fuel type"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/fuel-type/#fueltype","text":"val fuelType: String ?","title":"fuelType"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/license-plate/","text":"tripkit-android / com.skedgo.tripkit.locations / Vehicle / licensePlate licensePlate val licensePlate: String ?","title":"License plate"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/license-plate/#licenseplate","text":"val licensePlate: String ?","title":"licensePlate"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/name/","text":"tripkit-android / com.skedgo.tripkit.locations / Vehicle / name name val name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.locations/-vehicle/name/#name","text":"val name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.logging/","text":"tripkit-android / com.skedgo.tripkit.logging Package com.skedgo.tripkit.logging Types Name Summary ErrorLogger interface ErrorLogger","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.logging/#package-comskedgotripkitlogging","text":"","title":"Package com.skedgo.tripkit.logging"},{"location":"tripkit-android/com.skedgo.tripkit.logging/#types","text":"Name Summary ErrorLogger interface ErrorLogger","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.logging/-error-logger/","text":"tripkit-android / com.skedgo.tripkit.logging / ErrorLogger ErrorLogger interface ErrorLogger Functions Name Summary logError Just prints the error out for the sake of debugging. abstract fun logError(error: Throwable ): Unit trackError If debuggable, it just simply prints the error out. Otherwise, it'll upload that error to Fabric for further investigation. Should use this to catch some errors that we may not be aware of. abstract fun trackError(error: Throwable ): Unit Inheritors Name Summary ErrorLoggerImpl class ErrorLoggerImpl : ErrorLogger","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.logging/-error-logger/#errorlogger","text":"interface ErrorLogger","title":"ErrorLogger"},{"location":"tripkit-android/com.skedgo.tripkit.logging/-error-logger/#functions","text":"Name Summary logError Just prints the error out for the sake of debugging. abstract fun logError(error: Throwable ): Unit trackError If debuggable, it just simply prints the error out. Otherwise, it'll upload that error to Fabric for further investigation. Should use this to catch some errors that we may not be aware of. abstract fun trackError(error: Throwable ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.logging/-error-logger/#inheritors","text":"Name Summary ErrorLoggerImpl class ErrorLoggerImpl : ErrorLogger","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.logging/-error-logger/log-error/","text":"tripkit-android / com.skedgo.tripkit.logging / ErrorLogger / logError logError abstract fun logError(error: Throwable ): Unit Just prints the error out for the sake of debugging.","title":"Log error"},{"location":"tripkit-android/com.skedgo.tripkit.logging/-error-logger/log-error/#logerror","text":"abstract fun logError(error: Throwable ): Unit Just prints the error out for the sake of debugging.","title":"logError"},{"location":"tripkit-android/com.skedgo.tripkit.logging/-error-logger/track-error/","text":"tripkit-android / com.skedgo.tripkit.logging / ErrorLogger / trackError trackError abstract fun trackError(error: Throwable ): Unit If debuggable, it just simply prints the error out. Otherwise, it'll upload that error to Fabric for further investigation. Should use this to catch some errors that we may not be aware of.","title":"Track error"},{"location":"tripkit-android/com.skedgo.tripkit.logging/-error-logger/track-error/#trackerror","text":"abstract fun trackError(error: Throwable ): Unit If debuggable, it just simply prints the error out. Otherwise, it'll upload that error to Fabric for further investigation. Should use this to catch some errors that we may not be aware of.","title":"trackError"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/","text":"tripkit-android / com.skedgo.tripkit.parkingspots Package com.skedgo.tripkit.parkingspots Types Name Summary OnStreetParkingRepository interface OnStreetParkingRepository ParkingRepository interface ParkingRepository","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/#package-comskedgotripkitparkingspots","text":"","title":"Package com.skedgo.tripkit.parkingspots"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/#types","text":"Name Summary OnStreetParkingRepository interface OnStreetParkingRepository ParkingRepository interface ParkingRepository","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-on-street-parking-repository/","text":"tripkit-android / com.skedgo.tripkit.parkingspots / OnStreetParkingRepository OnStreetParkingRepository interface OnStreetParkingRepository Functions Name Summary getByCellIds abstract fun getByCellIds(ids: List < String >, southWest: GeoPoint , northEast: GeoPoint ): Observable< List < OnStreetParking >> getParkingDetails abstract fun getParkingDetails(onStreetParking: OnStreetParking ): Single< OnStreetParkingDetails > Inheritors Name Summary OnStreetParkingRepositoryImpl class OnStreetParkingRepositoryImpl : OnStreetParkingRepository","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-on-street-parking-repository/#onstreetparkingrepository","text":"interface OnStreetParkingRepository","title":"OnStreetParkingRepository"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-on-street-parking-repository/#functions","text":"Name Summary getByCellIds abstract fun getByCellIds(ids: List < String >, southWest: GeoPoint , northEast: GeoPoint ): Observable< List < OnStreetParking >> getParkingDetails abstract fun getParkingDetails(onStreetParking: OnStreetParking ): Single< OnStreetParkingDetails >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-on-street-parking-repository/#inheritors","text":"Name Summary OnStreetParkingRepositoryImpl class OnStreetParkingRepositoryImpl : OnStreetParkingRepository","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-on-street-parking-repository/get-by-cell-ids/","text":"tripkit-android / com.skedgo.tripkit.parkingspots / OnStreetParkingRepository / getByCellIds getByCellIds abstract fun getByCellIds(ids: List < String >, southWest: GeoPoint , northEast: GeoPoint ): Observable< List < OnStreetParking >>","title":"Get by cell ids"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-on-street-parking-repository/get-by-cell-ids/#getbycellids","text":"abstract fun getByCellIds(ids: List < String >, southWest: GeoPoint , northEast: GeoPoint ): Observable< List < OnStreetParking >>","title":"getByCellIds"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-on-street-parking-repository/get-parking-details/","text":"tripkit-android / com.skedgo.tripkit.parkingspots / OnStreetParkingRepository / getParkingDetails getParkingDetails abstract fun getParkingDetails(onStreetParking: OnStreetParking ): Single< OnStreetParkingDetails >","title":"Get parking details"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-on-street-parking-repository/get-parking-details/#getparkingdetails","text":"abstract fun getParkingDetails(onStreetParking: OnStreetParking ): Single< OnStreetParkingDetails >","title":"getParkingDetails"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-parking-repository/","text":"tripkit-android / com.skedgo.tripkit.parkingspots / ParkingRepository ParkingRepository interface ParkingRepository Functions Name Summary fetchCarParks abstract fun fetchCarParks(center: GeoPoint , cellIds: List < String >, zoomLevel: Int ): Observable< List < OffStreetParking >> getByCellIds abstract fun getByCellIds(ids: List < String >): Observable< List < OffStreetParking >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-parking-repository/#parkingrepository","text":"interface ParkingRepository","title":"ParkingRepository"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-parking-repository/#functions","text":"Name Summary fetchCarParks abstract fun fetchCarParks(center: GeoPoint , cellIds: List < String >, zoomLevel: Int ): Observable< List < OffStreetParking >> getByCellIds abstract fun getByCellIds(ids: List < String >): Observable< List < OffStreetParking >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-parking-repository/fetch-car-parks/","text":"tripkit-android / com.skedgo.tripkit.parkingspots / ParkingRepository / fetchCarParks fetchCarParks abstract fun fetchCarParks(center: GeoPoint , cellIds: List < String >, zoomLevel: Int ): Observable< List < OffStreetParking >>","title":"Fetch car parks"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-parking-repository/fetch-car-parks/#fetchcarparks","text":"abstract fun fetchCarParks(center: GeoPoint , cellIds: List < String >, zoomLevel: Int ): Observable< List < OffStreetParking >>","title":"fetchCarParks"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-parking-repository/get-by-cell-ids/","text":"tripkit-android / com.skedgo.tripkit.parkingspots / ParkingRepository / getByCellIds getByCellIds abstract fun getByCellIds(ids: List < String >): Observable< List < OffStreetParking >>","title":"Get by cell ids"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots/-parking-repository/get-by-cell-ids/#getbycellids","text":"abstract fun getByCellIds(ids: List < String >): Observable< List < OffStreetParking >>","title":"getByCellIds"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models Package com.skedgo.tripkit.parkingspots.models Types Name Summary OffStreetParking open class OffStreetParking : Parking OnStreetParking class OnStreetParking : Parking OpeningHour class OpeningHour Parking sealed class Parking ParkingDetails class ParkingDetails ParkingOperator open class ParkingOperator PaymentType enum class PaymentType PricingEntry class PricingEntry PricingTable class PricingTable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/#package-comskedgotripkitparkingspotsmodels","text":"","title":"Package com.skedgo.tripkit.parkingspots.models"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/#types","text":"Name Summary OffStreetParking open class OffStreetParking : Parking OnStreetParking class OnStreetParking : Parking OpeningHour class OpeningHour Parking sealed class Parking ParkingDetails class ParkingDetails ParkingOperator open class ParkingOperator PaymentType enum class PaymentType PricingEntry class PricingEntry PricingTable class PricingTable","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OffStreetParking OffStreetParking open class OffStreetParking : Parking Constructors Name Summary <init> OffStreetParking(id: String , name: String , location: GeoPoint , remoteIcon: String ?, localIconRes: String ?, address: String ?, parkingOperator: ParkingOperator , info: String , openingHours: List < OpeningHour >, pricingTables: Optional< List < PricingTable >>) Properties Name Summary localIconRes val localIconRes: String ? openingHours val openingHours: List < OpeningHour > pricingTables val pricingTables: Optional< List < PricingTable >> remoteIcon val remoteIcon: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/#offstreetparking","text":"open class OffStreetParking : Parking","title":"OffStreetParking"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/#constructors","text":"Name Summary <init> OffStreetParking(id: String , name: String , location: GeoPoint , remoteIcon: String ?, localIconRes: String ?, address: String ?, parkingOperator: ParkingOperator , info: String , openingHours: List < OpeningHour >, pricingTables: Optional< List < PricingTable >>)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/#properties","text":"Name Summary localIconRes val localIconRes: String ? openingHours val openingHours: List < OpeningHour > pricingTables val pricingTables: Optional< List < PricingTable >> remoteIcon val remoteIcon: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/-init-/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OffStreetParking / <init> <init> OffStreetParking(id: String , name: String , location: GeoPoint , remoteIcon: String ?, localIconRes: String ?, address: String ?, parkingOperator: ParkingOperator , info: String , openingHours: List < OpeningHour >, pricingTables: Optional< List < PricingTable >>)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/-init-/#init","text":"OffStreetParking(id: String , name: String , location: GeoPoint , remoteIcon: String ?, localIconRes: String ?, address: String ?, parkingOperator: ParkingOperator , info: String , openingHours: List < OpeningHour >, pricingTables: Optional< List < PricingTable >>)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/local-icon-res/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OffStreetParking / localIconRes localIconRes val localIconRes: String ?","title":"Local icon res"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/local-icon-res/#localiconres","text":"val localIconRes: String ?","title":"localIconRes"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/opening-hours/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OffStreetParking / openingHours openingHours val openingHours: List < OpeningHour >","title":"Opening hours"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/opening-hours/#openinghours","text":"val openingHours: List < OpeningHour >","title":"openingHours"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/pricing-tables/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OffStreetParking / pricingTables pricingTables val pricingTables: Optional< List < PricingTable >>","title":"Pricing tables"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/pricing-tables/#pricingtables","text":"val pricingTables: Optional< List < PricingTable >>","title":"pricingTables"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/remote-icon/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OffStreetParking / remoteIcon remoteIcon val remoteIcon: String ?","title":"Remote icon"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-off-street-parking/remote-icon/#remoteicon","text":"val remoteIcon: String ?","title":"remoteIcon"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-on-street-parking/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OnStreetParking OnStreetParking class OnStreetParking : Parking Constructors Name Summary <init> OnStreetParking(id: String , name: String , location: GeoPoint , address: String ?, parkingOperator: ParkingOperator , info: String , encodedPolygon: List < GeoPoint >, hasRestrictions: Boolean , parkingVacancy: Vacancy) Properties Name Summary encodedPolygon val encodedPolygon: List < GeoPoint > hasRestrictions val hasRestrictions: Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-on-street-parking/#onstreetparking","text":"class OnStreetParking : Parking","title":"OnStreetParking"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-on-street-parking/#constructors","text":"Name Summary <init> OnStreetParking(id: String , name: String , location: GeoPoint , address: String ?, parkingOperator: ParkingOperator , info: String , encodedPolygon: List < GeoPoint >, hasRestrictions: Boolean , parkingVacancy: Vacancy)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-on-street-parking/#properties","text":"Name Summary encodedPolygon val encodedPolygon: List < GeoPoint > hasRestrictions val hasRestrictions: Boolean","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-on-street-parking/-init-/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OnStreetParking / <init> <init> OnStreetParking(id: String , name: String , location: GeoPoint , address: String ?, parkingOperator: ParkingOperator , info: String , encodedPolygon: List < GeoPoint >, hasRestrictions: Boolean , parkingVacancy: Vacancy)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-on-street-parking/-init-/#init","text":"OnStreetParking(id: String , name: String , location: GeoPoint , address: String ?, parkingOperator: ParkingOperator , info: String , encodedPolygon: List < GeoPoint >, hasRestrictions: Boolean , parkingVacancy: Vacancy)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-on-street-parking/encoded-polygon/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OnStreetParking / encodedPolygon encodedPolygon val encodedPolygon: List < GeoPoint >","title":"Encoded polygon"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-on-street-parking/encoded-polygon/#encodedpolygon","text":"val encodedPolygon: List < GeoPoint >","title":"encodedPolygon"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-on-street-parking/has-restrictions/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OnStreetParking / hasRestrictions hasRestrictions val hasRestrictions: Boolean","title":"Has restrictions"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-on-street-parking/has-restrictions/#hasrestrictions","text":"val hasRestrictions: Boolean","title":"hasRestrictions"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OpeningHour OpeningHour class OpeningHour Constructors Name Summary <init> OpeningHour(day: String , open: LocalTime, close: LocalTime) Properties Name Summary close val close: LocalTime day val day: String open val open: LocalTime","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/#openinghour","text":"class OpeningHour","title":"OpeningHour"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/#constructors","text":"Name Summary <init> OpeningHour(day: String , open: LocalTime, close: LocalTime)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/#properties","text":"Name Summary close val close: LocalTime day val day: String open val open: LocalTime","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/-init-/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OpeningHour / <init> <init> OpeningHour(day: String , open: LocalTime, close: LocalTime)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/-init-/#init","text":"OpeningHour(day: String , open: LocalTime, close: LocalTime)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/close/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OpeningHour / close close val close: LocalTime","title":"Close"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/close/#close","text":"val close: LocalTime","title":"close"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/day/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OpeningHour / day day val day: String","title":"Day"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/day/#day","text":"val day: String","title":"day"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/open/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / OpeningHour / open open val open: LocalTime","title":"Open"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-opening-hour/open/#open","text":"val open: LocalTime","title":"open"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking Parking sealed class Parking Types Name Summary Vacancy enum class Vacancy Properties Name Summary address val address: String ? id val id: String info val info: String location val location: GeoPoint name val name: String parkingOperator val parkingOperator: ParkingOperator parkingVacancy val parkingVacancy: Vacancy Functions Name Summary equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int Inheritors Name Summary OffStreetParking open class OffStreetParking : Parking OnStreetParking class OnStreetParking : Parking","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/#parking","text":"sealed class Parking","title":"Parking"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/#types","text":"Name Summary Vacancy enum class Vacancy","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/#properties","text":"Name Summary address val address: String ? id val id: String info val info: String location val location: GeoPoint name val name: String parkingOperator val parkingOperator: ParkingOperator parkingVacancy val parkingVacancy: Vacancy","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/#functions","text":"Name Summary equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/#inheritors","text":"Name Summary OffStreetParking open class OffStreetParking : Parking OnStreetParking class OnStreetParking : Parking","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/address/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / address address val address: String ?","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/address/#address","text":"val address: String ?","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/equals/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / equals equals open fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/equals/#equals","text":"open fun equals(other: Any ?): Boolean","title":"equals"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/hash-code/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / hashCode hashCode open fun hashCode(): Int","title":"Hash code"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/hash-code/#hashcode","text":"open fun hashCode(): Int","title":"hashCode"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/id/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / id id val id: String","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/id/#id","text":"val id: String","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/info/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / info info val info: String","title":"Info"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/info/#info","text":"val info: String","title":"info"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/location/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / location location val location: GeoPoint","title":"Location"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/location/#location","text":"val location: GeoPoint","title":"location"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/name/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / name name val name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/name/#name","text":"val name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/parking-operator/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / parkingOperator parkingOperator val parkingOperator: ParkingOperator","title":"Parking operator"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/parking-operator/#parkingoperator","text":"val parkingOperator: ParkingOperator","title":"parkingOperator"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/parking-vacancy/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / parkingVacancy parkingVacancy val parkingVacancy: Vacancy","title":"Parking vacancy"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/parking-vacancy/#parkingvacancy","text":"val parkingVacancy: Vacancy","title":"parkingVacancy"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/-vacancy/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / Vacancy Vacancy enum class Vacancy Enum Values Name Summary UNKNOWN NO_VACANCY LIMITED_VACANCY PLENTY_VACANCY","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/-vacancy/#vacancy","text":"enum class Vacancy","title":"Vacancy"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/-vacancy/#enum-values","text":"Name Summary UNKNOWN NO_VACANCY LIMITED_VACANCY PLENTY_VACANCY","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/-vacancy/-l-i-m-i-t-e-d_-v-a-c-a-n-c-y/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / Vacancy / LIMITED_VACANCY LIMITED_VACANCY LIMITED_VACANCY","title":" l i m i t e d  v a c a n c y"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/-vacancy/-l-i-m-i-t-e-d_-v-a-c-a-n-c-y/#limited_vacancy","text":"LIMITED_VACANCY","title":"LIMITED_VACANCY"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/-vacancy/-n-o_-v-a-c-a-n-c-y/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / Vacancy / NO_VACANCY NO_VACANCY NO_VACANCY","title":" n o  v a c a n c y"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/-vacancy/-n-o_-v-a-c-a-n-c-y/#no_vacancy","text":"NO_VACANCY","title":"NO_VACANCY"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/-vacancy/-p-l-e-n-t-y_-v-a-c-a-n-c-y/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / Vacancy / PLENTY_VACANCY PLENTY_VACANCY PLENTY_VACANCY","title":" p l e n t y  v a c a n c y"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/-vacancy/-p-l-e-n-t-y_-v-a-c-a-n-c-y/#plenty_vacancy","text":"PLENTY_VACANCY","title":"PLENTY_VACANCY"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/-vacancy/-u-n-k-n-o-w-n/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / Parking / Vacancy / UNKNOWN UNKNOWN UNKNOWN","title":" u n k n o w n"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking/-vacancy/-u-n-k-n-o-w-n/#unknown","text":"UNKNOWN","title":"UNKNOWN"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-details/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / ParkingDetails ParkingDetails class ParkingDetails Constructors Name Summary <init> ParkingDetails(id: String ) Properties Name Summary id val id: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-details/#parkingdetails","text":"class ParkingDetails","title":"ParkingDetails"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-details/#constructors","text":"Name Summary <init> ParkingDetails(id: String )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-details/#properties","text":"Name Summary id val id: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-details/-init-/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / ParkingDetails / <init> <init> ParkingDetails(id: String )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-details/-init-/#init","text":"ParkingDetails(id: String )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-details/id/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / ParkingDetails / id id val id: String","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-details/id/#id","text":"val id: String","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / ParkingOperator ParkingOperator open class ParkingOperator Constructors Name Summary <init> ParkingOperator(name: String , phone: Optional< String >, website: Optional< String >) Properties Name Summary name val name: String phone val phone: Optional< String > website val website: Optional< String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/#parkingoperator","text":"open class ParkingOperator","title":"ParkingOperator"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/#constructors","text":"Name Summary <init> ParkingOperator(name: String , phone: Optional< String >, website: Optional< String >)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/#properties","text":"Name Summary name val name: String phone val phone: Optional< String > website val website: Optional< String >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/-init-/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / ParkingOperator / <init> <init> ParkingOperator(name: String , phone: Optional< String >, website: Optional< String >)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/-init-/#init","text":"ParkingOperator(name: String , phone: Optional< String >, website: Optional< String >)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/name/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / ParkingOperator / name name val name: String","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/name/#name","text":"val name: String","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/phone/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / ParkingOperator / phone phone val phone: Optional< String >","title":"Phone"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/phone/#phone","text":"val phone: Optional< String >","title":"phone"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/website/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / ParkingOperator / website website val website: Optional< String >","title":"Website"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-parking-operator/website/#website","text":"val website: Optional< String >","title":"website"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PaymentType PaymentType enum class PaymentType Enum Values Name Summary Meter CreditCard Phone Coins Properties Name Summary value val value: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/#paymenttype","text":"enum class PaymentType","title":"PaymentType"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/#enum-values","text":"Name Summary Meter CreditCard Phone Coins","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/-coins/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PaymentType / Coins Coins Coins","title":" coins"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/-coins/#coins","text":"Coins","title":"Coins"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/-credit-card/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PaymentType / CreditCard CreditCard CreditCard","title":" credit card"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/-credit-card/#creditcard","text":"CreditCard","title":"CreditCard"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/-meter/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PaymentType / Meter Meter Meter","title":" meter"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/-meter/#meter","text":"Meter","title":"Meter"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/-phone/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PaymentType / Phone Phone Phone","title":" phone"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/-phone/#phone","text":"Phone","title":"Phone"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/value/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PaymentType / value value val value: String","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-payment-type/value/#value","text":"val value: String","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingEntry PricingEntry class PricingEntry Constructors Name Summary <init> PricingEntry(duration: Optional< Int >, label: String , price: Float ) Properties Name Summary duration val duration: Optional< Int > label val label: String price val price: Float","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/#pricingentry","text":"class PricingEntry","title":"PricingEntry"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/#constructors","text":"Name Summary <init> PricingEntry(duration: Optional< Int >, label: String , price: Float )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/#properties","text":"Name Summary duration val duration: Optional< Int > label val label: String price val price: Float","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/-init-/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingEntry / <init> <init> PricingEntry(duration: Optional< Int >, label: String , price: Float )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/-init-/#init","text":"PricingEntry(duration: Optional< Int >, label: String , price: Float )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/duration/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingEntry / duration duration val duration: Optional< Int >","title":"Duration"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/duration/#duration","text":"val duration: Optional< Int >","title":"duration"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/label/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingEntry / label label val label: String","title":"Label"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/label/#label","text":"val label: String","title":"label"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/price/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingEntry / price price val price: Float","title":"Price"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-entry/price/#price","text":"val price: Float","title":"price"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingTable PricingTable class PricingTable Constructors Name Summary <init> PricingTable(currency: String , currencySymbol: String , entries: List < PricingEntry >, title: String , subtitle: Optional< String >) Properties Name Summary currency val currency: String currencySymbol val currencySymbol: String entries val entries: List < PricingEntry > subtitle val subtitle: Optional< String > title val title: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/#pricingtable","text":"class PricingTable","title":"PricingTable"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/#constructors","text":"Name Summary <init> PricingTable(currency: String , currencySymbol: String , entries: List < PricingEntry >, title: String , subtitle: Optional< String >)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/#properties","text":"Name Summary currency val currency: String currencySymbol val currencySymbol: String entries val entries: List < PricingEntry > subtitle val subtitle: Optional< String > title val title: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/-init-/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingTable / <init> <init> PricingTable(currency: String , currencySymbol: String , entries: List < PricingEntry >, title: String , subtitle: Optional< String >)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/-init-/#init","text":"PricingTable(currency: String , currencySymbol: String , entries: List < PricingEntry >, title: String , subtitle: Optional< String >)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/currency-symbol/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingTable / currencySymbol currencySymbol val currencySymbol: String","title":"Currency symbol"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/currency-symbol/#currencysymbol","text":"val currencySymbol: String","title":"currencySymbol"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/currency/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingTable / currency currency val currency: String","title":"Currency"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/currency/#currency","text":"val currency: String","title":"currency"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/entries/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingTable / entries entries val entries: List < PricingEntry >","title":"Entries"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/entries/#entries","text":"val entries: List < PricingEntry >","title":"entries"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/subtitle/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingTable / subtitle subtitle val subtitle: Optional< String >","title":"Subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/subtitle/#subtitle","text":"val subtitle: Optional< String >","title":"subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/title/","text":"tripkit-android / com.skedgo.tripkit.parkingspots.models / PricingTable / title title val title: String","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.parkingspots.models/-pricing-table/title/#title","text":"val title: String","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/","text":"tripkit-android / com.skedgo.tripkit.regionrouting Package com.skedgo.tripkit.regionrouting Types","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/#package-comskedgotripkitregionrouting","text":"","title":"Package com.skedgo.tripkit.regionrouting"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/#types","text":"","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/","text":"tripkit-android / com.skedgo.tripkit.regionrouting.data Package com.skedgo.tripkit.regionrouting.data Types","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/#package-comskedgotripkitregionroutingdata","text":"","title":"Package com.skedgo.tripkit.regionrouting.data"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/#types","text":"","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-direction/","text":"tripkit-android / com.skedgo.tripkit.regionrouting.data / Direction Direction data class Direction Constructors Name Summary [<init>] Direction(encodedShape: String , id: String , name: String , shapeIsDetailed: Boolean , stops: List< Stop >) Properties Name Summary encodedShape val encodedShape: String id val id: String name val name: String shapeIsDetailed val shapeIsDetailed: Boolean stops val stops: List< Stop >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-direction/#direction","text":"data class Direction","title":"Direction"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-direction/#constructors","text":"Name Summary [<init>] Direction(encodedShape: String , id: String , name: String , shapeIsDetailed: Boolean , stops: List< Stop >)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-direction/#properties","text":"Name Summary encodedShape val encodedShape: String id val id: String name val name: String shapeIsDetailed val shapeIsDetailed: Boolean stops val stops: List< Stop >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-getregionrouterequest/","text":"tripkit-android / com.skedgo.tripkit.regionrouting.data / GetRegionRouteRequest GetRegionRouteRequest data class GetRegionRouteRequest Constructors Name Summary [<init>] GetRegionRouteRequest(region: String , query: String ?, operatorId: String ?, modes: List< String >, routesIds: List< String >, routesNames: List< String >, onlyRealTime: Boolean , full: Boolean ) Properties Name Summary region val region: String query val query: String ? operatorId val operatorId: String ? modes val modes: List< String >? routeIds val routeIds: List< String > routeNames val routeNames: List< String > onlyRealTime val onlyRealTime: Boolean full val full: Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-getregionrouterequest/#getregionrouterequest","text":"data class GetRegionRouteRequest","title":"GetRegionRouteRequest"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-getregionrouterequest/#constructors","text":"Name Summary [<init>] GetRegionRouteRequest(region: String , query: String ?, operatorId: String ?, modes: List< String >, routesIds: List< String >, routesNames: List< String >, onlyRealTime: Boolean , full: Boolean )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-getregionrouterequest/#properties","text":"Name Summary region val region: String query val query: String ? operatorId val operatorId: String ? modes val modes: List< String >? routeIds val routeIds: List< String > routeNames val routeNames: List< String > onlyRealTime val onlyRealTime: Boolean full val full: Boolean","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-getroutedetailsrequest/","text":"tripkit-android / com.skedgo.tripkit.regionrouting.data / GetRouteDetailsRequest GetRouteDetailsRequest data class GetRouteDetailsRequest Constructors Name Summary [<init>] GetRouteDetailsRequest(operatorID: String , region: String , routeID: Int ) Properties Name Summary operatorID val operatorID: String region val region: String routeID val routeID: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-getroutedetailsrequest/#getroutedetailsrequest","text":"data class GetRouteDetailsRequest","title":"GetRouteDetailsRequest"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-getroutedetailsrequest/#constructors","text":"Name Summary [<init>] GetRouteDetailsRequest(operatorID: String , region: String , routeID: Int )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-getroutedetailsrequest/#properties","text":"Name Summary operatorID val operatorID: String region val region: String routeID val routeID: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-realtime/","text":"tripkit-android / com.skedgo.tripkit.regionrouting.data / RealTime RealTime data class RealTime Constructors Name Summary [<init>] RealTime(alerts: Boolean , positions: Boolean , updates: Boolean ) Properties Name Summary alerts val alerts: Boolean positions val positions: Boolean updates val updates: Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-realtime/#realtime","text":"data class RealTime","title":"RealTime"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-realtime/#constructors","text":"Name Summary [<init>] RealTime(alerts: Boolean , positions: Boolean , updates: Boolean )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-realtime/#properties","text":"Name Summary alerts val alerts: Boolean positions val positions: Boolean updates val updates: Boolean","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-regionroute/","text":"tripkit-android / com.skedgo.tripkit.regionrouting.data / RegionRoute RegionRoute data class RegionRoute Constructors Name Summary [<init>] RegionRoute(id: String , operatorID: String , shortName: String , mode: String , numberOfServices: Int , operatorId: String , operatorName: String , modeInfo: String , stops: List< String >, routeColor: ServiceColor , realTime: RealTime ) Properties Name Summary operatorID val operatorID: String region val region: String routeID val routeID: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-regionroute/#regionroute","text":"data class RegionRoute","title":"RegionRoute"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-regionroute/#constructors","text":"Name Summary [<init>] RegionRoute(id: String , operatorID: String , shortName: String , mode: String , numberOfServices: Int , operatorId: String , operatorName: String , modeInfo: String , stops: List< String >, routeColor: ServiceColor , realTime: RealTime )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-regionroute/#properties","text":"Name Summary operatorID val operatorID: String region val region: String routeID val routeID: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-routedetails/","text":"tripkit-android / com.skedgo.tripkit.regionrouting.data / RouteDetails RouteDetails data class RouteDetails Constructors Name Summary [<init>] RouteDetails(directions: List< Direction >, id: String , mode: String , modeInfo: ModeInfo , operatorId: String , operatorName: String , region: String , routeColor: ServiceColor , routeName: String , shortName: String ) Properties Name Summary directions val directions: List< Direction > id val id: String mode val mode: String modeInfo val modeInfo: ModeInfo operatorId val operatorId: String operatorName val operatorName: String region val region: String routeColor val routeColor: ServiceColor routeName val routeName: String shortName val shortName: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-routedetails/#routedetails","text":"data class RouteDetails","title":"RouteDetails"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-routedetails/#constructors","text":"Name Summary [<init>] RouteDetails(directions: List< Direction >, id: String , mode: String , modeInfo: ModeInfo , operatorId: String , operatorName: String , region: String , routeColor: ServiceColor , routeName: String , shortName: String )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-routedetails/#properties","text":"Name Summary directions val directions: List< Direction > id val id: String mode val mode: String modeInfo val modeInfo: ModeInfo operatorId val operatorId: String operatorName val operatorName: String region val region: String routeColor val routeColor: ServiceColor routeName val routeName: String shortName val shortName: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-stop/","text":"tripkit-android / com.skedgo.tripkit.regionrouting.data / Stop Stop data class Stop Constructors Name Summary [<init>] Stop(commmon: Boolean , lat: Int , lng: Int , name: String , stopCode: String ) Properties Name Summary commmon val commmon: Boolean lat val lat: Int lng val lng: Int name val name: String stopCode val stopCode: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-stop/#stop","text":"data class Stop","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-stop/#constructors","text":"Name Summary [<init>] Stop(commmon: Boolean , lat: Int , lng: Int , name: String , stopCode: String )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.regionrouting/com.skedgo.tripkit.regionrouting.data/-stop/#properties","text":"Name Summary commmon val commmon: Boolean lat val lat: Int lng val lng: Int name val name: String stopCode val stopCode: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/","text":"tripkit-android / com.skedgo.tripkit.routing Package com.skedgo.tripkit.routing Types Name Summary Availability enum class Availability ExtraQueryMapProvider A decorator that puts additional query params into the query map that is supplied into `[ A2bRoutingApi ](../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md). Note that you should only use this when you really do know what you intend to do. interface ExtraQueryMapProvider` GroupVisibility class GroupVisibility LocalCost abstract class LocalCost : Parcelable LocalCostAccuracy enum class LocalCostAccuracy ModeInfo open class ModeInfo : Parcelable Occupancy enum class Occupancy Provider abstract class Provider : Parcelable RealTimeVehicle open class RealTimeVehicle : Parcelable RoutingResponse open class RoutingResponse SegmentActionTemplates class SegmentActionTemplates SegmentJsonKeys class SegmentJsonKeys SegmentNotesTemplates class SegmentNotesTemplates SegmentType enum class SegmentType ServiceColor class ServiceColor : Parcelable Shape open class Shape : Parcelable Source abstract class Source : Parcelable Templates class Templates Trip A [`Trip`](-trip/index.md) will mainly hold a list of TripSegment s which denotes how to go from [`Trip#getFrom()`](-trip/get-from.md) to Trip#getTo() . open class Trip : ITimeRange TripComparators class TripComparators TripGroup Represents a list of [`Trip`](-trip/index.md)s. A list of Trip s comprises of a display trip (aka representative trip) and alternative trips. A display trip can be accessed via [`#getDisplayTrip()`](-trip-group/get-display-trip.md) while alternative trips can be retrieved via #getTrips() minus [`#getDisplayTrip()`](-trip-group/get-display-trip.md). That's because #getTrips() returns a list of `[ Trip ](-trip/index.md)s including alternative trips and display trip. open class TripGroup` TripGroupComparators class TripGroupComparators TripSegment To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](-trip-segment/index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL ](-segment-type/-a-r-r-i-v-a-l.md). open class TripSegment : [ IRealTimeElement ](../com.skedgo.tripkit.common.agenda/-i-real-time-element/index.md) , [ ITimeRange`](../com.skedgo.tripkit.common.model/-i-time-range/index.md) TripSegments class TripSegments TurnByTurn enum class TurnByTurn VehicleComponent abstract class VehicleComponent VehicleDrawables class VehicleDrawables VehicleMode As of v11, this denotes local transport icons. class VehicleMode Visibilities class Visibilities Extensions for External Classes Name Summary kotlin.String org.joda.time.DateTime Properties Name Summary actionAlert val TripSegment .actionAlert: RealtimeAlert ? dateTimeZone val Location .dateTimeZone: DateTimeZone endDateTime Get an end date-time with time-zone. val Trip .endDateTime: DateTime val TripSegment .endDateTime: DateTime noActionAlerts val TripSegment .noActionAlerts: List < RealtimeAlert !>? SimilarLocationDegreeDifference const val SimilarLocationDegreeDifference: Double startDateTime Gets a start date-time with time-zone. val Trip .startDateTime: DateTime val TripSegment .startDateTime: DateTime Functions Name Summary constructPlainText fun Trip .constructPlainText(context: Context): String containsAnyMode fun TripGroup .containsAnyMode(modeIds: List < String >): Boolean containsMode fun TripGroup .containsMode(modeId: String ): Boolean getModeIds fun Trip .getModeIds(): List < String > getSummarySegments Gets a list of TripSegment s visible on the summary area of a Trip . fun Trip .getSummarySegments(): List < TripSegment > getTrip fun TripGroup .getTrip(tripId: Long ): Trip ? getTripSegment fun Trip .getTripSegment(segmentId: Long ): TripSegment ? hasWalkOnly fun Trip .hasWalkOnly(): Boolean isNear fun Location .isNear(location: Location ): Boolean toInt fun ServiceColor .toInt(alpha: Int ): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/#package-comskedgotripkitrouting","text":"","title":"Package com.skedgo.tripkit.routing"},{"location":"tripkit-android/com.skedgo.tripkit.routing/#types","text":"Name Summary Availability enum class Availability ExtraQueryMapProvider A decorator that puts additional query params into the query map that is supplied into `[ A2bRoutingApi ](../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md). Note that you should only use this when you really do know what you intend to do. interface ExtraQueryMapProvider` GroupVisibility class GroupVisibility LocalCost abstract class LocalCost : Parcelable LocalCostAccuracy enum class LocalCostAccuracy ModeInfo open class ModeInfo : Parcelable Occupancy enum class Occupancy Provider abstract class Provider : Parcelable RealTimeVehicle open class RealTimeVehicle : Parcelable RoutingResponse open class RoutingResponse SegmentActionTemplates class SegmentActionTemplates SegmentJsonKeys class SegmentJsonKeys SegmentNotesTemplates class SegmentNotesTemplates SegmentType enum class SegmentType ServiceColor class ServiceColor : Parcelable Shape open class Shape : Parcelable Source abstract class Source : Parcelable Templates class Templates Trip A [`Trip`](-trip/index.md) will mainly hold a list of TripSegment s which denotes how to go from [`Trip#getFrom()`](-trip/get-from.md) to Trip#getTo() . open class Trip : ITimeRange TripComparators class TripComparators TripGroup Represents a list of [`Trip`](-trip/index.md)s. A list of Trip s comprises of a display trip (aka representative trip) and alternative trips. A display trip can be accessed via [`#getDisplayTrip()`](-trip-group/get-display-trip.md) while alternative trips can be retrieved via #getTrips() minus [`#getDisplayTrip()`](-trip-group/get-display-trip.md). That's because #getTrips() returns a list of `[ Trip ](-trip/index.md)s including alternative trips and display trip. open class TripGroup` TripGroupComparators class TripGroupComparators TripSegment To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](-trip-segment/index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL ](-segment-type/-a-r-r-i-v-a-l.md). open class TripSegment : [ IRealTimeElement ](../com.skedgo.tripkit.common.agenda/-i-real-time-element/index.md) , [ ITimeRange`](../com.skedgo.tripkit.common.model/-i-time-range/index.md) TripSegments class TripSegments TurnByTurn enum class TurnByTurn VehicleComponent abstract class VehicleComponent VehicleDrawables class VehicleDrawables VehicleMode As of v11, this denotes local transport icons. class VehicleMode Visibilities class Visibilities","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.routing/#extensions-for-external-classes","text":"Name Summary kotlin.String org.joda.time.DateTime","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/#properties","text":"Name Summary actionAlert val TripSegment .actionAlert: RealtimeAlert ? dateTimeZone val Location .dateTimeZone: DateTimeZone endDateTime Get an end date-time with time-zone. val Trip .endDateTime: DateTime val TripSegment .endDateTime: DateTime noActionAlerts val TripSegment .noActionAlerts: List < RealtimeAlert !>? SimilarLocationDegreeDifference const val SimilarLocationDegreeDifference: Double startDateTime Gets a start date-time with time-zone. val Trip .startDateTime: DateTime val TripSegment .startDateTime: DateTime","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/#functions","text":"Name Summary constructPlainText fun Trip .constructPlainText(context: Context): String containsAnyMode fun TripGroup .containsAnyMode(modeIds: List < String >): Boolean containsMode fun TripGroup .containsMode(modeId: String ): Boolean getModeIds fun Trip .getModeIds(): List < String > getSummarySegments Gets a list of TripSegment s visible on the summary area of a Trip . fun Trip .getSummarySegments(): List < TripSegment > getTrip fun TripGroup .getTrip(tripId: Long ): Trip ? getTripSegment fun Trip .getTripSegment(segmentId: Long ): TripSegment ? hasWalkOnly fun Trip .hasWalkOnly(): Boolean isNear fun Location .isNear(location: Location ): Boolean toInt fun ServiceColor .toInt(alpha: Int ): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-similar-location-degree-difference/","text":"tripkit-android / com.skedgo.tripkit.routing / SimilarLocationDegreeDifference SimilarLocationDegreeDifference const val SimilarLocationDegreeDifference: Double","title":" similar location degree difference"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-similar-location-degree-difference/#similarlocationdegreedifference","text":"const val SimilarLocationDegreeDifference: Double","title":"SimilarLocationDegreeDifference"},{"location":"tripkit-android/com.skedgo.tripkit.routing/action-alert/","text":"tripkit-android / com.skedgo.tripkit.routing / actionAlert actionAlert val TripSegment .actionAlert: RealtimeAlert ?","title":"Action alert"},{"location":"tripkit-android/com.skedgo.tripkit.routing/action-alert/#actionalert","text":"val TripSegment .actionAlert: RealtimeAlert ?","title":"actionAlert"},{"location":"tripkit-android/com.skedgo.tripkit.routing/construct-plain-text/","text":"tripkit-android / com.skedgo.tripkit.routing / constructPlainText constructPlainText fun Trip .constructPlainText(context: Context): String","title":"Construct plain text"},{"location":"tripkit-android/com.skedgo.tripkit.routing/construct-plain-text/#constructplaintext","text":"fun Trip .constructPlainText(context: Context): String","title":"constructPlainText"},{"location":"tripkit-android/com.skedgo.tripkit.routing/contains-any-mode/","text":"tripkit-android / com.skedgo.tripkit.routing / containsAnyMode containsAnyMode fun TripGroup .containsAnyMode(modeIds: List < String >): Boolean","title":"Contains any mode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/contains-any-mode/#containsanymode","text":"fun TripGroup .containsAnyMode(modeIds: List < String >): Boolean","title":"containsAnyMode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/contains-mode/","text":"tripkit-android / com.skedgo.tripkit.routing / containsMode containsMode fun TripGroup .containsMode(modeId: String ): Boolean","title":"Contains mode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/contains-mode/#containsmode","text":"fun TripGroup .containsMode(modeId: String ): Boolean","title":"containsMode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/date-time-zone/","text":"tripkit-android / com.skedgo.tripkit.routing / dateTimeZone dateTimeZone val Location .dateTimeZone: DateTimeZone","title":"Date time zone"},{"location":"tripkit-android/com.skedgo.tripkit.routing/date-time-zone/#datetimezone","text":"val Location .dateTimeZone: DateTimeZone","title":"dateTimeZone"},{"location":"tripkit-android/com.skedgo.tripkit.routing/end-date-time/","text":"tripkit-android / com.skedgo.tripkit.routing / endDateTime endDateTime val Trip .endDateTime: DateTime val TripSegment .endDateTime: DateTime Get an end date-time with time-zone.","title":"End date time"},{"location":"tripkit-android/com.skedgo.tripkit.routing/end-date-time/#enddatetime","text":"val Trip .endDateTime: DateTime val TripSegment .endDateTime: DateTime Get an end date-time with time-zone.","title":"endDateTime"},{"location":"tripkit-android/com.skedgo.tripkit.routing/get-mode-ids/","text":"tripkit-android / com.skedgo.tripkit.routing / getModeIds getModeIds fun Trip .getModeIds(): List < String >","title":"Get mode ids"},{"location":"tripkit-android/com.skedgo.tripkit.routing/get-mode-ids/#getmodeids","text":"fun Trip .getModeIds(): List < String >","title":"getModeIds"},{"location":"tripkit-android/com.skedgo.tripkit.routing/get-summary-segments/","text":"tripkit-android / com.skedgo.tripkit.routing / getSummarySegments getSummarySegments fun Trip .getSummarySegments(): List < TripSegment > Gets a list of TripSegment s visible on the summary area of a Trip .","title":"Get summary segments"},{"location":"tripkit-android/com.skedgo.tripkit.routing/get-summary-segments/#getsummarysegments","text":"fun Trip .getSummarySegments(): List < TripSegment > Gets a list of TripSegment s visible on the summary area of a Trip .","title":"getSummarySegments"},{"location":"tripkit-android/com.skedgo.tripkit.routing/get-trip-segment/","text":"tripkit-android / com.skedgo.tripkit.routing / getTripSegment getTripSegment fun Trip .getTripSegment(segmentId: Long ): TripSegment ?","title":"Get trip segment"},{"location":"tripkit-android/com.skedgo.tripkit.routing/get-trip-segment/#gettripsegment","text":"fun Trip .getTripSegment(segmentId: Long ): TripSegment ?","title":"getTripSegment"},{"location":"tripkit-android/com.skedgo.tripkit.routing/get-trip/","text":"tripkit-android / com.skedgo.tripkit.routing / getTrip getTrip fun TripGroup .getTrip(tripId: Long ): Trip ?","title":"Get trip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/get-trip/#gettrip","text":"fun TripGroup .getTrip(tripId: Long ): Trip ?","title":"getTrip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/has-walk-only/","text":"tripkit-android / com.skedgo.tripkit.routing / hasWalkOnly hasWalkOnly fun Trip .hasWalkOnly(): Boolean","title":"Has walk only"},{"location":"tripkit-android/com.skedgo.tripkit.routing/has-walk-only/#haswalkonly","text":"fun Trip .hasWalkOnly(): Boolean","title":"hasWalkOnly"},{"location":"tripkit-android/com.skedgo.tripkit.routing/is-near/","text":"tripkit-android / com.skedgo.tripkit.routing / isNear isNear fun Location .isNear(location: Location ): Boolean","title":"Is near"},{"location":"tripkit-android/com.skedgo.tripkit.routing/is-near/#isnear","text":"fun Location .isNear(location: Location ): Boolean","title":"isNear"},{"location":"tripkit-android/com.skedgo.tripkit.routing/no-action-alerts/","text":"tripkit-android / com.skedgo.tripkit.routing / noActionAlerts noActionAlerts val TripSegment .noActionAlerts: List < RealtimeAlert !>?","title":"No action alerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/no-action-alerts/#noactionalerts","text":"val TripSegment .noActionAlerts: List < RealtimeAlert !>?","title":"noActionAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/start-date-time/","text":"tripkit-android / com.skedgo.tripkit.routing / startDateTime startDateTime val Trip .startDateTime: DateTime val TripSegment .startDateTime: DateTime Gets a start date-time with time-zone.","title":"Start date time"},{"location":"tripkit-android/com.skedgo.tripkit.routing/start-date-time/#startdatetime","text":"val Trip .startDateTime: DateTime val TripSegment .startDateTime: DateTime Gets a start date-time with time-zone.","title":"startDateTime"},{"location":"tripkit-android/com.skedgo.tripkit.routing/to-int/","text":"tripkit-android / com.skedgo.tripkit.routing / toInt toInt fun ServiceColor .toInt(alpha: Int ): Int","title":"To int"},{"location":"tripkit-android/com.skedgo.tripkit.routing/to-int/#toint","text":"fun ServiceColor .toInt(alpha: Int ): Int","title":"toInt"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/","text":"tripkit-android / com.skedgo.tripkit.routing / Availability Availability enum class Availability Enum Values Name Summary Available MissedPrebookingWindow Cancelled Properties Name Summary value val value: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/#availability","text":"enum class Availability","title":"Availability"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/#enum-values","text":"Name Summary Available MissedPrebookingWindow Cancelled","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/-available/","text":"tripkit-android / com.skedgo.tripkit.routing / Availability / Available Available Available","title":" available"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/-available/#available","text":"Available","title":"Available"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/-cancelled/","text":"tripkit-android / com.skedgo.tripkit.routing / Availability / Cancelled Cancelled Cancelled","title":" cancelled"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/-cancelled/#cancelled","text":"Cancelled","title":"Cancelled"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/-missed-prebooking-window/","text":"tripkit-android / com.skedgo.tripkit.routing / Availability / MissedPrebookingWindow MissedPrebookingWindow MissedPrebookingWindow","title":" missed prebooking window"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/-missed-prebooking-window/#missedprebookingwindow","text":"MissedPrebookingWindow","title":"MissedPrebookingWindow"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/value/","text":"tripkit-android / com.skedgo.tripkit.routing / Availability / value value val value: String","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-availability/value/#value","text":"val value: String","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-extra-query-map-provider/","text":"tripkit-android / com.skedgo.tripkit.routing / ExtraQueryMapProvider ExtraQueryMapProvider interface ExtraQueryMapProvider A decorator that puts additional query params into the query map that is supplied into `[ A2bRoutingApi`](../../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md). Note that you should only use this when you really do know what you intend to do. Functions Name Summary call Be careful that some entries of this map may override some default entries of the query map of `[ A2bRoutingApi ](../../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md). abstract fun call(): [ MutableMap ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-map/index.html) < [ String ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html) !, [ Any ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html) !>`","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-extra-query-map-provider/#extraquerymapprovider","text":"interface ExtraQueryMapProvider A decorator that puts additional query params into the query map that is supplied into `[ A2bRoutingApi`](../../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md). Note that you should only use this when you really do know what you intend to do.","title":"ExtraQueryMapProvider"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-extra-query-map-provider/#functions","text":"Name Summary call Be careful that some entries of this map may override some default entries of the query map of `[ A2bRoutingApi ](../../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md). abstract fun call(): [ MutableMap ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-mutable-map/index.html) < [ String ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html) !, [ Any ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html) !>`","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-extra-query-map-provider/call/","text":"tripkit-android / com.skedgo.tripkit.routing / ExtraQueryMapProvider / call call @NonNull abstract fun call(): MutableMap < String !, Any !> Be careful that some entries of this map may override some default entries of the query map of `[ A2bRoutingApi`](../../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md).","title":"Call"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-extra-query-map-provider/call/#call","text":"@NonNull abstract fun call(): MutableMap < String !, Any !> Be careful that some entries of this map may override some default entries of the query map of `[ A2bRoutingApi`](../../com.skedgo.tripkit.a2brouting/-a2b-routing-api/index.md).","title":"call"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geofence/","text":"tripkit-android / com.skedgo.tripkit.routing / Geofence Geofence data class Geofence Constructors Name Summary [<init>] Geofence(id: String , type: String , trigger: String , center: Coordinate , radius: Double , messageType: String , messageTitle: String , messageBody: String ) Properties Name Summary id val id: String type val type: String trigger val trigger: String center val center: Coordinate radius val center: Doublle messageType val messageType: String messageTitle val messageTitle: String messageBody val messageBody: String Functions Name Summary computeAndSetTimeline fun computeAndSetTimeline(tripEndDateTimeInMillis: Long ): Long","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geofence/#geofence","text":"data class Geofence","title":"Geofence"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geofence/#constructors","text":"Name Summary [<init>] Geofence(id: String , type: String , trigger: String , center: Coordinate , radius: Double , messageType: String , messageTitle: String , messageBody: String )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geofence/#properties","text":"Name Summary id val id: String type val type: String trigger val trigger: String center val center: Coordinate radius val center: Doublle messageType val messageType: String messageTitle val messageTitle: String messageBody val messageBody: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geofence/#functions","text":"Name Summary computeAndSetTimeline fun computeAndSetTimeline(tripEndDateTimeInMillis: Long ): Long","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geofence/coordinate/","text":"tripkit-android / com.skedgo.tripkit.routing / Geofence / Coordinate Coordinate data class Coordinate Constructors Name Summary [<init>] Coordinate(lat: Double , lng: Doublle ) Properties Name Summary lat val lat: Double lng val lng: Double","title":"Coordinate"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geofence/coordinate/#coordinate","text":"data class Coordinate","title":"Coordinate"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geofence/coordinate/#constructors","text":"Name Summary [<init>] Coordinate(lat: Double , lng: Doublle )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geofence/coordinate/#properties","text":"Name Summary lat val lat: Double lng val lng: Double","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geolocation/","text":"tripkit-android / com.skedgo.tripkit.routing / GeoLocation GeoLocation object GeoLocation Functions Name Summary init fun init(context: Context ) createGeoFences fun createGeoFences(geofences: List< Geofence >) createGeoFencingRequest private fun createGeoFencingRequest(): GeofencingRequest ? clearGeofences fun clearGeofences() removeGeoFences fun removeGeoFences(onRemoveCallback: (() -> Unit))","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geolocation/#geolocation","text":"object GeoLocation","title":"GeoLocation"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-geolocation/#functions","text":"Name Summary init fun init(context: Context ) createGeoFences fun createGeoFences(geofences: List< Geofence >) createGeoFencingRequest private fun createGeoFencingRequest(): GeofencingRequest ? clearGeofences fun clearGeofences() removeGeoFences fun removeGeoFences(onRemoveCallback: (() -> Unit))","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-get-off-alerts-cache/","text":"tripkit-android / com.skedgo.tripkit.routing / GetOffAlertCache GetOffAlertCache object GetOffAlertCache Functions Name Summary init fun init(context: Context ) setTripAlertOnState fun setTripAlertOnState(tripUuid: String , onState: Boolean ) isTripAlertStateOn fun isTripAlertStateOn(tripUuid: String ): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-get-off-alerts-cache/#getoffalertcache","text":"object GetOffAlertCache","title":"GetOffAlertCache"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-get-off-alerts-cache/#functions","text":"Name Summary init fun init(context: Context ) setTripAlertOnState fun setTripAlertOnState(tripUuid: String , onState: Boolean ) isTripAlertStateOn fun isTripAlertStateOn(tripUuid: String ): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-group-visibility/","text":"tripkit-android / com.skedgo.tripkit.routing / GroupVisibility GroupVisibility class GroupVisibility Enum Values Name Summary FULL COMPACT Properties Name Summary value To be sortable. val value: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-group-visibility/#groupvisibility","text":"class GroupVisibility","title":"GroupVisibility"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-group-visibility/#enum-values","text":"Name Summary FULL COMPACT","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-group-visibility/#properties","text":"Name Summary value To be sortable. val value: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-group-visibility/-c-o-m-p-a-c-t/","text":"tripkit-android / com.skedgo.tripkit.routing / GroupVisibility / COMPACT COMPACT COMPACT","title":" c o m p a c t"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-group-visibility/-c-o-m-p-a-c-t/#compact","text":"COMPACT","title":"COMPACT"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-group-visibility/-f-u-l-l/","text":"tripkit-android / com.skedgo.tripkit.routing / GroupVisibility / FULL FULL FULL","title":" f u l l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-group-visibility/-f-u-l-l/#full","text":"FULL","title":"FULL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-group-visibility/value/","text":"tripkit-android / com.skedgo.tripkit.routing / GroupVisibility / value value val value: Int To be sortable.","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-group-visibility/value/#value","text":"val value: Int To be sortable.","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / LocalCost LocalCost @Immutable @TypeAdapters abstract class LocalCost : Parcelable Constructors Name Summary <init> LocalCost() Functions Name Summary accuracy abstract fun accuracy(): LocalCostAccuracy cost abstract fun cost(): Float currency abstract fun currency(): String maxCost abstract fun maxCost(): Float ? minCost abstract fun minCost(): Float ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/#localcost","text":"@Immutable @TypeAdapters abstract class LocalCost : Parcelable","title":"LocalCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/#constructors","text":"Name Summary <init> LocalCost()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/#functions","text":"Name Summary accuracy abstract fun accuracy(): LocalCostAccuracy cost abstract fun cost(): Float currency abstract fun currency(): String maxCost abstract fun maxCost(): Float ? minCost abstract fun minCost(): Float ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / LocalCost / <init> <init> LocalCost()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/-init-/#init","text":"LocalCost()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/accuracy/","text":"tripkit-android / com.skedgo.tripkit.routing / LocalCost / accuracy accuracy abstract fun accuracy(): LocalCostAccuracy","title":"Accuracy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/accuracy/#accuracy","text":"abstract fun accuracy(): LocalCostAccuracy","title":"accuracy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/cost/","text":"tripkit-android / com.skedgo.tripkit.routing / LocalCost / cost cost abstract fun cost(): Float Return Cost of this segment in local currency (it's an average for ranges, considering quartile info)","title":"Cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/cost/#cost","text":"abstract fun cost(): Float Return Cost of this segment in local currency (it's an average for ranges, considering quartile info)","title":"cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/currency/","text":"tripkit-android / com.skedgo.tripkit.routing / LocalCost / currency currency abstract fun currency(): String Return The ISO 4217 currency code","title":"Currency"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/currency/#currency","text":"abstract fun currency(): String Return The ISO 4217 currency code","title":"currency"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/max-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / LocalCost / maxCost maxCost abstract fun maxCost(): Float ? Return Maximum value for when the price is within a range","title":"Max cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/max-cost/#maxcost","text":"abstract fun maxCost(): Float ? Return Maximum value for when the price is within a range","title":"maxCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/min-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / LocalCost / minCost minCost abstract fun minCost(): Float ? Return Minimum value for when the price is within a range","title":"Min cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost/min-cost/#mincost","text":"abstract fun minCost(): Float ? Return Minimum value for when the price is within a range","title":"minCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost-accuracy/","text":"tripkit-android / com.skedgo.tripkit.routing / LocalCostAccuracy LocalCostAccuracy enum class LocalCostAccuracy Enum Values Name Summary Internal_Estimate External_Estimate Confirmed","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost-accuracy/#localcostaccuracy","text":"enum class LocalCostAccuracy","title":"LocalCostAccuracy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost-accuracy/#enum-values","text":"Name Summary Internal_Estimate External_Estimate Confirmed","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost-accuracy/-confirmed/","text":"tripkit-android / com.skedgo.tripkit.routing / LocalCostAccuracy / Confirmed Confirmed Confirmed","title":" confirmed"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost-accuracy/-confirmed/#confirmed","text":"Confirmed","title":"Confirmed"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost-accuracy/-external_-estimate/","text":"tripkit-android / com.skedgo.tripkit.routing / LocalCostAccuracy / External_Estimate External_Estimate External_Estimate","title":" external  estimate"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost-accuracy/-external_-estimate/#external_estimate","text":"External_Estimate","title":"External_Estimate"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost-accuracy/-internal_-estimate/","text":"tripkit-android / com.skedgo.tripkit.routing / LocalCostAccuracy / Internal_Estimate Internal_Estimate Internal_Estimate","title":" internal  estimate"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-local-cost-accuracy/-internal_-estimate/#internal_estimate","text":"Internal_Estimate","title":"Internal_Estimate"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo ModeInfo open class ModeInfo : Parcelable See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#mode-identifiers\">Mode Identifiers</a> Constructors Name Summary <init> ModeInfo() Properties Name Summary CREATOR static val CREATOR: Creator< ModeInfo !>! MAP_LIST_SIZE_RATIO static val MAP_LIST_SIZE_RATIO: Float Functions Name Summary describeContents open fun describeContents(): Int getAlternativeText Indicates a human-readable name of the transport (e.g, \"Train\"). open fun getAlternativeText(): String getColor open fun getColor(): ServiceColor ? getDescription open fun getDescription(): String ! getId open fun getId(): String ? getLocalIconName open fun getLocalIconName(): String ! getModeCompat open fun getModeCompat(): VehicleMode ! getRemoteDarkIconName open fun getRemoteDarkIconName(): String ? getRemoteIconIsTemplate open fun getRemoteIconIsTemplate(): Boolean getRemoteIconName open fun getRemoteIconName(): String ! setAlternativeText open fun setAlternativeText(alternativeText: String !): Unit setColor open fun setColor(color: ServiceColor !): Unit setDescription open fun setDescription(description: String !): Unit setId open fun setId(id: String !): Unit setLocalIconName open fun setLocalIconName(localIconName: String !): Unit setRemoteDarkIconName open fun setRemoteDarkIconName(remoteDarkIconName: String !): Unit setRemoteIconIsTemplate open fun setRemoteIconIsTemplate(remoteIconIsTemplate: Boolean ): Unit setRemoteIconName open fun setRemoteIconName(remoteIconName: String !): Unit writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit Extension Functions Name Summary toEntity fun ModeInfo .toEntity(): ModeInfoEntity","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/#modeinfo","text":"open class ModeInfo : Parcelable See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#mode-identifiers\">Mode Identifiers</a>","title":"ModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/#constructors","text":"Name Summary <init> ModeInfo()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< ModeInfo !>! MAP_LIST_SIZE_RATIO static val MAP_LIST_SIZE_RATIO: Float","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/#functions","text":"Name Summary describeContents open fun describeContents(): Int getAlternativeText Indicates a human-readable name of the transport (e.g, \"Train\"). open fun getAlternativeText(): String getColor open fun getColor(): ServiceColor ? getDescription open fun getDescription(): String ! getId open fun getId(): String ? getLocalIconName open fun getLocalIconName(): String ! getModeCompat open fun getModeCompat(): VehicleMode ! getRemoteDarkIconName open fun getRemoteDarkIconName(): String ? getRemoteIconIsTemplate open fun getRemoteIconIsTemplate(): Boolean getRemoteIconName open fun getRemoteIconName(): String ! setAlternativeText open fun setAlternativeText(alternativeText: String !): Unit setColor open fun setColor(color: ServiceColor !): Unit setDescription open fun setDescription(description: String !): Unit setId open fun setId(id: String !): Unit setLocalIconName open fun setLocalIconName(localIconName: String !): Unit setRemoteDarkIconName open fun setRemoteDarkIconName(remoteDarkIconName: String !): Unit setRemoteIconIsTemplate open fun setRemoteIconIsTemplate(remoteIconIsTemplate: Boolean ): Unit setRemoteIconName open fun setRemoteIconName(remoteIconName: String !): Unit writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/#extension-functions","text":"Name Summary toEntity fun ModeInfo .toEntity(): ModeInfoEntity","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / CREATOR CREATOR static val CREATOR: Creator< ModeInfo !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< ModeInfo !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / <init> <init> ModeInfo()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/-init-/#init","text":"ModeInfo()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/-m-a-p_-l-i-s-t_-s-i-z-e_-r-a-t-i-o/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / MAP_LIST_SIZE_RATIO MAP_LIST_SIZE_RATIO static val MAP_LIST_SIZE_RATIO: Float","title":" m a p  l i s t  s i z e  r a t i o"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/-m-a-p_-l-i-s-t_-s-i-z-e_-r-a-t-i-o/#map_list_size_ratio","text":"static val MAP_LIST_SIZE_RATIO: Float","title":"MAP_LIST_SIZE_RATIO"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-alternative-text/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / getAlternativeText getAlternativeText @NonNull open fun getAlternativeText(): String Indicates a human-readable name of the transport (e.g, \"Train\").","title":"Get alternative text"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-alternative-text/#getalternativetext","text":"@NonNull open fun getAlternativeText(): String Indicates a human-readable name of the transport (e.g, \"Train\").","title":"getAlternativeText"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-color/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / getColor getColor @Nullable open fun getColor(): ServiceColor ?","title":"Get color"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-color/#getcolor","text":"@Nullable open fun getColor(): ServiceColor ?","title":"getColor"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-description/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / getDescription getDescription open fun getDescription(): String !","title":"Get description"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-description/#getdescription","text":"open fun getDescription(): String !","title":"getDescription"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-id/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / getId getId @Nullable open fun getId(): String ? See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#mode-identifiers\">Mode Identifiers</a>","title":"Get id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-id/#getid","text":"@Nullable open fun getId(): String ? See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#mode-identifiers\">Mode Identifiers</a>","title":"getId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-local-icon-name/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / getLocalIconName getLocalIconName open fun getLocalIconName(): String !","title":"Get local icon name"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-local-icon-name/#getlocaliconname","text":"open fun getLocalIconName(): String !","title":"getLocalIconName"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-mode-compat/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / getModeCompat getModeCompat open fun getModeCompat(): VehicleMode !","title":"Get mode compat"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-mode-compat/#getmodecompat","text":"open fun getModeCompat(): VehicleMode !","title":"getModeCompat"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-remote-dark-icon-name/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / getRemoteDarkIconName getRemoteDarkIconName @Nullable open fun getRemoteDarkIconName(): String ?","title":"Get remote dark icon name"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-remote-dark-icon-name/#getremotedarkiconname","text":"@Nullable open fun getRemoteDarkIconName(): String ?","title":"getRemoteDarkIconName"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-remote-icon-is-template/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / getRemoteIconIsTemplate getRemoteIconIsTemplate open fun getRemoteIconIsTemplate(): Boolean","title":"Get remote icon is template"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-remote-icon-is-template/#getremoteiconistemplate","text":"open fun getRemoteIconIsTemplate(): Boolean","title":"getRemoteIconIsTemplate"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-remote-icon-name/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / getRemoteIconName getRemoteIconName open fun getRemoteIconName(): String !","title":"Get remote icon name"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/get-remote-icon-name/#getremoteiconname","text":"open fun getRemoteIconName(): String !","title":"getRemoteIconName"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-alternative-text/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / setAlternativeText setAlternativeText open fun setAlternativeText(alternativeText: String !): Unit","title":"Set alternative text"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-alternative-text/#setalternativetext","text":"open fun setAlternativeText(alternativeText: String !): Unit","title":"setAlternativeText"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-color/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / setColor setColor open fun setColor(color: ServiceColor !): Unit","title":"Set color"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-color/#setcolor","text":"open fun setColor(color: ServiceColor !): Unit","title":"setColor"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-description/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / setDescription setDescription open fun setDescription(description: String !): Unit","title":"Set description"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-description/#setdescription","text":"open fun setDescription(description: String !): Unit","title":"setDescription"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-id/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / setId setId open fun setId(id: String !): Unit","title":"Set id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-id/#setid","text":"open fun setId(id: String !): Unit","title":"setId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-local-icon-name/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / setLocalIconName setLocalIconName open fun setLocalIconName(localIconName: String !): Unit","title":"Set local icon name"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-local-icon-name/#setlocaliconname","text":"open fun setLocalIconName(localIconName: String !): Unit","title":"setLocalIconName"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-remote-dark-icon-name/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / setRemoteDarkIconName setRemoteDarkIconName open fun setRemoteDarkIconName(remoteDarkIconName: String !): Unit","title":"Set remote dark icon name"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-remote-dark-icon-name/#setremotedarkiconname","text":"open fun setRemoteDarkIconName(remoteDarkIconName: String !): Unit","title":"setRemoteDarkIconName"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-remote-icon-is-template/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / setRemoteIconIsTemplate setRemoteIconIsTemplate open fun setRemoteIconIsTemplate(remoteIconIsTemplate: Boolean ): Unit","title":"Set remote icon is template"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-remote-icon-is-template/#setremoteiconistemplate","text":"open fun setRemoteIconIsTemplate(remoteIconIsTemplate: Boolean ): Unit","title":"setRemoteIconIsTemplate"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-remote-icon-name/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / setRemoteIconName setRemoteIconName open fun setRemoteIconName(remoteIconName: String !): Unit","title":"Set remote icon name"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/set-remote-icon-name/#setremoteiconname","text":"open fun setRemoteIconName(remoteIconName: String !): Unit","title":"setRemoteIconName"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.routing / ModeInfo / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-mode-info/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/","text":"tripkit-android / com.skedgo.tripkit.routing / Occupancy Occupancy enum class Occupancy Enum Values Name Summary Empty ManySeatsAvailable FewSeatsAvailable StandingRoomOnly CrushedStandingRoomOnly Full NotAcceptingPassengers Properties Name Summary value val value: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/#occupancy","text":"enum class Occupancy","title":"Occupancy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/#enum-values","text":"Name Summary Empty ManySeatsAvailable FewSeatsAvailable StandingRoomOnly CrushedStandingRoomOnly Full NotAcceptingPassengers","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/#properties","text":"Name Summary value val value: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-crushed-standing-room-only/","text":"tripkit-android / com.skedgo.tripkit.routing / Occupancy / CrushedStandingRoomOnly CrushedStandingRoomOnly CrushedStandingRoomOnly","title":" crushed standing room only"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-crushed-standing-room-only/#crushedstandingroomonly","text":"CrushedStandingRoomOnly","title":"CrushedStandingRoomOnly"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-empty/","text":"tripkit-android / com.skedgo.tripkit.routing / Occupancy / Empty Empty Empty","title":" empty"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-empty/#empty","text":"Empty","title":"Empty"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-few-seats-available/","text":"tripkit-android / com.skedgo.tripkit.routing / Occupancy / FewSeatsAvailable FewSeatsAvailable FewSeatsAvailable","title":" few seats available"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-few-seats-available/#fewseatsavailable","text":"FewSeatsAvailable","title":"FewSeatsAvailable"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-full/","text":"tripkit-android / com.skedgo.tripkit.routing / Occupancy / Full Full Full","title":" full"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-full/#full","text":"Full","title":"Full"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-many-seats-available/","text":"tripkit-android / com.skedgo.tripkit.routing / Occupancy / ManySeatsAvailable ManySeatsAvailable ManySeatsAvailable","title":" many seats available"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-many-seats-available/#manyseatsavailable","text":"ManySeatsAvailable","title":"ManySeatsAvailable"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-not-accepting-passengers/","text":"tripkit-android / com.skedgo.tripkit.routing / Occupancy / NotAcceptingPassengers NotAcceptingPassengers NotAcceptingPassengers","title":" not accepting passengers"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-not-accepting-passengers/#notacceptingpassengers","text":"NotAcceptingPassengers","title":"NotAcceptingPassengers"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-standing-room-only/","text":"tripkit-android / com.skedgo.tripkit.routing / Occupancy / StandingRoomOnly StandingRoomOnly StandingRoomOnly","title":" standing room only"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/-standing-room-only/#standingroomonly","text":"StandingRoomOnly","title":"StandingRoomOnly"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/value/","text":"tripkit-android / com.skedgo.tripkit.routing / Occupancy / value value val value: String","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-occupancy/value/#value","text":"val value: String","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/","text":"tripkit-android / com.skedgo.tripkit.routing / Provider Provider @TypeAdapters @Immutable abstract class Provider : Parcelable Constructors Name Summary <init> Provider() Properties Name Summary CREATOR static val CREATOR: Creator< Provider !>! Functions Name Summary describeContents open fun describeContents(): Int name abstract fun name(): String ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/#provider","text":"@TypeAdapters @Immutable abstract class Provider : Parcelable","title":"Provider"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/#constructors","text":"Name Summary <init> Provider()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< Provider !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/#functions","text":"Name Summary describeContents open fun describeContents(): Int name abstract fun name(): String ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / Provider / CREATOR CREATOR static val CREATOR: Creator< Provider !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< Provider !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / Provider / <init> <init> Provider()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/-init-/#init","text":"Provider()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.routing / Provider / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/name/","text":"tripkit-android / com.skedgo.tripkit.routing / Provider / name name @Nullable abstract fun name(): String ?","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/name/#name","text":"@Nullable abstract fun name(): String ?","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.routing / Provider / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-provider/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle RealTimeVehicle open class RealTimeVehicle : Parcelable Constructors Name Summary <init> RealTimeVehicle() Properties Name Summary CREATOR static val CREATOR: Creator< RealTimeVehicle !>! Functions Name Summary addAlert open fun addAlert(alert: RealtimeAlert !): Unit describeContents open fun describeContents(): Int getAlerts open fun getAlerts(): ArrayList < RealtimeAlert !>! getArriveAtEndStopTime open fun getArriveAtEndStopTime(): Long getArriveAtStartStopTime open fun getArriveAtStartStopTime(): Long getComponents open fun getComponents(): MutableList < MutableList < VehicleComponent !>!>? getEndStopCode open fun getEndStopCode(): String ! getIcon open fun getIcon(): String ? getId open fun getId(): Long getLabel open fun getLabel(): String ! getLastUpdateTime open fun getLastUpdateTime(): Long getLocation open fun getLocation(): Location ! getOccupancy open fun getOccupancy(): Occupancy ? getServiceTripId open fun getServiceTripId(): String ! getStartStopCode open fun getStartStopCode(): String ! hasLocationInformation open fun hasLocationInformation(): Boolean setAlerts open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit setArriveAtEndStopTime open fun setArriveAtEndStopTime(arriveAtEndStopTime: Long ): Unit setArriveAtStartStopTime open fun setArriveAtStartStopTime(arriveAtStartStopTime: Long ): Unit setComponents open fun setComponents(components: MutableList < MutableList < VehicleComponent !>!>?): Unit setEndStopCode open fun setEndStopCode(endStopCode: String !): Unit setIcon open fun setIcon(icon: String ?): Unit setId open fun setId(id: Long ): Unit setLabel open fun setLabel(label: String !): Unit setLastUpdateTime open fun setLastUpdateTime(lastUpdateTime: Long ): Unit setLocation open fun setLocation(location: Location !): Unit setOccupancy open fun setOccupancy(occupancy: String ?): Unit setServiceTripId open fun setServiceTripId(serviceTripId: String !): Unit setStartStopCode open fun setStartStopCode(startStopCode: String !): Unit writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit Extension Functions Name Summary getAverageOccupancy fun RealTimeVehicle .getAverageOccupancy(): Occupancy ? hasSingleVehicleOccupancy fun RealTimeVehicle .hasSingleVehicleOccupancy(): Boolean hasVehiclesOccupancy fun RealTimeVehicle .hasVehiclesOccupancy(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/#realtimevehicle","text":"open class RealTimeVehicle : Parcelable","title":"RealTimeVehicle"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/#constructors","text":"Name Summary <init> RealTimeVehicle()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< RealTimeVehicle !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/#functions","text":"Name Summary addAlert open fun addAlert(alert: RealtimeAlert !): Unit describeContents open fun describeContents(): Int getAlerts open fun getAlerts(): ArrayList < RealtimeAlert !>! getArriveAtEndStopTime open fun getArriveAtEndStopTime(): Long getArriveAtStartStopTime open fun getArriveAtStartStopTime(): Long getComponents open fun getComponents(): MutableList < MutableList < VehicleComponent !>!>? getEndStopCode open fun getEndStopCode(): String ! getIcon open fun getIcon(): String ? getId open fun getId(): Long getLabel open fun getLabel(): String ! getLastUpdateTime open fun getLastUpdateTime(): Long getLocation open fun getLocation(): Location ! getOccupancy open fun getOccupancy(): Occupancy ? getServiceTripId open fun getServiceTripId(): String ! getStartStopCode open fun getStartStopCode(): String ! hasLocationInformation open fun hasLocationInformation(): Boolean setAlerts open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit setArriveAtEndStopTime open fun setArriveAtEndStopTime(arriveAtEndStopTime: Long ): Unit setArriveAtStartStopTime open fun setArriveAtStartStopTime(arriveAtStartStopTime: Long ): Unit setComponents open fun setComponents(components: MutableList < MutableList < VehicleComponent !>!>?): Unit setEndStopCode open fun setEndStopCode(endStopCode: String !): Unit setIcon open fun setIcon(icon: String ?): Unit setId open fun setId(id: Long ): Unit setLabel open fun setLabel(label: String !): Unit setLastUpdateTime open fun setLastUpdateTime(lastUpdateTime: Long ): Unit setLocation open fun setLocation(location: Location !): Unit setOccupancy open fun setOccupancy(occupancy: String ?): Unit setServiceTripId open fun setServiceTripId(serviceTripId: String !): Unit setStartStopCode open fun setStartStopCode(startStopCode: String !): Unit writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/#extension-functions","text":"Name Summary getAverageOccupancy fun RealTimeVehicle .getAverageOccupancy(): Occupancy ? hasSingleVehicleOccupancy fun RealTimeVehicle .hasSingleVehicleOccupancy(): Boolean hasVehiclesOccupancy fun RealTimeVehicle .hasVehiclesOccupancy(): Boolean","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / CREATOR CREATOR static val CREATOR: Creator< RealTimeVehicle !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< RealTimeVehicle !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / <init> <init> RealTimeVehicle()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/-init-/#init","text":"RealTimeVehicle()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/add-alert/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / addAlert addAlert open fun addAlert(alert: RealtimeAlert !): Unit","title":"Add alert"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/add-alert/#addalert","text":"open fun addAlert(alert: RealtimeAlert !): Unit","title":"addAlert"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-alerts/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getAlerts getAlerts open fun getAlerts(): ArrayList < RealtimeAlert !>!","title":"Get alerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-alerts/#getalerts","text":"open fun getAlerts(): ArrayList < RealtimeAlert !>!","title":"getAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-arrive-at-end-stop-time/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getArriveAtEndStopTime getArriveAtEndStopTime open fun getArriveAtEndStopTime(): Long","title":"Get arrive at end stop time"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-arrive-at-end-stop-time/#getarriveatendstoptime","text":"open fun getArriveAtEndStopTime(): Long","title":"getArriveAtEndStopTime"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-arrive-at-start-stop-time/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getArriveAtStartStopTime getArriveAtStartStopTime open fun getArriveAtStartStopTime(): Long","title":"Get arrive at start stop time"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-arrive-at-start-stop-time/#getarriveatstartstoptime","text":"open fun getArriveAtStartStopTime(): Long","title":"getArriveAtStartStopTime"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-components/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getComponents getComponents @Nullable open fun getComponents(): MutableList < MutableList < VehicleComponent !>!>?","title":"Get components"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-components/#getcomponents","text":"@Nullable open fun getComponents(): MutableList < MutableList < VehicleComponent !>!>?","title":"getComponents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-end-stop-code/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getEndStopCode getEndStopCode open fun getEndStopCode(): String !","title":"Get end stop code"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-end-stop-code/#getendstopcode","text":"open fun getEndStopCode(): String !","title":"getEndStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-icon/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getIcon getIcon @Nullable open fun getIcon(): String ?","title":"Get icon"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-icon/#geticon","text":"@Nullable open fun getIcon(): String ?","title":"getIcon"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-id/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getId getId open fun getId(): Long","title":"Get id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-id/#getid","text":"open fun getId(): Long","title":"getId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-label/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getLabel getLabel open fun getLabel(): String !","title":"Get label"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-label/#getlabel","text":"open fun getLabel(): String !","title":"getLabel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-last-update-time/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getLastUpdateTime getLastUpdateTime open fun getLastUpdateTime(): Long","title":"Get last update time"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-last-update-time/#getlastupdatetime","text":"open fun getLastUpdateTime(): Long","title":"getLastUpdateTime"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-location/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getLocation getLocation open fun getLocation(): Location !","title":"Get location"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-location/#getlocation","text":"open fun getLocation(): Location !","title":"getLocation"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-occupancy/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getOccupancy getOccupancy @Nullable open fun getOccupancy(): Occupancy ?","title":"Get occupancy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-occupancy/#getoccupancy","text":"@Nullable open fun getOccupancy(): Occupancy ?","title":"getOccupancy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-service-trip-id/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getServiceTripId getServiceTripId open fun getServiceTripId(): String !","title":"Get service trip id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-service-trip-id/#getservicetripid","text":"open fun getServiceTripId(): String !","title":"getServiceTripId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-start-stop-code/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / getStartStopCode getStartStopCode open fun getStartStopCode(): String !","title":"Get start stop code"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/get-start-stop-code/#getstartstopcode","text":"open fun getStartStopCode(): String !","title":"getStartStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/has-location-information/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / hasLocationInformation hasLocationInformation open fun hasLocationInformation(): Boolean","title":"Has location information"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/has-location-information/#haslocationinformation","text":"open fun hasLocationInformation(): Boolean","title":"hasLocationInformation"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-alerts/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setAlerts setAlerts open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit","title":"Set alerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-alerts/#setalerts","text":"open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit","title":"setAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-arrive-at-end-stop-time/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setArriveAtEndStopTime setArriveAtEndStopTime open fun setArriveAtEndStopTime(arriveAtEndStopTime: Long ): Unit","title":"Set arrive at end stop time"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-arrive-at-end-stop-time/#setarriveatendstoptime","text":"open fun setArriveAtEndStopTime(arriveAtEndStopTime: Long ): Unit","title":"setArriveAtEndStopTime"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-arrive-at-start-stop-time/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setArriveAtStartStopTime setArriveAtStartStopTime open fun setArriveAtStartStopTime(arriveAtStartStopTime: Long ): Unit","title":"Set arrive at start stop time"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-arrive-at-start-stop-time/#setarriveatstartstoptime","text":"open fun setArriveAtStartStopTime(arriveAtStartStopTime: Long ): Unit","title":"setArriveAtStartStopTime"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-components/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setComponents setComponents open fun setComponents(@Nullable components: MutableList < MutableList < VehicleComponent !>!>?): Unit","title":"Set components"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-components/#setcomponents","text":"open fun setComponents(@Nullable components: MutableList < MutableList < VehicleComponent !>!>?): Unit","title":"setComponents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-end-stop-code/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setEndStopCode setEndStopCode open fun setEndStopCode(endStopCode: String !): Unit","title":"Set end stop code"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-end-stop-code/#setendstopcode","text":"open fun setEndStopCode(endStopCode: String !): Unit","title":"setEndStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-icon/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setIcon setIcon open fun setIcon(@Nullable icon: String ?): Unit","title":"Set icon"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-icon/#seticon","text":"open fun setIcon(@Nullable icon: String ?): Unit","title":"setIcon"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-id/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setId setId open fun setId(id: Long ): Unit","title":"Set id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-id/#setid","text":"open fun setId(id: Long ): Unit","title":"setId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-label/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setLabel setLabel open fun setLabel(label: String !): Unit","title":"Set label"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-label/#setlabel","text":"open fun setLabel(label: String !): Unit","title":"setLabel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-last-update-time/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setLastUpdateTime setLastUpdateTime open fun setLastUpdateTime(lastUpdateTime: Long ): Unit","title":"Set last update time"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-last-update-time/#setlastupdatetime","text":"open fun setLastUpdateTime(lastUpdateTime: Long ): Unit","title":"setLastUpdateTime"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-location/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setLocation setLocation open fun setLocation(location: Location !): Unit","title":"Set location"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-location/#setlocation","text":"open fun setLocation(location: Location !): Unit","title":"setLocation"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-occupancy/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setOccupancy setOccupancy open fun setOccupancy(@Nullable occupancy: String ?): Unit","title":"Set occupancy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-occupancy/#setoccupancy","text":"open fun setOccupancy(@Nullable occupancy: String ?): Unit","title":"setOccupancy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-service-trip-id/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setServiceTripId setServiceTripId open fun setServiceTripId(serviceTripId: String !): Unit","title":"Set service trip id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-service-trip-id/#setservicetripid","text":"open fun setServiceTripId(serviceTripId: String !): Unit","title":"setServiceTripId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-start-stop-code/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / setStartStopCode setStartStopCode open fun setStartStopCode(startStopCode: String !): Unit","title":"Set start stop code"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/set-start-stop-code/#setstartstopcode","text":"open fun setStartStopCode(startStopCode: String !): Unit","title":"setStartStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.routing / RealTimeVehicle / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-real-time-vehicle/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/","text":"tripkit-android / com.skedgo.tripkit.routing / RoutingResponse RoutingResponse open class RoutingResponse Constructors Name Summary <init> RoutingResponse() Properties Name Summary FORMAT_DIRECTION static val FORMAT_DIRECTION: String Functions Name Summary createSegmentTemplateMap open fun createSegmentTemplateMap(segmentTemplates: ArrayList <JsonObject!>!): SparseArray<JsonObject!>! getAlerts open fun getAlerts(): ArrayList < RealtimeAlert !>! getErrorMessage open fun getErrorMessage(): String ! getRegionName open fun getRegionName(): String ! getTripGroupList open fun getTripGroupList(): ArrayList < TripGroup !>! hasError open fun hasError(): Boolean processDirectionTemplate Replaces '' with segment's 'serviceDirection' open static fun processDirectionTemplate(serviceDirectionNode: JsonPrimitive!, notes: String !): String ! processRawData open fun processRawData(resources: Resources!, gson: Gson!): Unit open fun processRawData(resources: Resources!, gson: Gson!, tripGroups: ArrayList < TripGroup !>!, segmentTemplateMap: SparseArray<JsonObject!>!): ArrayList < TripGroup !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/#routingresponse","text":"open class RoutingResponse","title":"RoutingResponse"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/#constructors","text":"Name Summary <init> RoutingResponse()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/#properties","text":"Name Summary FORMAT_DIRECTION static val FORMAT_DIRECTION: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/#functions","text":"Name Summary createSegmentTemplateMap open fun createSegmentTemplateMap(segmentTemplates: ArrayList <JsonObject!>!): SparseArray<JsonObject!>! getAlerts open fun getAlerts(): ArrayList < RealtimeAlert !>! getErrorMessage open fun getErrorMessage(): String ! getRegionName open fun getRegionName(): String ! getTripGroupList open fun getTripGroupList(): ArrayList < TripGroup !>! hasError open fun hasError(): Boolean processDirectionTemplate Replaces '' with segment's 'serviceDirection' open static fun processDirectionTemplate(serviceDirectionNode: JsonPrimitive!, notes: String !): String ! processRawData open fun processRawData(resources: Resources!, gson: Gson!): Unit open fun processRawData(resources: Resources!, gson: Gson!, tripGroups: ArrayList < TripGroup !>!, segmentTemplateMap: SparseArray<JsonObject!>!): ArrayList < TripGroup !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/-f-o-r-m-a-t_-d-i-r-e-c-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.routing / RoutingResponse / FORMAT_DIRECTION FORMAT_DIRECTION static val FORMAT_DIRECTION: String","title":" f o r m a t  d i r e c t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/-f-o-r-m-a-t_-d-i-r-e-c-t-i-o-n/#format_direction","text":"static val FORMAT_DIRECTION: String","title":"FORMAT_DIRECTION"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / RoutingResponse / <init> <init> RoutingResponse()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/-init-/#init","text":"RoutingResponse()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/create-segment-template-map/","text":"tripkit-android / com.skedgo.tripkit.routing / RoutingResponse / createSegmentTemplateMap createSegmentTemplateMap open fun createSegmentTemplateMap(segmentTemplates: ArrayList <JsonObject!>!): SparseArray<JsonObject!>!","title":"Create segment template map"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/create-segment-template-map/#createsegmenttemplatemap","text":"open fun createSegmentTemplateMap(segmentTemplates: ArrayList <JsonObject!>!): SparseArray<JsonObject!>!","title":"createSegmentTemplateMap"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/get-alerts/","text":"tripkit-android / com.skedgo.tripkit.routing / RoutingResponse / getAlerts getAlerts open fun getAlerts(): ArrayList < RealtimeAlert !>!","title":"Get alerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/get-alerts/#getalerts","text":"open fun getAlerts(): ArrayList < RealtimeAlert !>!","title":"getAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/get-error-message/","text":"tripkit-android / com.skedgo.tripkit.routing / RoutingResponse / getErrorMessage getErrorMessage open fun getErrorMessage(): String !","title":"Get error message"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/get-error-message/#geterrormessage","text":"open fun getErrorMessage(): String !","title":"getErrorMessage"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/get-region-name/","text":"tripkit-android / com.skedgo.tripkit.routing / RoutingResponse / getRegionName getRegionName open fun getRegionName(): String !","title":"Get region name"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/get-region-name/#getregionname","text":"open fun getRegionName(): String !","title":"getRegionName"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/get-trip-group-list/","text":"tripkit-android / com.skedgo.tripkit.routing / RoutingResponse / getTripGroupList getTripGroupList open fun getTripGroupList(): ArrayList < TripGroup !>!","title":"Get trip group list"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/get-trip-group-list/#gettripgrouplist","text":"open fun getTripGroupList(): ArrayList < TripGroup !>!","title":"getTripGroupList"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/has-error/","text":"tripkit-android / com.skedgo.tripkit.routing / RoutingResponse / hasError hasError open fun hasError(): Boolean","title":"Has error"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/has-error/#haserror","text":"open fun hasError(): Boolean","title":"hasError"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/process-direction-template/","text":"tripkit-android / com.skedgo.tripkit.routing / RoutingResponse / processDirectionTemplate processDirectionTemplate open static fun processDirectionTemplate(serviceDirectionNode: JsonPrimitive!, notes: String !): String ! Replaces '' with segment's 'serviceDirection' Parameters serviceDirectionNode - JsonPrimitive!: The Json node that contains value for 'serviceDirection' notes - String !: The 'notes' text that contains the '' template Return String !: The 'notes' text that has been processed","title":"Process direction template"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/process-direction-template/#processdirectiontemplate","text":"open static fun processDirectionTemplate(serviceDirectionNode: JsonPrimitive!, notes: String !): String ! Replaces '' with segment's 'serviceDirection'","title":"processDirectionTemplate"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/process-direction-template/#parameters","text":"serviceDirectionNode - JsonPrimitive!: The Json node that contains value for 'serviceDirection' notes - String !: The 'notes' text that contains the '' template Return String !: The 'notes' text that has been processed","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/process-raw-data/","text":"tripkit-android / com.skedgo.tripkit.routing / RoutingResponse / processRawData processRawData open fun processRawData(resources: Resources!, gson: Gson!): Unit open fun processRawData(resources: Resources!, gson: Gson!, tripGroups: ArrayList < TripGroup !>!, segmentTemplateMap: SparseArray<JsonObject!>!): ArrayList < TripGroup !>!","title":"Process raw data"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-routing-response/process-raw-data/#processrawdata","text":"open fun processRawData(resources: Resources!, gson: Gson!): Unit open fun processRawData(resources: Resources!, gson: Gson!, tripGroups: ArrayList < TripGroup !>!, segmentTemplateMap: SparseArray<JsonObject!>!): ArrayList < TripGroup !>!","title":"processRawData"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-action-templates/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentActionTemplates SegmentActionTemplates class SegmentActionTemplates Properties Name Summary TEMPLATE_DURATION static val TEMPLATE_DURATION: String TEMPLATE_NUMBER static val TEMPLATE_NUMBER: String TEMPLATE_TIME static val TEMPLATE_TIME: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-action-templates/#segmentactiontemplates","text":"class SegmentActionTemplates","title":"SegmentActionTemplates"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-action-templates/#properties","text":"Name Summary TEMPLATE_DURATION static val TEMPLATE_DURATION: String TEMPLATE_NUMBER static val TEMPLATE_NUMBER: String TEMPLATE_TIME static val TEMPLATE_TIME: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-action-templates/-t-e-m-p-l-a-t-e_-d-u-r-a-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentActionTemplates / TEMPLATE_DURATION TEMPLATE_DURATION static val TEMPLATE_DURATION: String","title":" t e m p l a t e  d u r a t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-action-templates/-t-e-m-p-l-a-t-e_-d-u-r-a-t-i-o-n/#template_duration","text":"static val TEMPLATE_DURATION: String","title":"TEMPLATE_DURATION"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-action-templates/-t-e-m-p-l-a-t-e_-n-u-m-b-e-r/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentActionTemplates / TEMPLATE_NUMBER TEMPLATE_NUMBER static val TEMPLATE_NUMBER: String","title":" t e m p l a t e  n u m b e r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-action-templates/-t-e-m-p-l-a-t-e_-n-u-m-b-e-r/#template_number","text":"static val TEMPLATE_NUMBER: String","title":"TEMPLATE_NUMBER"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-action-templates/-t-e-m-p-l-a-t-e_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentActionTemplates / TEMPLATE_TIME TEMPLATE_TIME static val TEMPLATE_TIME: String","title":" t e m p l a t e  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-action-templates/-t-e-m-p-l-a-t-e_-t-i-m-e/#template_time","text":"static val TEMPLATE_TIME: String","title":"TEMPLATE_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentJsonKeys SegmentJsonKeys class SegmentJsonKeys Properties Name Summary NODE_ACTION static val NODE_ACTION: String NODE_HASH_CODE static val NODE_HASH_CODE: String NODE_NOTES static val NODE_NOTES: String NODE_SEGMENT_TEMPLATE_HASH_CODE static val NODE_SEGMENT_TEMPLATE_HASH_CODE: String NODE_SERVICE_DIRECTION static val NODE_SERVICE_DIRECTION: String NODE_SERVICE_NAME static val NODE_SERVICE_NAME: String NODE_SERVICE_NUMBER static val NODE_SERVICE_NUMBER: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/#segmentjsonkeys","text":"class SegmentJsonKeys","title":"SegmentJsonKeys"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/#properties","text":"Name Summary NODE_ACTION static val NODE_ACTION: String NODE_HASH_CODE static val NODE_HASH_CODE: String NODE_NOTES static val NODE_NOTES: String NODE_SEGMENT_TEMPLATE_HASH_CODE static val NODE_SEGMENT_TEMPLATE_HASH_CODE: String NODE_SERVICE_DIRECTION static val NODE_SERVICE_DIRECTION: String NODE_SERVICE_NAME static val NODE_SERVICE_NAME: String NODE_SERVICE_NUMBER static val NODE_SERVICE_NUMBER: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-a-c-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentJsonKeys / NODE_ACTION NODE_ACTION static val NODE_ACTION: String","title":" n o d e  a c t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-a-c-t-i-o-n/#node_action","text":"static val NODE_ACTION: String","title":"NODE_ACTION"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-h-a-s-h_-c-o-d-e/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentJsonKeys / NODE_HASH_CODE NODE_HASH_CODE static val NODE_HASH_CODE: String","title":" n o d e  h a s h  c o d e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-h-a-s-h_-c-o-d-e/#node_hash_code","text":"static val NODE_HASH_CODE: String","title":"NODE_HASH_CODE"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-n-o-t-e-s/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentJsonKeys / NODE_NOTES NODE_NOTES static val NODE_NOTES: String","title":" n o d e  n o t e s"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-n-o-t-e-s/#node_notes","text":"static val NODE_NOTES: String","title":"NODE_NOTES"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-s-e-g-m-e-n-t_-t-e-m-p-l-a-t-e_-h-a-s-h_-c-o-d-e/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentJsonKeys / NODE_SEGMENT_TEMPLATE_HASH_CODE NODE_SEGMENT_TEMPLATE_HASH_CODE static val NODE_SEGMENT_TEMPLATE_HASH_CODE: String","title":" n o d e  s e g m e n t  t e m p l a t e  h a s h  c o d e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-s-e-g-m-e-n-t_-t-e-m-p-l-a-t-e_-h-a-s-h_-c-o-d-e/#node_segment_template_hash_code","text":"static val NODE_SEGMENT_TEMPLATE_HASH_CODE: String","title":"NODE_SEGMENT_TEMPLATE_HASH_CODE"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-s-e-r-v-i-c-e_-d-i-r-e-c-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentJsonKeys / NODE_SERVICE_DIRECTION NODE_SERVICE_DIRECTION static val NODE_SERVICE_DIRECTION: String","title":" n o d e  s e r v i c e  d i r e c t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-s-e-r-v-i-c-e_-d-i-r-e-c-t-i-o-n/#node_service_direction","text":"static val NODE_SERVICE_DIRECTION: String","title":"NODE_SERVICE_DIRECTION"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-s-e-r-v-i-c-e_-n-a-m-e/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentJsonKeys / NODE_SERVICE_NAME NODE_SERVICE_NAME static val NODE_SERVICE_NAME: String","title":" n o d e  s e r v i c e  n a m e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-s-e-r-v-i-c-e_-n-a-m-e/#node_service_name","text":"static val NODE_SERVICE_NAME: String","title":"NODE_SERVICE_NAME"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-s-e-r-v-i-c-e_-n-u-m-b-e-r/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentJsonKeys / NODE_SERVICE_NUMBER NODE_SERVICE_NUMBER static val NODE_SERVICE_NUMBER: String","title":" n o d e  s e r v i c e  n u m b e r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-json-keys/-n-o-d-e_-s-e-r-v-i-c-e_-n-u-m-b-e-r/#node_service_number","text":"static val NODE_SERVICE_NUMBER: String","title":"NODE_SERVICE_NUMBER"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-notes-templates/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentNotesTemplates SegmentNotesTemplates class SegmentNotesTemplates Properties Name Summary TEMPLATE_DIRECTION static val TEMPLATE_DIRECTION: String TEMPLATE_LINE_NAME static val TEMPLATE_LINE_NAME: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-notes-templates/#segmentnotestemplates","text":"class SegmentNotesTemplates","title":"SegmentNotesTemplates"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-notes-templates/#properties","text":"Name Summary TEMPLATE_DIRECTION static val TEMPLATE_DIRECTION: String TEMPLATE_LINE_NAME static val TEMPLATE_LINE_NAME: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-notes-templates/-t-e-m-p-l-a-t-e_-d-i-r-e-c-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentNotesTemplates / TEMPLATE_DIRECTION TEMPLATE_DIRECTION static val TEMPLATE_DIRECTION: String","title":" t e m p l a t e  d i r e c t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-notes-templates/-t-e-m-p-l-a-t-e_-d-i-r-e-c-t-i-o-n/#template_direction","text":"static val TEMPLATE_DIRECTION: String","title":"TEMPLATE_DIRECTION"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-notes-templates/-t-e-m-p-l-a-t-e_-l-i-n-e_-n-a-m-e/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentNotesTemplates / TEMPLATE_LINE_NAME TEMPLATE_LINE_NAME static val TEMPLATE_LINE_NAME: String","title":" t e m p l a t e  l i n e  n a m e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-notes-templates/-t-e-m-p-l-a-t-e_-l-i-n-e_-n-a-m-e/#template_line_name","text":"static val TEMPLATE_LINE_NAME: String","title":"TEMPLATE_LINE_NAME"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentType SegmentType enum class SegmentType Enum Values Name Summary DEPARTURE SCHEDULED UNSCHEDULED STATIONARY ARRIVAL","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/#segmenttype","text":"enum class SegmentType","title":"SegmentType"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/#enum-values","text":"Name Summary DEPARTURE SCHEDULED UNSCHEDULED STATIONARY ARRIVAL","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/-a-r-r-i-v-a-l/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentType / ARRIVAL ARRIVAL ARRIVAL","title":" a r r i v a l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/-a-r-r-i-v-a-l/#arrival","text":"ARRIVAL","title":"ARRIVAL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/-d-e-p-a-r-t-u-r-e/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentType / DEPARTURE DEPARTURE DEPARTURE","title":" d e p a r t u r e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/-d-e-p-a-r-t-u-r-e/#departure","text":"DEPARTURE","title":"DEPARTURE"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/-s-c-h-e-d-u-l-e-d/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentType / SCHEDULED SCHEDULED SCHEDULED","title":" s c h e d u l e d"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/-s-c-h-e-d-u-l-e-d/#scheduled","text":"SCHEDULED","title":"SCHEDULED"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/-s-t-a-t-i-o-n-a-r-y/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentType / STATIONARY STATIONARY STATIONARY","title":" s t a t i o n a r y"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/-s-t-a-t-i-o-n-a-r-y/#stationary","text":"STATIONARY","title":"STATIONARY"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/-u-n-s-c-h-e-d-u-l-e-d/","text":"tripkit-android / com.skedgo.tripkit.routing / SegmentType / UNSCHEDULED UNSCHEDULED UNSCHEDULED","title":" u n s c h e d u l e d"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-segment-type/-u-n-s-c-h-e-d-u-l-e-d/#unscheduled","text":"UNSCHEDULED","title":"UNSCHEDULED"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor ServiceColor class ServiceColor : Parcelable Constructors Name Summary <init> ServiceColor() ServiceColor(color: Int ) ServiceColor(red: Int , green: Int , blue: Int ) Properties Name Summary CREATOR static val CREATOR: Creator< ServiceColor !>! Functions Name Summary describeContents fun describeContents(): Int equals fun equals(other: Any ?): Boolean getBlue fun getBlue(): Int getColor fun getColor(): Int getGreen fun getGreen(): Int getRed fun getRed(): Int setBlue fun setBlue(blue: Int ): Unit setGreen fun setGreen(green: Int ): Unit setRed fun setRed(red: Int ): Unit writeToParcel fun writeToParcel(dest: Parcel!, flags: Int ): Unit Extension Functions Name Summary toInt fun ServiceColor .toInt(alpha: Int ): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/#servicecolor","text":"class ServiceColor : Parcelable","title":"ServiceColor"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/#constructors","text":"Name Summary <init> ServiceColor() ServiceColor(color: Int ) ServiceColor(red: Int , green: Int , blue: Int )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< ServiceColor !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/#functions","text":"Name Summary describeContents fun describeContents(): Int equals fun equals(other: Any ?): Boolean getBlue fun getBlue(): Int getColor fun getColor(): Int getGreen fun getGreen(): Int getRed fun getRed(): Int setBlue fun setBlue(blue: Int ): Unit setGreen fun setGreen(green: Int ): Unit setRed fun setRed(red: Int ): Unit writeToParcel fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/#extension-functions","text":"Name Summary toInt fun ServiceColor .toInt(alpha: Int ): Int","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / CREATOR CREATOR static val CREATOR: Creator< ServiceColor !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< ServiceColor !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / <init> <init> ServiceColor() ServiceColor(color: Int ) ServiceColor(red: Int , green: Int , blue: Int )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/-init-/#init","text":"ServiceColor() ServiceColor(color: Int ) ServiceColor(red: Int , green: Int , blue: Int )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / describeContents describeContents fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/describe-contents/#describecontents","text":"fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/equals/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / equals equals fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/get-blue/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / getBlue getBlue fun getBlue(): Int","title":"Get blue"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/get-blue/#getblue","text":"fun getBlue(): Int","title":"getBlue"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/get-color/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / getColor getColor fun getColor(): Int","title":"Get color"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/get-color/#getcolor","text":"fun getColor(): Int","title":"getColor"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/get-green/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / getGreen getGreen fun getGreen(): Int","title":"Get green"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/get-green/#getgreen","text":"fun getGreen(): Int","title":"getGreen"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/get-red/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / getRed getRed fun getRed(): Int","title":"Get red"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/get-red/#getred","text":"fun getRed(): Int","title":"getRed"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/set-blue/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / setBlue setBlue fun setBlue(blue: Int ): Unit","title":"Set blue"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/set-blue/#setblue","text":"fun setBlue(blue: Int ): Unit","title":"setBlue"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/set-green/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / setGreen setGreen fun setGreen(green: Int ): Unit","title":"Set green"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/set-green/#setgreen","text":"fun setGreen(green: Int ): Unit","title":"setGreen"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/set-red/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / setRed setRed fun setRed(red: Int ): Unit","title":"Set red"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/set-red/#setred","text":"fun setRed(red: Int ): Unit","title":"setRed"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.routing / ServiceColor / writeToParcel writeToParcel fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-service-color/write-to-parcel/#writetoparcel","text":"fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape Shape open class Shape : Parcelable Constructors Name Summary <init> Shape() Properties Name Summary CREATOR static val CREATOR: Creator< Shape !>! Functions Name Summary describeContents open fun describeContents(): Int getEncodedWaypoints open fun getEncodedWaypoints(): String ! getId open fun getId(): Long getServiceColor open fun getServiceColor(): ServiceColor ! getStops open fun getStops(): MutableList < ServiceStop !>? isTravelled open fun isTravelled(): Boolean open fun isTravelled(isTravelled: Boolean ): Unit setEncodedWaypoints open fun setEncodedWaypoints(encodedWaypoints: String !): Unit setId open fun setId(id: Long ): Unit setServiceColor open fun setServiceColor(serviceColor: ServiceColor !): Unit setStops open fun setStops(stops: MutableList < ServiceStop !>?): Unit writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/#shape","text":"open class Shape : Parcelable","title":"Shape"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/#constructors","text":"Name Summary <init> Shape()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< Shape !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/#functions","text":"Name Summary describeContents open fun describeContents(): Int getEncodedWaypoints open fun getEncodedWaypoints(): String ! getId open fun getId(): Long getServiceColor open fun getServiceColor(): ServiceColor ! getStops open fun getStops(): MutableList < ServiceStop !>? isTravelled open fun isTravelled(): Boolean open fun isTravelled(isTravelled: Boolean ): Unit setEncodedWaypoints open fun setEncodedWaypoints(encodedWaypoints: String !): Unit setId open fun setId(id: Long ): Unit setServiceColor open fun setServiceColor(serviceColor: ServiceColor !): Unit setStops open fun setStops(stops: MutableList < ServiceStop !>?): Unit writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / CREATOR CREATOR static val CREATOR: Creator< Shape !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< Shape !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / <init> <init> Shape()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/-init-/#init","text":"Shape()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/get-encoded-waypoints/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / getEncodedWaypoints getEncodedWaypoints open fun getEncodedWaypoints(): String !","title":"Get encoded waypoints"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/get-encoded-waypoints/#getencodedwaypoints","text":"open fun getEncodedWaypoints(): String !","title":"getEncodedWaypoints"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/get-id/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / getId getId open fun getId(): Long","title":"Get id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/get-id/#getid","text":"open fun getId(): Long","title":"getId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/get-service-color/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / getServiceColor getServiceColor open fun getServiceColor(): ServiceColor !","title":"Get service color"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/get-service-color/#getservicecolor","text":"open fun getServiceColor(): ServiceColor !","title":"getServiceColor"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/get-stops/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / getStops getStops @Nullable open fun getStops(): MutableList < ServiceStop !>?","title":"Get stops"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/get-stops/#getstops","text":"@Nullable open fun getStops(): MutableList < ServiceStop !>?","title":"getStops"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/is-travelled/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / isTravelled isTravelled open fun isTravelled(): Boolean open fun isTravelled(isTravelled: Boolean ): Unit","title":"Is travelled"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/is-travelled/#istravelled","text":"open fun isTravelled(): Boolean open fun isTravelled(isTravelled: Boolean ): Unit","title":"isTravelled"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/set-encoded-waypoints/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / setEncodedWaypoints setEncodedWaypoints open fun setEncodedWaypoints(encodedWaypoints: String !): Unit","title":"Set encoded waypoints"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/set-encoded-waypoints/#setencodedwaypoints","text":"open fun setEncodedWaypoints(encodedWaypoints: String !): Unit","title":"setEncodedWaypoints"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/set-id/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / setId setId open fun setId(id: Long ): Unit","title":"Set id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/set-id/#setid","text":"open fun setId(id: Long ): Unit","title":"setId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/set-service-color/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / setServiceColor setServiceColor open fun setServiceColor(serviceColor: ServiceColor !): Unit","title":"Set service color"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/set-service-color/#setservicecolor","text":"open fun setServiceColor(serviceColor: ServiceColor !): Unit","title":"setServiceColor"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/set-stops/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / setStops setStops open fun setStops(@Nullable stops: MutableList < ServiceStop !>?): Unit","title":"Set stops"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/set-stops/#setstops","text":"open fun setStops(@Nullable stops: MutableList < ServiceStop !>?): Unit","title":"setStops"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.routing / Shape / writeToParcel writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-shape/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/","text":"tripkit-android / com.skedgo.tripkit.routing / Source Source @TypeAdapters @Immutable abstract class Source : Parcelable Constructors Name Summary <init> Source() Properties Name Summary CREATOR static val CREATOR: Creator< Source !>! Functions Name Summary describeContents open fun describeContents(): Int disclaimer abstract fun disclaimer(): String ? provider abstract fun provider(): Provider ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/#source","text":"@TypeAdapters @Immutable abstract class Source : Parcelable","title":"Source"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/#constructors","text":"Name Summary <init> Source()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< Source !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/#functions","text":"Name Summary describeContents open fun describeContents(): Int disclaimer abstract fun disclaimer(): String ? provider abstract fun provider(): Provider ? writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / Source / CREATOR CREATOR static val CREATOR: Creator< Source !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< Source !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / Source / <init> <init> Source()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/-init-/#init","text":"Source()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.routing / Source / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/disclaimer/","text":"tripkit-android / com.skedgo.tripkit.routing / Source / disclaimer disclaimer @Nullable abstract fun disclaimer(): String ?","title":"Disclaimer"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/disclaimer/#disclaimer","text":"@Nullable abstract fun disclaimer(): String ?","title":"disclaimer"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/provider/","text":"tripkit-android / com.skedgo.tripkit.routing / Source / provider provider @Nullable abstract fun provider(): Provider ?","title":"Provider"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/provider/#provider","text":"@Nullable abstract fun provider(): Provider ?","title":"provider"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.routing / Source / writeToParcel writeToParcel open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-source/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(dest: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/","text":"tripkit-android / com.skedgo.tripkit.routing / Templates Templates class Templates Properties Name Summary FORMAT_PLATFORM static val FORMAT_PLATFORM: String FORMAT_STOP static val FORMAT_STOP: String FORMAT_STOPS static val FORMAT_STOPS: String TEMPLATE_PLATFORM static val TEMPLATE_PLATFORM: String TEMPLATE_STOPS static val TEMPLATE_STOPS: String TEMPLATE_TRAFFIC static val TEMPLATE_TRAFFIC: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/#templates","text":"class Templates","title":"Templates"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/#properties","text":"Name Summary FORMAT_PLATFORM static val FORMAT_PLATFORM: String FORMAT_STOP static val FORMAT_STOP: String FORMAT_STOPS static val FORMAT_STOPS: String TEMPLATE_PLATFORM static val TEMPLATE_PLATFORM: String TEMPLATE_STOPS static val TEMPLATE_STOPS: String TEMPLATE_TRAFFIC static val TEMPLATE_TRAFFIC: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-f-o-r-m-a-t_-p-l-a-t-f-o-r-m/","text":"tripkit-android / com.skedgo.tripkit.routing / Templates / FORMAT_PLATFORM FORMAT_PLATFORM static val FORMAT_PLATFORM: String","title":" f o r m a t  p l a t f o r m"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-f-o-r-m-a-t_-p-l-a-t-f-o-r-m/#format_platform","text":"static val FORMAT_PLATFORM: String","title":"FORMAT_PLATFORM"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-f-o-r-m-a-t_-s-t-o-p-s/","text":"tripkit-android / com.skedgo.tripkit.routing / Templates / FORMAT_STOPS FORMAT_STOPS static val FORMAT_STOPS: String","title":" f o r m a t  s t o p s"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-f-o-r-m-a-t_-s-t-o-p-s/#format_stops","text":"static val FORMAT_STOPS: String","title":"FORMAT_STOPS"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-f-o-r-m-a-t_-s-t-o-p/","text":"tripkit-android / com.skedgo.tripkit.routing / Templates / FORMAT_STOP FORMAT_STOP static val FORMAT_STOP: String","title":" f o r m a t  s t o p"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-f-o-r-m-a-t_-s-t-o-p/#format_stop","text":"static val FORMAT_STOP: String","title":"FORMAT_STOP"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-t-e-m-p-l-a-t-e_-p-l-a-t-f-o-r-m/","text":"tripkit-android / com.skedgo.tripkit.routing / Templates / TEMPLATE_PLATFORM TEMPLATE_PLATFORM static val TEMPLATE_PLATFORM: String","title":" t e m p l a t e  p l a t f o r m"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-t-e-m-p-l-a-t-e_-p-l-a-t-f-o-r-m/#template_platform","text":"static val TEMPLATE_PLATFORM: String","title":"TEMPLATE_PLATFORM"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-t-e-m-p-l-a-t-e_-s-t-o-p-s/","text":"tripkit-android / com.skedgo.tripkit.routing / Templates / TEMPLATE_STOPS TEMPLATE_STOPS static val TEMPLATE_STOPS: String","title":" t e m p l a t e  s t o p s"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-t-e-m-p-l-a-t-e_-s-t-o-p-s/#template_stops","text":"static val TEMPLATE_STOPS: String","title":"TEMPLATE_STOPS"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-t-e-m-p-l-a-t-e_-t-r-a-f-f-i-c/","text":"tripkit-android / com.skedgo.tripkit.routing / Templates / TEMPLATE_TRAFFIC TEMPLATE_TRAFFIC static val TEMPLATE_TRAFFIC: String","title":" t e m p l a t e  t r a f f i c"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-templates/-t-e-m-p-l-a-t-e_-t-r-a-f-f-i-c/#template_traffic","text":"static val TEMPLATE_TRAFFIC: String","title":"TEMPLATE_TRAFFIC"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip Trip open class Trip : ITimeRange A [`Trip`](./index.md) will mainly hold a list of TripSegment s which denotes how to go from [`Trip#getFrom()`](get-from.md) to Trip#getTo() . Main use-cases: - Trip's segments: [`Trip#getSegments()`](get-segments.md). - Trip's start time: TripExtensionsKt#getStartDateTime(Trip) . - Trip's end time: [`TripExtensionsKt#getEndDateTime(Trip)`](../end-date-time.md)}. - Trip's costs: #getCaloriesCost() , [`#getMoneyCost()`](get-money-cost.md), #getCarbonCost() . Constructors Name Summary <init> Trip() Properties Name Summary rawSegmentList This will be transformed into a list of `[ TripSegment ](../-trip-segment/index.md). var rawSegmentList: [ ArrayList ](https://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html) !` UNKNOWN_COST static val UNKNOWN_COST: Float Functions Name Summary durationInSeconds open fun durationInSeconds(): Long getAvailability Indicates availability of the trip, e.g., if it's too late to book a trip for the requested departure time, or if a scheduled service has been cancelled. open fun getAvailability(): Availability ? getCaloriesCost open fun getCaloriesCost(): Float getCarbonCost open fun getCarbonCost(): Float getCurrencySymbol open fun getCurrencySymbol(): String ! getDisplayCalories open fun getDisplayCalories(): String ! getDisplayCarbonCost open fun getDisplayCarbonCost(): String ? getDisplayCost open fun getDisplayCost(localizedFreeText: String !): String ? getEndTimeInSecs Use `[ TripExtensionsKt#getEndDateTime(Trip) ](../end-date-time.md) instead. open fun getEndTimeInSecs(): [ Long`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-long/index.html ) getFrom open fun getFrom(): Location ! getGroup open fun getGroup(): TripGroup ! getHassleCost open fun getHassleCost(): Float getId open fun getId(): Long getMoneyCost open fun getMoneyCost(): Float getPlannedURL open fun getPlannedURL(): String ? getProgressURL open fun getProgressURL(): String ! getSaveURL open fun getSaveURL(): String ! getSegments open fun getSegments(): ArrayList < TripSegment !>! getStartTimeInSecs Use `[ TripExtensionsKt#getStartDateTime(Trip) ](../start-date-time.md) instead. open fun getStartTimeInSecs(): [ Long`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-long/index.html ) getTemporaryURL open fun getTemporaryURL(): String ? getTimeCost open fun getTimeCost(): Float getTo open fun getTo(): Location ! getUpdateURL open fun getUpdateURL(): String ? getWeightedScore open fun getWeightedScore(): Float hasAnyExpensiveTransport Check if this trip has shuffle, taxi or shared vehicle. open fun hasAnyExpensiveTransport(): Boolean hasAnyPublicTransport open fun hasAnyPublicTransport(): Boolean hasQuickBooking open fun hasQuickBooking(): Boolean hasTransportMode open fun hasTransportMode(vararg modes: VehicleMode !): Boolean isDepartureTimeFixed Adrian: \"duration (arrive)\" should be used for transport where the departure time isn't fixed, such as driving trips not involving public transport, or public transport trips that use only frequency-based trips. open fun isDepartureTimeFixed(): Boolean isFavourite open fun isFavourite(): Boolean open fun isFavourite(isFavourite: Boolean ): Unit isMixedModal open fun isMixedModal(ignoreWalking: Boolean ): Boolean queryIsLeaveAfter open fun queryIsLeaveAfter(): Boolean setCaloriesCost open fun setCaloriesCost(caloriesCost: Float ): Unit setCarbonCost open fun setCarbonCost(carbonCost: Float ): Unit setEndTimeInSecs NOTE: You should only use this setter for testing purpose. open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit setGroup open fun setGroup(group: TripGroup !): Unit setHassleCost open fun setHassleCost(hassleCost: Float ): Unit setId open fun setId(id: Long ): Unit setMoneyCost open fun setMoneyCost(moneyCost: Float ): Unit setSaveURL open fun setSaveURL(saveURL: String !): Unit setSegments open fun setSegments(segments: ArrayList < TripSegment !>!): Unit setStartTimeInSecs NOTE: You should only use this setter for testing purpose. open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit setTemporaryURL open fun setTemporaryURL(temporaryURL: String !): Unit setUpdateURL open fun setUpdateURL(updateURL: String !): Unit setWeightedScore open fun setWeightedScore(weightedScore: Float ): Unit uuid open fun uuid(uuid: String !): Unit open fun uuid(): String ! Extension Properties Name Summary endDateTime Get an end date-time with time-zone. val Trip .endDateTime: DateTime startDateTime Gets a start date-time with time-zone. val Trip .startDateTime: DateTime Extension Functions Name Summary constructPlainText fun Trip .constructPlainText(context: Context): String getModeIds fun Trip .getModeIds(): List < String > getSummarySegments Gets a list of TripSegment s visible on the summary area of a Trip . fun Trip .getSummarySegments(): List < TripSegment > getTripSegment fun Trip .getTripSegment(segmentId: Long ): TripSegment ? hasWalkOnly fun Trip .hasWalkOnly(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/#trip","text":"open class Trip : ITimeRange A [`Trip`](./index.md) will mainly hold a list of TripSegment s which denotes how to go from [`Trip#getFrom()`](get-from.md) to Trip#getTo() . Main use-cases: - Trip's segments: [`Trip#getSegments()`](get-segments.md). - Trip's start time: TripExtensionsKt#getStartDateTime(Trip) . - Trip's end time: [`TripExtensionsKt#getEndDateTime(Trip)`](../end-date-time.md)}. - Trip's costs: #getCaloriesCost() , [`#getMoneyCost()`](get-money-cost.md), #getCarbonCost() .","title":"Trip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/#constructors","text":"Name Summary <init> Trip()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/#properties","text":"Name Summary rawSegmentList This will be transformed into a list of `[ TripSegment ](../-trip-segment/index.md). var rawSegmentList: [ ArrayList ](https://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html) !` UNKNOWN_COST static val UNKNOWN_COST: Float","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/#functions","text":"Name Summary durationInSeconds open fun durationInSeconds(): Long getAvailability Indicates availability of the trip, e.g., if it's too late to book a trip for the requested departure time, or if a scheduled service has been cancelled. open fun getAvailability(): Availability ? getCaloriesCost open fun getCaloriesCost(): Float getCarbonCost open fun getCarbonCost(): Float getCurrencySymbol open fun getCurrencySymbol(): String ! getDisplayCalories open fun getDisplayCalories(): String ! getDisplayCarbonCost open fun getDisplayCarbonCost(): String ? getDisplayCost open fun getDisplayCost(localizedFreeText: String !): String ? getEndTimeInSecs Use `[ TripExtensionsKt#getEndDateTime(Trip) ](../end-date-time.md) instead. open fun getEndTimeInSecs(): [ Long`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-long/index.html ) getFrom open fun getFrom(): Location ! getGroup open fun getGroup(): TripGroup ! getHassleCost open fun getHassleCost(): Float getId open fun getId(): Long getMoneyCost open fun getMoneyCost(): Float getPlannedURL open fun getPlannedURL(): String ? getProgressURL open fun getProgressURL(): String ! getSaveURL open fun getSaveURL(): String ! getSegments open fun getSegments(): ArrayList < TripSegment !>! getStartTimeInSecs Use `[ TripExtensionsKt#getStartDateTime(Trip) ](../start-date-time.md) instead. open fun getStartTimeInSecs(): [ Long`]( https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-long/index.html ) getTemporaryURL open fun getTemporaryURL(): String ? getTimeCost open fun getTimeCost(): Float getTo open fun getTo(): Location ! getUpdateURL open fun getUpdateURL(): String ? getWeightedScore open fun getWeightedScore(): Float hasAnyExpensiveTransport Check if this trip has shuffle, taxi or shared vehicle. open fun hasAnyExpensiveTransport(): Boolean hasAnyPublicTransport open fun hasAnyPublicTransport(): Boolean hasQuickBooking open fun hasQuickBooking(): Boolean hasTransportMode open fun hasTransportMode(vararg modes: VehicleMode !): Boolean isDepartureTimeFixed Adrian: \"duration (arrive)\" should be used for transport where the departure time isn't fixed, such as driving trips not involving public transport, or public transport trips that use only frequency-based trips. open fun isDepartureTimeFixed(): Boolean isFavourite open fun isFavourite(): Boolean open fun isFavourite(isFavourite: Boolean ): Unit isMixedModal open fun isMixedModal(ignoreWalking: Boolean ): Boolean queryIsLeaveAfter open fun queryIsLeaveAfter(): Boolean setCaloriesCost open fun setCaloriesCost(caloriesCost: Float ): Unit setCarbonCost open fun setCarbonCost(carbonCost: Float ): Unit setEndTimeInSecs NOTE: You should only use this setter for testing purpose. open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit setGroup open fun setGroup(group: TripGroup !): Unit setHassleCost open fun setHassleCost(hassleCost: Float ): Unit setId open fun setId(id: Long ): Unit setMoneyCost open fun setMoneyCost(moneyCost: Float ): Unit setSaveURL open fun setSaveURL(saveURL: String !): Unit setSegments open fun setSegments(segments: ArrayList < TripSegment !>!): Unit setStartTimeInSecs NOTE: You should only use this setter for testing purpose. open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit setTemporaryURL open fun setTemporaryURL(temporaryURL: String !): Unit setUpdateURL open fun setUpdateURL(updateURL: String !): Unit setWeightedScore open fun setWeightedScore(weightedScore: Float ): Unit uuid open fun uuid(uuid: String !): Unit open fun uuid(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/#extension-properties","text":"Name Summary endDateTime Get an end date-time with time-zone. val Trip .endDateTime: DateTime startDateTime Gets a start date-time with time-zone. val Trip .startDateTime: DateTime","title":"Extension Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/#extension-functions","text":"Name Summary constructPlainText fun Trip .constructPlainText(context: Context): String getModeIds fun Trip .getModeIds(): List < String > getSummarySegments Gets a list of TripSegment s visible on the summary area of a Trip . fun Trip .getSummarySegments(): List < TripSegment > getTripSegment fun Trip .getTripSegment(segmentId: Long ): TripSegment ? hasWalkOnly fun Trip .hasWalkOnly(): Boolean","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / <init> <init> Trip()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/-init-/#init","text":"Trip()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/-u-n-k-n-o-w-n_-c-o-s-t/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / UNKNOWN_COST UNKNOWN_COST static val UNKNOWN_COST: Float","title":" u n k n o w n  c o s t"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/-u-n-k-n-o-w-n_-c-o-s-t/#unknown_cost","text":"static val UNKNOWN_COST: Float","title":"UNKNOWN_COST"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/duration-in-seconds/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / durationInSeconds durationInSeconds open fun durationInSeconds(): Long","title":"Duration in seconds"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/duration-in-seconds/#durationinseconds","text":"open fun durationInSeconds(): Long","title":"durationInSeconds"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-availability/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getAvailability getAvailability @Nullable open fun getAvailability(): Availability ? Indicates availability of the trip, e.g., if it's too late to book a trip for the requested departure time, or if a scheduled service has been cancelled.","title":"Get availability"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-availability/#getavailability","text":"@Nullable open fun getAvailability(): Availability ? Indicates availability of the trip, e.g., if it's too late to book a trip for the requested departure time, or if a scheduled service has been cancelled.","title":"getAvailability"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-calories-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getCaloriesCost getCaloriesCost open fun getCaloriesCost(): Float","title":"Get calories cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-calories-cost/#getcaloriescost","text":"open fun getCaloriesCost(): Float","title":"getCaloriesCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-carbon-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getCarbonCost getCarbonCost open fun getCarbonCost(): Float","title":"Get carbon cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-carbon-cost/#getcarboncost","text":"open fun getCarbonCost(): Float","title":"getCarbonCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-currency-symbol/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getCurrencySymbol getCurrencySymbol open fun getCurrencySymbol(): String !","title":"Get currency symbol"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-currency-symbol/#getcurrencysymbol","text":"open fun getCurrencySymbol(): String !","title":"getCurrencySymbol"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-display-calories/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getDisplayCalories getDisplayCalories open fun getDisplayCalories(): String !","title":"Get display calories"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-display-calories/#getdisplaycalories","text":"open fun getDisplayCalories(): String !","title":"getDisplayCalories"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-display-carbon-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getDisplayCarbonCost getDisplayCarbonCost @Nullable open fun getDisplayCarbonCost(): String ?","title":"Get display carbon cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-display-carbon-cost/#getdisplaycarboncost","text":"@Nullable open fun getDisplayCarbonCost(): String ?","title":"getDisplayCarbonCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-display-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getDisplayCost getDisplayCost @Nullable open fun getDisplayCost(localizedFreeText: String !): String ?","title":"Get display cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-display-cost/#getdisplaycost","text":"@Nullable open fun getDisplayCost(localizedFreeText: String !): String ?","title":"getDisplayCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-end-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getEndTimeInSecs getEndTimeInSecs open fun getEndTimeInSecs(): Long Use `[ TripExtensionsKt#getEndDateTime(Trip)`](../end-date-time.md) instead.","title":"Get end time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-end-time-in-secs/#getendtimeinsecs","text":"open fun getEndTimeInSecs(): Long Use `[ TripExtensionsKt#getEndDateTime(Trip)`](../end-date-time.md) instead.","title":"getEndTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-from/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getFrom getFrom open fun getFrom(): Location !","title":"Get from"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-from/#getfrom","text":"open fun getFrom(): Location !","title":"getFrom"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-group/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getGroup getGroup open fun getGroup(): TripGroup !","title":"Get group"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-group/#getgroup","text":"open fun getGroup(): TripGroup !","title":"getGroup"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-hassle-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getHassleCost getHassleCost open fun getHassleCost(): Float","title":"Get hassle cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-hassle-cost/#gethasslecost","text":"open fun getHassleCost(): Float","title":"getHassleCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-id/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getId getId open fun getId(): Long","title":"Get id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-id/#getid","text":"open fun getId(): Long","title":"getId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-money-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getMoneyCost getMoneyCost open fun getMoneyCost(): Float","title":"Get money cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-money-cost/#getmoneycost","text":"open fun getMoneyCost(): Float","title":"getMoneyCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-planned-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getPlannedURL getPlannedURL @Nullable open fun getPlannedURL(): String ?","title":"Get planned u r l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-planned-u-r-l/#getplannedurl","text":"@Nullable open fun getPlannedURL(): String ?","title":"getPlannedURL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-progress-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getProgressURL getProgressURL open fun getProgressURL(): String !","title":"Get progress u r l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-progress-u-r-l/#getprogressurl","text":"open fun getProgressURL(): String !","title":"getProgressURL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-save-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getSaveURL getSaveURL open fun getSaveURL(): String !","title":"Get save u r l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-save-u-r-l/#getsaveurl","text":"open fun getSaveURL(): String !","title":"getSaveURL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-segments/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getSegments getSegments open fun getSegments(): ArrayList < TripSegment !>!","title":"Get segments"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-segments/#getsegments","text":"open fun getSegments(): ArrayList < TripSegment !>!","title":"getSegments"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-start-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getStartTimeInSecs getStartTimeInSecs open fun getStartTimeInSecs(): Long Use `[ TripExtensionsKt#getStartDateTime(Trip)`](../start-date-time.md) instead.","title":"Get start time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-start-time-in-secs/#getstarttimeinsecs","text":"open fun getStartTimeInSecs(): Long Use `[ TripExtensionsKt#getStartDateTime(Trip)`](../start-date-time.md) instead.","title":"getStartTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-temporary-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getTemporaryURL getTemporaryURL @Nullable open fun getTemporaryURL(): String ?","title":"Get temporary u r l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-temporary-u-r-l/#gettemporaryurl","text":"@Nullable open fun getTemporaryURL(): String ?","title":"getTemporaryURL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-time-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getTimeCost getTimeCost open fun getTimeCost(): Float","title":"Get time cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-time-cost/#gettimecost","text":"open fun getTimeCost(): Float","title":"getTimeCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-to/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getTo getTo open fun getTo(): Location !","title":"Get to"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-to/#getto","text":"open fun getTo(): Location !","title":"getTo"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-update-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getUpdateURL getUpdateURL @Nullable open fun getUpdateURL(): String ?","title":"Get update u r l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-update-u-r-l/#getupdateurl","text":"@Nullable open fun getUpdateURL(): String ?","title":"getUpdateURL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-weighted-score/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / getWeightedScore getWeightedScore open fun getWeightedScore(): Float","title":"Get weighted score"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/get-weighted-score/#getweightedscore","text":"open fun getWeightedScore(): Float","title":"getWeightedScore"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/has-any-expensive-transport/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / hasAnyExpensiveTransport hasAnyExpensiveTransport open fun hasAnyExpensiveTransport(): Boolean Check if this trip has shuffle, taxi or shared vehicle.","title":"Has any expensive transport"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/has-any-expensive-transport/#hasanyexpensivetransport","text":"open fun hasAnyExpensiveTransport(): Boolean Check if this trip has shuffle, taxi or shared vehicle.","title":"hasAnyExpensiveTransport"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/has-any-public-transport/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / hasAnyPublicTransport hasAnyPublicTransport open fun hasAnyPublicTransport(): Boolean","title":"Has any public transport"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/has-any-public-transport/#hasanypublictransport","text":"open fun hasAnyPublicTransport(): Boolean","title":"hasAnyPublicTransport"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/has-quick-booking/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / hasQuickBooking hasQuickBooking open fun hasQuickBooking(): Boolean","title":"Has quick booking"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/has-quick-booking/#hasquickbooking","text":"open fun hasQuickBooking(): Boolean","title":"hasQuickBooking"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/has-transport-mode/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / hasTransportMode hasTransportMode open fun hasTransportMode(vararg modes: VehicleMode !): Boolean","title":"Has transport mode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/has-transport-mode/#hastransportmode","text":"open fun hasTransportMode(vararg modes: VehicleMode !): Boolean","title":"hasTransportMode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/is-departure-time-fixed/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / isDepartureTimeFixed isDepartureTimeFixed open fun isDepartureTimeFixed(): Boolean Adrian: \"duration (arrive)\" should be used for transport where the departure time isn't fixed, such as driving trips not involving public transport, or public transport trips that use only frequency-based trips.","title":"Is departure time fixed"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/is-departure-time-fixed/#isdeparturetimefixed","text":"open fun isDepartureTimeFixed(): Boolean Adrian: \"duration (arrive)\" should be used for transport where the departure time isn't fixed, such as driving trips not involving public transport, or public transport trips that use only frequency-based trips.","title":"isDepartureTimeFixed"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/is-favourite/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / isFavourite isFavourite open fun isFavourite(): Boolean open fun isFavourite(isFavourite: Boolean ): Unit","title":"Is favourite"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/is-favourite/#isfavourite","text":"open fun isFavourite(): Boolean open fun isFavourite(isFavourite: Boolean ): Unit","title":"isFavourite"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/is-mixed-modal/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / isMixedModal isMixedModal open fun isMixedModal(ignoreWalking: Boolean ): Boolean","title":"Is mixed modal"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/is-mixed-modal/#ismixedmodal","text":"open fun isMixedModal(ignoreWalking: Boolean ): Boolean","title":"isMixedModal"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/query-is-leave-after/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / queryIsLeaveAfter queryIsLeaveAfter open fun queryIsLeaveAfter(): Boolean","title":"Query is leave after"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/query-is-leave-after/#queryisleaveafter","text":"open fun queryIsLeaveAfter(): Boolean","title":"queryIsLeaveAfter"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/raw-segment-list/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / rawSegmentList rawSegmentList @SerializedName(\"segments\") var rawSegmentList: ArrayList <JsonObject!>! This will be transformed into a list of `[ TripSegment`](../-trip-segment/index.md).","title":"Raw segment list"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/raw-segment-list/#rawsegmentlist","text":"@SerializedName(\"segments\") var rawSegmentList: ArrayList <JsonObject!>! This will be transformed into a list of `[ TripSegment`](../-trip-segment/index.md).","title":"rawSegmentList"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-calories-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setCaloriesCost setCaloriesCost open fun setCaloriesCost(caloriesCost: Float ): Unit","title":"Set calories cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-calories-cost/#setcaloriescost","text":"open fun setCaloriesCost(caloriesCost: Float ): Unit","title":"setCaloriesCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-carbon-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setCarbonCost setCarbonCost open fun setCarbonCost(carbonCost: Float ): Unit","title":"Set carbon cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-carbon-cost/#setcarboncost","text":"open fun setCarbonCost(carbonCost: Float ): Unit","title":"setCarbonCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-end-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setEndTimeInSecs setEndTimeInSecs open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit NOTE: You should only use this setter for testing purpose.","title":"Set end time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-end-time-in-secs/#setendtimeinsecs","text":"open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit NOTE: You should only use this setter for testing purpose.","title":"setEndTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-group/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setGroup setGroup open fun setGroup(group: TripGroup !): Unit","title":"Set group"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-group/#setgroup","text":"open fun setGroup(group: TripGroup !): Unit","title":"setGroup"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-hassle-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setHassleCost setHassleCost open fun setHassleCost(hassleCost: Float ): Unit","title":"Set hassle cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-hassle-cost/#sethasslecost","text":"open fun setHassleCost(hassleCost: Float ): Unit","title":"setHassleCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-id/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setId setId open fun setId(id: Long ): Unit","title":"Set id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-id/#setid","text":"open fun setId(id: Long ): Unit","title":"setId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-money-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setMoneyCost setMoneyCost open fun setMoneyCost(moneyCost: Float ): Unit","title":"Set money cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-money-cost/#setmoneycost","text":"open fun setMoneyCost(moneyCost: Float ): Unit","title":"setMoneyCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-save-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setSaveURL setSaveURL open fun setSaveURL(saveURL: String !): Unit","title":"Set save u r l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-save-u-r-l/#setsaveurl","text":"open fun setSaveURL(saveURL: String !): Unit","title":"setSaveURL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-segments/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setSegments setSegments open fun setSegments(segments: ArrayList < TripSegment !>!): Unit","title":"Set segments"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-segments/#setsegments","text":"open fun setSegments(segments: ArrayList < TripSegment !>!): Unit","title":"setSegments"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-start-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setStartTimeInSecs setStartTimeInSecs open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit NOTE: You should only use this setter for testing purpose.","title":"Set start time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-start-time-in-secs/#setstarttimeinsecs","text":"open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit NOTE: You should only use this setter for testing purpose.","title":"setStartTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-temporary-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setTemporaryURL setTemporaryURL open fun setTemporaryURL(temporaryURL: String !): Unit","title":"Set temporary u r l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-temporary-u-r-l/#settemporaryurl","text":"open fun setTemporaryURL(temporaryURL: String !): Unit","title":"setTemporaryURL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-update-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setUpdateURL setUpdateURL open fun setUpdateURL(updateURL: String !): Unit","title":"Set update u r l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-update-u-r-l/#setupdateurl","text":"open fun setUpdateURL(updateURL: String !): Unit","title":"setUpdateURL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-weighted-score/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / setWeightedScore setWeightedScore open fun setWeightedScore(weightedScore: Float ): Unit","title":"Set weighted score"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/set-weighted-score/#setweightedscore","text":"open fun setWeightedScore(weightedScore: Float ): Unit","title":"setWeightedScore"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/uuid/","text":"tripkit-android / com.skedgo.tripkit.routing / Trip / uuid uuid open fun uuid(uuid: String !): Unit open fun uuid(): String !","title":"Uuid"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip/uuid/#uuid","text":"open fun uuid(uuid: String !): Unit open fun uuid(): String !","title":"uuid"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/","text":"tripkit-android / com.skedgo.tripkit.routing / TripComparators TripComparators class TripComparators Properties Name Summary CARBON_COST_COMPARATOR static val CARBON_COST_COMPARATOR: Comparator < Trip !>! DURATION_COMPARATOR static val DURATION_COMPARATOR: Comparator < Trip !>! END_TIME_COMPARATOR static val END_TIME_COMPARATOR: Comparator < Trip !>! MONEY_COST_COMPARATOR static val MONEY_COST_COMPARATOR: Comparator < Trip !>! START_TIME_COMPARATOR static val START_TIME_COMPARATOR: Comparator < Trip !>! TIME_COMPARATOR_CHAIN static val TIME_COMPARATOR_CHAIN: Comparator < Trip !>! WEIGHTED_SCORE_COMPARATOR static val WEIGHTED_SCORE_COMPARATOR: Comparator < Trip !>! Functions Name Summary compareLongs static fun compareLongs(lhs: Long , rhs: Long ): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/#tripcomparators","text":"class TripComparators","title":"TripComparators"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/#properties","text":"Name Summary CARBON_COST_COMPARATOR static val CARBON_COST_COMPARATOR: Comparator < Trip !>! DURATION_COMPARATOR static val DURATION_COMPARATOR: Comparator < Trip !>! END_TIME_COMPARATOR static val END_TIME_COMPARATOR: Comparator < Trip !>! MONEY_COST_COMPARATOR static val MONEY_COST_COMPARATOR: Comparator < Trip !>! START_TIME_COMPARATOR static val START_TIME_COMPARATOR: Comparator < Trip !>! TIME_COMPARATOR_CHAIN static val TIME_COMPARATOR_CHAIN: Comparator < Trip !>! WEIGHTED_SCORE_COMPARATOR static val WEIGHTED_SCORE_COMPARATOR: Comparator < Trip !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/#functions","text":"Name Summary compareLongs static fun compareLongs(lhs: Long , rhs: Long ): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-c-a-r-b-o-n_-c-o-s-t_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripComparators / CARBON_COST_COMPARATOR CARBON_COST_COMPARATOR static val CARBON_COST_COMPARATOR: Comparator < Trip !>!","title":" c a r b o n  c o s t  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-c-a-r-b-o-n_-c-o-s-t_-c-o-m-p-a-r-a-t-o-r/#carbon_cost_comparator","text":"static val CARBON_COST_COMPARATOR: Comparator < Trip !>!","title":"CARBON_COST_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-d-u-r-a-t-i-o-n_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripComparators / DURATION_COMPARATOR DURATION_COMPARATOR static val DURATION_COMPARATOR: Comparator < Trip !>!","title":" d u r a t i o n  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-d-u-r-a-t-i-o-n_-c-o-m-p-a-r-a-t-o-r/#duration_comparator","text":"static val DURATION_COMPARATOR: Comparator < Trip !>!","title":"DURATION_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-e-n-d_-t-i-m-e_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripComparators / END_TIME_COMPARATOR END_TIME_COMPARATOR static val END_TIME_COMPARATOR: Comparator < Trip !>!","title":" e n d  t i m e  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-e-n-d_-t-i-m-e_-c-o-m-p-a-r-a-t-o-r/#end_time_comparator","text":"static val END_TIME_COMPARATOR: Comparator < Trip !>!","title":"END_TIME_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-m-o-n-e-y_-c-o-s-t_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripComparators / MONEY_COST_COMPARATOR MONEY_COST_COMPARATOR static val MONEY_COST_COMPARATOR: Comparator < Trip !>!","title":" m o n e y  c o s t  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-m-o-n-e-y_-c-o-s-t_-c-o-m-p-a-r-a-t-o-r/#money_cost_comparator","text":"static val MONEY_COST_COMPARATOR: Comparator < Trip !>!","title":"MONEY_COST_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-s-t-a-r-t_-t-i-m-e_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripComparators / START_TIME_COMPARATOR START_TIME_COMPARATOR static val START_TIME_COMPARATOR: Comparator < Trip !>!","title":" s t a r t  t i m e  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-s-t-a-r-t_-t-i-m-e_-c-o-m-p-a-r-a-t-o-r/#start_time_comparator","text":"static val START_TIME_COMPARATOR: Comparator < Trip !>!","title":"START_TIME_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-t-i-m-e_-c-o-m-p-a-r-a-t-o-r_-c-h-a-i-n/","text":"tripkit-android / com.skedgo.tripkit.routing / TripComparators / TIME_COMPARATOR_CHAIN TIME_COMPARATOR_CHAIN static val TIME_COMPARATOR_CHAIN: Comparator < Trip !>!","title":" t i m e  c o m p a r a t o r  c h a i n"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-t-i-m-e_-c-o-m-p-a-r-a-t-o-r_-c-h-a-i-n/#time_comparator_chain","text":"static val TIME_COMPARATOR_CHAIN: Comparator < Trip !>!","title":"TIME_COMPARATOR_CHAIN"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-w-e-i-g-h-t-e-d_-s-c-o-r-e_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripComparators / WEIGHTED_SCORE_COMPARATOR WEIGHTED_SCORE_COMPARATOR static val WEIGHTED_SCORE_COMPARATOR: Comparator < Trip !>!","title":" w e i g h t e d  s c o r e  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/-w-e-i-g-h-t-e-d_-s-c-o-r-e_-c-o-m-p-a-r-a-t-o-r/#weighted_score_comparator","text":"static val WEIGHTED_SCORE_COMPARATOR: Comparator < Trip !>!","title":"WEIGHTED_SCORE_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/compare-longs/","text":"tripkit-android / com.skedgo.tripkit.routing / TripComparators / compareLongs compareLongs static fun compareLongs(lhs: Long , rhs: Long ): Int","title":"Compare longs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-comparators/compare-longs/#comparelongs","text":"static fun compareLongs(lhs: Long , rhs: Long ): Int","title":"compareLongs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup TripGroup open class TripGroup Represents a list of [`Trip`](../-trip/index.md)s. A list of Trip s comprises of a display trip (aka representative trip) and alternative trips. A display trip can be accessed via [`#getDisplayTrip()`](get-display-trip.md) while alternative trips can be retrieved via #getTrips() minus [`#getDisplayTrip()`](get-display-trip.md). That's because #getTrips() returns a list of `[ Trip`](../-trip/index.md)s including alternative trips and display trip. Besides, a [`TripGroup`](./index.md) also hold info related to Source via `[ #getSources()`](get-sources.md). Constructors Name Summary <init> Represents a list of [`Trip`](../-trip/index.md)s. A list of Trip s comprises of a display trip (aka representative trip) and alternative trips. A display trip can be accessed via [`#getDisplayTrip()`](get-display-trip.md) while alternative trips can be retrieved via #getTrips() minus [`#getDisplayTrip()`](get-display-trip.md). That's because #getTrips() returns a list of `[ Trip ](../-trip/index.md)s including alternative trips and display trip. TripGroup()` Functions Name Summary addAsDisplayTrip A sample use case: Add a trip computed by waypoint API into trip list. open fun addAsDisplayTrip(trip: Trip ): Unit addTrip open fun addTrip(trip: Trip !): Unit changeDisplayTrip open fun changeDisplayTrip(trip: Trip ): TripGroup ! getDisplayTrip open fun getDisplayTrip(): Trip ? getDisplayTripId open fun getDisplayTripId(): Long getFrequency open fun getFrequency(): Int getSources open fun getSources(): MutableList < Source !>? getTrips open fun getTrips(): ArrayList < Trip !>? getVisibility open fun getVisibility(): GroupVisibility ! setDisplayTripId open fun setDisplayTripId(displayTripId: Long ): Unit setFrequency open fun setFrequency(frequency: Int ): Unit setSources open fun setSources(sources: MutableList < Source !>?): Unit setTrips open fun setTrips(trips: ArrayList < Trip !>!): Unit setVisibility open fun setVisibility(visibility: GroupVisibility ): Unit uuid open fun uuid(uuid: String !): Unit open fun uuid(): String ! Extension Functions Name Summary containsAnyMode fun TripGroup .containsAnyMode(modeIds: List < String >): Boolean containsMode fun TripGroup .containsMode(modeId: String ): Boolean getTrip fun TripGroup .getTrip(tripId: Long ): Trip ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/#tripgroup","text":"open class TripGroup Represents a list of [`Trip`](../-trip/index.md)s. A list of Trip s comprises of a display trip (aka representative trip) and alternative trips. A display trip can be accessed via [`#getDisplayTrip()`](get-display-trip.md) while alternative trips can be retrieved via #getTrips() minus [`#getDisplayTrip()`](get-display-trip.md). That's because #getTrips() returns a list of `[ Trip`](../-trip/index.md)s including alternative trips and display trip. Besides, a [`TripGroup`](./index.md) also hold info related to Source via `[ #getSources()`](get-sources.md).","title":"TripGroup"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/#constructors","text":"Name Summary <init> Represents a list of [`Trip`](../-trip/index.md)s. A list of Trip s comprises of a display trip (aka representative trip) and alternative trips. A display trip can be accessed via [`#getDisplayTrip()`](get-display-trip.md) while alternative trips can be retrieved via #getTrips() minus [`#getDisplayTrip()`](get-display-trip.md). That's because #getTrips() returns a list of `[ Trip ](../-trip/index.md)s including alternative trips and display trip. TripGroup()`","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/#functions","text":"Name Summary addAsDisplayTrip A sample use case: Add a trip computed by waypoint API into trip list. open fun addAsDisplayTrip(trip: Trip ): Unit addTrip open fun addTrip(trip: Trip !): Unit changeDisplayTrip open fun changeDisplayTrip(trip: Trip ): TripGroup ! getDisplayTrip open fun getDisplayTrip(): Trip ? getDisplayTripId open fun getDisplayTripId(): Long getFrequency open fun getFrequency(): Int getSources open fun getSources(): MutableList < Source !>? getTrips open fun getTrips(): ArrayList < Trip !>? getVisibility open fun getVisibility(): GroupVisibility ! setDisplayTripId open fun setDisplayTripId(displayTripId: Long ): Unit setFrequency open fun setFrequency(frequency: Int ): Unit setSources open fun setSources(sources: MutableList < Source !>?): Unit setTrips open fun setTrips(trips: ArrayList < Trip !>!): Unit setVisibility open fun setVisibility(visibility: GroupVisibility ): Unit uuid open fun uuid(uuid: String !): Unit open fun uuid(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/#extension-functions","text":"Name Summary containsAnyMode fun TripGroup .containsAnyMode(modeIds: List < String >): Boolean containsMode fun TripGroup .containsMode(modeId: String ): Boolean getTrip fun TripGroup .getTrip(tripId: Long ): Trip ?","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / <init> <init> TripGroup() Represents a list of [`Trip`](../-trip/index.md)s. A list of Trip s comprises of a display trip (aka representative trip) and alternative trips. A display trip can be accessed via [`#getDisplayTrip()`](get-display-trip.md) while alternative trips can be retrieved via #getTrips() minus [`#getDisplayTrip()`](get-display-trip.md). That's because #getTrips() returns a list of `[ Trip`](../-trip/index.md)s including alternative trips and display trip. Besides, a [`TripGroup`](index.md) also hold info related to Source via `[ #getSources()`](get-sources.md).","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/-init-/#init","text":"TripGroup() Represents a list of [`Trip`](../-trip/index.md)s. A list of Trip s comprises of a display trip (aka representative trip) and alternative trips. A display trip can be accessed via [`#getDisplayTrip()`](get-display-trip.md) while alternative trips can be retrieved via #getTrips() minus [`#getDisplayTrip()`](get-display-trip.md). That's because #getTrips() returns a list of `[ Trip`](../-trip/index.md)s including alternative trips and display trip. Besides, a [`TripGroup`](index.md) also hold info related to Source via `[ #getSources()`](get-sources.md).","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/add-as-display-trip/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / addAsDisplayTrip addAsDisplayTrip open fun addAsDisplayTrip(@NonNull trip: Trip ): Unit A sample use case: Add a trip computed by waypoint API into trip list. Parameters trip - Trip : This trip must not belong to group's trips. Otherwise, `[ IllegalStateException`]( https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html ) will be thrown. Exceptions IllegalStateException - if the trip already belongs to the group. To change display trip, should invoke `[ TripGroup#changeDisplayTrip(Trip)`](change-display-trip.md) instead.","title":"Add as display trip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/add-as-display-trip/#addasdisplaytrip","text":"open fun addAsDisplayTrip(@NonNull trip: Trip ): Unit A sample use case: Add a trip computed by waypoint API into trip list.","title":"addAsDisplayTrip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/add-as-display-trip/#parameters","text":"trip - Trip : This trip must not belong to group's trips. Otherwise, `[ IllegalStateException`]( https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html ) will be thrown.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/add-as-display-trip/#exceptions","text":"IllegalStateException - if the trip already belongs to the group. To change display trip, should invoke `[ TripGroup#changeDisplayTrip(Trip)`](change-display-trip.md) instead.","title":"Exceptions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/add-trip/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / addTrip addTrip open fun addTrip(trip: Trip !): Unit","title":"Add trip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/add-trip/#addtrip","text":"open fun addTrip(trip: Trip !): Unit","title":"addTrip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/change-display-trip/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / changeDisplayTrip changeDisplayTrip open fun changeDisplayTrip(@NonNull trip: Trip ): TripGroup ! Parameters trip - Trip : This trip must belong to group's trips. Otherwise, `[ IllegalStateException`]( https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html ) will be thrown. Exceptions IllegalStateException - if the trip doesn't belong to the group. Return TripGroup !: A TripGroup having new display trip.","title":"Change display trip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/change-display-trip/#changedisplaytrip","text":"open fun changeDisplayTrip(@NonNull trip: Trip ): TripGroup !","title":"changeDisplayTrip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/change-display-trip/#parameters","text":"trip - Trip : This trip must belong to group's trips. Otherwise, `[ IllegalStateException`]( https://docs.oracle.com/javase/7/docs/api/java/lang/IllegalStateException.html ) will be thrown.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/change-display-trip/#exceptions","text":"IllegalStateException - if the trip doesn't belong to the group. Return TripGroup !: A TripGroup having new display trip.","title":"Exceptions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-display-trip-id/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / getDisplayTripId getDisplayTripId open fun getDisplayTripId(): Long","title":"Get display trip id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-display-trip-id/#getdisplaytripid","text":"open fun getDisplayTripId(): Long","title":"getDisplayTripId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-display-trip/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / getDisplayTrip getDisplayTrip @Nullable open fun getDisplayTrip(): Trip ?","title":"Get display trip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-display-trip/#getdisplaytrip","text":"@Nullable open fun getDisplayTrip(): Trip ?","title":"getDisplayTrip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-frequency/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / getFrequency getFrequency open fun getFrequency(): Int","title":"Get frequency"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-frequency/#getfrequency","text":"open fun getFrequency(): Int","title":"getFrequency"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-sources/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / getSources getSources @Nullable open fun getSources(): MutableList < Source !>?","title":"Get sources"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-sources/#getsources","text":"@Nullable open fun getSources(): MutableList < Source !>?","title":"getSources"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-trips/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / getTrips getTrips @Nullable open fun getTrips(): ArrayList < Trip !>?","title":"Get trips"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-trips/#gettrips","text":"@Nullable open fun getTrips(): ArrayList < Trip !>?","title":"getTrips"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-visibility/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / getVisibility getVisibility open fun getVisibility(): GroupVisibility !","title":"Get visibility"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/get-visibility/#getvisibility","text":"open fun getVisibility(): GroupVisibility !","title":"getVisibility"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/set-display-trip-id/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / setDisplayTripId setDisplayTripId open fun setDisplayTripId(displayTripId: Long ): Unit","title":"Set display trip id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/set-display-trip-id/#setdisplaytripid","text":"open fun setDisplayTripId(displayTripId: Long ): Unit","title":"setDisplayTripId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/set-frequency/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / setFrequency setFrequency open fun setFrequency(frequency: Int ): Unit","title":"Set frequency"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/set-frequency/#setfrequency","text":"open fun setFrequency(frequency: Int ): Unit","title":"setFrequency"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/set-sources/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / setSources setSources open fun setSources(@Nullable sources: MutableList < Source !>?): Unit","title":"Set sources"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/set-sources/#setsources","text":"open fun setSources(@Nullable sources: MutableList < Source !>?): Unit","title":"setSources"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/set-trips/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / setTrips setTrips open fun setTrips(trips: ArrayList < Trip !>!): Unit","title":"Set trips"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/set-trips/#settrips","text":"open fun setTrips(trips: ArrayList < Trip !>!): Unit","title":"setTrips"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/set-visibility/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / setVisibility setVisibility open fun setVisibility(@NonNull visibility: GroupVisibility ): Unit","title":"Set visibility"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/set-visibility/#setvisibility","text":"open fun setVisibility(@NonNull visibility: GroupVisibility ): Unit","title":"setVisibility"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/uuid/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroup / uuid uuid open fun uuid(uuid: String !): Unit open fun uuid(): String !","title":"Uuid"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group/uuid/#uuid","text":"open fun uuid(uuid: String !): Unit open fun uuid(): String !","title":"uuid"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators TripGroupComparators class TripGroupComparators Properties Name Summary ARRIVAL_COMPARATOR_CHAIN To sort routes by leave-after query. static val ARRIVAL_COMPARATOR_CHAIN: Comparator < TripGroup !>! DEPARTURE_COMPARATOR_CHAIN To sort routes by arrive-by query. static val DEPARTURE_COMPARATOR_CHAIN: Comparator < TripGroup !>! DESC_VISIBILITY_COMPARATOR static val DESC_VISIBILITY_COMPARATOR: Comparator < TripGroup !>! DISPLAY_TRIP_TRANSFORMER static val DISPLAY_TRIP_TRANSFORMER: Transformer< TripGroup !, Trip !>! DURATION_COMPARATOR static val DURATION_COMPARATOR: Comparator < TripGroup !>! END_TIME_COMPARATOR static val END_TIME_COMPARATOR: Comparator < TripGroup !>! MONEY_COST_COMPARATOR static val MONEY_COST_COMPARATOR: Comparator < TripGroup !>! START_TIME_COMPARATOR static val START_TIME_COMPARATOR: Comparator < TripGroup !>! WEIGHTED_SCORE_COMPARATOR static val WEIGHTED_SCORE_COMPARATOR: Comparator < TripGroup !>! Functions Name Summary createDurationComparatorChain static fun createDurationComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>! createPreferredComparatorChain static fun createPreferredComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>! createPriceComparatorChain static fun createPriceComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/#tripgroupcomparators","text":"class TripGroupComparators","title":"TripGroupComparators"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/#properties","text":"Name Summary ARRIVAL_COMPARATOR_CHAIN To sort routes by leave-after query. static val ARRIVAL_COMPARATOR_CHAIN: Comparator < TripGroup !>! DEPARTURE_COMPARATOR_CHAIN To sort routes by arrive-by query. static val DEPARTURE_COMPARATOR_CHAIN: Comparator < TripGroup !>! DESC_VISIBILITY_COMPARATOR static val DESC_VISIBILITY_COMPARATOR: Comparator < TripGroup !>! DISPLAY_TRIP_TRANSFORMER static val DISPLAY_TRIP_TRANSFORMER: Transformer< TripGroup !, Trip !>! DURATION_COMPARATOR static val DURATION_COMPARATOR: Comparator < TripGroup !>! END_TIME_COMPARATOR static val END_TIME_COMPARATOR: Comparator < TripGroup !>! MONEY_COST_COMPARATOR static val MONEY_COST_COMPARATOR: Comparator < TripGroup !>! START_TIME_COMPARATOR static val START_TIME_COMPARATOR: Comparator < TripGroup !>! WEIGHTED_SCORE_COMPARATOR static val WEIGHTED_SCORE_COMPARATOR: Comparator < TripGroup !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/#functions","text":"Name Summary createDurationComparatorChain static fun createDurationComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>! createPreferredComparatorChain static fun createPreferredComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>! createPriceComparatorChain static fun createPriceComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-a-r-r-i-v-a-l_-c-o-m-p-a-r-a-t-o-r_-c-h-a-i-n/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / ARRIVAL_COMPARATOR_CHAIN ARRIVAL_COMPARATOR_CHAIN static val ARRIVAL_COMPARATOR_CHAIN: Comparator < TripGroup !>! To sort routes by leave-after query. \"In arrive-by query it's better the later they depart. In a leave-after query it's better the earlier that they arrive.\" (Adrian said) See Also <a href=\" https://redmine.buzzhives.com/issues/3967\">Discussion</a&gt ;","title":" a r r i v a l  c o m p a r a t o r  c h a i n"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-a-r-r-i-v-a-l_-c-o-m-p-a-r-a-t-o-r_-c-h-a-i-n/#arrival_comparator_chain","text":"static val ARRIVAL_COMPARATOR_CHAIN: Comparator < TripGroup !>! To sort routes by leave-after query. \"In arrive-by query it's better the later they depart. In a leave-after query it's better the earlier that they arrive.\" (Adrian said) See Also <a href=\" https://redmine.buzzhives.com/issues/3967\">Discussion</a&gt ;","title":"ARRIVAL_COMPARATOR_CHAIN"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-d-e-p-a-r-t-u-r-e_-c-o-m-p-a-r-a-t-o-r_-c-h-a-i-n/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / DEPARTURE_COMPARATOR_CHAIN DEPARTURE_COMPARATOR_CHAIN static val DEPARTURE_COMPARATOR_CHAIN: Comparator < TripGroup !>! To sort routes by arrive-by query. Q: Why reverse departure time? A: \"If it's an arrive-by query and you sort by time, you don't care when the trips arrive as you told them when they should arrive. What matters is when they leave. Trips that leave later (while arriving before the time you selected) are better. Hence: sort descending by arrival time.\" (Adrian said) See Also <a href=\" https://redmine.buzzhives.com/issues/3967\">Discussion</a&gt ;","title":" d e p a r t u r e  c o m p a r a t o r  c h a i n"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-d-e-p-a-r-t-u-r-e_-c-o-m-p-a-r-a-t-o-r_-c-h-a-i-n/#departure_comparator_chain","text":"static val DEPARTURE_COMPARATOR_CHAIN: Comparator < TripGroup !>! To sort routes by arrive-by query. Q: Why reverse departure time? A: \"If it's an arrive-by query and you sort by time, you don't care when the trips arrive as you told them when they should arrive. What matters is when they leave. Trips that leave later (while arriving before the time you selected) are better. Hence: sort descending by arrival time.\" (Adrian said) See Also <a href=\" https://redmine.buzzhives.com/issues/3967\">Discussion</a&gt ;","title":"DEPARTURE_COMPARATOR_CHAIN"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-d-e-s-c_-v-i-s-i-b-i-l-i-t-y_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / DESC_VISIBILITY_COMPARATOR DESC_VISIBILITY_COMPARATOR static val DESC_VISIBILITY_COMPARATOR: Comparator < TripGroup !>!","title":" d e s c  v i s i b i l i t y  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-d-e-s-c_-v-i-s-i-b-i-l-i-t-y_-c-o-m-p-a-r-a-t-o-r/#desc_visibility_comparator","text":"static val DESC_VISIBILITY_COMPARATOR: Comparator < TripGroup !>!","title":"DESC_VISIBILITY_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-d-i-s-p-l-a-y_-t-r-i-p_-t-r-a-n-s-f-o-r-m-e-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / DISPLAY_TRIP_TRANSFORMER DISPLAY_TRIP_TRANSFORMER static val DISPLAY_TRIP_TRANSFORMER: Transformer< TripGroup !, Trip !>!","title":" d i s p l a y  t r i p  t r a n s f o r m e r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-d-i-s-p-l-a-y_-t-r-i-p_-t-r-a-n-s-f-o-r-m-e-r/#display_trip_transformer","text":"static val DISPLAY_TRIP_TRANSFORMER: Transformer< TripGroup !, Trip !>!","title":"DISPLAY_TRIP_TRANSFORMER"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-d-u-r-a-t-i-o-n_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / DURATION_COMPARATOR DURATION_COMPARATOR static val DURATION_COMPARATOR: Comparator < TripGroup !>!","title":" d u r a t i o n  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-d-u-r-a-t-i-o-n_-c-o-m-p-a-r-a-t-o-r/#duration_comparator","text":"static val DURATION_COMPARATOR: Comparator < TripGroup !>!","title":"DURATION_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-e-n-d_-t-i-m-e_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / END_TIME_COMPARATOR END_TIME_COMPARATOR static val END_TIME_COMPARATOR: Comparator < TripGroup !>!","title":" e n d  t i m e  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-e-n-d_-t-i-m-e_-c-o-m-p-a-r-a-t-o-r/#end_time_comparator","text":"static val END_TIME_COMPARATOR: Comparator < TripGroup !>!","title":"END_TIME_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-m-o-n-e-y_-c-o-s-t_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / MONEY_COST_COMPARATOR MONEY_COST_COMPARATOR static val MONEY_COST_COMPARATOR: Comparator < TripGroup !>!","title":" m o n e y  c o s t  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-m-o-n-e-y_-c-o-s-t_-c-o-m-p-a-r-a-t-o-r/#money_cost_comparator","text":"static val MONEY_COST_COMPARATOR: Comparator < TripGroup !>!","title":"MONEY_COST_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-s-t-a-r-t_-t-i-m-e_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / START_TIME_COMPARATOR START_TIME_COMPARATOR static val START_TIME_COMPARATOR: Comparator < TripGroup !>!","title":" s t a r t  t i m e  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-s-t-a-r-t_-t-i-m-e_-c-o-m-p-a-r-a-t-o-r/#start_time_comparator","text":"static val START_TIME_COMPARATOR: Comparator < TripGroup !>!","title":"START_TIME_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-w-e-i-g-h-t-e-d_-s-c-o-r-e_-c-o-m-p-a-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / WEIGHTED_SCORE_COMPARATOR WEIGHTED_SCORE_COMPARATOR static val WEIGHTED_SCORE_COMPARATOR: Comparator < TripGroup !>!","title":" w e i g h t e d  s c o r e  c o m p a r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/-w-e-i-g-h-t-e-d_-s-c-o-r-e_-c-o-m-p-a-r-a-t-o-r/#weighted_score_comparator","text":"static val WEIGHTED_SCORE_COMPARATOR: Comparator < TripGroup !>!","title":"WEIGHTED_SCORE_COMPARATOR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/create-duration-comparator-chain/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / createDurationComparatorChain createDurationComparatorChain static fun createDurationComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>! Parameters willArriveBy - Boolean : True, it's arrive-by query. Otherwise, leave-after query.","title":"Create duration comparator chain"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/create-duration-comparator-chain/#createdurationcomparatorchain","text":"static fun createDurationComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>!","title":"createDurationComparatorChain"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/create-duration-comparator-chain/#parameters","text":"willArriveBy - Boolean : True, it's arrive-by query. Otherwise, leave-after query.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/create-preferred-comparator-chain/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / createPreferredComparatorChain createPreferredComparatorChain static fun createPreferredComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>! Parameters willArriveBy - Boolean : True, it's arrive-by query. Otherwise, leave-after query.","title":"Create preferred comparator chain"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/create-preferred-comparator-chain/#createpreferredcomparatorchain","text":"static fun createPreferredComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>!","title":"createPreferredComparatorChain"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/create-preferred-comparator-chain/#parameters","text":"willArriveBy - Boolean : True, it's arrive-by query. Otherwise, leave-after query.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/create-price-comparator-chain/","text":"tripkit-android / com.skedgo.tripkit.routing / TripGroupComparators / createPriceComparatorChain createPriceComparatorChain static fun createPriceComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>! Parameters willArriveBy - Boolean : True, it's arrive-by query. Otherwise, leave-after query.","title":"Create price comparator chain"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/create-price-comparator-chain/#createpricecomparatorchain","text":"static fun createPriceComparatorChain(willArriveBy: Boolean ): Comparator < TripGroup !>!","title":"createPriceComparatorChain"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-group-comparators/create-price-comparator-chain/#parameters","text":"willArriveBy - Boolean : True, it's arrive-by query. Otherwise, leave-after query.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment TripSegment open class TripSegment : IRealTimeElement , ITimeRange To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](./index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL`](../-segment-type/-a-r-r-i-v-a-l.md). Note that, to avoid [`TransactionTooLargeException`](#), it's discouraged to pass any instance of Query to [`Intent`](#) or Bundle . The `[ Parcelable`](#) is subject to deletion at anytime. See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#trips-groups-frequencies-and-templates\">Trips , groups, frequencies and templates</a> Constructors Name Summary <init> To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](./index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL ](../-segment-type/-a-r-r-i-v-a-l.md). TripSegment()` Functions Name Summary convertStopCountToText FIXME: Should replace this with Quantity Strings. See http://developer.android.com/intl/vi/guide/topics/resources/string-resource.html#Plurals . open static fun convertStopCountToText(stopCount: Int ): String ! getAction open fun getAction(): String ? getAlertHashCodes open fun getAlertHashCodes(): LongArray ! getAlerts open fun getAlerts(): ArrayList < RealtimeAlert !>? getBooking open fun getBooking(): Booking ! getCycleFriendliness open fun getCycleFriendliness(): Int getDarkVehicleIcon open fun getDarkVehicleIcon(): Int getDirection open fun getDirection(): Int getDisplayNotes As of now, used only for unscheduled segments. If we want to show notes on views, use it instead of getNotes . Some essential templates will be resolved before being presented by the views. open fun getDisplayNotes(resources: Resources!): String ? getDurationWithoutTraffic open fun getDurationWithoutTraffic(): Long getEndStopCode open fun getEndStopCode(): String ! getFrequency open fun getFrequency(): Int getFrom open fun getFrom(): Location ! getId open fun getId(): Long getLightTransportIcon open fun getLightTransportIcon(resources: Resources): Drawable! getLocalCost open fun getLocalCost(): LocalCost ? getMetres open fun getMetres(): Int getMetresSafe open fun getMetresSafe(): Int getMetresUnsafe open fun getMetresUnsafe(): Int getModeInfo open fun getModeInfo(): ModeInfo ? getNotes NOTE: For unscheduled segments, if we want to show notes on views, don't call this. Call getDisplayNotes instead. open fun getNotes(): String ! getOperator open fun getOperator(): String ! getPairIdentifier open fun getPairIdentifier(): String ! getPlatform open fun getPlatform(): String ? getRealTimeStatusText open fun getRealTimeStatusText(resources: Resources!): String ! getRealTimeVehicle open fun getRealTimeVehicle(): RealTimeVehicle ! getServiceColor open fun getServiceColor(): ServiceColor ? getServiceDirection open fun getServiceDirection(): String ! getServiceName open fun getServiceName(): String ! getServiceNumber open fun getServiceNumber(): String ! getServiceOperator open fun getServiceOperator(): String ! getServiceTripId open fun getServiceTripId(): String ! getShapes open fun getShapes(): MutableList < Shape !>? getSingleLocation open fun getSingleLocation(): Location ! getStartStopCode open fun getStartStopCode(): String ! getStopCount open fun getStopCount(): Int getStreets open fun getStreets(): MutableList < Street !>! getTemplateHashCode open fun getTemplateHashCode(): Long getTerms open fun getTerms(): String ! getTimeZone open fun getTimeZone(): String ? getTo open fun getTo(): Location ! getTransportModeId Segments having type as [`SegmentType#DEPARTURE`](../-segment-type/-d-e-p-a-r-t-u-r-e.md), SegmentType#ARRIVAL , and `[ SegmentType#STATIONARY ](../-segment-type/-s-t-a-t-i-o-n-a-r-y.md) will have this property as null. open fun getTransportModeId(): [ String ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html) ?` getTrip open fun getTrip(): Trip ! getTurnByTurn open fun getTurnByTurn(): TurnByTurn ? getType open fun getType(): SegmentType ? getVisibility open fun getVisibility(): String ! getWheelchairAccessible open fun getWheelchairAccessible(): Boolean getWheelchairFriendliness open fun getWheelchairFriendliness(): Int hasTimeTable open fun hasTimeTable(): Boolean isContinuation open fun isContinuation(): Boolean isCycling open fun isCycling(): Boolean isFrequencyBased open fun isFrequencyBased(): Boolean open fun isFrequencyBased(isFrequencyBased: Boolean ): Unit isPlane open fun isPlane(): Boolean isRealTime open fun isRealTime(): Boolean isStationary open fun isStationary(): Boolean isVisibleInContext open fun isVisibleInContext(contextVisibility: String !): Boolean isWalking open fun isWalking(): Boolean isWheelchair open fun isWheelchair(): Boolean lineColor open fun lineColor(): Int setAction open fun setAction(action: String !): Unit setAlertHashCodes open fun setAlertHashCodes(alertHashCodes: LongArray !): Unit setAlerts open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit setBooking open fun setBooking(booking: Booking !): Unit setContinuation open fun setContinuation(isContinuation: Boolean ): Unit setDirection open fun setDirection(direction: Int ): Unit setDurationWithoutTraffic open fun setDurationWithoutTraffic(durationWithoutTraffic: Long ): Unit setEndStopCode open fun setEndStopCode(endStopCode: String !): Unit setEndTimeInSecs NOTE: You should only use this setter for testing purpose. open fun setEndTimeInSecs(newEndTimeInSecs: Long ): Unit setFrequency open fun setFrequency(frequency: Int ): Unit setFrom open fun setFrom(from: Location !): Unit setId open fun setId(id: Long ): Unit setMetres open fun setMetres(metres: Int ): Unit setMetresSafe open fun setMetresSafe(metresSafe: Int ): Unit setMetresUnsafe open fun setMetresUnsafe(metresUnsafe: Int ): Unit setModeInfo open fun setModeInfo(modeInfo: ModeInfo !): Unit setNotes open fun setNotes(notes: String !): Unit setPlatform open fun setPlatform(platform: String !): Unit setRealTime open fun setRealTime(isRealTime: Boolean ): Unit setRealTimeVehicle open fun setRealTimeVehicle(realTimeVehicle: RealTimeVehicle !): Unit setServiceColor open fun setServiceColor(serviceColor: ServiceColor !): Unit setServiceDirection open fun setServiceDirection(serviceDirection: String !): Unit setServiceName open fun setServiceName(serviceName: String !): Unit setServiceNumber open fun setServiceNumber(serviceNumber: String !): Unit setServiceOperator open fun setServiceOperator(serviceOperator: String !): Unit setServiceTripId open fun setServiceTripId(serviceTripId: String !): Unit setShapes open fun setShapes(shapes: ArrayList < Shape !>?): Unit setSingleLocation open fun setSingleLocation(singleLocation: Location !): Unit setStartStopCode open fun setStartStopCode(startStopCode: String !): Unit setStartTimeInSecs NOTE: You should only use this setter for testing purpose. open fun setStartTimeInSecs(newStartTimeInSecs: Long ): Unit setStopCount open fun setStopCount(stopCount: Int ): Unit setStreets open fun setStreets(streets: ArrayList < Street !>!): Unit setTemplateHashCode open fun setTemplateHashCode(templateHashCode: Long ): Unit setTerms open fun setTerms(terms: String !): Unit setTo open fun setTo(to: Location !): Unit setTransportModeId open fun setTransportModeId(transportModeId: String !): Unit setTrip open fun setTrip(trip: Trip !): Unit setType open fun setType(type: SegmentType !): Unit setVisibility open fun setVisibility(visibility: String !): Unit setWheelchairAccessible open fun setWheelchairAccessible(wheelchairAccessible: Boolean ): Unit Extension Properties Name Summary actionAlert val TripSegment .actionAlert: RealtimeAlert ? endDateTime Get an end date-time with time-zone. val TripSegment .endDateTime: DateTime noActionAlerts val TripSegment .noActionAlerts: List < RealtimeAlert !>? startDateTime Gets a start date-time with time-zone. val TripSegment .startDateTime: DateTime","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/#tripsegment","text":"open class TripSegment : IRealTimeElement , ITimeRange To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](./index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL`](../-segment-type/-a-r-r-i-v-a-l.md). Note that, to avoid [`TransactionTooLargeException`](#), it's discouraged to pass any instance of Query to [`Intent`](#) or Bundle . The `[ Parcelable`](#) is subject to deletion at anytime. See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#trips-groups-frequencies-and-templates\">Trips , groups, frequencies and templates</a>","title":"TripSegment"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/#constructors","text":"Name Summary <init> To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](./index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL ](../-segment-type/-a-r-r-i-v-a-l.md). TripSegment()`","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/#functions","text":"Name Summary convertStopCountToText FIXME: Should replace this with Quantity Strings. See http://developer.android.com/intl/vi/guide/topics/resources/string-resource.html#Plurals . open static fun convertStopCountToText(stopCount: Int ): String ! getAction open fun getAction(): String ? getAlertHashCodes open fun getAlertHashCodes(): LongArray ! getAlerts open fun getAlerts(): ArrayList < RealtimeAlert !>? getBooking open fun getBooking(): Booking ! getCycleFriendliness open fun getCycleFriendliness(): Int getDarkVehicleIcon open fun getDarkVehicleIcon(): Int getDirection open fun getDirection(): Int getDisplayNotes As of now, used only for unscheduled segments. If we want to show notes on views, use it instead of getNotes . Some essential templates will be resolved before being presented by the views. open fun getDisplayNotes(resources: Resources!): String ? getDurationWithoutTraffic open fun getDurationWithoutTraffic(): Long getEndStopCode open fun getEndStopCode(): String ! getFrequency open fun getFrequency(): Int getFrom open fun getFrom(): Location ! getId open fun getId(): Long getLightTransportIcon open fun getLightTransportIcon(resources: Resources): Drawable! getLocalCost open fun getLocalCost(): LocalCost ? getMetres open fun getMetres(): Int getMetresSafe open fun getMetresSafe(): Int getMetresUnsafe open fun getMetresUnsafe(): Int getModeInfo open fun getModeInfo(): ModeInfo ? getNotes NOTE: For unscheduled segments, if we want to show notes on views, don't call this. Call getDisplayNotes instead. open fun getNotes(): String ! getOperator open fun getOperator(): String ! getPairIdentifier open fun getPairIdentifier(): String ! getPlatform open fun getPlatform(): String ? getRealTimeStatusText open fun getRealTimeStatusText(resources: Resources!): String ! getRealTimeVehicle open fun getRealTimeVehicle(): RealTimeVehicle ! getServiceColor open fun getServiceColor(): ServiceColor ? getServiceDirection open fun getServiceDirection(): String ! getServiceName open fun getServiceName(): String ! getServiceNumber open fun getServiceNumber(): String ! getServiceOperator open fun getServiceOperator(): String ! getServiceTripId open fun getServiceTripId(): String ! getShapes open fun getShapes(): MutableList < Shape !>? getSingleLocation open fun getSingleLocation(): Location ! getStartStopCode open fun getStartStopCode(): String ! getStopCount open fun getStopCount(): Int getStreets open fun getStreets(): MutableList < Street !>! getTemplateHashCode open fun getTemplateHashCode(): Long getTerms open fun getTerms(): String ! getTimeZone open fun getTimeZone(): String ? getTo open fun getTo(): Location ! getTransportModeId Segments having type as [`SegmentType#DEPARTURE`](../-segment-type/-d-e-p-a-r-t-u-r-e.md), SegmentType#ARRIVAL , and `[ SegmentType#STATIONARY ](../-segment-type/-s-t-a-t-i-o-n-a-r-y.md) will have this property as null. open fun getTransportModeId(): [ String ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html) ?` getTrip open fun getTrip(): Trip ! getTurnByTurn open fun getTurnByTurn(): TurnByTurn ? getType open fun getType(): SegmentType ? getVisibility open fun getVisibility(): String ! getWheelchairAccessible open fun getWheelchairAccessible(): Boolean getWheelchairFriendliness open fun getWheelchairFriendliness(): Int hasTimeTable open fun hasTimeTable(): Boolean isContinuation open fun isContinuation(): Boolean isCycling open fun isCycling(): Boolean isFrequencyBased open fun isFrequencyBased(): Boolean open fun isFrequencyBased(isFrequencyBased: Boolean ): Unit isPlane open fun isPlane(): Boolean isRealTime open fun isRealTime(): Boolean isStationary open fun isStationary(): Boolean isVisibleInContext open fun isVisibleInContext(contextVisibility: String !): Boolean isWalking open fun isWalking(): Boolean isWheelchair open fun isWheelchair(): Boolean lineColor open fun lineColor(): Int setAction open fun setAction(action: String !): Unit setAlertHashCodes open fun setAlertHashCodes(alertHashCodes: LongArray !): Unit setAlerts open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit setBooking open fun setBooking(booking: Booking !): Unit setContinuation open fun setContinuation(isContinuation: Boolean ): Unit setDirection open fun setDirection(direction: Int ): Unit setDurationWithoutTraffic open fun setDurationWithoutTraffic(durationWithoutTraffic: Long ): Unit setEndStopCode open fun setEndStopCode(endStopCode: String !): Unit setEndTimeInSecs NOTE: You should only use this setter for testing purpose. open fun setEndTimeInSecs(newEndTimeInSecs: Long ): Unit setFrequency open fun setFrequency(frequency: Int ): Unit setFrom open fun setFrom(from: Location !): Unit setId open fun setId(id: Long ): Unit setMetres open fun setMetres(metres: Int ): Unit setMetresSafe open fun setMetresSafe(metresSafe: Int ): Unit setMetresUnsafe open fun setMetresUnsafe(metresUnsafe: Int ): Unit setModeInfo open fun setModeInfo(modeInfo: ModeInfo !): Unit setNotes open fun setNotes(notes: String !): Unit setPlatform open fun setPlatform(platform: String !): Unit setRealTime open fun setRealTime(isRealTime: Boolean ): Unit setRealTimeVehicle open fun setRealTimeVehicle(realTimeVehicle: RealTimeVehicle !): Unit setServiceColor open fun setServiceColor(serviceColor: ServiceColor !): Unit setServiceDirection open fun setServiceDirection(serviceDirection: String !): Unit setServiceName open fun setServiceName(serviceName: String !): Unit setServiceNumber open fun setServiceNumber(serviceNumber: String !): Unit setServiceOperator open fun setServiceOperator(serviceOperator: String !): Unit setServiceTripId open fun setServiceTripId(serviceTripId: String !): Unit setShapes open fun setShapes(shapes: ArrayList < Shape !>?): Unit setSingleLocation open fun setSingleLocation(singleLocation: Location !): Unit setStartStopCode open fun setStartStopCode(startStopCode: String !): Unit setStartTimeInSecs NOTE: You should only use this setter for testing purpose. open fun setStartTimeInSecs(newStartTimeInSecs: Long ): Unit setStopCount open fun setStopCount(stopCount: Int ): Unit setStreets open fun setStreets(streets: ArrayList < Street !>!): Unit setTemplateHashCode open fun setTemplateHashCode(templateHashCode: Long ): Unit setTerms open fun setTerms(terms: String !): Unit setTo open fun setTo(to: Location !): Unit setTransportModeId open fun setTransportModeId(transportModeId: String !): Unit setTrip open fun setTrip(trip: Trip !): Unit setType open fun setType(type: SegmentType !): Unit setVisibility open fun setVisibility(visibility: String !): Unit setWheelchairAccessible open fun setWheelchairAccessible(wheelchairAccessible: Boolean ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/#extension-properties","text":"Name Summary actionAlert val TripSegment .actionAlert: RealtimeAlert ? endDateTime Get an end date-time with time-zone. val TripSegment .endDateTime: DateTime noActionAlerts val TripSegment .noActionAlerts: List < RealtimeAlert !>? startDateTime Gets a start date-time with time-zone. val TripSegment .startDateTime: DateTime","title":"Extension Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / <init> <init> TripSegment() To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL`](../-segment-type/-a-r-r-i-v-a-l.md). Note that, to avoid [`TransactionTooLargeException`](#), it's discouraged to pass any instance of Query to [`Intent`](#) or Bundle . The `[ Parcelable`](#) is subject to deletion at anytime. See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#trips-groups-frequencies-and-templates\">Trips , groups, frequencies and templates</a>","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/-init-/#init","text":"TripSegment() To go from A to B, sometimes we have to travel X, Y, Z locations between A and B. That means, we travel A to X, then X to Y, then Y to Z, then Z to B which is the destination. To show how to travel from A to X, we use [`TripSegment`](index.md). So, in this case, a trip from A to B comprises 6 segments: - A segment whose type is SegmentType#DEPARTURE . - A segment from A to X. - A segment from X to Y. - A segment from Y to Z. - A segment from Z to B. - A segment whose type is `[ SegmentType#ARRIVAL`](../-segment-type/-a-r-r-i-v-a-l.md). Note that, to avoid [`TransactionTooLargeException`](#), it's discouraged to pass any instance of Query to [`Intent`](#) or Bundle . The `[ Parcelable`](#) is subject to deletion at anytime. See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#trips-groups-frequencies-and-templates\">Trips , groups, frequencies and templates</a>","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/convert-stop-count-to-text/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / convertStopCountToText convertStopCountToText open static fun convertStopCountToText(stopCount: Int ): String ! FIXME: Should replace this with Quantity Strings. See http://developer.android.com/intl/vi/guide/topics/resources/string-resource.html#Plurals .","title":"Convert stop count to text"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/convert-stop-count-to-text/#convertstopcounttotext","text":"open static fun convertStopCountToText(stopCount: Int ): String ! FIXME: Should replace this with Quantity Strings. See http://developer.android.com/intl/vi/guide/topics/resources/string-resource.html#Plurals .","title":"convertStopCountToText"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-action/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getAction getAction @Nullable open fun getAction(): String ?","title":"Get action"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-action/#getaction","text":"@Nullable open fun getAction(): String ?","title":"getAction"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-alert-hash-codes/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getAlertHashCodes getAlertHashCodes open fun getAlertHashCodes(): LongArray !","title":"Get alert hash codes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-alert-hash-codes/#getalerthashcodes","text":"open fun getAlertHashCodes(): LongArray !","title":"getAlertHashCodes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-alerts/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getAlerts getAlerts @Nullable open fun getAlerts(): ArrayList < RealtimeAlert !>?","title":"Get alerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-alerts/#getalerts","text":"@Nullable open fun getAlerts(): ArrayList < RealtimeAlert !>?","title":"getAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-booking/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getBooking getBooking open fun getBooking(): Booking !","title":"Get booking"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-booking/#getbooking","text":"open fun getBooking(): Booking !","title":"getBooking"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-cycle-friendliness/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getCycleFriendliness getCycleFriendliness open fun getCycleFriendliness(): Int","title":"Get cycle friendliness"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-cycle-friendliness/#getcyclefriendliness","text":"open fun getCycleFriendliness(): Int","title":"getCycleFriendliness"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-dark-vehicle-icon/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getDarkVehicleIcon getDarkVehicleIcon @DrawableRes open fun getDarkVehicleIcon(): Int","title":"Get dark vehicle icon"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-dark-vehicle-icon/#getdarkvehicleicon","text":"@DrawableRes open fun getDarkVehicleIcon(): Int","title":"getDarkVehicleIcon"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-direction/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getDirection getDirection open fun getDirection(): Int","title":"Get direction"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-direction/#getdirection","text":"open fun getDirection(): Int","title":"getDirection"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-display-notes/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getDisplayNotes getDisplayNotes @Nullable open fun getDisplayNotes(resources: Resources!): String ? As of now, used only for unscheduled segments. If we want to show notes on views, use it instead of getNotes . Some essential templates will be resolved before being presented by the views.","title":"Get display notes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-display-notes/#getdisplaynotes","text":"@Nullable open fun getDisplayNotes(resources: Resources!): String ? As of now, used only for unscheduled segments. If we want to show notes on views, use it instead of getNotes . Some essential templates will be resolved before being presented by the views.","title":"getDisplayNotes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-duration-without-traffic/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getDurationWithoutTraffic getDurationWithoutTraffic open fun getDurationWithoutTraffic(): Long","title":"Get duration without traffic"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-duration-without-traffic/#getdurationwithouttraffic","text":"open fun getDurationWithoutTraffic(): Long","title":"getDurationWithoutTraffic"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-end-stop-code/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getEndStopCode getEndStopCode open fun getEndStopCode(): String !","title":"Get end stop code"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-end-stop-code/#getendstopcode","text":"open fun getEndStopCode(): String !","title":"getEndStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-frequency/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getFrequency getFrequency open fun getFrequency(): Int","title":"Get frequency"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-frequency/#getfrequency","text":"open fun getFrequency(): Int","title":"getFrequency"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-from/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getFrom getFrom open fun getFrom(): Location !","title":"Get from"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-from/#getfrom","text":"open fun getFrom(): Location !","title":"getFrom"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-id/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getId getId open fun getId(): Long","title":"Get id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-id/#getid","text":"open fun getId(): Long","title":"getId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-light-transport-icon/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getLightTransportIcon getLightTransportIcon open fun getLightTransportIcon(@NonNull resources: Resources): Drawable!","title":"Get light transport icon"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-light-transport-icon/#getlighttransporticon","text":"open fun getLightTransportIcon(@NonNull resources: Resources): Drawable!","title":"getLightTransportIcon"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-local-cost/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getLocalCost getLocalCost @Nullable open fun getLocalCost(): LocalCost ?","title":"Get local cost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-local-cost/#getlocalcost","text":"@Nullable open fun getLocalCost(): LocalCost ?","title":"getLocalCost"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-metres-safe/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getMetresSafe getMetresSafe open fun getMetresSafe(): Int","title":"Get metres safe"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-metres-safe/#getmetressafe","text":"open fun getMetresSafe(): Int","title":"getMetresSafe"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-metres-unsafe/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getMetresUnsafe getMetresUnsafe open fun getMetresUnsafe(): Int","title":"Get metres unsafe"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-metres-unsafe/#getmetresunsafe","text":"open fun getMetresUnsafe(): Int","title":"getMetresUnsafe"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-metres/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getMetres getMetres open fun getMetres(): Int","title":"Get metres"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-metres/#getmetres","text":"open fun getMetres(): Int","title":"getMetres"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-mode-info/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getModeInfo getModeInfo @Nullable open fun getModeInfo(): ModeInfo ? See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#mode-identifiers\">Mode Identifiers</a>","title":"Get mode info"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-mode-info/#getmodeinfo","text":"@Nullable open fun getModeInfo(): ModeInfo ? See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#mode-identifiers\">Mode Identifiers</a>","title":"getModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-notes/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getNotes getNotes open fun getNotes(): String ! NOTE: For unscheduled segments, if we want to show notes on views, don't call this. Call getDisplayNotes instead.","title":"Get notes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-notes/#getnotes","text":"open fun getNotes(): String ! NOTE: For unscheduled segments, if we want to show notes on views, don't call this. Call getDisplayNotes instead.","title":"getNotes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-operator/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getOperator getOperator open fun getOperator(): String !","title":"Get operator"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-operator/#getoperator","text":"open fun getOperator(): String !","title":"getOperator"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-pair-identifier/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getPairIdentifier getPairIdentifier open fun getPairIdentifier(): String !","title":"Get pair identifier"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-pair-identifier/#getpairidentifier","text":"open fun getPairIdentifier(): String !","title":"getPairIdentifier"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-platform/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getPlatform getPlatform @Nullable open fun getPlatform(): String ?","title":"Get platform"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-platform/#getplatform","text":"@Nullable open fun getPlatform(): String ?","title":"getPlatform"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-real-time-status-text/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getRealTimeStatusText getRealTimeStatusText open fun getRealTimeStatusText(resources: Resources!): String !","title":"Get real time status text"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-real-time-status-text/#getrealtimestatustext","text":"open fun getRealTimeStatusText(resources: Resources!): String !","title":"getRealTimeStatusText"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-real-time-vehicle/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getRealTimeVehicle getRealTimeVehicle open fun getRealTimeVehicle(): RealTimeVehicle !","title":"Get real time vehicle"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-real-time-vehicle/#getrealtimevehicle","text":"open fun getRealTimeVehicle(): RealTimeVehicle !","title":"getRealTimeVehicle"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-color/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getServiceColor getServiceColor @Nullable open fun getServiceColor(): ServiceColor ?","title":"Get service color"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-color/#getservicecolor","text":"@Nullable open fun getServiceColor(): ServiceColor ?","title":"getServiceColor"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-direction/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getServiceDirection getServiceDirection open fun getServiceDirection(): String !","title":"Get service direction"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-direction/#getservicedirection","text":"open fun getServiceDirection(): String !","title":"getServiceDirection"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-name/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getServiceName getServiceName open fun getServiceName(): String !","title":"Get service name"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-name/#getservicename","text":"open fun getServiceName(): String !","title":"getServiceName"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-number/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getServiceNumber getServiceNumber open fun getServiceNumber(): String !","title":"Get service number"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-number/#getservicenumber","text":"open fun getServiceNumber(): String !","title":"getServiceNumber"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-operator/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getServiceOperator getServiceOperator open fun getServiceOperator(): String !","title":"Get service operator"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-operator/#getserviceoperator","text":"open fun getServiceOperator(): String !","title":"getServiceOperator"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-trip-id/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getServiceTripId getServiceTripId open fun getServiceTripId(): String !","title":"Get service trip id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-service-trip-id/#getservicetripid","text":"open fun getServiceTripId(): String !","title":"getServiceTripId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-shapes/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getShapes getShapes @Nullable open fun getShapes(): MutableList < Shape !>?","title":"Get shapes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-shapes/#getshapes","text":"@Nullable open fun getShapes(): MutableList < Shape !>?","title":"getShapes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-single-location/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getSingleLocation getSingleLocation open fun getSingleLocation(): Location !","title":"Get single location"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-single-location/#getsinglelocation","text":"open fun getSingleLocation(): Location !","title":"getSingleLocation"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-start-stop-code/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getStartStopCode getStartStopCode open fun getStartStopCode(): String !","title":"Get start stop code"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-start-stop-code/#getstartstopcode","text":"open fun getStartStopCode(): String !","title":"getStartStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-stop-count/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getStopCount getStopCount open fun getStopCount(): Int","title":"Get stop count"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-stop-count/#getstopcount","text":"open fun getStopCount(): Int","title":"getStopCount"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-streets/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getStreets getStreets open fun getStreets(): MutableList < Street !>!","title":"Get streets"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-streets/#getstreets","text":"open fun getStreets(): MutableList < Street !>!","title":"getStreets"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-template-hash-code/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getTemplateHashCode getTemplateHashCode open fun getTemplateHashCode(): Long","title":"Get template hash code"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-template-hash-code/#gettemplatehashcode","text":"open fun getTemplateHashCode(): Long","title":"getTemplateHashCode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-terms/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getTerms getTerms open fun getTerms(): String !","title":"Get terms"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-terms/#getterms","text":"open fun getTerms(): String !","title":"getTerms"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-time-zone/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getTimeZone getTimeZone @Nullable open fun getTimeZone(): String ?","title":"Get time zone"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-time-zone/#gettimezone","text":"@Nullable open fun getTimeZone(): String ?","title":"getTimeZone"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-to/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getTo getTo open fun getTo(): Location !","title":"Get to"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-to/#getto","text":"open fun getTo(): Location !","title":"getTo"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-transport-mode-id/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getTransportModeId getTransportModeId @Nullable open fun getTransportModeId(): String ? Segments having type as [`SegmentType#DEPARTURE`](../-segment-type/-d-e-p-a-r-t-u-r-e.md), SegmentType#ARRIVAL , and `[ SegmentType#STATIONARY`](../-segment-type/-s-t-a-t-i-o-n-a-r-y.md) will have this property as null. For more information about the transport. Please check out `[ TripSegment#getModeInfo()`](get-mode-info.md). See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#mode-identifiers\">Mode Identifiers</a>","title":"Get transport mode id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-transport-mode-id/#gettransportmodeid","text":"@Nullable open fun getTransportModeId(): String ? Segments having type as [`SegmentType#DEPARTURE`](../-segment-type/-d-e-p-a-r-t-u-r-e.md), SegmentType#ARRIVAL , and `[ SegmentType#STATIONARY`](../-segment-type/-s-t-a-t-i-o-n-a-r-y.md) will have this property as null. For more information about the transport. Please check out `[ TripSegment#getModeInfo()`](get-mode-info.md). See Also <a href=\" http://skedgo.github.io/tripgo-api/site/faq/#mode-identifiers\">Mode Identifiers</a>","title":"getTransportModeId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-trip/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getTrip getTrip open fun getTrip(): Trip !","title":"Get trip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-trip/#gettrip","text":"open fun getTrip(): Trip !","title":"getTrip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-turn-by-turn/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getTurnByTurn getTurnByTurn @Nullable open fun getTurnByTurn(): TurnByTurn ?","title":"Get turn by turn"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-turn-by-turn/#getturnbyturn","text":"@Nullable open fun getTurnByTurn(): TurnByTurn ?","title":"getTurnByTurn"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-type/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getType getType @Nullable open fun getType(): SegmentType ?","title":"Get type"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-type/#gettype","text":"@Nullable open fun getType(): SegmentType ?","title":"getType"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-visibility/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getVisibility getVisibility open fun getVisibility(): String !","title":"Get visibility"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-visibility/#getvisibility","text":"open fun getVisibility(): String !","title":"getVisibility"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getWheelchairAccessible getWheelchairAccessible open fun getWheelchairAccessible(): Boolean","title":"Get wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-wheelchair-accessible/#getwheelchairaccessible","text":"open fun getWheelchairAccessible(): Boolean","title":"getWheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-wheelchair-friendliness/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / getWheelchairFriendliness getWheelchairFriendliness open fun getWheelchairFriendliness(): Int","title":"Get wheelchair friendliness"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/get-wheelchair-friendliness/#getwheelchairfriendliness","text":"open fun getWheelchairFriendliness(): Int","title":"getWheelchairFriendliness"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/has-time-table/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / hasTimeTable hasTimeTable open fun hasTimeTable(): Boolean","title":"Has time table"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/has-time-table/#hastimetable","text":"open fun hasTimeTable(): Boolean","title":"hasTimeTable"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-continuation/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / isContinuation isContinuation open fun isContinuation(): Boolean","title":"Is continuation"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-continuation/#iscontinuation","text":"open fun isContinuation(): Boolean","title":"isContinuation"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-cycling/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / isCycling isCycling open fun isCycling(): Boolean","title":"Is cycling"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-cycling/#iscycling","text":"open fun isCycling(): Boolean","title":"isCycling"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-frequency-based/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / isFrequencyBased isFrequencyBased open fun isFrequencyBased(): Boolean open fun isFrequencyBased(isFrequencyBased: Boolean ): Unit","title":"Is frequency based"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-frequency-based/#isfrequencybased","text":"open fun isFrequencyBased(): Boolean open fun isFrequencyBased(isFrequencyBased: Boolean ): Unit","title":"isFrequencyBased"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-plane/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / isPlane isPlane open fun isPlane(): Boolean","title":"Is plane"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-plane/#isplane","text":"open fun isPlane(): Boolean","title":"isPlane"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-real-time/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / isRealTime isRealTime open fun isRealTime(): Boolean","title":"Is real time"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-real-time/#isrealtime","text":"open fun isRealTime(): Boolean","title":"isRealTime"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-stationary/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / isStationary isStationary open fun isStationary(): Boolean","title":"Is stationary"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-stationary/#isstationary","text":"open fun isStationary(): Boolean","title":"isStationary"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-visible-in-context/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / isVisibleInContext isVisibleInContext open fun isVisibleInContext(contextVisibility: String !): Boolean","title":"Is visible in context"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-visible-in-context/#isvisibleincontext","text":"open fun isVisibleInContext(contextVisibility: String !): Boolean","title":"isVisibleInContext"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-walking/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / isWalking isWalking open fun isWalking(): Boolean","title":"Is walking"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-walking/#iswalking","text":"open fun isWalking(): Boolean","title":"isWalking"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-wheelchair/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / isWheelchair isWheelchair open fun isWheelchair(): Boolean","title":"Is wheelchair"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/is-wheelchair/#iswheelchair","text":"open fun isWheelchair(): Boolean","title":"isWheelchair"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/line-color/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / lineColor lineColor open fun lineColor(): Int","title":"Line color"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/line-color/#linecolor","text":"open fun lineColor(): Int","title":"lineColor"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-action/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setAction setAction open fun setAction(action: String !): Unit","title":"Set action"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-action/#setaction","text":"open fun setAction(action: String !): Unit","title":"setAction"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-alert-hash-codes/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setAlertHashCodes setAlertHashCodes open fun setAlertHashCodes(alertHashCodes: LongArray !): Unit","title":"Set alert hash codes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-alert-hash-codes/#setalerthashcodes","text":"open fun setAlertHashCodes(alertHashCodes: LongArray !): Unit","title":"setAlertHashCodes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-alerts/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setAlerts setAlerts open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit","title":"Set alerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-alerts/#setalerts","text":"open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit","title":"setAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-booking/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setBooking setBooking open fun setBooking(booking: Booking !): Unit","title":"Set booking"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-booking/#setbooking","text":"open fun setBooking(booking: Booking !): Unit","title":"setBooking"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-continuation/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setContinuation setContinuation open fun setContinuation(isContinuation: Boolean ): Unit","title":"Set continuation"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-continuation/#setcontinuation","text":"open fun setContinuation(isContinuation: Boolean ): Unit","title":"setContinuation"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-direction/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setDirection setDirection open fun setDirection(direction: Int ): Unit","title":"Set direction"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-direction/#setdirection","text":"open fun setDirection(direction: Int ): Unit","title":"setDirection"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-duration-without-traffic/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setDurationWithoutTraffic setDurationWithoutTraffic open fun setDurationWithoutTraffic(durationWithoutTraffic: Long ): Unit","title":"Set duration without traffic"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-duration-without-traffic/#setdurationwithouttraffic","text":"open fun setDurationWithoutTraffic(durationWithoutTraffic: Long ): Unit","title":"setDurationWithoutTraffic"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-end-stop-code/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setEndStopCode setEndStopCode open fun setEndStopCode(endStopCode: String !): Unit","title":"Set end stop code"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-end-stop-code/#setendstopcode","text":"open fun setEndStopCode(endStopCode: String !): Unit","title":"setEndStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-end-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setEndTimeInSecs setEndTimeInSecs open fun setEndTimeInSecs(newEndTimeInSecs: Long ): Unit NOTE: You should only use this setter for testing purpose.","title":"Set end time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-end-time-in-secs/#setendtimeinsecs","text":"open fun setEndTimeInSecs(newEndTimeInSecs: Long ): Unit NOTE: You should only use this setter for testing purpose.","title":"setEndTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-frequency/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setFrequency setFrequency open fun setFrequency(frequency: Int ): Unit","title":"Set frequency"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-frequency/#setfrequency","text":"open fun setFrequency(frequency: Int ): Unit","title":"setFrequency"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-from/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setFrom setFrom open fun setFrom(from: Location !): Unit","title":"Set from"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-from/#setfrom","text":"open fun setFrom(from: Location !): Unit","title":"setFrom"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-id/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setId setId open fun setId(id: Long ): Unit","title":"Set id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-id/#setid","text":"open fun setId(id: Long ): Unit","title":"setId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-metres-safe/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setMetresSafe setMetresSafe open fun setMetresSafe(metresSafe: Int ): Unit","title":"Set metres safe"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-metres-safe/#setmetressafe","text":"open fun setMetresSafe(metresSafe: Int ): Unit","title":"setMetresSafe"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-metres-unsafe/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setMetresUnsafe setMetresUnsafe open fun setMetresUnsafe(metresUnsafe: Int ): Unit","title":"Set metres unsafe"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-metres-unsafe/#setmetresunsafe","text":"open fun setMetresUnsafe(metresUnsafe: Int ): Unit","title":"setMetresUnsafe"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-metres/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setMetres setMetres open fun setMetres(metres: Int ): Unit","title":"Set metres"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-metres/#setmetres","text":"open fun setMetres(metres: Int ): Unit","title":"setMetres"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-mode-info/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setModeInfo setModeInfo open fun setModeInfo(modeInfo: ModeInfo !): Unit","title":"Set mode info"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-mode-info/#setmodeinfo","text":"open fun setModeInfo(modeInfo: ModeInfo !): Unit","title":"setModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-notes/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setNotes setNotes open fun setNotes(notes: String !): Unit","title":"Set notes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-notes/#setnotes","text":"open fun setNotes(notes: String !): Unit","title":"setNotes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-platform/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setPlatform setPlatform open fun setPlatform(platform: String !): Unit","title":"Set platform"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-platform/#setplatform","text":"open fun setPlatform(platform: String !): Unit","title":"setPlatform"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-real-time-vehicle/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setRealTimeVehicle setRealTimeVehicle open fun setRealTimeVehicle(realTimeVehicle: RealTimeVehicle !): Unit","title":"Set real time vehicle"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-real-time-vehicle/#setrealtimevehicle","text":"open fun setRealTimeVehicle(realTimeVehicle: RealTimeVehicle !): Unit","title":"setRealTimeVehicle"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-real-time/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setRealTime setRealTime open fun setRealTime(isRealTime: Boolean ): Unit","title":"Set real time"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-real-time/#setrealtime","text":"open fun setRealTime(isRealTime: Boolean ): Unit","title":"setRealTime"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-color/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setServiceColor setServiceColor open fun setServiceColor(serviceColor: ServiceColor !): Unit","title":"Set service color"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-color/#setservicecolor","text":"open fun setServiceColor(serviceColor: ServiceColor !): Unit","title":"setServiceColor"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-direction/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setServiceDirection setServiceDirection open fun setServiceDirection(serviceDirection: String !): Unit","title":"Set service direction"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-direction/#setservicedirection","text":"open fun setServiceDirection(serviceDirection: String !): Unit","title":"setServiceDirection"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-name/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setServiceName setServiceName open fun setServiceName(serviceName: String !): Unit","title":"Set service name"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-name/#setservicename","text":"open fun setServiceName(serviceName: String !): Unit","title":"setServiceName"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-number/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setServiceNumber setServiceNumber open fun setServiceNumber(serviceNumber: String !): Unit","title":"Set service number"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-number/#setservicenumber","text":"open fun setServiceNumber(serviceNumber: String !): Unit","title":"setServiceNumber"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-operator/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setServiceOperator setServiceOperator open fun setServiceOperator(serviceOperator: String !): Unit","title":"Set service operator"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-operator/#setserviceoperator","text":"open fun setServiceOperator(serviceOperator: String !): Unit","title":"setServiceOperator"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-trip-id/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setServiceTripId setServiceTripId open fun setServiceTripId(serviceTripId: String !): Unit","title":"Set service trip id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-service-trip-id/#setservicetripid","text":"open fun setServiceTripId(serviceTripId: String !): Unit","title":"setServiceTripId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-shapes/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setShapes setShapes open fun setShapes(@Nullable shapes: ArrayList < Shape !>?): Unit","title":"Set shapes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-shapes/#setshapes","text":"open fun setShapes(@Nullable shapes: ArrayList < Shape !>?): Unit","title":"setShapes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-single-location/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setSingleLocation setSingleLocation open fun setSingleLocation(singleLocation: Location !): Unit","title":"Set single location"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-single-location/#setsinglelocation","text":"open fun setSingleLocation(singleLocation: Location !): Unit","title":"setSingleLocation"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-start-stop-code/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setStartStopCode setStartStopCode open fun setStartStopCode(startStopCode: String !): Unit","title":"Set start stop code"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-start-stop-code/#setstartstopcode","text":"open fun setStartStopCode(startStopCode: String !): Unit","title":"setStartStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-start-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setStartTimeInSecs setStartTimeInSecs open fun setStartTimeInSecs(newStartTimeInSecs: Long ): Unit NOTE: You should only use this setter for testing purpose.","title":"Set start time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-start-time-in-secs/#setstarttimeinsecs","text":"open fun setStartTimeInSecs(newStartTimeInSecs: Long ): Unit NOTE: You should only use this setter for testing purpose.","title":"setStartTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-stop-count/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setStopCount setStopCount open fun setStopCount(stopCount: Int ): Unit","title":"Set stop count"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-stop-count/#setstopcount","text":"open fun setStopCount(stopCount: Int ): Unit","title":"setStopCount"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-streets/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setStreets setStreets open fun setStreets(streets: ArrayList < Street !>!): Unit","title":"Set streets"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-streets/#setstreets","text":"open fun setStreets(streets: ArrayList < Street !>!): Unit","title":"setStreets"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-template-hash-code/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setTemplateHashCode setTemplateHashCode open fun setTemplateHashCode(templateHashCode: Long ): Unit","title":"Set template hash code"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-template-hash-code/#settemplatehashcode","text":"open fun setTemplateHashCode(templateHashCode: Long ): Unit","title":"setTemplateHashCode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-terms/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setTerms setTerms open fun setTerms(terms: String !): Unit","title":"Set terms"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-terms/#setterms","text":"open fun setTerms(terms: String !): Unit","title":"setTerms"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-to/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setTo setTo open fun setTo(to: Location !): Unit","title":"Set to"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-to/#setto","text":"open fun setTo(to: Location !): Unit","title":"setTo"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-transport-mode-id/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setTransportModeId setTransportModeId open fun setTransportModeId(transportModeId: String !): Unit","title":"Set transport mode id"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-transport-mode-id/#settransportmodeid","text":"open fun setTransportModeId(transportModeId: String !): Unit","title":"setTransportModeId"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-trip/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setTrip setTrip open fun setTrip(trip: Trip !): Unit","title":"Set trip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-trip/#settrip","text":"open fun setTrip(trip: Trip !): Unit","title":"setTrip"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-type/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setType setType open fun setType(type: SegmentType !): Unit","title":"Set type"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-type/#settype","text":"open fun setType(type: SegmentType !): Unit","title":"setType"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-visibility/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setVisibility setVisibility open fun setVisibility(visibility: String !): Unit","title":"Set visibility"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-visibility/#setvisibility","text":"open fun setVisibility(visibility: String !): Unit","title":"setVisibility"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegment / setWheelchairAccessible setWheelchairAccessible open fun setWheelchairAccessible(wheelchairAccessible: Boolean ): Unit","title":"Set wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segment/set-wheelchair-accessible/#setwheelchairaccessible","text":"open fun setWheelchairAccessible(wheelchairAccessible: Boolean ): Unit","title":"setWheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segments/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegments TripSegments class TripSegments Functions Name Summary getTransportColor static fun getTransportColor(segment: TripSegment ?): ServiceColor ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segments/#tripsegments","text":"class TripSegments","title":"TripSegments"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segments/#functions","text":"Name Summary getTransportColor static fun getTransportColor(segment: TripSegment ?): ServiceColor ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segments/get-transport-color/","text":"tripkit-android / com.skedgo.tripkit.routing / TripSegments / getTransportColor getTransportColor @Nullable static fun getTransportColor(@Nullable segment: TripSegment ?): ServiceColor ?","title":"Get transport color"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-trip-segments/get-transport-color/#gettransportcolor","text":"@Nullable static fun getTransportColor(@Nullable segment: TripSegment ?): ServiceColor ?","title":"getTransportColor"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-turn-by-turn/","text":"tripkit-android / com.skedgo.tripkit.routing / TurnByTurn TurnByTurn enum class TurnByTurn Enum Values Name Summary CYCLING DRIVING WALKING","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-turn-by-turn/#turnbyturn","text":"enum class TurnByTurn","title":"TurnByTurn"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-turn-by-turn/#enum-values","text":"Name Summary CYCLING DRIVING WALKING","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-turn-by-turn/-c-y-c-l-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.routing / TurnByTurn / CYCLING CYCLING CYCLING","title":" c y c l i n g"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-turn-by-turn/-c-y-c-l-i-n-g/#cycling","text":"CYCLING","title":"CYCLING"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-turn-by-turn/-d-r-i-v-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.routing / TurnByTurn / DRIVING DRIVING DRIVING","title":" d r i v i n g"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-turn-by-turn/-d-r-i-v-i-n-g/#driving","text":"DRIVING","title":"DRIVING"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-turn-by-turn/-w-a-l-k-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.routing / TurnByTurn / WALKING WALKING WALKING","title":" w a l k i n g"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-turn-by-turn/-w-a-l-k-i-n-g/#walking","text":"WALKING","title":"WALKING"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleComponent VehicleComponent @Immutable @TypeAdapters abstract class VehicleComponent Constructors Name Summary <init> VehicleComponent() Functions Name Summary airConditioned open fun airConditioned(): Boolean model abstract fun model(): String ? occupancy abstract fun occupancy(): String ? wheelchairAccessible open fun wheelchairAccessible(): Boolean wifi open fun wifi(): Boolean Extension Functions Name Summary getOccupancy fun VehicleComponent .getOccupancy(): Occupancy ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/#vehiclecomponent","text":"@Immutable @TypeAdapters abstract class VehicleComponent","title":"VehicleComponent"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/#constructors","text":"Name Summary <init> VehicleComponent()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/#functions","text":"Name Summary airConditioned open fun airConditioned(): Boolean model abstract fun model(): String ? occupancy abstract fun occupancy(): String ? wheelchairAccessible open fun wheelchairAccessible(): Boolean wifi open fun wifi(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/#extension-functions","text":"Name Summary getOccupancy fun VehicleComponent .getOccupancy(): Occupancy ?","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/-init-/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleComponent / <init> <init> VehicleComponent()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/-init-/#init","text":"VehicleComponent()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/air-conditioned/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleComponent / airConditioned airConditioned @Default open fun airConditioned(): Boolean","title":"Air conditioned"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/air-conditioned/#airconditioned","text":"@Default open fun airConditioned(): Boolean","title":"airConditioned"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/model/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleComponent / model model abstract fun model(): String ?","title":"Model"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/model/#model","text":"abstract fun model(): String ?","title":"model"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/occupancy/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleComponent / occupancy occupancy abstract fun occupancy(): String ?","title":"Occupancy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/occupancy/#occupancy","text":"abstract fun occupancy(): String ?","title":"occupancy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleComponent / wheelchairAccessible wheelchairAccessible @Default open fun wheelchairAccessible(): Boolean","title":"Wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/wheelchair-accessible/#wheelchairaccessible","text":"@Default open fun wheelchairAccessible(): Boolean","title":"wheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/wifi/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleComponent / wifi wifi @Default open fun wifi(): Boolean","title":"Wifi"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-component/wifi/#wifi","text":"@Default open fun wifi(): Boolean","title":"wifi"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-drawables/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleDrawables VehicleDrawables class VehicleDrawables Functions Name Summary createLightDrawable static fun createLightDrawable(resources: Resources, iconRes: Int ): Drawable!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-drawables/#vehicledrawables","text":"class VehicleDrawables","title":"VehicleDrawables"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-drawables/#functions","text":"Name Summary createLightDrawable static fun createLightDrawable(resources: Resources, iconRes: Int ): Drawable!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-drawables/create-light-drawable/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleDrawables / createLightDrawable createLightDrawable static fun createLightDrawable(@NonNull resources: Resources, iconRes: Int ): Drawable!","title":"Create light drawable"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-drawables/create-light-drawable/#createlightdrawable","text":"static fun createLightDrawable(@NonNull resources: Resources, iconRes: Int ): Drawable!","title":"createLightDrawable"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode VehicleMode class VehicleMode As of v11, this denotes local transport icons. See Also {@link ModeInfo} Enum Values Name Summary AEROPLANE BICYCLE_SHARE BICYCLE BUS CABLECAR CAR_POOL CAR_RIDE_SHARE CAR_SHARE CAR COACH FERRY MONORAIL MOTORBIKE PARKING PUBLIC_TRANSPORT SHUTTLE_BUS SUBWAY TAXI TRAIN_INTERCITY TRAIN TRAM WALK WHEEL_CHAIR FUNICULAR TOLL Functions Name Summary from static fun from(key: String !): VehicleMode ? getIconRes fun getIconRes(): Int getMapIconRes fun getMapIconRes(resources: Resources): Drawable! getPublicTransportModes static fun getPublicTransportModes(): Array < VehicleMode !>! getRealTimeIconRes fun getRealTimeIconRes(): Int getRealtimeMapIconRes fun getRealtimeMapIconRes(resources: Resources): Drawable! isPublicTransport fun isPublicTransport(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/#vehiclemode","text":"class VehicleMode As of v11, this denotes local transport icons. See Also {@link ModeInfo}","title":"VehicleMode"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/#enum-values","text":"Name Summary AEROPLANE BICYCLE_SHARE BICYCLE BUS CABLECAR CAR_POOL CAR_RIDE_SHARE CAR_SHARE CAR COACH FERRY MONORAIL MOTORBIKE PARKING PUBLIC_TRANSPORT SHUTTLE_BUS SUBWAY TAXI TRAIN_INTERCITY TRAIN TRAM WALK WHEEL_CHAIR FUNICULAR TOLL","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/#functions","text":"Name Summary from static fun from(key: String !): VehicleMode ? getIconRes fun getIconRes(): Int getMapIconRes fun getMapIconRes(resources: Resources): Drawable! getPublicTransportModes static fun getPublicTransportModes(): Array < VehicleMode !>! getRealTimeIconRes fun getRealTimeIconRes(): Int getRealtimeMapIconRes fun getRealtimeMapIconRes(resources: Resources): Drawable! isPublicTransport fun isPublicTransport(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-a-e-r-o-p-l-a-n-e/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / AEROPLANE AEROPLANE AEROPLANE","title":" a e r o p l a n e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-a-e-r-o-p-l-a-n-e/#aeroplane","text":"AEROPLANE","title":"AEROPLANE"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-b-i-c-y-c-l-e/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / BICYCLE BICYCLE BICYCLE","title":" b i c y c l e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-b-i-c-y-c-l-e/#bicycle","text":"BICYCLE","title":"BICYCLE"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-b-i-c-y-c-l-e_-s-h-a-r-e/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / BICYCLE_SHARE BICYCLE_SHARE BICYCLE_SHARE","title":" b i c y c l e  s h a r e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-b-i-c-y-c-l-e_-s-h-a-r-e/#bicycle_share","text":"BICYCLE_SHARE","title":"BICYCLE_SHARE"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-b-u-s/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / BUS BUS BUS","title":" b u s"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-b-u-s/#bus","text":"BUS","title":"BUS"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-a-b-l-e-c-a-r/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / CABLECAR CABLECAR CABLECAR","title":" c a b l e c a r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-a-b-l-e-c-a-r/#cablecar","text":"CABLECAR","title":"CABLECAR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-a-r/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / CAR CAR CAR","title":" c a r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-a-r/#car","text":"CAR","title":"CAR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-a-r_-p-o-o-l/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / CAR_POOL CAR_POOL CAR_POOL","title":" c a r  p o o l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-a-r_-p-o-o-l/#car_pool","text":"CAR_POOL","title":"CAR_POOL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-a-r_-r-i-d-e_-s-h-a-r-e/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / CAR_RIDE_SHARE CAR_RIDE_SHARE CAR_RIDE_SHARE","title":" c a r  r i d e  s h a r e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-a-r_-r-i-d-e_-s-h-a-r-e/#car_ride_share","text":"CAR_RIDE_SHARE","title":"CAR_RIDE_SHARE"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-a-r_-s-h-a-r-e/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / CAR_SHARE CAR_SHARE CAR_SHARE","title":" c a r  s h a r e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-a-r_-s-h-a-r-e/#car_share","text":"CAR_SHARE","title":"CAR_SHARE"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-o-a-c-h/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / COACH COACH COACH","title":" c o a c h"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-c-o-a-c-h/#coach","text":"COACH","title":"COACH"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-f-e-r-r-y/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / FERRY FERRY FERRY","title":" f e r r y"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-f-e-r-r-y/#ferry","text":"FERRY","title":"FERRY"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-f-u-n-i-c-u-l-a-r/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / FUNICULAR FUNICULAR FUNICULAR","title":" f u n i c u l a r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-f-u-n-i-c-u-l-a-r/#funicular","text":"FUNICULAR","title":"FUNICULAR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-m-o-n-o-r-a-i-l/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / MONORAIL MONORAIL MONORAIL","title":" m o n o r a i l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-m-o-n-o-r-a-i-l/#monorail","text":"MONORAIL","title":"MONORAIL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-m-o-t-o-r-b-i-k-e/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / MOTORBIKE MOTORBIKE MOTORBIKE","title":" m o t o r b i k e"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-m-o-t-o-r-b-i-k-e/#motorbike","text":"MOTORBIKE","title":"MOTORBIKE"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-p-a-r-k-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / PARKING PARKING PARKING","title":" p a r k i n g"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-p-a-r-k-i-n-g/#parking","text":"PARKING","title":"PARKING"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-p-u-b-l-i-c_-t-r-a-n-s-p-o-r-t/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / PUBLIC_TRANSPORT PUBLIC_TRANSPORT PUBLIC_TRANSPORT","title":" p u b l i c  t r a n s p o r t"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-p-u-b-l-i-c_-t-r-a-n-s-p-o-r-t/#public_transport","text":"PUBLIC_TRANSPORT","title":"PUBLIC_TRANSPORT"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-s-h-u-t-t-l-e_-b-u-s/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / SHUTTLE_BUS SHUTTLE_BUS SHUTTLE_BUS","title":" s h u t t l e  b u s"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-s-h-u-t-t-l-e_-b-u-s/#shuttle_bus","text":"SHUTTLE_BUS","title":"SHUTTLE_BUS"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-s-u-b-w-a-y/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / SUBWAY SUBWAY SUBWAY","title":" s u b w a y"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-s-u-b-w-a-y/#subway","text":"SUBWAY","title":"SUBWAY"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-t-a-x-i/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / TAXI TAXI TAXI","title":" t a x i"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-t-a-x-i/#taxi","text":"TAXI","title":"TAXI"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-t-o-l-l/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / TOLL TOLL TOLL","title":" t o l l"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-t-o-l-l/#toll","text":"TOLL","title":"TOLL"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-t-r-a-i-n/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / TRAIN TRAIN TRAIN","title":" t r a i n"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-t-r-a-i-n/#train","text":"TRAIN","title":"TRAIN"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-t-r-a-i-n_-i-n-t-e-r-c-i-t-y/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / TRAIN_INTERCITY TRAIN_INTERCITY TRAIN_INTERCITY","title":" t r a i n  i n t e r c i t y"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-t-r-a-i-n_-i-n-t-e-r-c-i-t-y/#train_intercity","text":"TRAIN_INTERCITY","title":"TRAIN_INTERCITY"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-t-r-a-m/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / TRAM TRAM TRAM","title":" t r a m"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-t-r-a-m/#tram","text":"TRAM","title":"TRAM"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-w-a-l-k/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / WALK WALK WALK","title":" w a l k"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-w-a-l-k/#walk","text":"WALK","title":"WALK"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-w-h-e-e-l_-c-h-a-i-r/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / WHEEL_CHAIR WHEEL_CHAIR WHEEL_CHAIR","title":" w h e e l  c h a i r"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/-w-h-e-e-l_-c-h-a-i-r/#wheel_chair","text":"WHEEL_CHAIR","title":"WHEEL_CHAIR"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/from/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / from from @Nullable static fun from(key: String !): VehicleMode ?","title":"From"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/from/#from","text":"@Nullable static fun from(key: String !): VehicleMode ?","title":"from"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/get-icon-res/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / getIconRes getIconRes @DrawableRes fun getIconRes(): Int","title":"Get icon res"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/get-icon-res/#geticonres","text":"@DrawableRes fun getIconRes(): Int","title":"getIconRes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/get-map-icon-res/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / getMapIconRes getMapIconRes fun getMapIconRes(@NonNull resources: Resources): Drawable!","title":"Get map icon res"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/get-map-icon-res/#getmapiconres","text":"fun getMapIconRes(@NonNull resources: Resources): Drawable!","title":"getMapIconRes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/get-public-transport-modes/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / getPublicTransportModes getPublicTransportModes static fun getPublicTransportModes(): Array < VehicleMode !>!","title":"Get public transport modes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/get-public-transport-modes/#getpublictransportmodes","text":"static fun getPublicTransportModes(): Array < VehicleMode !>!","title":"getPublicTransportModes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/get-real-time-icon-res/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / getRealTimeIconRes getRealTimeIconRes @DrawableRes fun getRealTimeIconRes(): Int","title":"Get real time icon res"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/get-real-time-icon-res/#getrealtimeiconres","text":"@DrawableRes fun getRealTimeIconRes(): Int","title":"getRealTimeIconRes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/get-realtime-map-icon-res/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / getRealtimeMapIconRes getRealtimeMapIconRes fun getRealtimeMapIconRes(@NonNull resources: Resources): Drawable!","title":"Get realtime map icon res"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/get-realtime-map-icon-res/#getrealtimemapiconres","text":"fun getRealtimeMapIconRes(@NonNull resources: Resources): Drawable!","title":"getRealtimeMapIconRes"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/is-public-transport/","text":"tripkit-android / com.skedgo.tripkit.routing / VehicleMode / isPublicTransport isPublicTransport fun isPublicTransport(): Boolean","title":"Is public transport"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-vehicle-mode/is-public-transport/#ispublictransport","text":"fun isPublicTransport(): Boolean","title":"isPublicTransport"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-visibilities/","text":"tripkit-android / com.skedgo.tripkit.routing / Visibilities Visibilities class Visibilities Properties Name Summary VISIBILITY_HIDDEN static val VISIBILITY_HIDDEN: String VISIBILITY_IN_DETAILS static val VISIBILITY_IN_DETAILS: String VISIBILITY_IN_SUMMARY static val VISIBILITY_IN_SUMMARY: String VISIBILITY_ON_MAP static val VISIBILITY_ON_MAP: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-visibilities/#visibilities","text":"class Visibilities","title":"Visibilities"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-visibilities/#properties","text":"Name Summary VISIBILITY_HIDDEN static val VISIBILITY_HIDDEN: String VISIBILITY_IN_DETAILS static val VISIBILITY_IN_DETAILS: String VISIBILITY_IN_SUMMARY static val VISIBILITY_IN_SUMMARY: String VISIBILITY_ON_MAP static val VISIBILITY_ON_MAP: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-visibilities/-v-i-s-i-b-i-l-i-t-y_-h-i-d-d-e-n/","text":"tripkit-android / com.skedgo.tripkit.routing / Visibilities / VISIBILITY_HIDDEN VISIBILITY_HIDDEN static val VISIBILITY_HIDDEN: String","title":" v i s i b i l i t y  h i d d e n"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-visibilities/-v-i-s-i-b-i-l-i-t-y_-h-i-d-d-e-n/#visibility_hidden","text":"static val VISIBILITY_HIDDEN: String","title":"VISIBILITY_HIDDEN"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-visibilities/-v-i-s-i-b-i-l-i-t-y_-i-n_-d-e-t-a-i-l-s/","text":"tripkit-android / com.skedgo.tripkit.routing / Visibilities / VISIBILITY_IN_DETAILS VISIBILITY_IN_DETAILS static val VISIBILITY_IN_DETAILS: String","title":" v i s i b i l i t y  i n  d e t a i l s"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-visibilities/-v-i-s-i-b-i-l-i-t-y_-i-n_-d-e-t-a-i-l-s/#visibility_in_details","text":"static val VISIBILITY_IN_DETAILS: String","title":"VISIBILITY_IN_DETAILS"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-visibilities/-v-i-s-i-b-i-l-i-t-y_-i-n_-s-u-m-m-a-r-y/","text":"tripkit-android / com.skedgo.tripkit.routing / Visibilities / VISIBILITY_IN_SUMMARY VISIBILITY_IN_SUMMARY static val VISIBILITY_IN_SUMMARY: String","title":" v i s i b i l i t y  i n  s u m m a r y"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-visibilities/-v-i-s-i-b-i-l-i-t-y_-i-n_-s-u-m-m-a-r-y/#visibility_in_summary","text":"static val VISIBILITY_IN_SUMMARY: String","title":"VISIBILITY_IN_SUMMARY"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-visibilities/-v-i-s-i-b-i-l-i-t-y_-o-n_-m-a-p/","text":"tripkit-android / com.skedgo.tripkit.routing / Visibilities / VISIBILITY_ON_MAP VISIBILITY_ON_MAP static val VISIBILITY_ON_MAP: String","title":" v i s i b i l i t y  o n  m a p"},{"location":"tripkit-android/com.skedgo.tripkit.routing/-visibilities/-v-i-s-i-b-i-l-i-t-y_-o-n_-m-a-p/#visibility_on_map","text":"static val VISIBILITY_ON_MAP: String","title":"VISIBILITY_ON_MAP"},{"location":"tripkit-android/com.skedgo.tripkit.routing/kotlin.-string/","text":"tripkit-android / com.skedgo.tripkit.routing / kotlin.String Extensions for kotlin.String Name Summary from fun String ?.from(): SegmentType ? toAvailability fun String ?.toAvailability(): Availability ? toOccupancy fun String ?.toOccupancy(): Occupancy ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/kotlin.-string/#extensions-for-kotlinstring","text":"Name Summary from fun String ?.from(): SegmentType ? toAvailability fun String ?.toAvailability(): Availability ? toOccupancy fun String ?.toOccupancy(): Occupancy ?","title":"Extensions for kotlin.String"},{"location":"tripkit-android/com.skedgo.tripkit.routing/kotlin.-string/from/","text":"tripkit-android / com.skedgo.tripkit.routing / kotlin.String / from from fun String ?.from(): SegmentType ?","title":"From"},{"location":"tripkit-android/com.skedgo.tripkit.routing/kotlin.-string/from/#from","text":"fun String ?.from(): SegmentType ?","title":"from"},{"location":"tripkit-android/com.skedgo.tripkit.routing/kotlin.-string/to-availability/","text":"tripkit-android / com.skedgo.tripkit.routing / kotlin.String / toAvailability toAvailability fun String ?.toAvailability(): Availability ?","title":"To availability"},{"location":"tripkit-android/com.skedgo.tripkit.routing/kotlin.-string/to-availability/#toavailability","text":"fun String ?.toAvailability(): Availability ?","title":"toAvailability"},{"location":"tripkit-android/com.skedgo.tripkit.routing/kotlin.-string/to-occupancy/","text":"tripkit-android / com.skedgo.tripkit.routing / kotlin.String / toOccupancy toOccupancy fun String ?.toOccupancy(): Occupancy ?","title":"To occupancy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/kotlin.-string/to-occupancy/#tooccupancy","text":"fun String ?.toOccupancy(): Occupancy ?","title":"toOccupancy"},{"location":"tripkit-android/com.skedgo.tripkit.routing/org.joda.time.-date-time/","text":"tripkit-android / com.skedgo.tripkit.routing / org.joda.time.DateTime Extensions for org.joda.time.DateTime Name Summary toSeconds fun DateTime.toSeconds(): Long","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routing/org.joda.time.-date-time/#extensions-for-orgjodatimedatetime","text":"Name Summary toSeconds fun DateTime.toSeconds(): Long","title":"Extensions for org.joda.time.DateTime"},{"location":"tripkit-android/com.skedgo.tripkit.routing/org.joda.time.-date-time/to-seconds/","text":"tripkit-android / com.skedgo.tripkit.routing / org.joda.time.DateTime / toSeconds toSeconds fun DateTime.toSeconds(): Long","title":"To seconds"},{"location":"tripkit-android/com.skedgo.tripkit.routing/org.joda.time.-date-time/to-seconds/#toseconds","text":"fun DateTime.toSeconds(): Long","title":"toSeconds"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/","text":"tripkit-android / com.skedgo.tripkit.routingstatus Package com.skedgo.tripkit.routingstatus Types Name Summary RoutingStatus data class RoutingStatus RoutingStatusRepository interface RoutingStatusRepository Status sealed class Status","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/#package-comskedgotripkitroutingstatus","text":"","title":"Package com.skedgo.tripkit.routingstatus"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/#types","text":"Name Summary RoutingStatus data class RoutingStatus RoutingStatusRepository interface RoutingStatusRepository Status sealed class Status","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / RoutingStatus RoutingStatus data class RoutingStatus Constructors Name Summary <init> RoutingStatus(routingRequestId: String , status: Status ) Properties Name Summary routingRequestId val routingRequestId: String status val status: Status","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status/#routingstatus","text":"data class RoutingStatus","title":"RoutingStatus"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status/#constructors","text":"Name Summary <init> RoutingStatus(routingRequestId: String , status: Status )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status/#properties","text":"Name Summary routingRequestId val routingRequestId: String status val status: Status","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status/-init-/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / RoutingStatus / <init> <init> RoutingStatus(routingRequestId: String , status: Status )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status/-init-/#init","text":"RoutingStatus(routingRequestId: String , status: Status )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status/routing-request-id/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / RoutingStatus / routingRequestId routingRequestId val routingRequestId: String","title":"Routing request id"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status/routing-request-id/#routingrequestid","text":"val routingRequestId: String","title":"routingRequestId"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status/status/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / RoutingStatus / status status val status: Status","title":"Status"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status/status/#status","text":"val status: Status","title":"status"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status-repository/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / RoutingStatusRepository RoutingStatusRepository interface RoutingStatusRepository Functions Name Summary getRoutingStatus abstract fun getRoutingStatus(requestId: String ): Observable< RoutingStatus > putRoutingStatus abstract fun putRoutingStatus(routingStatus: RoutingStatus ): Completable Inheritors Name Summary RoutingStatusRepositoryImpl class RoutingStatusRepositoryImpl : RoutingStatusRepository","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status-repository/#routingstatusrepository","text":"interface RoutingStatusRepository","title":"RoutingStatusRepository"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status-repository/#functions","text":"Name Summary getRoutingStatus abstract fun getRoutingStatus(requestId: String ): Observable< RoutingStatus > putRoutingStatus abstract fun putRoutingStatus(routingStatus: RoutingStatus ): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status-repository/#inheritors","text":"Name Summary RoutingStatusRepositoryImpl class RoutingStatusRepositoryImpl : RoutingStatusRepository","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status-repository/get-routing-status/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / RoutingStatusRepository / getRoutingStatus getRoutingStatus abstract fun getRoutingStatus(requestId: String ): Observable< RoutingStatus >","title":"Get routing status"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status-repository/get-routing-status/#getroutingstatus","text":"abstract fun getRoutingStatus(requestId: String ): Observable< RoutingStatus >","title":"getRoutingStatus"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status-repository/put-routing-status/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / RoutingStatusRepository / putRoutingStatus putRoutingStatus abstract fun putRoutingStatus(routingStatus: RoutingStatus ): Completable","title":"Put routing status"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-routing-status-repository/put-routing-status/#putroutingstatus","text":"abstract fun putRoutingStatus(routingStatus: RoutingStatus ): Completable","title":"putRoutingStatus"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / Status Status sealed class Status Types Name Summary Completed class Completed : Status Error class Error : Status InProgress class InProgress : Status","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/#status","text":"sealed class Status","title":"Status"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/#types","text":"Name Summary Completed class Completed : Status Error class Error : Status InProgress class InProgress : Status","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-completed/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / Status / Completed Completed class Completed : Status Constructors Name Summary <init> Completed()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-completed/#completed","text":"class Completed : Status","title":"Completed"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-completed/#constructors","text":"Name Summary <init> Completed()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-completed/-init-/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / Status / Completed / <init> <init> Completed()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-completed/-init-/#init","text":"Completed()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-error/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / Status / Error Error class Error : Status Constructors Name Summary <init> Error(message: String ?) Properties Name Summary message val message: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-error/#error","text":"class Error : Status","title":"Error"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-error/#constructors","text":"Name Summary <init> Error(message: String ?)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-error/#properties","text":"Name Summary message val message: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-error/-init-/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / Status / Error / <init> <init> Error(message: String ?)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-error/-init-/#init","text":"Error(message: String ?)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-error/message/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / Status / Error / message message val message: String ?","title":"Message"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-error/message/#message","text":"val message: String ?","title":"message"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-in-progress/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / Status / InProgress InProgress class InProgress : Status Constructors Name Summary <init> InProgress()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-in-progress/#inprogress","text":"class InProgress : Status","title":"InProgress"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-in-progress/#constructors","text":"Name Summary <init> InProgress()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-in-progress/-init-/","text":"tripkit-android / com.skedgo.tripkit.routingstatus / Status / InProgress / <init> <init> InProgress()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.routingstatus/-status/-in-progress/-init-/#init","text":"InProgress()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.scope/","text":"tripkit-android / com.skedgo.tripkit.scope Package com.skedgo.tripkit.scope Annotations Name Summary ExtensionScope class ExtensionScope","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.scope/#package-comskedgotripkitscope","text":"","title":"Package com.skedgo.tripkit.scope"},{"location":"tripkit-android/com.skedgo.tripkit.scope/#annotations","text":"Name Summary ExtensionScope class ExtensionScope","title":"Annotations"},{"location":"tripkit-android/com.skedgo.tripkit.scope/-extension-scope/","text":"tripkit-android / com.skedgo.tripkit.scope / ExtensionScope ExtensionScope @Scope class ExtensionScope Constructors Name Summary <init> ExtensionScope()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.scope/-extension-scope/#extensionscope","text":"@Scope class ExtensionScope","title":"ExtensionScope"},{"location":"tripkit-android/com.skedgo.tripkit.scope/-extension-scope/#constructors","text":"Name Summary <init> ExtensionScope()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.scope/-extension-scope/-init-/","text":"tripkit-android / com.skedgo.tripkit.scope / ExtensionScope / <init> <init> ExtensionScope()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.scope/-extension-scope/-init-/#init","text":"ExtensionScope()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.time/","text":"tripkit-android / com.skedgo.tripkit.time Package com.skedgo.tripkit.time Types Name Summary GetNow In most cases, we should use this UseCase in place of System.currentTimeMillis to make the code more testable. open class GetNow","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.time/#package-comskedgotripkittime","text":"","title":"Package com.skedgo.tripkit.time"},{"location":"tripkit-android/com.skedgo.tripkit.time/#types","text":"Name Summary GetNow In most cases, we should use this UseCase in place of System.currentTimeMillis to make the code more testable. open class GetNow","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.time/-get-now/","text":"tripkit-android / com.skedgo.tripkit.time / GetNow GetNow open class GetNow In most cases, we should use this UseCase in place of System.currentTimeMillis to make the code more testable. Functions Name Summary execute open fun execute(): DateTime","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.time/-get-now/#getnow","text":"open class GetNow In most cases, we should use this UseCase in place of System.currentTimeMillis to make the code more testable.","title":"GetNow"},{"location":"tripkit-android/com.skedgo.tripkit.time/-get-now/#functions","text":"Name Summary execute open fun execute(): DateTime","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.time/-get-now/execute/","text":"tripkit-android / com.skedgo.tripkit.time / GetNow / execute execute open fun execute(): DateTime","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.time/-get-now/execute/#execute","text":"open fun execute(): DateTime","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/","text":"tripkit-android / com.skedgo.tripkit.tsp Package com.skedgo.tripkit.tsp Types Name Summary RegionInfoApi Retrieves detailed information about covered transport service providers for the specified regions. interface RegionInfoApi RegionInfoBody interface RegionInfoBody RegionInfoRepository open class RegionInfoRepository RegionInfoResponse interface RegionInfoResponse RegionInfoService A facade of `[ RegionInfoApi ](-region-info-api/index.md) that has failover on multiple servers. open class RegionInfoService` TspModule open class TspModule Extensions for External Classes Name Summary com.skedgo.tripkit.data.tsp.RegionInfo","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/#package-comskedgotripkittsp","text":"","title":"Package com.skedgo.tripkit.tsp"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/#types","text":"Name Summary RegionInfoApi Retrieves detailed information about covered transport service providers for the specified regions. interface RegionInfoApi RegionInfoBody interface RegionInfoBody RegionInfoRepository open class RegionInfoRepository RegionInfoResponse interface RegionInfoResponse RegionInfoService A facade of `[ RegionInfoApi ](-region-info-api/index.md) that has failover on multiple servers. open class RegionInfoService` TspModule open class TspModule","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/#extensions-for-external-classes","text":"Name Summary com.skedgo.tripkit.data.tsp.RegionInfo","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-api/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoApi RegionInfoApi interface RegionInfoApi Retrieves detailed information about covered transport service providers for the specified regions. See http://skedgo.github.io/tripgo-api/swagger/#!/Configuration/post_regionInfo_json . See `[ RegionInfoService`](../-region-info-service/index.md) for easier usage. Functions Name Summary fetchRegionInfo abstract fun fetchRegionInfo(body: RegionInfoBody !): RegionInfoResponse ! fetchRegionInfoAsync abstract fun fetchRegionInfoAsync(url: String !, body: RegionInfoBody !): Observable< RegionInfoResponse !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-api/#regioninfoapi","text":"interface RegionInfoApi Retrieves detailed information about covered transport service providers for the specified regions. See http://skedgo.github.io/tripgo-api/swagger/#!/Configuration/post_regionInfo_json . See `[ RegionInfoService`](../-region-info-service/index.md) for easier usage.","title":"RegionInfoApi"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-api/#functions","text":"Name Summary fetchRegionInfo abstract fun fetchRegionInfo(body: RegionInfoBody !): RegionInfoResponse ! fetchRegionInfoAsync abstract fun fetchRegionInfoAsync(url: String !, body: RegionInfoBody !): Observable< RegionInfoResponse !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-api/fetch-region-info-async/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoApi / fetchRegionInfoAsync fetchRegionInfoAsync @POST abstract fun fetchRegionInfoAsync(@Url url: String !, @Body body: RegionInfoBody !): Observable< RegionInfoResponse !>! Parameters url - String !: The url is a composition of an URL from `[ Region#getURLs()`](../../com.skedgo.tripkit.common.model/-region/get-u-r-ls.md) and 'regionInfo.json'.","title":"Fetch region info async"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-api/fetch-region-info-async/#fetchregioninfoasync","text":"@POST abstract fun fetchRegionInfoAsync(@Url url: String !, @Body body: RegionInfoBody !): Observable< RegionInfoResponse !>!","title":"fetchRegionInfoAsync"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-api/fetch-region-info-async/#parameters","text":"url - String !: The url is a composition of an URL from `[ Region#getURLs()`](../../com.skedgo.tripkit.common.model/-region/get-u-r-ls.md) and 'regionInfo.json'.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-api/fetch-region-info/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoApi / fetchRegionInfo fetchRegionInfo @POST(\"regionInfo.json\") abstract fun fetchRegionInfo(@Body body: RegionInfoBody !): RegionInfoResponse !","title":"Fetch region info"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-api/fetch-region-info/#fetchregioninfo","text":"@POST(\"regionInfo.json\") abstract fun fetchRegionInfo(@Body body: RegionInfoBody !): RegionInfoResponse !","title":"fetchRegionInfo"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-body/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoBody RegionInfoBody @Immutable @TypeAdapters interface RegionInfoBody Functions Name Summary region abstract fun region(): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-body/#regioninfobody","text":"@Immutable @TypeAdapters interface RegionInfoBody","title":"RegionInfoBody"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-body/#functions","text":"Name Summary region abstract fun region(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-body/region/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoBody / region region @Parameter abstract fun region(): String ! Return String !: `[ Region#getName()`](../../com.skedgo.tripkit.common.model/-region/get-name.md).","title":"Region"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-body/region/#region","text":"@Parameter abstract fun region(): String ! Return String !: `[ Region#getName()`](../../com.skedgo.tripkit.common.model/-region/get-name.md).","title":"region"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-repository/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoRepository RegionInfoRepository open class RegionInfoRepository Constructors Name Summary <init> RegionInfoRepository(regionInfoService: RegionInfoService ) Functions Name Summary getRegionInfoByRegion open fun getRegionInfoByRegion(region: Region ): Observable< RegionInfo >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-repository/#regioninforepository","text":"open class RegionInfoRepository","title":"RegionInfoRepository"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-repository/#constructors","text":"Name Summary <init> RegionInfoRepository(regionInfoService: RegionInfoService )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-repository/#functions","text":"Name Summary getRegionInfoByRegion open fun getRegionInfoByRegion(region: Region ): Observable< RegionInfo >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-repository/-init-/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoRepository / <init> <init> RegionInfoRepository(regionInfoService: RegionInfoService )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-repository/-init-/#init","text":"RegionInfoRepository(regionInfoService: RegionInfoService )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-repository/get-region-info-by-region/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoRepository / getRegionInfoByRegion getRegionInfoByRegion open fun getRegionInfoByRegion(region: Region ): Observable< RegionInfo >","title":"Get region info by region"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-repository/get-region-info-by-region/#getregioninfobyregion","text":"open fun getRegionInfoByRegion(region: Region ): Observable< RegionInfo >","title":"getRegionInfoByRegion"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-response/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoResponse RegionInfoResponse @TypeAdapters @Immutable interface RegionInfoResponse Functions Name Summary regions abstract fun regions(): MutableList < RegionInfo !>?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-response/#regioninforesponse","text":"@TypeAdapters @Immutable interface RegionInfoResponse","title":"RegionInfoResponse"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-response/#functions","text":"Name Summary regions abstract fun regions(): MutableList < RegionInfo !>?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-response/regions/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoResponse / regions regions @Nullable abstract fun regions(): MutableList < RegionInfo !>?","title":"Regions"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-response/regions/#regions","text":"@Nullable abstract fun regions(): MutableList < RegionInfo !>?","title":"regions"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-service/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoService RegionInfoService open class RegionInfoService A facade of `[ RegionInfoApi`](../-region-info-api/index.md) that has failover on multiple servers. Constructors Name Summary <init> RegionInfoService(regionInfoApiLazy: Lazy< RegionInfoApi !>!) Functions Name Summary fetchRegionInfoAsync open fun fetchRegionInfoAsync(baseUrls: MutableList < String !>!, regionName: String !): Observable< RegionInfo !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-service/#regioninfoservice","text":"open class RegionInfoService A facade of `[ RegionInfoApi`](../-region-info-api/index.md) that has failover on multiple servers.","title":"RegionInfoService"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-service/#constructors","text":"Name Summary <init> RegionInfoService(regionInfoApiLazy: Lazy< RegionInfoApi !>!)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-service/#functions","text":"Name Summary fetchRegionInfoAsync open fun fetchRegionInfoAsync(baseUrls: MutableList < String !>!, regionName: String !): Observable< RegionInfo !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-service/-init-/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoService / <init> <init> RegionInfoService(regionInfoApiLazy: Lazy< RegionInfoApi !>!)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-service/-init-/#init","text":"RegionInfoService(regionInfoApiLazy: Lazy< RegionInfoApi !>!)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-service/fetch-region-info-async/","text":"tripkit-android / com.skedgo.tripkit.tsp / RegionInfoService / fetchRegionInfoAsync fetchRegionInfoAsync open fun fetchRegionInfoAsync(baseUrls: MutableList < String !>!, regionName: String !): Observable< RegionInfo !>! Parameters baseUrls - MutableList < String !>!: Can be `[ Region#getURLs()`](../../com.skedgo.tripkit.common.model/-region/get-u-r-ls.md). regionName - String !: Can be `[ Region#getName()`](../../com.skedgo.tripkit.common.model/-region/get-name.md).","title":"Fetch region info async"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-service/fetch-region-info-async/#fetchregioninfoasync","text":"open fun fetchRegionInfoAsync(baseUrls: MutableList < String !>!, regionName: String !): Observable< RegionInfo !>!","title":"fetchRegionInfoAsync"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-region-info-service/fetch-region-info-async/#parameters","text":"baseUrls - MutableList < String !>!: Can be `[ Region#getURLs()`](../../com.skedgo.tripkit.common.model/-region/get-u-r-ls.md). regionName - String !: Can be `[ Region#getName()`](../../com.skedgo.tripkit.common.model/-region/get-name.md).","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-tsp-module/","text":"tripkit-android / com.skedgo.tripkit.tsp / TspModule TspModule @Module open class TspModule Constructors Name Summary <init> TspModule()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-tsp-module/#tspmodule","text":"@Module open class TspModule","title":"TspModule"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-tsp-module/#constructors","text":"Name Summary <init> TspModule()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-tsp-module/-init-/","text":"tripkit-android / com.skedgo.tripkit.tsp / TspModule / <init> <init> TspModule()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.tsp/-tsp-module/-init-/#init","text":"TspModule()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/com.skedgo.tripkit.data.tsp.-region-info/","text":"tripkit-android / com.skedgo.tripkit.tsp / com.skedgo.tripkit.data.tsp.RegionInfo Extensions for com.skedgo.tripkit.data.tsp.RegionInfo Name Summary hasWheelChairInformation fun RegionInfo .hasWheelChairInformation(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/com.skedgo.tripkit.data.tsp.-region-info/#extensions-for-comskedgotripkitdatatspregioninfo","text":"Name Summary hasWheelChairInformation fun RegionInfo .hasWheelChairInformation(): Boolean","title":"Extensions for com.skedgo.tripkit.data.tsp.RegionInfo"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/com.skedgo.tripkit.data.tsp.-region-info/has-wheel-chair-information/","text":"tripkit-android / com.skedgo.tripkit.tsp / com.skedgo.tripkit.data.tsp.RegionInfo / hasWheelChairInformation hasWheelChairInformation fun RegionInfo .hasWheelChairInformation(): Boolean","title":"Has wheel chair information"},{"location":"tripkit-android/com.skedgo.tripkit.tsp/com.skedgo.tripkit.data.tsp.-region-info/has-wheel-chair-information/#haswheelchairinformation","text":"fun RegionInfo .hasWheelChairInformation(): Boolean","title":"hasWheelChairInformation"},{"location":"tripkit-android/com.skedgo.tripkit.ui/","text":"tripkit-android / com.skedgo.tripkit.ui Package com.skedgo.tripkit.ui Types Name Summary TripGoStyleKit Created by Adrian Schoenig on 3. May 2018. CopyrightW 2018 SkedGo Pty Ltd. All rights reserved. open class TripGoStyleKit TripKitUI abstract class TripKitUI Properties Name Summary ARG_TRIP_GROUP_ID const val ARG_TRIP_GROUP_ID: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui/#package-comskedgotripkitui","text":"","title":"Package com.skedgo.tripkit.ui"},{"location":"tripkit-android/com.skedgo.tripkit.ui/#types","text":"Name Summary TripGoStyleKit Created by Adrian Schoenig on 3. May 2018. CopyrightW 2018 SkedGo Pty Ltd. All rights reserved. open class TripGoStyleKit TripKitUI abstract class TripKitUI","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui/#properties","text":"Name Summary ARG_TRIP_GROUP_ID const val ARG_TRIP_GROUP_ID: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-a-r-g_-t-r-i-p_-g-r-o-u-p_-i-d/","text":"tripkit-android / com.skedgo.tripkit.ui / ARG_TRIP_GROUP_ID ARG_TRIP_GROUP_ID const val ARG_TRIP_GROUP_ID: String","title":" a r g  t r i p  g r o u p  i d"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-a-r-g_-t-r-i-p_-g-r-o-u-p_-i-d/#arg_trip_group_id","text":"const val ARG_TRIP_GROUP_ID: String","title":"ARG_TRIP_GROUP_ID"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit TripGoStyleKit open class TripGoStyleKit Created by Adrian Schoenig on 3. May 2018. CopyrightW 2018 SkedGo Pty Ltd. All rights reserved. Generated by PaintCode http://www.paintcodeapp.com Author Adrian Schoenig Types Name Summary ResizingBehavior class ResizingBehavior Constructors Name Summary <init> Created by Adrian Schoenig on 3. May 2018. CopyrightW 2018 SkedGo Pty Ltd. All rights reserved. TripGoStyleKit() Functions Name Summary drawBikeShareMap open static fun drawBikeShareMap(canvas: Canvas!, fraction: Float , borderWidth: Float , length: Float ): Unit drawCarShareMap open static fun drawCarShareMap(canvas: Canvas!, fraction: Float , borderWidth: Float , length: Float ): Unit drawIconbikeshare open static fun drawIconbikeshare(canvas: Canvas!): Unit open static fun drawIconbikeshare(canvas: Canvas!, targetFrame: RectF!, resizing: ResizingBehavior!): Unit drawIconcarshare open static fun drawIconcarshare(canvas: Canvas!): Unit open static fun drawIconcarshare(canvas: Canvas!, targetFrame: RectF!, resizing: ResizingBehavior!): Unit resizingBehaviorApply open static fun resizingBehaviorApply(behavior: ResizingBehavior!, rect: RectF!, target: RectF!, result: RectF!): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/#tripgostylekit","text":"open class TripGoStyleKit Created by Adrian Schoenig on 3. May 2018. CopyrightW 2018 SkedGo Pty Ltd. All rights reserved. Generated by PaintCode http://www.paintcodeapp.com Author Adrian Schoenig","title":"TripGoStyleKit"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/#types","text":"Name Summary ResizingBehavior class ResizingBehavior","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/#constructors","text":"Name Summary <init> Created by Adrian Schoenig on 3. May 2018. CopyrightW 2018 SkedGo Pty Ltd. All rights reserved. TripGoStyleKit()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/#functions","text":"Name Summary drawBikeShareMap open static fun drawBikeShareMap(canvas: Canvas!, fraction: Float , borderWidth: Float , length: Float ): Unit drawCarShareMap open static fun drawCarShareMap(canvas: Canvas!, fraction: Float , borderWidth: Float , length: Float ): Unit drawIconbikeshare open static fun drawIconbikeshare(canvas: Canvas!): Unit open static fun drawIconbikeshare(canvas: Canvas!, targetFrame: RectF!, resizing: ResizingBehavior!): Unit drawIconcarshare open static fun drawIconcarshare(canvas: Canvas!): Unit open static fun drawIconcarshare(canvas: Canvas!, targetFrame: RectF!, resizing: ResizingBehavior!): Unit resizingBehaviorApply open static fun resizingBehaviorApply(behavior: ResizingBehavior!, rect: RectF!, target: RectF!, result: RectF!): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit / <init> <init> TripGoStyleKit() Created by Adrian Schoenig on 3. May 2018. CopyrightW 2018 SkedGo Pty Ltd. All rights reserved. Generated by PaintCode http://www.paintcodeapp.com Author Adrian Schoenig","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-init-/#init","text":"TripGoStyleKit() Created by Adrian Schoenig on 3. May 2018. CopyrightW 2018 SkedGo Pty Ltd. All rights reserved. Generated by PaintCode http://www.paintcodeapp.com Author Adrian Schoenig","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/draw-bike-share-map/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit / drawBikeShareMap drawBikeShareMap open static fun drawBikeShareMap(canvas: Canvas!, fraction: Float , borderWidth: Float , length: Float ): Unit","title":"Draw bike share map"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/draw-bike-share-map/#drawbikesharemap","text":"open static fun drawBikeShareMap(canvas: Canvas!, fraction: Float , borderWidth: Float , length: Float ): Unit","title":"drawBikeShareMap"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/draw-car-share-map/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit / drawCarShareMap drawCarShareMap open static fun drawCarShareMap(canvas: Canvas!, fraction: Float , borderWidth: Float , length: Float ): Unit","title":"Draw car share map"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/draw-car-share-map/#drawcarsharemap","text":"open static fun drawCarShareMap(canvas: Canvas!, fraction: Float , borderWidth: Float , length: Float ): Unit","title":"drawCarShareMap"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/draw-iconbikeshare/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit / drawIconbikeshare drawIconbikeshare open static fun drawIconbikeshare(canvas: Canvas!): Unit open static fun drawIconbikeshare(canvas: Canvas!, targetFrame: RectF!, resizing: ResizingBehavior!): Unit","title":"Draw iconbikeshare"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/draw-iconbikeshare/#drawiconbikeshare","text":"open static fun drawIconbikeshare(canvas: Canvas!): Unit open static fun drawIconbikeshare(canvas: Canvas!, targetFrame: RectF!, resizing: ResizingBehavior!): Unit","title":"drawIconbikeshare"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/draw-iconcarshare/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit / drawIconcarshare drawIconcarshare open static fun drawIconcarshare(canvas: Canvas!): Unit open static fun drawIconcarshare(canvas: Canvas!, targetFrame: RectF!, resizing: ResizingBehavior!): Unit","title":"Draw iconcarshare"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/draw-iconcarshare/#drawiconcarshare","text":"open static fun drawIconcarshare(canvas: Canvas!): Unit open static fun drawIconcarshare(canvas: Canvas!, targetFrame: RectF!, resizing: ResizingBehavior!): Unit","title":"drawIconcarshare"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/resizing-behavior-apply/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit / resizingBehaviorApply resizingBehaviorApply open static fun resizingBehaviorApply(behavior: ResizingBehavior!, rect: RectF!, target: RectF!, result: RectF!): Unit","title":"Resizing behavior apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/resizing-behavior-apply/#resizingbehaviorapply","text":"open static fun resizingBehaviorApply(behavior: ResizingBehavior!, rect: RectF!, target: RectF!, result: RectF!): Unit","title":"resizingBehaviorApply"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-resizing-behavior/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit / ResizingBehavior ResizingBehavior class ResizingBehavior Enum Values Name Summary AspectFit AspectFill Stretch Center","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-resizing-behavior/#resizingbehavior","text":"class ResizingBehavior","title":"ResizingBehavior"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-resizing-behavior/#enum-values","text":"Name Summary AspectFit AspectFill Stretch Center","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-resizing-behavior/-aspect-fill/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit / ResizingBehavior / AspectFill AspectFill AspectFill","title":" aspect fill"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-resizing-behavior/-aspect-fill/#aspectfill","text":"AspectFill","title":"AspectFill"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-resizing-behavior/-aspect-fit/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit / ResizingBehavior / AspectFit AspectFit AspectFit","title":" aspect fit"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-resizing-behavior/-aspect-fit/#aspectfit","text":"AspectFit","title":"AspectFit"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-resizing-behavior/-center/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit / ResizingBehavior / Center Center Center","title":" center"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-resizing-behavior/-center/#center","text":"Center","title":"Center"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-resizing-behavior/-stretch/","text":"tripkit-android / com.skedgo.tripkit.ui / TripGoStyleKit / ResizingBehavior / Stretch Stretch Stretch","title":" stretch"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-go-style-kit/-resizing-behavior/-stretch/#stretch","text":"Stretch","title":"Stretch"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI TripKitUI @Singleton @Component([AutoCompleteTaskModule, SchedulerFactoryModule, GooglePlacesModule, ConnectivityServiceModule, FetchSuggestionsModule, TripKitUIModule, ContextModule, ErrorLoggerModule, PicassoModule, TripKitModule, DbHelperModule, ServiceViewModelModule, RealTimeRepositoryModule, GetExcludedTransitModesModule, IsTransitModeIncludedRepositoryModule, IsModeIncludedInTripsRepositoryModule, IsModeMinimizedRepositoryModule, ServiceAlertDataModule, ServiceDetailsModule, ServiceDetailItemViewModelModule, TripGroupRepositoryModule, DeparturesModule, EventTrackerModule, LocationStuffModule, MyPersonalDataModule, PreferredTransferTimeRepositoryModule, CyclingSpeedRepositoryModule, WalkingSpeedRepositoryModule, PrioritiesRepositoryModule, GetRoutingConfigModule]) abstract class TripKitUI Constructors Name Summary <init> TripKitUI() Properties Name Summary AUTHORITY static var AUTHORITY: String ! Functions Name Summary appContext abstract fun appContext(): Context! bus abstract fun bus(): Bus! dbHelper abstract fun dbHelper(): DbHelper ! errorLogger abstract fun errorLogger(): ErrorLogger ! fetchSuggestions abstract fun fetchSuggestions(): FetchSuggestions ! getInstance open static fun getInstance(): TripKitUI ! homeMapFragmentComponent abstract fun homeMapFragmentComponent(module: HomeMapFragmentModule!): HomeMapFragmentComponent! httpClient abstract fun httpClient(): OkHttpClient! initialize open static fun initialize(context: Context!, key: Key !): Unit inject abstract fun inject(fragment: LocationSearchFragment !): Unit abstract fun inject(fragment: TimetableFragment !): Unit abstract fun inject(provider: ServiceStopsProvider !): Unit abstract fun inject(fragment: ServiceDetailFragment !): Unit abstract fun inject(provider: ScheduledStopsProvider !): Unit picasso abstract fun picasso(): Picasso! regionService abstract fun regionService(): RegionService ! routeInputViewComponent abstract fun routeInputViewComponent(): RouteInputViewComponent! routesComponent abstract fun routesComponent(): RoutesComponent! routeStore abstract fun routeStore(): RouteStore! searchRepository abstract fun searchRepository(): PlaceSearchRepository! serviceStopMapComponent abstract fun serviceStopMapComponent(): ServiceStopMapComponent! timePickerComponent abstract fun timePickerComponent(): TimePickerComponent! timetableComponent abstract fun timetableComponent(module: TimetableModule!): TimetableComponent! tripDetailsComponent abstract fun tripDetailsComponent(): TripDetailsComponent! tripGroupRepository abstract fun tripGroupRepository(): TripGroupRepository! tripSegmentViewModelComponent abstract fun tripSegmentViewModelComponent(): TripSegmentViewModelComponent!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/#tripkitui","text":"@Singleton @Component([AutoCompleteTaskModule, SchedulerFactoryModule, GooglePlacesModule, ConnectivityServiceModule, FetchSuggestionsModule, TripKitUIModule, ContextModule, ErrorLoggerModule, PicassoModule, TripKitModule, DbHelperModule, ServiceViewModelModule, RealTimeRepositoryModule, GetExcludedTransitModesModule, IsTransitModeIncludedRepositoryModule, IsModeIncludedInTripsRepositoryModule, IsModeMinimizedRepositoryModule, ServiceAlertDataModule, ServiceDetailsModule, ServiceDetailItemViewModelModule, TripGroupRepositoryModule, DeparturesModule, EventTrackerModule, LocationStuffModule, MyPersonalDataModule, PreferredTransferTimeRepositoryModule, CyclingSpeedRepositoryModule, WalkingSpeedRepositoryModule, PrioritiesRepositoryModule, GetRoutingConfigModule]) abstract class TripKitUI","title":"TripKitUI"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/#constructors","text":"Name Summary <init> TripKitUI()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/#properties","text":"Name Summary AUTHORITY static var AUTHORITY: String !","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/#functions","text":"Name Summary appContext abstract fun appContext(): Context! bus abstract fun bus(): Bus! dbHelper abstract fun dbHelper(): DbHelper ! errorLogger abstract fun errorLogger(): ErrorLogger ! fetchSuggestions abstract fun fetchSuggestions(): FetchSuggestions ! getInstance open static fun getInstance(): TripKitUI ! homeMapFragmentComponent abstract fun homeMapFragmentComponent(module: HomeMapFragmentModule!): HomeMapFragmentComponent! httpClient abstract fun httpClient(): OkHttpClient! initialize open static fun initialize(context: Context!, key: Key !): Unit inject abstract fun inject(fragment: LocationSearchFragment !): Unit abstract fun inject(fragment: TimetableFragment !): Unit abstract fun inject(provider: ServiceStopsProvider !): Unit abstract fun inject(fragment: ServiceDetailFragment !): Unit abstract fun inject(provider: ScheduledStopsProvider !): Unit picasso abstract fun picasso(): Picasso! regionService abstract fun regionService(): RegionService ! routeInputViewComponent abstract fun routeInputViewComponent(): RouteInputViewComponent! routesComponent abstract fun routesComponent(): RoutesComponent! routeStore abstract fun routeStore(): RouteStore! searchRepository abstract fun searchRepository(): PlaceSearchRepository! serviceStopMapComponent abstract fun serviceStopMapComponent(): ServiceStopMapComponent! timePickerComponent abstract fun timePickerComponent(): TimePickerComponent! timetableComponent abstract fun timetableComponent(module: TimetableModule!): TimetableComponent! tripDetailsComponent abstract fun tripDetailsComponent(): TripDetailsComponent! tripGroupRepository abstract fun tripGroupRepository(): TripGroupRepository! tripSegmentViewModelComponent abstract fun tripSegmentViewModelComponent(): TripSegmentViewModelComponent!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/-a-u-t-h-o-r-i-t-y/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / AUTHORITY AUTHORITY static var AUTHORITY: String !","title":" a u t h o r i t y"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/-a-u-t-h-o-r-i-t-y/#authority","text":"static var AUTHORITY: String !","title":"AUTHORITY"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / <init> <init> TripKitUI()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/-init-/#init","text":"TripKitUI()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/app-context/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / appContext appContext abstract fun appContext(): Context!","title":"App context"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/app-context/#appcontext","text":"abstract fun appContext(): Context!","title":"appContext"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/bus/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / bus bus abstract fun bus(): Bus!","title":"Bus"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/bus/#bus","text":"abstract fun bus(): Bus!","title":"bus"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/db-helper/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / dbHelper dbHelper abstract fun dbHelper(): DbHelper !","title":"Db helper"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/db-helper/#dbhelper","text":"abstract fun dbHelper(): DbHelper !","title":"dbHelper"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/error-logger/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / errorLogger errorLogger abstract fun errorLogger(): ErrorLogger !","title":"Error logger"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/error-logger/#errorlogger","text":"abstract fun errorLogger(): ErrorLogger !","title":"errorLogger"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/fetch-suggestions/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / fetchSuggestions fetchSuggestions abstract fun fetchSuggestions(): FetchSuggestions !","title":"Fetch suggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/fetch-suggestions/#fetchsuggestions","text":"abstract fun fetchSuggestions(): FetchSuggestions !","title":"fetchSuggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/get-instance/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / getInstance getInstance open static fun getInstance(): TripKitUI !","title":"Get instance"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/get-instance/#getinstance","text":"open static fun getInstance(): TripKitUI !","title":"getInstance"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/home-map-fragment-component/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / homeMapFragmentComponent homeMapFragmentComponent abstract fun homeMapFragmentComponent(module: HomeMapFragmentModule!): HomeMapFragmentComponent!","title":"Home map fragment component"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/home-map-fragment-component/#homemapfragmentcomponent","text":"abstract fun homeMapFragmentComponent(module: HomeMapFragmentModule!): HomeMapFragmentComponent!","title":"homeMapFragmentComponent"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/http-client/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / httpClient httpClient abstract fun httpClient(): OkHttpClient!","title":"Http client"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/http-client/#httpclient","text":"abstract fun httpClient(): OkHttpClient!","title":"httpClient"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/initialize/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / initialize initialize open static fun initialize(context: Context!, key: Key !): Unit","title":"Initialize"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/initialize/#initialize","text":"open static fun initialize(context: Context!, key: Key !): Unit","title":"initialize"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/inject/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / inject inject abstract fun inject(fragment: LocationSearchFragment !): Unit abstract fun inject(fragment: TimetableFragment !): Unit abstract fun inject(provider: ServiceStopsProvider !): Unit abstract fun inject(fragment: ServiceDetailFragment !): Unit abstract fun inject(provider: ScheduledStopsProvider !): Unit","title":"Inject"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/inject/#inject","text":"abstract fun inject(fragment: LocationSearchFragment !): Unit abstract fun inject(fragment: TimetableFragment !): Unit abstract fun inject(provider: ServiceStopsProvider !): Unit abstract fun inject(fragment: ServiceDetailFragment !): Unit abstract fun inject(provider: ScheduledStopsProvider !): Unit","title":"inject"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/picasso/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / picasso picasso abstract fun picasso(): Picasso!","title":"Picasso"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/picasso/#picasso","text":"abstract fun picasso(): Picasso!","title":"picasso"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/region-service/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / regionService regionService abstract fun regionService(): RegionService !","title":"Region service"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/region-service/#regionservice","text":"abstract fun regionService(): RegionService !","title":"regionService"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/route-input-view-component/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / routeInputViewComponent routeInputViewComponent abstract fun routeInputViewComponent(): RouteInputViewComponent!","title":"Route input view component"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/route-input-view-component/#routeinputviewcomponent","text":"abstract fun routeInputViewComponent(): RouteInputViewComponent!","title":"routeInputViewComponent"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/route-store/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / routeStore routeStore abstract fun routeStore(): RouteStore!","title":"Route store"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/route-store/#routestore","text":"abstract fun routeStore(): RouteStore!","title":"routeStore"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/routes-component/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / routesComponent routesComponent abstract fun routesComponent(): RoutesComponent!","title":"Routes component"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/routes-component/#routescomponent","text":"abstract fun routesComponent(): RoutesComponent!","title":"routesComponent"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/search-repository/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / searchRepository searchRepository abstract fun searchRepository(): PlaceSearchRepository!","title":"Search repository"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/search-repository/#searchrepository","text":"abstract fun searchRepository(): PlaceSearchRepository!","title":"searchRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/service-stop-map-component/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / serviceStopMapComponent serviceStopMapComponent abstract fun serviceStopMapComponent(): ServiceStopMapComponent!","title":"Service stop map component"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/service-stop-map-component/#servicestopmapcomponent","text":"abstract fun serviceStopMapComponent(): ServiceStopMapComponent!","title":"serviceStopMapComponent"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/time-picker-component/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / timePickerComponent timePickerComponent abstract fun timePickerComponent(): TimePickerComponent!","title":"Time picker component"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/time-picker-component/#timepickercomponent","text":"abstract fun timePickerComponent(): TimePickerComponent!","title":"timePickerComponent"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/timetable-component/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / timetableComponent timetableComponent abstract fun timetableComponent(module: TimetableModule!): TimetableComponent!","title":"Timetable component"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/timetable-component/#timetablecomponent","text":"abstract fun timetableComponent(module: TimetableModule!): TimetableComponent!","title":"timetableComponent"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/trip-details-component/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / tripDetailsComponent tripDetailsComponent abstract fun tripDetailsComponent(): TripDetailsComponent!","title":"Trip details component"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/trip-details-component/#tripdetailscomponent","text":"abstract fun tripDetailsComponent(): TripDetailsComponent!","title":"tripDetailsComponent"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/trip-group-repository/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / tripGroupRepository tripGroupRepository abstract fun tripGroupRepository(): TripGroupRepository!","title":"Trip group repository"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/trip-group-repository/#tripgrouprepository","text":"abstract fun tripGroupRepository(): TripGroupRepository!","title":"tripGroupRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/trip-segment-view-model-component/","text":"tripkit-android / com.skedgo.tripkit.ui / TripKitUI / tripSegmentViewModelComponent tripSegmentViewModelComponent abstract fun tripSegmentViewModelComponent(): TripSegmentViewModelComponent!","title":"Trip segment view model component"},{"location":"tripkit-android/com.skedgo.tripkit.ui/-trip-kit-u-i/trip-segment-view-model-component/#tripsegmentviewmodelcomponent","text":"abstract fun tripSegmentViewModelComponent(): TripSegmentViewModelComponent!","title":"tripSegmentViewModelComponent"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/","text":"tripkit-android / com.skedgo.tripkit.ui.booking Package com.skedgo.tripkit.ui.booking Types Name Summary BookingAction abstract class BookingAction BookingResolver interface BookingResolver BookViewClickEvent open class BookViewClickEvent : OnClickListener BookViewClickEventHandler class BookViewClickEventHandler","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/#package-comskedgotripkituibooking","text":"","title":"Package com.skedgo.tripkit.ui.booking"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/#types","text":"Name Summary BookingAction abstract class BookingAction BookingResolver interface BookingResolver BookViewClickEvent open class BookViewClickEvent : OnClickListener BookViewClickEventHandler class BookViewClickEventHandler","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookViewClickEvent BookViewClickEvent open class BookViewClickEvent : OnClickListener Constructors Name Summary <init> BookViewClickEvent(bus: Bus, segment: TripSegment ) Properties Name Summary segment val segment: TripSegment ! Functions Name Summary onClick open fun onClick(v: View!): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event/#bookviewclickevent","text":"open class BookViewClickEvent : OnClickListener","title":"BookViewClickEvent"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event/#constructors","text":"Name Summary <init> BookViewClickEvent(bus: Bus, segment: TripSegment )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event/#properties","text":"Name Summary segment val segment: TripSegment !","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event/#functions","text":"Name Summary onClick open fun onClick(v: View!): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookViewClickEvent / <init> <init> BookViewClickEvent(@NonNull bus: Bus, @NonNull segment: TripSegment )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event/-init-/#init","text":"BookViewClickEvent(@NonNull bus: Bus, @NonNull segment: TripSegment )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event/on-click/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookViewClickEvent / onClick onClick open fun onClick(v: View!): Unit","title":"On click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event/on-click/#onclick","text":"open fun onClick(v: View!): Unit","title":"onClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event/segment/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookViewClickEvent / segment segment val segment: TripSegment !","title":"Segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event/segment/#segment","text":"val segment: TripSegment !","title":"segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event-handler/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookViewClickEventHandler BookViewClickEventHandler class BookViewClickEventHandler Functions Name Summary create static fun create(fragment: Fragment): BookViewClickEventHandler !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event-handler/#bookviewclickeventhandler","text":"class BookViewClickEventHandler","title":"BookViewClickEventHandler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event-handler/#functions","text":"Name Summary create static fun create(fragment: Fragment): BookViewClickEventHandler !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event-handler/create/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookViewClickEventHandler / create create static fun create(@NonNull fragment: Fragment): BookViewClickEventHandler !","title":"Create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-book-view-click-event-handler/create/#create","text":"static fun create(@NonNull fragment: Fragment): BookViewClickEventHandler !","title":"create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingAction BookingAction @Immutable abstract class BookingAction Types Name Summary Builder interface Builder Constructors Name Summary <init> BookingAction() Functions Name Summary bookingProvider abstract fun bookingProvider(): Int builder open static fun builder(): Builder! data abstract fun data(): Intent! hasApp abstract fun hasApp(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/#bookingaction","text":"@Immutable abstract class BookingAction","title":"BookingAction"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/#types","text":"Name Summary Builder interface Builder","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/#constructors","text":"Name Summary <init> BookingAction()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/#functions","text":"Name Summary bookingProvider abstract fun bookingProvider(): Int builder open static fun builder(): Builder! data abstract fun data(): Intent! hasApp abstract fun hasApp(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingAction / <init> <init> BookingAction()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-init-/#init","text":"BookingAction()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/booking-provider/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingAction / bookingProvider bookingProvider abstract fun bookingProvider(): Int","title":"Booking provider"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/booking-provider/#bookingprovider","text":"abstract fun bookingProvider(): Int","title":"bookingProvider"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/builder/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingAction / builder builder open static fun builder(): Builder!","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/builder/#builder","text":"open static fun builder(): Builder!","title":"builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/data/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingAction / data data abstract fun data(): Intent!","title":"Data"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/data/#data","text":"abstract fun data(): Intent!","title":"data"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/has-app/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingAction / hasApp hasApp abstract fun hasApp(): Boolean","title":"Has app"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/has-app/#hasapp","text":"abstract fun hasApp(): Boolean","title":"hasApp"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingAction / Builder Builder interface Builder Functions Name Summary bookingProvider abstract fun bookingProvider(bookingProvider: Int ): Builder! build abstract fun build(): BookingAction ! data abstract fun data(data: Intent!): Builder! hasApp abstract fun hasApp(hasApp: Boolean ): Builder!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-builder/#builder","text":"interface Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-builder/#functions","text":"Name Summary bookingProvider abstract fun bookingProvider(bookingProvider: Int ): Builder! build abstract fun build(): BookingAction ! data abstract fun data(data: Intent!): Builder! hasApp abstract fun hasApp(hasApp: Boolean ): Builder!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-builder/booking-provider/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingAction / Builder / bookingProvider bookingProvider abstract fun bookingProvider(bookingProvider: Int ): Builder!","title":"Booking provider"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-builder/booking-provider/#bookingprovider","text":"abstract fun bookingProvider(bookingProvider: Int ): Builder!","title":"bookingProvider"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingAction / Builder / build build abstract fun build(): BookingAction !","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-builder/build/#build","text":"abstract fun build(): BookingAction !","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-builder/data/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingAction / Builder / data data abstract fun data(data: Intent!): Builder!","title":"Data"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-builder/data/#data","text":"abstract fun data(data: Intent!): Builder!","title":"data"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-builder/has-app/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingAction / Builder / hasApp hasApp abstract fun hasApp(hasApp: Boolean ): Builder!","title":"Has app"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-action/-builder/has-app/#hasapp","text":"abstract fun hasApp(hasApp: Boolean ): Builder!","title":"hasApp"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingResolver BookingResolver interface BookingResolver Properties Name Summary FLITWAYS static val FLITWAYS: Int GOCATCH static val GOCATCH: Int INGOGO static val INGOGO: Int LYFT static val LYFT: Int MTAXI static val MTAXI: Int OTHERS static val OTHERS: Int SMS static val SMS: Int UBER static val UBER: Int Functions Name Summary getTitleForExternalAction abstract fun getTitleForExternalAction(externalAction: String !): String ? performExternalActionAsync abstract fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/#bookingresolver","text":"interface BookingResolver","title":"BookingResolver"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/#properties","text":"Name Summary FLITWAYS static val FLITWAYS: Int GOCATCH static val GOCATCH: Int INGOGO static val INGOGO: Int LYFT static val LYFT: Int MTAXI static val MTAXI: Int OTHERS static val OTHERS: Int SMS static val SMS: Int UBER static val UBER: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/#functions","text":"Name Summary getTitleForExternalAction abstract fun getTitleForExternalAction(externalAction: String !): String ? performExternalActionAsync abstract fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-f-l-i-t-w-a-y-s/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingResolver / FLITWAYS FLITWAYS static val FLITWAYS: Int","title":" f l i t w a y s"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-f-l-i-t-w-a-y-s/#flitways","text":"static val FLITWAYS: Int","title":"FLITWAYS"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-g-o-c-a-t-c-h/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingResolver / GOCATCH GOCATCH static val GOCATCH: Int","title":" g o c a t c h"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-g-o-c-a-t-c-h/#gocatch","text":"static val GOCATCH: Int","title":"GOCATCH"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-i-n-g-o-g-o/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingResolver / INGOGO INGOGO static val INGOGO: Int","title":" i n g o g o"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-i-n-g-o-g-o/#ingogo","text":"static val INGOGO: Int","title":"INGOGO"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-l-y-f-t/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingResolver / LYFT LYFT static val LYFT: Int","title":" l y f t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-l-y-f-t/#lyft","text":"static val LYFT: Int","title":"LYFT"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-m-t-a-x-i/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingResolver / MTAXI MTAXI static val MTAXI: Int","title":" m t a x i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-m-t-a-x-i/#mtaxi","text":"static val MTAXI: Int","title":"MTAXI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-o-t-h-e-r-s/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingResolver / OTHERS OTHERS static val OTHERS: Int","title":" o t h e r s"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-o-t-h-e-r-s/#others","text":"static val OTHERS: Int","title":"OTHERS"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-s-m-s/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingResolver / SMS SMS static val SMS: Int","title":" s m s"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-s-m-s/#sms","text":"static val SMS: Int","title":"SMS"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-u-b-e-r/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingResolver / UBER UBER static val UBER: Int","title":" u b e r"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/-u-b-e-r/#uber","text":"static val UBER: Int","title":"UBER"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/get-title-for-external-action/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingResolver / getTitleForExternalAction getTitleForExternalAction @Nullable abstract fun getTitleForExternalAction(externalAction: String !): String ?","title":"Get title for external action"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/get-title-for-external-action/#gettitleforexternalaction","text":"@Nullable abstract fun getTitleForExternalAction(externalAction: String !): String ?","title":"getTitleForExternalAction"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/perform-external-action-async/","text":"tripkit-android / com.skedgo.tripkit.ui.booking / BookingResolver / performExternalActionAsync performExternalActionAsync abstract fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>!","title":"Perform external action async"},{"location":"tripkit-android/com.skedgo.tripkit.ui.booking/-booking-resolver/perform-external-action-async/#performexternalactionasync","text":"abstract fun performExternalActionAsync(params: ExternalActionParams !): Observable< BookingAction !>!","title":"performExternalActionAsync"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/","text":"tripkit-android / com.skedgo.tripkit.ui.core Package com.skedgo.tripkit.ui.core Types Name Summary AbstractTripKitFragment abstract class AbstractTripKitFragment : RxFragment CellsLoader open class CellsLoader : ICellsLoader CellsPersistor open class CellsPersistor : ICellsPersistor ConfigCreator Represents configuration parameters. class ConfigCreator : ConfigRepository Converters class Converters ErrorLoggerImpl class ErrorLoggerImpl : ErrorLogger ExternalActionParams abstract class ExternalActionParams InitializerContentProvider class InitializerContentProvider : ContentProvider RxViewModel abstract class RxViewModel : ViewModel SchedulerFactory interface SchedulerFactory SchedulerFactoryImpl class SchedulerFactoryImpl : SchedulerFactory StopsPersistor open class StopsPersistor : IStopsPersistor Exceptions Name Summary UnableToFetchBitmapError class UnableToFetchBitmapError : RuntimeException UnableToFindPlaceCoordinatesError class UnableToFindPlaceCoordinatesError : Throwable Extensions for External Classes Name Summary android.view.View com.squareup.picasso.Picasso io.reactivex.Observable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/#package-comskedgotripkituicore","text":"","title":"Package com.skedgo.tripkit.ui.core"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/#types","text":"Name Summary AbstractTripKitFragment abstract class AbstractTripKitFragment : RxFragment CellsLoader open class CellsLoader : ICellsLoader CellsPersistor open class CellsPersistor : ICellsPersistor ConfigCreator Represents configuration parameters. class ConfigCreator : ConfigRepository Converters class Converters ErrorLoggerImpl class ErrorLoggerImpl : ErrorLogger ExternalActionParams abstract class ExternalActionParams InitializerContentProvider class InitializerContentProvider : ContentProvider RxViewModel abstract class RxViewModel : ViewModel SchedulerFactory interface SchedulerFactory SchedulerFactoryImpl class SchedulerFactoryImpl : SchedulerFactory StopsPersistor open class StopsPersistor : IStopsPersistor","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/#exceptions","text":"Name Summary UnableToFetchBitmapError class UnableToFetchBitmapError : RuntimeException UnableToFindPlaceCoordinatesError class UnableToFindPlaceCoordinatesError : Throwable","title":"Exceptions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/#extensions-for-external-classes","text":"Name Summary android.view.View com.squareup.picasso.Picasso io.reactivex.Observable","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-abstract-trip-kit-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.core / AbstractTripKitFragment AbstractTripKitFragment abstract class AbstractTripKitFragment : RxFragment Constructors Name Summary <init> AbstractTripKitFragment() Inheritors Name Summary LocationSearchFragment This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. class LocationSearchFragment : AbstractTripKitFragment ServiceDetailFragment class ServiceDetailFragment : AbstractTripKitFragment TimetableFragment class TimetableFragment : AbstractTripKitFragment , OnClickListener TripResultListFragment class TripResultListFragment : AbstractTripKitFragment","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-abstract-trip-kit-fragment/#abstracttripkitfragment","text":"abstract class AbstractTripKitFragment : RxFragment","title":"AbstractTripKitFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-abstract-trip-kit-fragment/#constructors","text":"Name Summary <init> AbstractTripKitFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-abstract-trip-kit-fragment/#inheritors","text":"Name Summary LocationSearchFragment This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. class LocationSearchFragment : AbstractTripKitFragment ServiceDetailFragment class ServiceDetailFragment : AbstractTripKitFragment TimetableFragment class TimetableFragment : AbstractTripKitFragment , OnClickListener TripResultListFragment class TripResultListFragment : AbstractTripKitFragment","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-abstract-trip-kit-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core / AbstractTripKitFragment / <init> <init> AbstractTripKitFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-abstract-trip-kit-fragment/-init-/#init","text":"AbstractTripKitFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-loader/","text":"tripkit-android / com.skedgo.tripkit.ui.core / CellsLoader CellsLoader open class CellsLoader : ICellsLoader Constructors Name Summary <init> CellsLoader(appContext: Context) Functions Name Summary loadSavedCellsAsync open fun loadSavedCellsAsync(cellIds: List < String >): Observable< List <Group>>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-loader/#cellsloader","text":"open class CellsLoader : ICellsLoader","title":"CellsLoader"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-loader/#constructors","text":"Name Summary <init> CellsLoader(appContext: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-loader/#functions","text":"Name Summary loadSavedCellsAsync open fun loadSavedCellsAsync(cellIds: List < String >): Observable< List <Group>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-loader/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core / CellsLoader / <init> <init> CellsLoader(@NonNull appContext: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-loader/-init-/#init","text":"CellsLoader(@NonNull appContext: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-loader/load-saved-cells-async/","text":"tripkit-android / com.skedgo.tripkit.ui.core / CellsLoader / loadSavedCellsAsync loadSavedCellsAsync open fun loadSavedCellsAsync(@NonNull cellIds: List < String >): Observable< List <Group>>","title":"Load saved cells async"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-loader/load-saved-cells-async/#loadsavedcellsasync","text":"open fun loadSavedCellsAsync(@NonNull cellIds: List < String >): Observable< List <Group>>","title":"loadSavedCellsAsync"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-persistor/","text":"tripkit-android / com.skedgo.tripkit.ui.core / CellsPersistor CellsPersistor open class CellsPersistor : ICellsPersistor Constructors Name Summary <init> CellsPersistor(appContext: Context) Functions Name Summary saveCellsSync open fun saveCellsSync(cells: List <Group>): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-persistor/#cellspersistor","text":"open class CellsPersistor : ICellsPersistor","title":"CellsPersistor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-persistor/#constructors","text":"Name Summary <init> CellsPersistor(appContext: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-persistor/#functions","text":"Name Summary saveCellsSync open fun saveCellsSync(cells: List <Group>): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-persistor/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core / CellsPersistor / <init> <init> CellsPersistor(@NonNull appContext: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-persistor/-init-/#init","text":"CellsPersistor(@NonNull appContext: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-persistor/save-cells-sync/","text":"tripkit-android / com.skedgo.tripkit.ui.core / CellsPersistor / saveCellsSync saveCellsSync open fun saveCellsSync(@NonNull cells: List <Group>): Unit","title":"Save cells sync"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-cells-persistor/save-cells-sync/#savecellssync","text":"open fun saveCellsSync(@NonNull cells: List <Group>): Unit","title":"saveCellsSync"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-config-creator/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ConfigCreator ConfigCreator class ConfigCreator : ConfigRepository Represents configuration parameters. See: https://redmine.buzzhives.com/projects/buzzhives/wiki/Main_API_formats#Default-configuration-parameters Constructors Name Summary <init> ConfigCreator(context: Context!, preferences: SharedPreferences!, apiVersion: String !, tripPreferences: TripPreferences !) Functions Name Summary call fun call(): JsonObject","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-config-creator/#configcreator","text":"class ConfigCreator : ConfigRepository Represents configuration parameters. See: https://redmine.buzzhives.com/projects/buzzhives/wiki/Main_API_formats#Default-configuration-parameters","title":"ConfigCreator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-config-creator/#constructors","text":"Name Summary <init> ConfigCreator(context: Context!, preferences: SharedPreferences!, apiVersion: String !, tripPreferences: TripPreferences !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-config-creator/#functions","text":"Name Summary call fun call(): JsonObject","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-config-creator/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ConfigCreator / <init> <init> ConfigCreator(context: Context!, preferences: SharedPreferences!, apiVersion: String !, tripPreferences: TripPreferences !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-config-creator/-init-/#init","text":"ConfigCreator(context: Context!, preferences: SharedPreferences!, apiVersion: String !, tripPreferences: TripPreferences !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-config-creator/call/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ConfigCreator / call call @NonNull fun call(): JsonObject","title":"Call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-config-creator/call/#call","text":"@NonNull fun call(): JsonObject","title":"call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-converters/","text":"tripkit-android / com.skedgo.tripkit.ui.core / Converters Converters class Converters Functions Name Summary convertBooleanToViewVisibility Binds a boolean into [`View#setVisibility(int)`](#). Sample: `android:visibility=\"@{viewModel.isBusy}` `isBusy` can be an ObservableBoolean . static fun convertBooleanToViewVisibility(value: Boolean ): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-converters/#converters","text":"class Converters","title":"Converters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-converters/#functions","text":"Name Summary convertBooleanToViewVisibility Binds a boolean into [`View#setVisibility(int)`](#). Sample: `android:visibility=\"@{viewModel.isBusy}` `isBusy` can be an ObservableBoolean . static fun convertBooleanToViewVisibility(value: Boolean ): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-converters/convert-boolean-to-view-visibility/","text":"tripkit-android / com.skedgo.tripkit.ui.core / Converters / convertBooleanToViewVisibility convertBooleanToViewVisibility static fun convertBooleanToViewVisibility(value: Boolean ): Int Binds a boolean into [`View#setVisibility(int)`](#). Sample: `android:visibility=\"@{viewModel.isBusy}` `isBusy` can be an ObservableBoolean .","title":"Convert boolean to view visibility"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-converters/convert-boolean-to-view-visibility/#convertbooleantoviewvisibility","text":"static fun convertBooleanToViewVisibility(value: Boolean ): Int Binds a boolean into [`View#setVisibility(int)`](#). Sample: `android:visibility=\"@{viewModel.isBusy}` `isBusy` can be an ObservableBoolean .","title":"convertBooleanToViewVisibility"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-error-logger-impl/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ErrorLoggerImpl ErrorLoggerImpl class ErrorLoggerImpl : ErrorLogger Functions Name Summary logError Just prints the error out for the sake of debugging. fun logError(error: Throwable ): Unit trackError If debuggable, it just simply prints the error out. Otherwise, it'll upload that error to Fabric for further investigation. Should use this to catch some errors that we may not be aware of. fun trackError(error: Throwable ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-error-logger-impl/#errorloggerimpl","text":"class ErrorLoggerImpl : ErrorLogger","title":"ErrorLoggerImpl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-error-logger-impl/#functions","text":"Name Summary logError Just prints the error out for the sake of debugging. fun logError(error: Throwable ): Unit trackError If debuggable, it just simply prints the error out. Otherwise, it'll upload that error to Fabric for further investigation. Should use this to catch some errors that we may not be aware of. fun trackError(error: Throwable ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-error-logger-impl/log-error/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ErrorLoggerImpl / logError logError fun logError(error: Throwable ): Unit Just prints the error out for the sake of debugging.","title":"Log error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-error-logger-impl/log-error/#logerror","text":"fun logError(error: Throwable ): Unit Just prints the error out for the sake of debugging.","title":"logError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-error-logger-impl/track-error/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ErrorLoggerImpl / trackError trackError fun trackError(error: Throwable ): Unit If debuggable, it just simply prints the error out. Otherwise, it'll upload that error to Fabric for further investigation. Should use this to catch some errors that we may not be aware of.","title":"Track error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-error-logger-impl/track-error/#trackerror","text":"fun trackError(error: Throwable ): Unit If debuggable, it just simply prints the error out. Otherwise, it'll upload that error to Fabric for further investigation. Should use this to catch some errors that we may not be aware of.","title":"trackError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ExternalActionParams ExternalActionParams @Immutable abstract class ExternalActionParams Types Name Summary Builder interface Builder Constructors Name Summary <init> ExternalActionParams() Functions Name Summary action abstract fun action(): String ! builder open static fun builder(): Builder! flitWaysPartnerKey abstract fun flitWaysPartnerKey(): String ? segment abstract fun segment(): TripSegment !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/#externalactionparams","text":"@Immutable abstract class ExternalActionParams","title":"ExternalActionParams"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/#types","text":"Name Summary Builder interface Builder","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/#constructors","text":"Name Summary <init> ExternalActionParams()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/#functions","text":"Name Summary action abstract fun action(): String ! builder open static fun builder(): Builder! flitWaysPartnerKey abstract fun flitWaysPartnerKey(): String ? segment abstract fun segment(): TripSegment !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ExternalActionParams / <init> <init> ExternalActionParams()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-init-/#init","text":"ExternalActionParams()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/action/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ExternalActionParams / action action abstract fun action(): String !","title":"Action"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/action/#action","text":"abstract fun action(): String !","title":"action"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/builder/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ExternalActionParams / builder builder open static fun builder(): Builder!","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/builder/#builder","text":"open static fun builder(): Builder!","title":"builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/flit-ways-partner-key/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ExternalActionParams / flitWaysPartnerKey flitWaysPartnerKey @Nullable abstract fun flitWaysPartnerKey(): String ?","title":"Flit ways partner key"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/flit-ways-partner-key/#flitwayspartnerkey","text":"@Nullable abstract fun flitWaysPartnerKey(): String ?","title":"flitWaysPartnerKey"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/segment/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ExternalActionParams / segment segment abstract fun segment(): TripSegment !","title":"Segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/segment/#segment","text":"abstract fun segment(): TripSegment !","title":"segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ExternalActionParams / Builder Builder interface Builder Functions Name Summary action abstract fun action(action: String !): Builder! build abstract fun build(): ExternalActionParams ! flitWaysPartnerKey abstract fun flitWaysPartnerKey(flitWaysPartnerKey: String !): Builder! segment abstract fun segment(segment: TripSegment !): Builder!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-builder/#builder","text":"interface Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-builder/#functions","text":"Name Summary action abstract fun action(action: String !): Builder! build abstract fun build(): ExternalActionParams ! flitWaysPartnerKey abstract fun flitWaysPartnerKey(flitWaysPartnerKey: String !): Builder! segment abstract fun segment(segment: TripSegment !): Builder!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-builder/action/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ExternalActionParams / Builder / action action abstract fun action(action: String !): Builder!","title":"Action"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-builder/action/#action","text":"abstract fun action(action: String !): Builder!","title":"action"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ExternalActionParams / Builder / build build abstract fun build(): ExternalActionParams !","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-builder/build/#build","text":"abstract fun build(): ExternalActionParams !","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-builder/flit-ways-partner-key/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ExternalActionParams / Builder / flitWaysPartnerKey flitWaysPartnerKey abstract fun flitWaysPartnerKey(flitWaysPartnerKey: String !): Builder!","title":"Flit ways partner key"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-builder/flit-ways-partner-key/#flitwayspartnerkey","text":"abstract fun flitWaysPartnerKey(flitWaysPartnerKey: String !): Builder!","title":"flitWaysPartnerKey"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-builder/segment/","text":"tripkit-android / com.skedgo.tripkit.ui.core / ExternalActionParams / Builder / segment segment abstract fun segment(segment: TripSegment !): Builder!","title":"Segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-external-action-params/-builder/segment/#segment","text":"abstract fun segment(segment: TripSegment !): Builder!","title":"segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/","text":"tripkit-android / com.skedgo.tripkit.ui.core / InitializerContentProvider InitializerContentProvider class InitializerContentProvider : ContentProvider Constructors Name Summary <init> InitializerContentProvider() Functions Name Summary attachInfo fun attachInfo(context: Context?, info: ProviderInfo?): Unit delete fun delete(uri: Uri, selection: String ?, selectionArgs: Array < String >?): Int getType fun getType(uri: Uri): String ? insert fun insert(uri: Uri, values: ContentValues?): Uri? onCreate fun onCreate(): Boolean query fun query(uri: Uri, projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?): Cursor? update fun update(uri: Uri, values: ContentValues?, selection: String ?, selectionArgs: Array < String >?): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/#initializercontentprovider","text":"class InitializerContentProvider : ContentProvider","title":"InitializerContentProvider"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/#constructors","text":"Name Summary <init> InitializerContentProvider()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/#functions","text":"Name Summary attachInfo fun attachInfo(context: Context?, info: ProviderInfo?): Unit delete fun delete(uri: Uri, selection: String ?, selectionArgs: Array < String >?): Int getType fun getType(uri: Uri): String ? insert fun insert(uri: Uri, values: ContentValues?): Uri? onCreate fun onCreate(): Boolean query fun query(uri: Uri, projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?): Cursor? update fun update(uri: Uri, values: ContentValues?, selection: String ?, selectionArgs: Array < String >?): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core / InitializerContentProvider / <init> <init> InitializerContentProvider()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/-init-/#init","text":"InitializerContentProvider()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/attach-info/","text":"tripkit-android / com.skedgo.tripkit.ui.core / InitializerContentProvider / attachInfo attachInfo fun attachInfo(context: Context?, info: ProviderInfo?): Unit","title":"Attach info"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/attach-info/#attachinfo","text":"fun attachInfo(context: Context?, info: ProviderInfo?): Unit","title":"attachInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/delete/","text":"tripkit-android / com.skedgo.tripkit.ui.core / InitializerContentProvider / delete delete fun delete(uri: Uri, selection: String ?, selectionArgs: Array < String >?): Int","title":"Delete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/delete/#delete","text":"fun delete(uri: Uri, selection: String ?, selectionArgs: Array < String >?): Int","title":"delete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/get-type/","text":"tripkit-android / com.skedgo.tripkit.ui.core / InitializerContentProvider / getType getType fun getType(uri: Uri): String ?","title":"Get type"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/get-type/#gettype","text":"fun getType(uri: Uri): String ?","title":"getType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/insert/","text":"tripkit-android / com.skedgo.tripkit.ui.core / InitializerContentProvider / insert insert fun insert(uri: Uri, values: ContentValues?): Uri?","title":"Insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/insert/#insert","text":"fun insert(uri: Uri, values: ContentValues?): Uri?","title":"insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.core / InitializerContentProvider / onCreate onCreate fun onCreate(): Boolean","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/on-create/#oncreate","text":"fun onCreate(): Boolean","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/query/","text":"tripkit-android / com.skedgo.tripkit.ui.core / InitializerContentProvider / query query fun query(uri: Uri, projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?): Cursor?","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/query/#query","text":"fun query(uri: Uri, projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?): Cursor?","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/update/","text":"tripkit-android / com.skedgo.tripkit.ui.core / InitializerContentProvider / update update fun update(uri: Uri, values: ContentValues?, selection: String ?, selectionArgs: Array < String >?): Int","title":"Update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-initializer-content-provider/update/#update","text":"fun update(uri: Uri, values: ContentValues?, selection: String ?, selectionArgs: Array < String >?): Int","title":"update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.core / RxViewModel RxViewModel abstract class RxViewModel : ViewModel Constructors Name Summary <init> RxViewModel() Properties Name Summary compositeSubscription val compositeSubscription: CompositeDisposable Functions Name Summary autoClear fun <T> Observable<T>.autoClear(): Observable<T> fun Disposable.autoClear(): Unit onCleared This method will be called when this ViewModel is no longer used and will be destroyed. open fun onCleared(): Unit Inheritors Name Summary LocationSearchViewModel class LocationSearchViewModel : RxViewModel MapViewModel class MapViewModel : RxViewModel RouteInputViewModel class RouteInputViewModel : RxViewModel ServiceDetailItemViewModel class ServiceDetailItemViewModel : RxViewModel ServiceDetailViewModel class ServiceDetailViewModel : RxViewModel ServiceStopMapViewModel class ServiceStopMapViewModel : RxViewModel ServiceViewModel abstract class ServiceViewModel : RxViewModel TimetableViewModel class TimetableViewModel : RxViewModel TripResultListViewModel class TripResultListViewModel : RxViewModel TripResultMapViewModel class TripResultMapViewModel : RxViewModel TripResultPagerViewModel class TripResultPagerViewModel : RxViewModel TripResultTransportItemViewModel class TripResultTransportItemViewModel : RxViewModel TripResultViewModel class TripResultViewModel : RxViewModel TripSegmentItemViewModel class TripSegmentItemViewModel : RxViewModel TripSegmentsViewModel class TripSegmentsViewModel : RxViewModel TripSegmentViewModel class TripSegmentViewModel : RxViewModel","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/#rxviewmodel","text":"abstract class RxViewModel : ViewModel","title":"RxViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/#constructors","text":"Name Summary <init> RxViewModel()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/#properties","text":"Name Summary compositeSubscription val compositeSubscription: CompositeDisposable","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/#functions","text":"Name Summary autoClear fun <T> Observable<T>.autoClear(): Observable<T> fun Disposable.autoClear(): Unit onCleared This method will be called when this ViewModel is no longer used and will be destroyed. open fun onCleared(): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/#inheritors","text":"Name Summary LocationSearchViewModel class LocationSearchViewModel : RxViewModel MapViewModel class MapViewModel : RxViewModel RouteInputViewModel class RouteInputViewModel : RxViewModel ServiceDetailItemViewModel class ServiceDetailItemViewModel : RxViewModel ServiceDetailViewModel class ServiceDetailViewModel : RxViewModel ServiceStopMapViewModel class ServiceStopMapViewModel : RxViewModel ServiceViewModel abstract class ServiceViewModel : RxViewModel TimetableViewModel class TimetableViewModel : RxViewModel TripResultListViewModel class TripResultListViewModel : RxViewModel TripResultMapViewModel class TripResultMapViewModel : RxViewModel TripResultPagerViewModel class TripResultPagerViewModel : RxViewModel TripResultTransportItemViewModel class TripResultTransportItemViewModel : RxViewModel TripResultViewModel class TripResultViewModel : RxViewModel TripSegmentItemViewModel class TripSegmentItemViewModel : RxViewModel TripSegmentsViewModel class TripSegmentsViewModel : RxViewModel TripSegmentViewModel class TripSegmentViewModel : RxViewModel","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core / RxViewModel / <init> <init> RxViewModel()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/-init-/#init","text":"RxViewModel()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/auto-clear/","text":"tripkit-android / com.skedgo.tripkit.ui.core / RxViewModel / autoClear autoClear fun <T> Observable<T>.autoClear(): Observable<T> fun Disposable.autoClear(): Unit","title":"Auto clear"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/auto-clear/#autoclear","text":"fun <T> Observable<T>.autoClear(): Observable<T> fun Disposable.autoClear(): Unit","title":"autoClear"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/composite-subscription/","text":"tripkit-android / com.skedgo.tripkit.ui.core / RxViewModel / compositeSubscription compositeSubscription protected val compositeSubscription: CompositeDisposable","title":"Composite subscription"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/composite-subscription/#compositesubscription","text":"protected val compositeSubscription: CompositeDisposable","title":"compositeSubscription"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/on-cleared/","text":"tripkit-android / com.skedgo.tripkit.ui.core / RxViewModel / onCleared onCleared open fun onCleared(): Unit This method will be called when this ViewModel is no longer used and will be destroyed.","title":"On cleared"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-rx-view-model/on-cleared/#oncleared","text":"open fun onCleared(): Unit This method will be called when this ViewModel is no longer used and will be destroyed.","title":"onCleared"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory/","text":"tripkit-android / com.skedgo.tripkit.ui.core / SchedulerFactory SchedulerFactory interface SchedulerFactory Properties Name Summary computationScheduler abstract val computationScheduler: Scheduler ioScheduler abstract val ioScheduler: Scheduler mainScheduler abstract val mainScheduler: Scheduler Inheritors Name Summary SchedulerFactoryImpl class SchedulerFactoryImpl : SchedulerFactory","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory/#schedulerfactory","text":"interface SchedulerFactory","title":"SchedulerFactory"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory/#properties","text":"Name Summary computationScheduler abstract val computationScheduler: Scheduler ioScheduler abstract val ioScheduler: Scheduler mainScheduler abstract val mainScheduler: Scheduler","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory/#inheritors","text":"Name Summary SchedulerFactoryImpl class SchedulerFactoryImpl : SchedulerFactory","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory/computation-scheduler/","text":"tripkit-android / com.skedgo.tripkit.ui.core / SchedulerFactory / computationScheduler computationScheduler abstract val computationScheduler: Scheduler","title":"Computation scheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory/computation-scheduler/#computationscheduler","text":"abstract val computationScheduler: Scheduler","title":"computationScheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory/io-scheduler/","text":"tripkit-android / com.skedgo.tripkit.ui.core / SchedulerFactory / ioScheduler ioScheduler abstract val ioScheduler: Scheduler","title":"Io scheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory/io-scheduler/#ioscheduler","text":"abstract val ioScheduler: Scheduler","title":"ioScheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory/main-scheduler/","text":"tripkit-android / com.skedgo.tripkit.ui.core / SchedulerFactory / mainScheduler mainScheduler abstract val mainScheduler: Scheduler","title":"Main scheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory/main-scheduler/#mainscheduler","text":"abstract val mainScheduler: Scheduler","title":"mainScheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory-impl/","text":"tripkit-android / com.skedgo.tripkit.ui.core / SchedulerFactoryImpl SchedulerFactoryImpl class SchedulerFactoryImpl : SchedulerFactory Properties Name Summary computationScheduler val computationScheduler: Scheduler ioScheduler val ioScheduler: Scheduler mainScheduler val mainScheduler: Scheduler","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory-impl/#schedulerfactoryimpl","text":"class SchedulerFactoryImpl : SchedulerFactory","title":"SchedulerFactoryImpl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory-impl/#properties","text":"Name Summary computationScheduler val computationScheduler: Scheduler ioScheduler val ioScheduler: Scheduler mainScheduler val mainScheduler: Scheduler","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory-impl/computation-scheduler/","text":"tripkit-android / com.skedgo.tripkit.ui.core / SchedulerFactoryImpl / computationScheduler computationScheduler val computationScheduler: Scheduler","title":"Computation scheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory-impl/computation-scheduler/#computationscheduler","text":"val computationScheduler: Scheduler","title":"computationScheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory-impl/io-scheduler/","text":"tripkit-android / com.skedgo.tripkit.ui.core / SchedulerFactoryImpl / ioScheduler ioScheduler val ioScheduler: Scheduler","title":"Io scheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory-impl/io-scheduler/#ioscheduler","text":"val ioScheduler: Scheduler","title":"ioScheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory-impl/main-scheduler/","text":"tripkit-android / com.skedgo.tripkit.ui.core / SchedulerFactoryImpl / mainScheduler mainScheduler val mainScheduler: Scheduler","title":"Main scheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-scheduler-factory-impl/main-scheduler/#mainscheduler","text":"val mainScheduler: Scheduler","title":"mainScheduler"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-stops-persistor/","text":"tripkit-android / com.skedgo.tripkit.ui.core / StopsPersistor StopsPersistor open class StopsPersistor : IStopsPersistor Constructors Name Summary <init> StopsPersistor(appContext: Context, gson: Gson, scheduledStopRepository: ScheduledStopRepository ) Functions Name Summary saveStopsSync open fun saveStopsSync(cells: List <Group>): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-stops-persistor/#stopspersistor","text":"open class StopsPersistor : IStopsPersistor","title":"StopsPersistor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-stops-persistor/#constructors","text":"Name Summary <init> StopsPersistor(appContext: Context, gson: Gson, scheduledStopRepository: ScheduledStopRepository )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-stops-persistor/#functions","text":"Name Summary saveStopsSync open fun saveStopsSync(cells: List <Group>): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-stops-persistor/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core / StopsPersistor / <init> <init> StopsPersistor(@NonNull appContext: Context, @NonNull gson: Gson, @NonNull scheduledStopRepository: ScheduledStopRepository )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-stops-persistor/-init-/#init","text":"StopsPersistor(@NonNull appContext: Context, @NonNull gson: Gson, @NonNull scheduledStopRepository: ScheduledStopRepository )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-stops-persistor/save-stops-sync/","text":"tripkit-android / com.skedgo.tripkit.ui.core / StopsPersistor / saveStopsSync saveStopsSync open fun saveStopsSync(@NonNull cells: List <Group>): Unit","title":"Save stops sync"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-stops-persistor/save-stops-sync/#savestopssync","text":"open fun saveStopsSync(@NonNull cells: List <Group>): Unit","title":"saveStopsSync"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-unable-to-fetch-bitmap-error/","text":"tripkit-android / com.skedgo.tripkit.ui.core / UnableToFetchBitmapError UnableToFetchBitmapError class UnableToFetchBitmapError : RuntimeException Constructors Name Summary <init> UnableToFetchBitmapError(message: String )","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-unable-to-fetch-bitmap-error/#unabletofetchbitmaperror","text":"class UnableToFetchBitmapError : RuntimeException","title":"UnableToFetchBitmapError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-unable-to-fetch-bitmap-error/#constructors","text":"Name Summary <init> UnableToFetchBitmapError(message: String )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-unable-to-fetch-bitmap-error/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core / UnableToFetchBitmapError / <init> <init> UnableToFetchBitmapError(message: String )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-unable-to-fetch-bitmap-error/-init-/#init","text":"UnableToFetchBitmapError(message: String )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-unable-to-find-place-coordinates-error/","text":"tripkit-android / com.skedgo.tripkit.ui.core / UnableToFindPlaceCoordinatesError UnableToFindPlaceCoordinatesError class UnableToFindPlaceCoordinatesError : Throwable Constructors Name Summary <init> UnableToFindPlaceCoordinatesError(_cause: Throwable )","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-unable-to-find-place-coordinates-error/#unabletofindplacecoordinateserror","text":"class UnableToFindPlaceCoordinatesError : Throwable","title":"UnableToFindPlaceCoordinatesError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-unable-to-find-place-coordinates-error/#constructors","text":"Name Summary <init> UnableToFindPlaceCoordinatesError(_cause: Throwable )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-unable-to-find-place-coordinates-error/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core / UnableToFindPlaceCoordinatesError / <init> <init> UnableToFindPlaceCoordinatesError(_cause: Throwable )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/-unable-to-find-place-coordinates-error/-init-/#init","text":"UnableToFindPlaceCoordinatesError(_cause: Throwable )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/android.view.-view/","text":"tripkit-android / com.skedgo.tripkit.ui.core / android.view.View Extensions for android.view.View Name Summary afterMeasured fun View.afterMeasured(): Single< Unit >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/android.view.-view/#extensions-for-androidviewview","text":"Name Summary afterMeasured fun View.afterMeasured(): Single< Unit >","title":"Extensions for android.view.View"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/android.view.-view/after-measured/","text":"tripkit-android / com.skedgo.tripkit.ui.core / android.view.View / afterMeasured afterMeasured fun View.afterMeasured(): Single< Unit >","title":"After measured"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/android.view.-view/after-measured/#aftermeasured","text":"fun View.afterMeasured(): Single< Unit >","title":"afterMeasured"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/com.squareup.picasso.-picasso/","text":"tripkit-android / com.skedgo.tripkit.ui.core / com.squareup.picasso.Picasso Extensions for com.squareup.picasso.Picasso Name Summary fetchAsync fun Picasso.fetchAsync(url: String ): Single<Bitmap> fetchAsyncWithSize fun Picasso.fetchAsyncWithSize(url: String , maxSize: Int ? = null): Single<Bitmap>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/com.squareup.picasso.-picasso/#extensions-for-comsquareuppicassopicasso","text":"Name Summary fetchAsync fun Picasso.fetchAsync(url: String ): Single<Bitmap> fetchAsyncWithSize fun Picasso.fetchAsyncWithSize(url: String , maxSize: Int ? = null): Single<Bitmap>","title":"Extensions for com.squareup.picasso.Picasso"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/com.squareup.picasso.-picasso/fetch-async-with-size/","text":"tripkit-android / com.skedgo.tripkit.ui.core / com.squareup.picasso.Picasso / fetchAsyncWithSize fetchAsyncWithSize fun Picasso.fetchAsyncWithSize(url: String , @DimenRes maxSize: Int ? = null): Single<Bitmap>","title":"Fetch async with size"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/com.squareup.picasso.-picasso/fetch-async-with-size/#fetchasyncwithsize","text":"fun Picasso.fetchAsyncWithSize(url: String , @DimenRes maxSize: Int ? = null): Single<Bitmap>","title":"fetchAsyncWithSize"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/com.squareup.picasso.-picasso/fetch-async/","text":"tripkit-android / com.skedgo.tripkit.ui.core / com.squareup.picasso.Picasso / fetchAsync fetchAsync fun Picasso.fetchAsync(url: String ): Single<Bitmap>","title":"Fetch async"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/com.squareup.picasso.-picasso/fetch-async/#fetchasync","text":"fun Picasso.fetchAsync(url: String ): Single<Bitmap>","title":"fetchAsync"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/io.reactivex.-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.core / io.reactivex.Observable Extensions for io.reactivex.Observable Name Summary filterNone fun <T : Any > Observable<out Optional<T>>.filterNone(): Observable< Unit > filterSome fun <T : Any > Observable<out Optional<T>>.filterSome(): Observable<T> isExecuting fun <T> Observable<T>.isExecuting(f: ( Boolean ) -> Unit ): Observable<T>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/io.reactivex.-observable/#extensions-for-ioreactivexobservable","text":"Name Summary filterNone fun <T : Any > Observable<out Optional<T>>.filterNone(): Observable< Unit > filterSome fun <T : Any > Observable<out Optional<T>>.filterSome(): Observable<T> isExecuting fun <T> Observable<T>.isExecuting(f: ( Boolean ) -> Unit ): Observable<T>","title":"Extensions for io.reactivex.Observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/io.reactivex.-observable/filter-none/","text":"tripkit-android / com.skedgo.tripkit.ui.core / io.reactivex.Observable / filterNone filterNone fun <T : Any > Observable<out Optional<T>>.filterNone(): Observable< Unit >","title":"Filter none"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/io.reactivex.-observable/filter-none/#filternone","text":"fun <T : Any > Observable<out Optional<T>>.filterNone(): Observable< Unit >","title":"filterNone"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/io.reactivex.-observable/filter-some/","text":"tripkit-android / com.skedgo.tripkit.ui.core / io.reactivex.Observable / filterSome filterSome fun <T : Any > Observable<out Optional<T>>.filterSome(): Observable<T>","title":"Filter some"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/io.reactivex.-observable/filter-some/#filtersome","text":"fun <T : Any > Observable<out Optional<T>>.filterSome(): Observable<T>","title":"filterSome"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/io.reactivex.-observable/is-executing/","text":"tripkit-android / com.skedgo.tripkit.ui.core / io.reactivex.Observable / isExecuting isExecuting fun <T> Observable<T>.isExecuting(f: ( Boolean ) -> Unit ): Observable<T>","title":"Is executing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core/io.reactivex.-observable/is-executing/#isexecuting","text":"fun <T> Observable<T>.isExecuting(f: ( Boolean ) -> Unit ): Observable<T>","title":"isExecuting"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding Package com.skedgo.tripkit.ui.core.binding Types Name Summary ArrayBindingAdapter class ArrayBindingAdapter ImageViewBindingAdapters class ImageViewBindingAdapters ViewPageCurrentItemBindings object ViewPageCurrentItemBindings","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/#package-comskedgotripkituicorebinding","text":"","title":"Package com.skedgo.tripkit.ui.core.binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/#types","text":"Name Summary ArrayBindingAdapter class ArrayBindingAdapter ImageViewBindingAdapters class ImageViewBindingAdapters ViewPageCurrentItemBindings object ViewPageCurrentItemBindings","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-array-binding-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ArrayBindingAdapter ArrayBindingAdapter class ArrayBindingAdapter Constructors Name Summary <init> ArrayBindingAdapter() Functions Name Summary setEntries static fun <T : Any !> setEntries(viewGroup: ViewGroup!, entries: MutableList <T>!, layoutId: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-array-binding-adapter/#arraybindingadapter","text":"class ArrayBindingAdapter","title":"ArrayBindingAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-array-binding-adapter/#constructors","text":"Name Summary <init> ArrayBindingAdapter()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-array-binding-adapter/#functions","text":"Name Summary setEntries static fun <T : Any !> setEntries(viewGroup: ViewGroup!, entries: MutableList <T>!, layoutId: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-array-binding-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ArrayBindingAdapter / <init> <init> ArrayBindingAdapter()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-array-binding-adapter/-init-/#init","text":"ArrayBindingAdapter()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-array-binding-adapter/set-entries/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ArrayBindingAdapter / setEntries setEntries static fun <T : Any !> setEntries(viewGroup: ViewGroup!, entries: MutableList <T>!, layoutId: Int ): Unit","title":"Set entries"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-array-binding-adapter/set-entries/#setentries","text":"static fun <T : Any !> setEntries(viewGroup: ViewGroup!, entries: MutableList <T>!, layoutId: Int ): Unit","title":"setEntries"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ImageViewBindingAdapters ImageViewBindingAdapters class ImageViewBindingAdapters Constructors Name Summary <init> ImageViewBindingAdapters() Functions Name Summary bindModeIconId static fun bindModeIconId(view: ImageView!, modeIconId: String !): Unit bindModeId static fun bindModeId(iconView: ImageView!, modeId: String !): Unit setCompatModeInfo static fun setCompatModeInfo(view: ImageView!, modeInfo: ModeInfo ?): Unit setFadeVisible static fun setFadeVisible(view: View!, visible: Boolean ): Unit setModeInfo static fun setModeInfo(view: ImageView!, modeInfo: ModeInfo ?): Unit setVisibility static fun setVisibility(view: View!, visible: Boolean ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/#imageviewbindingadapters","text":"class ImageViewBindingAdapters","title":"ImageViewBindingAdapters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/#constructors","text":"Name Summary <init> ImageViewBindingAdapters()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/#functions","text":"Name Summary bindModeIconId static fun bindModeIconId(view: ImageView!, modeIconId: String !): Unit bindModeId static fun bindModeId(iconView: ImageView!, modeId: String !): Unit setCompatModeInfo static fun setCompatModeInfo(view: ImageView!, modeInfo: ModeInfo ?): Unit setFadeVisible static fun setFadeVisible(view: View!, visible: Boolean ): Unit setModeInfo static fun setModeInfo(view: ImageView!, modeInfo: ModeInfo ?): Unit setVisibility static fun setVisibility(view: View!, visible: Boolean ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ImageViewBindingAdapters / <init> <init> ImageViewBindingAdapters()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/-init-/#init","text":"ImageViewBindingAdapters()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/bind-mode-icon-id/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ImageViewBindingAdapters / bindModeIconId bindModeIconId static fun bindModeIconId(view: ImageView!, modeIconId: String !): Unit","title":"Bind mode icon id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/bind-mode-icon-id/#bindmodeiconid","text":"static fun bindModeIconId(view: ImageView!, modeIconId: String !): Unit","title":"bindModeIconId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/bind-mode-id/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ImageViewBindingAdapters / bindModeId bindModeId static fun bindModeId(iconView: ImageView!, modeId: String !): Unit","title":"Bind mode id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/bind-mode-id/#bindmodeid","text":"static fun bindModeId(iconView: ImageView!, modeId: String !): Unit","title":"bindModeId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/set-compat-mode-info/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ImageViewBindingAdapters / setCompatModeInfo setCompatModeInfo static fun setCompatModeInfo(view: ImageView!, @Nullable modeInfo: ModeInfo ?): Unit","title":"Set compat mode info"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/set-compat-mode-info/#setcompatmodeinfo","text":"static fun setCompatModeInfo(view: ImageView!, @Nullable modeInfo: ModeInfo ?): Unit","title":"setCompatModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/set-fade-visible/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ImageViewBindingAdapters / setFadeVisible setFadeVisible static fun setFadeVisible(view: View!, visible: Boolean ): Unit","title":"Set fade visible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/set-fade-visible/#setfadevisible","text":"static fun setFadeVisible(view: View!, visible: Boolean ): Unit","title":"setFadeVisible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/set-mode-info/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ImageViewBindingAdapters / setModeInfo setModeInfo static fun setModeInfo(view: ImageView!, @Nullable modeInfo: ModeInfo ?): Unit","title":"Set mode info"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/set-mode-info/#setmodeinfo","text":"static fun setModeInfo(view: ImageView!, @Nullable modeInfo: ModeInfo ?): Unit","title":"setModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/set-visibility/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ImageViewBindingAdapters / setVisibility setVisibility static fun setVisibility(view: View!, visible: Boolean ): Unit","title":"Set visibility"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-image-view-binding-adapters/set-visibility/#setvisibility","text":"static fun setVisibility(view: View!, visible: Boolean ): Unit","title":"setVisibility"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-view-page-current-item-bindings/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ViewPageCurrentItemBindings ViewPageCurrentItemBindings object ViewPageCurrentItemBindings Functions Name Summary setCurrentItem fun setCurrentItem(view: ViewPager, currentItem: Int , tripGroups: List < TripGroup >): Unit setListeners fun setListeners(viewPager: ViewPager, inverseBindingListener: InverseBindingListener): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-view-page-current-item-bindings/#viewpagecurrentitembindings","text":"object ViewPageCurrentItemBindings","title":"ViewPageCurrentItemBindings"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-view-page-current-item-bindings/#functions","text":"Name Summary setCurrentItem fun setCurrentItem(view: ViewPager, currentItem: Int , tripGroups: List < TripGroup >): Unit setListeners fun setListeners(viewPager: ViewPager, inverseBindingListener: InverseBindingListener): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-view-page-current-item-bindings/set-current-item/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ViewPageCurrentItemBindings / setCurrentItem setCurrentItem @JvmStatic fun setCurrentItem(view: ViewPager, currentItem: Int , tripGroups: List < TripGroup >): Unit","title":"Set current item"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-view-page-current-item-bindings/set-current-item/#setcurrentitem","text":"@JvmStatic fun setCurrentItem(view: ViewPager, currentItem: Int , tripGroups: List < TripGroup >): Unit","title":"setCurrentItem"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-view-page-current-item-bindings/set-listeners/","text":"tripkit-android / com.skedgo.tripkit.ui.core.binding / ViewPageCurrentItemBindings / setListeners setListeners @JvmStatic fun setListeners(viewPager: ViewPager, inverseBindingListener: InverseBindingListener): Unit","title":"Set listeners"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.binding/-view-page-current-item-bindings/set-listeners/#setlisteners","text":"@JvmStatic fun setListeners(viewPager: ViewPager, inverseBindingListener: InverseBindingListener): Unit","title":"setListeners"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs Package com.skedgo.tripkit.ui.core.modeprefs Types Name Summary IsIncluded typealias IsIncluded = Boolean IsTransitModeIncluded data class IsTransitModeIncluded IsTransitModeIncludedRepository interface IsTransitModeIncludedRepository TransitModeId typealias TransitModeId = String TransportModePreference data class TransportModePreference","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/#package-comskedgotripkituicoremodeprefs","text":"","title":"Package com.skedgo.tripkit.ui.core.modeprefs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/#types","text":"Name Summary IsIncluded typealias IsIncluded = Boolean IsTransitModeIncluded data class IsTransitModeIncluded IsTransitModeIncludedRepository interface IsTransitModeIncludedRepository TransitModeId typealias TransitModeId = String TransportModePreference data class TransportModePreference","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-included/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / IsIncluded IsIncluded typealias IsIncluded = Boolean","title":" is included"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-included/#isincluded","text":"typealias IsIncluded = Boolean","title":"IsIncluded"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transit-mode-id/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / TransitModeId TransitModeId typealias TransitModeId = String","title":" transit mode id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transit-mode-id/#transitmodeid","text":"typealias TransitModeId = String","title":"TransitModeId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / IsTransitModeIncluded IsTransitModeIncluded data class IsTransitModeIncluded Constructors Name Summary <init> IsTransitModeIncluded(transitModeId: TransitModeId , isIncluded: IsIncluded ) Properties Name Summary isIncluded val isIncluded: IsIncluded transitModeId val transitModeId: TransitModeId","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included/#istransitmodeincluded","text":"data class IsTransitModeIncluded","title":"IsTransitModeIncluded"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included/#constructors","text":"Name Summary <init> IsTransitModeIncluded(transitModeId: TransitModeId , isIncluded: IsIncluded )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included/#properties","text":"Name Summary isIncluded val isIncluded: IsIncluded transitModeId val transitModeId: TransitModeId","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / IsTransitModeIncluded / <init> <init> IsTransitModeIncluded(transitModeId: TransitModeId , isIncluded: IsIncluded )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included/-init-/#init","text":"IsTransitModeIncluded(transitModeId: TransitModeId , isIncluded: IsIncluded )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included/is-included/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / IsTransitModeIncluded / isIncluded isIncluded val isIncluded: IsIncluded","title":"Is included"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included/is-included/#isincluded","text":"val isIncluded: IsIncluded","title":"isIncluded"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included/transit-mode-id/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / IsTransitModeIncluded / transitModeId transitModeId val transitModeId: TransitModeId","title":"Transit mode id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included/transit-mode-id/#transitmodeid","text":"val transitModeId: TransitModeId","title":"transitModeId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included-repository/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / IsTransitModeIncludedRepository IsTransitModeIncludedRepository interface IsTransitModeIncludedRepository Functions Name Summary getAll abstract fun getAll(): Observable< IsTransitModeIncluded > isTransitModeIncluded abstract fun isTransitModeIncluded(modeId: TransitModeId ): Single< Boolean > setIsTransitModeIncluded abstract fun setIsTransitModeIncluded(modeId: TransitModeId , isIncluded: IsIncluded ): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included-repository/#istransitmodeincludedrepository","text":"interface IsTransitModeIncludedRepository","title":"IsTransitModeIncludedRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included-repository/#functions","text":"Name Summary getAll abstract fun getAll(): Observable< IsTransitModeIncluded > isTransitModeIncluded abstract fun isTransitModeIncluded(modeId: TransitModeId ): Single< Boolean > setIsTransitModeIncluded abstract fun setIsTransitModeIncluded(modeId: TransitModeId , isIncluded: IsIncluded ): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included-repository/get-all/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / IsTransitModeIncludedRepository / getAll getAll abstract fun getAll(): Observable< IsTransitModeIncluded >","title":"Get all"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included-repository/get-all/#getall","text":"abstract fun getAll(): Observable< IsTransitModeIncluded >","title":"getAll"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included-repository/is-transit-mode-included/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / IsTransitModeIncludedRepository / isTransitModeIncluded isTransitModeIncluded abstract fun isTransitModeIncluded(modeId: TransitModeId ): Single< Boolean >","title":"Is transit mode included"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included-repository/is-transit-mode-included/#istransitmodeincluded","text":"abstract fun isTransitModeIncluded(modeId: TransitModeId ): Single< Boolean >","title":"isTransitModeIncluded"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included-repository/set-is-transit-mode-included/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / IsTransitModeIncludedRepository / setIsTransitModeIncluded setIsTransitModeIncluded abstract fun setIsTransitModeIncluded(modeId: TransitModeId , isIncluded: IsIncluded ): Completable","title":"Set is transit mode included"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-is-transit-mode-included-repository/set-is-transit-mode-included/#setistransitmodeincluded","text":"abstract fun setIsTransitModeIncluded(modeId: TransitModeId , isIncluded: IsIncluded ): Completable","title":"setIsTransitModeIncluded"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / TransportModePreference TransportModePreference data class TransportModePreference Constructors Name Summary <init> TransportModePreference(modeId: String , isIncluded: Boolean , isMinimized: Boolean ) Properties Name Summary isIncluded val isIncluded: Boolean isMinimized val isMinimized: Boolean modeId val modeId: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/#transportmodepreference","text":"data class TransportModePreference","title":"TransportModePreference"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/#constructors","text":"Name Summary <init> TransportModePreference(modeId: String , isIncluded: Boolean , isMinimized: Boolean )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/#properties","text":"Name Summary isIncluded val isIncluded: Boolean isMinimized val isMinimized: Boolean modeId val modeId: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / TransportModePreference / <init> <init> TransportModePreference(modeId: String , isIncluded: Boolean , isMinimized: Boolean )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/-init-/#init","text":"TransportModePreference(modeId: String , isIncluded: Boolean , isMinimized: Boolean )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/is-included/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / TransportModePreference / isIncluded isIncluded val isIncluded: Boolean","title":"Is included"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/is-included/#isincluded","text":"val isIncluded: Boolean","title":"isIncluded"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/is-minimized/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / TransportModePreference / isMinimized isMinimized val isMinimized: Boolean","title":"Is minimized"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/is-minimized/#isminimized","text":"val isMinimized: Boolean","title":"isMinimized"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/mode-id/","text":"tripkit-android / com.skedgo.tripkit.ui.core.modeprefs / TransportModePreference / modeId modeId val modeId: String","title":"Mode id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.modeprefs/-transport-mode-preference/mode-id/#modeid","text":"val modeId: String","title":"modeId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions Package com.skedgo.tripkit.ui.core.permissions Types Name Summary ActionResult enum class ActionResult CanRequestPermission interface CanRequestPermission PermissionResult sealed class PermissionResult PermissionsRequest sealed class PermissionsRequest Exceptions Name Summary PermissionDenialError class PermissionDenialError : RuntimeException Extensions for External Classes Name Summary android.app.Activity Properties Name Summary REQUEST_CALENDAR_PERMISSION const val REQUEST_CALENDAR_PERMISSION: Int REQUEST_LOCATION_PERMISSION const val REQUEST_LOCATION_PERMISSION: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/#package-comskedgotripkituicorepermissions","text":"","title":"Package com.skedgo.tripkit.ui.core.permissions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/#types","text":"Name Summary ActionResult enum class ActionResult CanRequestPermission interface CanRequestPermission PermissionResult sealed class PermissionResult PermissionsRequest sealed class PermissionsRequest","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/#exceptions","text":"Name Summary PermissionDenialError class PermissionDenialError : RuntimeException","title":"Exceptions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/#extensions-for-external-classes","text":"Name Summary android.app.Activity","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/#properties","text":"Name Summary REQUEST_CALENDAR_PERMISSION const val REQUEST_CALENDAR_PERMISSION: Int REQUEST_LOCATION_PERMISSION const val REQUEST_LOCATION_PERMISSION: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-r-e-q-u-e-s-t_-c-a-l-e-n-d-a-r_-p-e-r-m-i-s-s-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / REQUEST_CALENDAR_PERMISSION REQUEST_CALENDAR_PERMISSION const val REQUEST_CALENDAR_PERMISSION: Int","title":" r e q u e s t  c a l e n d a r  p e r m i s s i o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-r-e-q-u-e-s-t_-c-a-l-e-n-d-a-r_-p-e-r-m-i-s-s-i-o-n/#request_calendar_permission","text":"const val REQUEST_CALENDAR_PERMISSION: Int","title":"REQUEST_CALENDAR_PERMISSION"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-r-e-q-u-e-s-t_-l-o-c-a-t-i-o-n_-p-e-r-m-i-s-s-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / REQUEST_LOCATION_PERMISSION REQUEST_LOCATION_PERMISSION const val REQUEST_LOCATION_PERMISSION: Int","title":" r e q u e s t  l o c a t i o n  p e r m i s s i o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-r-e-q-u-e-s-t_-l-o-c-a-t-i-o-n_-p-e-r-m-i-s-s-i-o-n/#request_location_permission","text":"const val REQUEST_LOCATION_PERMISSION: Int","title":"REQUEST_LOCATION_PERMISSION"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-action-result/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / ActionResult ActionResult enum class ActionResult Enum Values Name Summary Proceed Cancel","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-action-result/#actionresult","text":"enum class ActionResult","title":"ActionResult"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-action-result/#enum-values","text":"Name Summary Proceed Cancel","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-action-result/-cancel/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / ActionResult / Cancel Cancel Cancel","title":" cancel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-action-result/-cancel/#cancel","text":"Cancel","title":"Cancel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-action-result/-proceed/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / ActionResult / Proceed Proceed Proceed","title":" proceed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-action-result/-proceed/#proceed","text":"Proceed","title":"Proceed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-can-request-permission/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / CanRequestPermission CanRequestPermission interface CanRequestPermission Functions Name Summary requestPermissions abstract fun requestPermissions(permissionsRequest: PermissionsRequest , onRationale: () -> Single< ActionResult >, onNeverAskAgainDenial: () -> Unit ): Single< PermissionResult >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-can-request-permission/#canrequestpermission","text":"interface CanRequestPermission","title":"CanRequestPermission"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-can-request-permission/#functions","text":"Name Summary requestPermissions abstract fun requestPermissions(permissionsRequest: PermissionsRequest , onRationale: () -> Single< ActionResult >, onNeverAskAgainDenial: () -> Unit ): Single< PermissionResult >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-can-request-permission/request-permissions/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / CanRequestPermission / requestPermissions requestPermissions abstract fun requestPermissions(permissionsRequest: PermissionsRequest , onRationale: () -> Single< ActionResult >, onNeverAskAgainDenial: () -> Unit ): Single< PermissionResult >","title":"Request permissions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-can-request-permission/request-permissions/#requestpermissions","text":"abstract fun requestPermissions(permissionsRequest: PermissionsRequest , onRationale: () -> Single< ActionResult >, onNeverAskAgainDenial: () -> Unit ): Single< PermissionResult >","title":"requestPermissions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-denial-error/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionDenialError PermissionDenialError class PermissionDenialError : RuntimeException Constructors Name Summary <init> PermissionDenialError()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-denial-error/#permissiondenialerror","text":"class PermissionDenialError : RuntimeException","title":"PermissionDenialError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-denial-error/#constructors","text":"Name Summary <init> PermissionDenialError()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-denial-error/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionDenialError / <init> <init> PermissionDenialError()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-denial-error/-init-/#init","text":"PermissionDenialError()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionResult PermissionResult sealed class PermissionResult Types Name Summary Denied data class Denied : PermissionResult DeniedWithNeverAskAgain data class DeniedWithNeverAskAgain : PermissionResult Granted data class Granted : PermissionResult","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/#permissionresult","text":"sealed class PermissionResult","title":"PermissionResult"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/#types","text":"Name Summary Denied data class Denied : PermissionResult DeniedWithNeverAskAgain data class DeniedWithNeverAskAgain : PermissionResult Granted data class Granted : PermissionResult","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionResult / Denied Denied data class Denied : PermissionResult Constructors Name Summary <init> Denied(permissions: Array <out String >) Properties Name Summary permissions val permissions: Array <out String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied/#denied","text":"data class Denied : PermissionResult","title":"Denied"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied/#constructors","text":"Name Summary <init> Denied(permissions: Array <out String >)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied/#properties","text":"Name Summary permissions val permissions: Array <out String >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionResult / Denied / <init> <init> Denied(permissions: Array <out String >)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied/-init-/#init","text":"Denied(permissions: Array <out String >)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied/permissions/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionResult / Denied / permissions permissions val permissions: Array <out String >","title":"Permissions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied/permissions/#permissions","text":"val permissions: Array <out String >","title":"permissions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied-with-never-ask-again/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionResult / DeniedWithNeverAskAgain DeniedWithNeverAskAgain data class DeniedWithNeverAskAgain : PermissionResult Constructors Name Summary <init> DeniedWithNeverAskAgain(permissions: Array <out String >) Properties Name Summary permissions val permissions: Array <out String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied-with-never-ask-again/#deniedwithneveraskagain","text":"data class DeniedWithNeverAskAgain : PermissionResult","title":"DeniedWithNeverAskAgain"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied-with-never-ask-again/#constructors","text":"Name Summary <init> DeniedWithNeverAskAgain(permissions: Array <out String >)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied-with-never-ask-again/#properties","text":"Name Summary permissions val permissions: Array <out String >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied-with-never-ask-again/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionResult / DeniedWithNeverAskAgain / <init> <init> DeniedWithNeverAskAgain(permissions: Array <out String >)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied-with-never-ask-again/-init-/#init","text":"DeniedWithNeverAskAgain(permissions: Array <out String >)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied-with-never-ask-again/permissions/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionResult / DeniedWithNeverAskAgain / permissions permissions val permissions: Array <out String >","title":"Permissions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-denied-with-never-ask-again/permissions/#permissions","text":"val permissions: Array <out String >","title":"permissions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-granted/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionResult / Granted Granted data class Granted : PermissionResult Constructors Name Summary <init> Granted(permissions: Array <out String >) Properties Name Summary permissions val permissions: Array <out String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-granted/#granted","text":"data class Granted : PermissionResult","title":"Granted"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-granted/#constructors","text":"Name Summary <init> Granted(permissions: Array <out String >)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-granted/#properties","text":"Name Summary permissions val permissions: Array <out String >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-granted/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionResult / Granted / <init> <init> Granted(permissions: Array <out String >)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-granted/-init-/#init","text":"Granted(permissions: Array <out String >)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-granted/permissions/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionResult / Granted / permissions permissions val permissions: Array <out String >","title":"Permissions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permission-result/-granted/permissions/#permissions","text":"val permissions: Array <out String >","title":"permissions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionsRequest PermissionsRequest sealed class PermissionsRequest Types Name Summary Calendar class Calendar : PermissionsRequest Location class Location : PermissionsRequest Properties Name Summary permissions val permissions: Array < String > requestCode val requestCode: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/#permissionsrequest","text":"sealed class PermissionsRequest","title":"PermissionsRequest"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/#types","text":"Name Summary Calendar class Calendar : PermissionsRequest Location class Location : PermissionsRequest","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/#properties","text":"Name Summary permissions val permissions: Array < String > requestCode val requestCode: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/permissions/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionsRequest / permissions permissions val permissions: Array < String >","title":"Permissions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/permissions/#permissions","text":"val permissions: Array < String >","title":"permissions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/request-code/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionsRequest / requestCode requestCode val requestCode: Int","title":"Request code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/request-code/#requestcode","text":"val requestCode: Int","title":"requestCode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/-calendar/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionsRequest / Calendar Calendar class Calendar : PermissionsRequest Constructors Name Summary <init> Calendar()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/-calendar/#calendar","text":"class Calendar : PermissionsRequest","title":"Calendar"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/-calendar/#constructors","text":"Name Summary <init> Calendar()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/-calendar/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionsRequest / Calendar / <init> <init> Calendar()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/-calendar/-init-/#init","text":"Calendar()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/-location/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionsRequest / Location Location class Location : PermissionsRequest Constructors Name Summary <init> Location()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/-location/#location","text":"class Location : PermissionsRequest","title":"Location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/-location/#constructors","text":"Name Summary <init> Location()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/-location/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / PermissionsRequest / Location / <init> <init> Location()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/-permissions-request/-location/-init-/#init","text":"Location()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/android.app.-activity/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / android.app.Activity Extensions for android.app.Activity Name Summary dealWithNeverAskAgainDenial fun Activity.dealWithNeverAskAgainDenial(message: String ): () -> Unit findContentLayout fun Activity.findContentLayout(): View showGenericRationale fun Activity.showGenericRationale(title: String ? = null, message: String ): () -> Single< ActionResult >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/android.app.-activity/#extensions-for-androidappactivity","text":"Name Summary dealWithNeverAskAgainDenial fun Activity.dealWithNeverAskAgainDenial(message: String ): () -> Unit findContentLayout fun Activity.findContentLayout(): View showGenericRationale fun Activity.showGenericRationale(title: String ? = null, message: String ): () -> Single< ActionResult >","title":"Extensions for android.app.Activity"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/android.app.-activity/deal-with-never-ask-again-denial/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / android.app.Activity / dealWithNeverAskAgainDenial dealWithNeverAskAgainDenial fun Activity.dealWithNeverAskAgainDenial(message: String ): () -> Unit","title":"Deal with never ask again denial"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/android.app.-activity/deal-with-never-ask-again-denial/#dealwithneveraskagaindenial","text":"fun Activity.dealWithNeverAskAgainDenial(message: String ): () -> Unit","title":"dealWithNeverAskAgainDenial"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/android.app.-activity/find-content-layout/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / android.app.Activity / findContentLayout findContentLayout fun Activity.findContentLayout(): View","title":"Find content layout"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/android.app.-activity/find-content-layout/#findcontentlayout","text":"fun Activity.findContentLayout(): View","title":"findContentLayout"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/android.app.-activity/show-generic-rationale/","text":"tripkit-android / com.skedgo.tripkit.ui.core.permissions / android.app.Activity / showGenericRationale showGenericRationale fun Activity.showGenericRationale(title: String ? = null, message: String ): () -> Single< ActionResult >","title":"Show generic rationale"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.permissions/android.app.-activity/show-generic-rationale/#showgenericrationale","text":"fun Activity.showGenericRationale(title: String ? = null, message: String ): () -> Single< ActionResult >","title":"showGenericRationale"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents Package com.skedgo.tripkit.ui.core.rxlifecyclecomponents Types Name Summary ActivityEvent Lifecycle events that can be emitted by Activities. enum class ActivityEvent FragmentEvent Lifecycle events that can be emitted by Fragments. enum class FragmentEvent RxFragment abstract class RxFragment : Fragment, LifecycleProvider< FragmentEvent > RxLifecycleAndroid object RxLifecycleAndroid RxMapFragment abstract class RxMapFragment : SupportMapFragment, LifecycleProvider< FragmentEvent >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/#package-comskedgotripkituicorerxlifecyclecomponents","text":"","title":"Package com.skedgo.tripkit.ui.core.rxlifecyclecomponents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/#types","text":"Name Summary ActivityEvent Lifecycle events that can be emitted by Activities. enum class ActivityEvent FragmentEvent Lifecycle events that can be emitted by Fragments. enum class FragmentEvent RxFragment abstract class RxFragment : Fragment, LifecycleProvider< FragmentEvent > RxLifecycleAndroid object RxLifecycleAndroid RxMapFragment abstract class RxMapFragment : SupportMapFragment, LifecycleProvider< FragmentEvent >","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / ActivityEvent ActivityEvent enum class ActivityEvent Lifecycle events that can be emitted by Activities. Enum Values Name Summary CREATE START RESUME PAUSE STOP DESTROY","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/#activityevent","text":"enum class ActivityEvent Lifecycle events that can be emitted by Activities.","title":"ActivityEvent"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/#enum-values","text":"Name Summary CREATE START RESUME PAUSE STOP DESTROY","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-c-r-e-a-t-e/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / ActivityEvent / CREATE CREATE CREATE","title":" c r e a t e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-c-r-e-a-t-e/#create","text":"CREATE","title":"CREATE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-d-e-s-t-r-o-y/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / ActivityEvent / DESTROY DESTROY DESTROY","title":" d e s t r o y"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-d-e-s-t-r-o-y/#destroy","text":"DESTROY","title":"DESTROY"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-p-a-u-s-e/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / ActivityEvent / PAUSE PAUSE PAUSE","title":" p a u s e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-p-a-u-s-e/#pause","text":"PAUSE","title":"PAUSE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-r-e-s-u-m-e/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / ActivityEvent / RESUME RESUME RESUME","title":" r e s u m e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-r-e-s-u-m-e/#resume","text":"RESUME","title":"RESUME"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-s-t-a-r-t/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / ActivityEvent / START START START","title":" s t a r t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-s-t-a-r-t/#start","text":"START","title":"START"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-s-t-o-p/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / ActivityEvent / STOP STOP STOP","title":" s t o p"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-activity-event/-s-t-o-p/#stop","text":"STOP","title":"STOP"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / FragmentEvent FragmentEvent enum class FragmentEvent Lifecycle events that can be emitted by Fragments. Enum Values Name Summary ATTACH CREATE CREATE_VIEW START RESUME PAUSE STOP DESTROY_VIEW DESTROY DETACH","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/#fragmentevent","text":"enum class FragmentEvent Lifecycle events that can be emitted by Fragments.","title":"FragmentEvent"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/#enum-values","text":"Name Summary ATTACH CREATE CREATE_VIEW START RESUME PAUSE STOP DESTROY_VIEW DESTROY DETACH","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-a-t-t-a-c-h/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / FragmentEvent / ATTACH ATTACH ATTACH","title":" a t t a c h"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-a-t-t-a-c-h/#attach","text":"ATTACH","title":"ATTACH"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-c-r-e-a-t-e/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / FragmentEvent / CREATE CREATE CREATE","title":" c r e a t e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-c-r-e-a-t-e/#create","text":"CREATE","title":"CREATE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-c-r-e-a-t-e_-v-i-e-w/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / FragmentEvent / CREATE_VIEW CREATE_VIEW CREATE_VIEW","title":" c r e a t e  v i e w"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-c-r-e-a-t-e_-v-i-e-w/#create_view","text":"CREATE_VIEW","title":"CREATE_VIEW"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-d-e-s-t-r-o-y/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / FragmentEvent / DESTROY DESTROY DESTROY","title":" d e s t r o y"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-d-e-s-t-r-o-y/#destroy","text":"DESTROY","title":"DESTROY"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-d-e-s-t-r-o-y_-v-i-e-w/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / FragmentEvent / DESTROY_VIEW DESTROY_VIEW DESTROY_VIEW","title":" d e s t r o y  v i e w"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-d-e-s-t-r-o-y_-v-i-e-w/#destroy_view","text":"DESTROY_VIEW","title":"DESTROY_VIEW"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-d-e-t-a-c-h/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / FragmentEvent / DETACH DETACH DETACH","title":" d e t a c h"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-d-e-t-a-c-h/#detach","text":"DETACH","title":"DETACH"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-p-a-u-s-e/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / FragmentEvent / PAUSE PAUSE PAUSE","title":" p a u s e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-p-a-u-s-e/#pause","text":"PAUSE","title":"PAUSE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-r-e-s-u-m-e/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / FragmentEvent / RESUME RESUME RESUME","title":" r e s u m e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-r-e-s-u-m-e/#resume","text":"RESUME","title":"RESUME"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-s-t-a-r-t/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / FragmentEvent / START START START","title":" s t a r t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-s-t-a-r-t/#start","text":"START","title":"START"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-s-t-o-p/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / FragmentEvent / STOP STOP STOP","title":" s t o p"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-fragment-event/-s-t-o-p/#stop","text":"STOP","title":"STOP"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment RxFragment abstract class RxFragment : Fragment, LifecycleProvider< FragmentEvent > Constructors Name Summary <init> RxFragment() Functions Name Summary bindToLifecycle open fun <T> bindToLifecycle(): LifecycleTransformer<T> bindUntilEvent open fun <T> bindUntilEvent(event: FragmentEvent ): LifecycleTransformer<T> lifecycle open fun lifecycle(): Observable< FragmentEvent > onAttach open fun onAttach(context: Context): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onDestroy open fun onDestroy(): Unit onDestroyView open fun onDestroyView(): Unit onDetach open fun onDetach(): Unit onPause open fun onPause(): Unit onResume open fun onResume(): Unit onStart open fun onStart(): Unit onStop open fun onStop(): Unit onViewCreated open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit Inheritors Name Summary AbstractTripKitFragment abstract class AbstractTripKitFragment : RxFragment TripResultPagerFragment open class TripResultPagerFragment : RxFragment , OnPageChangeListener, OnTripKitButtonClickListener TripSegmentListFragment class TripSegmentListFragment : RxFragment , OnClickListener","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/#rxfragment","text":"abstract class RxFragment : Fragment, LifecycleProvider< FragmentEvent >","title":"RxFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/#constructors","text":"Name Summary <init> RxFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/#functions","text":"Name Summary bindToLifecycle open fun <T> bindToLifecycle(): LifecycleTransformer<T> bindUntilEvent open fun <T> bindUntilEvent(event: FragmentEvent ): LifecycleTransformer<T> lifecycle open fun lifecycle(): Observable< FragmentEvent > onAttach open fun onAttach(context: Context): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onDestroy open fun onDestroy(): Unit onDestroyView open fun onDestroyView(): Unit onDetach open fun onDetach(): Unit onPause open fun onPause(): Unit onResume open fun onResume(): Unit onStart open fun onStart(): Unit onStop open fun onStop(): Unit onViewCreated open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/#inheritors","text":"Name Summary AbstractTripKitFragment abstract class AbstractTripKitFragment : RxFragment TripResultPagerFragment open class TripResultPagerFragment : RxFragment , OnPageChangeListener, OnTripKitButtonClickListener TripSegmentListFragment class TripSegmentListFragment : RxFragment , OnClickListener","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / <init> <init> RxFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/-init-/#init","text":"RxFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/bind-to-lifecycle/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / bindToLifecycle bindToLifecycle @CheckResult open fun <T> bindToLifecycle(): LifecycleTransformer<T>","title":"Bind to lifecycle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/bind-to-lifecycle/#bindtolifecycle","text":"@CheckResult open fun <T> bindToLifecycle(): LifecycleTransformer<T>","title":"bindToLifecycle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/bind-until-event/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / bindUntilEvent bindUntilEvent @CheckResult open fun <T> bindUntilEvent(event: FragmentEvent ): LifecycleTransformer<T>","title":"Bind until event"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/bind-until-event/#binduntilevent","text":"@CheckResult open fun <T> bindUntilEvent(event: FragmentEvent ): LifecycleTransformer<T>","title":"bindUntilEvent"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/lifecycle/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / lifecycle lifecycle @CheckResult open fun lifecycle(): Observable< FragmentEvent >","title":"Lifecycle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/lifecycle/#lifecycle","text":"@CheckResult open fun lifecycle(): Observable< FragmentEvent >","title":"lifecycle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-attach/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / onAttach onAttach @CallSuper open fun onAttach(context: Context): Unit","title":"On attach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-attach/#onattach","text":"@CallSuper open fun onAttach(context: Context): Unit","title":"onAttach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / onCreate onCreate open fun onCreate(savedInstanceState: Bundle?): Unit","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-create/#oncreate","text":"open fun onCreate(savedInstanceState: Bundle?): Unit","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-destroy-view/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / onDestroyView onDestroyView open fun onDestroyView(): Unit","title":"On destroy view"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-destroy-view/#ondestroyview","text":"open fun onDestroyView(): Unit","title":"onDestroyView"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-destroy/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / onDestroy onDestroy open fun onDestroy(): Unit","title":"On destroy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-destroy/#ondestroy","text":"open fun onDestroy(): Unit","title":"onDestroy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-detach/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / onDetach onDetach open fun onDetach(): Unit","title":"On detach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-detach/#ondetach","text":"open fun onDetach(): Unit","title":"onDetach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-pause/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / onPause onPause open fun onPause(): Unit","title":"On pause"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-pause/#onpause","text":"open fun onPause(): Unit","title":"onPause"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-resume/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / onResume onResume open fun onResume(): Unit","title":"On resume"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-resume/#onresume","text":"open fun onResume(): Unit","title":"onResume"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-start/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / onStart onStart open fun onStart(): Unit","title":"On start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-start/#onstart","text":"open fun onStart(): Unit","title":"onStart"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / onStop onStop open fun onStop(): Unit","title":"On stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-stop/#onstop","text":"open fun onStop(): Unit","title":"onStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-view-created/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxFragment / onViewCreated onViewCreated open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"On view created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-fragment/on-view-created/#onviewcreated","text":"open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"onViewCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-lifecycle-android/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxLifecycleAndroid RxLifecycleAndroid object RxLifecycleAndroid Functions Name Summary bindActivity Binds the given source to an Activity lifecycle. fun <T> bindActivity(lifecycle: Observable< ActivityEvent >): LifecycleTransformer<T> bindFragment Binds the given source to a Fragment lifecycle. fun <T> bindFragment(lifecycle: Observable< FragmentEvent >): LifecycleTransformer<T>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-lifecycle-android/#rxlifecycleandroid","text":"object RxLifecycleAndroid","title":"RxLifecycleAndroid"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-lifecycle-android/#functions","text":"Name Summary bindActivity Binds the given source to an Activity lifecycle. fun <T> bindActivity(lifecycle: Observable< ActivityEvent >): LifecycleTransformer<T> bindFragment Binds the given source to a Fragment lifecycle. fun <T> bindFragment(lifecycle: Observable< FragmentEvent >): LifecycleTransformer<T>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-lifecycle-android/bind-activity/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxLifecycleAndroid / bindActivity bindActivity @NonNull @CheckResult fun <T> bindActivity(@NonNull lifecycle: Observable< ActivityEvent >): LifecycleTransformer<T> Binds the given source to an Activity lifecycle. Use with Observable.compose : source.compose(RxLifecycleAndroid.bindActivity(lifecycle)).subscribe() This helper automatically determines (based on the lifecycle sequence itself) when the source should stop emitting items. In the case that the lifecycle sequence is in the creation phase (CREATE, START, etc) it will choose the equivalent destructive phase (DESTROY, STOP, etc). If used in the destructive phase, the notifications will cease at the next event; for example, if used in PAUSE, it will unsubscribe in STOP. Due to the differences between the Activity and Fragment lifecycles, this method should only be used for an Activity lifecycle. Parameters lifecycle - the lifecycle sequence of an Activity Return a reusable Observable.Transformer that unsubscribes the source during the Activity lifecycle","title":"Bind activity"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-lifecycle-android/bind-activity/#bindactivity","text":"@NonNull @CheckResult fun <T> bindActivity(@NonNull lifecycle: Observable< ActivityEvent >): LifecycleTransformer<T> Binds the given source to an Activity lifecycle. Use with Observable.compose : source.compose(RxLifecycleAndroid.bindActivity(lifecycle)).subscribe() This helper automatically determines (based on the lifecycle sequence itself) when the source should stop emitting items. In the case that the lifecycle sequence is in the creation phase (CREATE, START, etc) it will choose the equivalent destructive phase (DESTROY, STOP, etc). If used in the destructive phase, the notifications will cease at the next event; for example, if used in PAUSE, it will unsubscribe in STOP. Due to the differences between the Activity and Fragment lifecycles, this method should only be used for an Activity lifecycle.","title":"bindActivity"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-lifecycle-android/bind-activity/#parameters","text":"lifecycle - the lifecycle sequence of an Activity Return a reusable Observable.Transformer that unsubscribes the source during the Activity lifecycle","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-lifecycle-android/bind-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxLifecycleAndroid / bindFragment bindFragment @CheckResult fun <T> bindFragment(lifecycle: Observable< FragmentEvent >): LifecycleTransformer<T> Binds the given source to a Fragment lifecycle. Use with Observable.compose : source.compose(RxLifecycleAndroid.bindFragment(lifecycle)).subscribe() This helper automatically determines (based on the lifecycle sequence itself) when the source should stop emitting items. In the case that the lifecycle sequence is in the creation phase (CREATE, START, etc) it will choose the equivalent destructive phase (DESTROY, STOP, etc). If used in the destructive phase, the notifications will cease at the next event; for example, if used in PAUSE, it will unsubscribe in STOP. Due to the differences between the Activity and Fragment lifecycles, this method should only be used for a Fragment lifecycle. Parameters lifecycle - the lifecycle sequence of a Fragment Return a reusable Observable.Transformer that unsubscribes the source during the Fragment lifecycle","title":"Bind fragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-lifecycle-android/bind-fragment/#bindfragment","text":"@CheckResult fun <T> bindFragment(lifecycle: Observable< FragmentEvent >): LifecycleTransformer<T> Binds the given source to a Fragment lifecycle. Use with Observable.compose : source.compose(RxLifecycleAndroid.bindFragment(lifecycle)).subscribe() This helper automatically determines (based on the lifecycle sequence itself) when the source should stop emitting items. In the case that the lifecycle sequence is in the creation phase (CREATE, START, etc) it will choose the equivalent destructive phase (DESTROY, STOP, etc). If used in the destructive phase, the notifications will cease at the next event; for example, if used in PAUSE, it will unsubscribe in STOP. Due to the differences between the Activity and Fragment lifecycles, this method should only be used for a Fragment lifecycle.","title":"bindFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-lifecycle-android/bind-fragment/#parameters","text":"lifecycle - the lifecycle sequence of a Fragment Return a reusable Observable.Transformer that unsubscribes the source during the Fragment lifecycle","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment RxMapFragment abstract class RxMapFragment : SupportMapFragment, LifecycleProvider< FragmentEvent > Constructors Name Summary <init> RxMapFragment() Functions Name Summary bindToLifecycle open fun <T> bindToLifecycle(): LifecycleTransformer<T> bindUntilEvent open fun <T> bindUntilEvent(event: FragmentEvent ): LifecycleTransformer<T> lifecycle open fun lifecycle(): Observable< FragmentEvent > onAttach open fun onAttach(context: Context): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onDestroy open fun onDestroy(): Unit onDestroyView open fun onDestroyView(): Unit onDetach open fun onDetach(): Unit onPause open fun onPause(): Unit onResume open fun onResume(): Unit onStart open fun onStart(): Unit onStop open fun onStop(): Unit onViewCreated open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit Inheritors Name Summary BaseMapFragment abstract class BaseMapFragment : RxMapFragment","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/#rxmapfragment","text":"abstract class RxMapFragment : SupportMapFragment, LifecycleProvider< FragmentEvent >","title":"RxMapFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/#constructors","text":"Name Summary <init> RxMapFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/#functions","text":"Name Summary bindToLifecycle open fun <T> bindToLifecycle(): LifecycleTransformer<T> bindUntilEvent open fun <T> bindUntilEvent(event: FragmentEvent ): LifecycleTransformer<T> lifecycle open fun lifecycle(): Observable< FragmentEvent > onAttach open fun onAttach(context: Context): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onDestroy open fun onDestroy(): Unit onDestroyView open fun onDestroyView(): Unit onDetach open fun onDetach(): Unit onPause open fun onPause(): Unit onResume open fun onResume(): Unit onStart open fun onStart(): Unit onStop open fun onStop(): Unit onViewCreated open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/#inheritors","text":"Name Summary BaseMapFragment abstract class BaseMapFragment : RxMapFragment","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / <init> <init> RxMapFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/-init-/#init","text":"RxMapFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/bind-to-lifecycle/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / bindToLifecycle bindToLifecycle @CheckResult open fun <T> bindToLifecycle(): LifecycleTransformer<T>","title":"Bind to lifecycle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/bind-to-lifecycle/#bindtolifecycle","text":"@CheckResult open fun <T> bindToLifecycle(): LifecycleTransformer<T>","title":"bindToLifecycle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/bind-until-event/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / bindUntilEvent bindUntilEvent @CheckResult open fun <T> bindUntilEvent(event: FragmentEvent ): LifecycleTransformer<T>","title":"Bind until event"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/bind-until-event/#binduntilevent","text":"@CheckResult open fun <T> bindUntilEvent(event: FragmentEvent ): LifecycleTransformer<T>","title":"bindUntilEvent"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/lifecycle/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / lifecycle lifecycle @CheckResult open fun lifecycle(): Observable< FragmentEvent >","title":"Lifecycle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/lifecycle/#lifecycle","text":"@CheckResult open fun lifecycle(): Observable< FragmentEvent >","title":"lifecycle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-attach/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / onAttach onAttach @CallSuper open fun onAttach(context: Context): Unit","title":"On attach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-attach/#onattach","text":"@CallSuper open fun onAttach(context: Context): Unit","title":"onAttach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / onCreate onCreate open fun onCreate(savedInstanceState: Bundle?): Unit","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-create/#oncreate","text":"open fun onCreate(savedInstanceState: Bundle?): Unit","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-destroy-view/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / onDestroyView onDestroyView open fun onDestroyView(): Unit","title":"On destroy view"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-destroy-view/#ondestroyview","text":"open fun onDestroyView(): Unit","title":"onDestroyView"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-destroy/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / onDestroy onDestroy open fun onDestroy(): Unit","title":"On destroy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-destroy/#ondestroy","text":"open fun onDestroy(): Unit","title":"onDestroy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-detach/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / onDetach onDetach open fun onDetach(): Unit","title":"On detach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-detach/#ondetach","text":"open fun onDetach(): Unit","title":"onDetach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-pause/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / onPause onPause open fun onPause(): Unit","title":"On pause"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-pause/#onpause","text":"open fun onPause(): Unit","title":"onPause"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-resume/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / onResume onResume open fun onResume(): Unit","title":"On resume"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-resume/#onresume","text":"open fun onResume(): Unit","title":"onResume"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-start/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / onStart onStart open fun onStart(): Unit","title":"On start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-start/#onstart","text":"open fun onStart(): Unit","title":"onStart"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / onStop onStop open fun onStop(): Unit","title":"On stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-stop/#onstop","text":"open fun onStop(): Unit","title":"onStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-view-created/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxlifecyclecomponents / RxMapFragment / onViewCreated onViewCreated open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"On view created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxlifecyclecomponents/-rx-map-fragment/on-view-created/#onviewcreated","text":"open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"onViewCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxproperty Package com.skedgo.tripkit.ui.core.rxproperty Extensions for External Classes Name Summary androidx.databinding.ObservableBoolean androidx.databinding.ObservableField androidx.databinding.ObservableInt androidx.databinding.ObservableList","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/#package-comskedgotripkituicorerxproperty","text":"","title":"Package com.skedgo.tripkit.ui.core.rxproperty"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/#extensions-for-external-classes","text":"Name Summary androidx.databinding.ObservableBoolean androidx.databinding.ObservableField androidx.databinding.ObservableInt androidx.databinding.ObservableList","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-boolean/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxproperty / androidx.databinding.ObservableBoolean Extensions for androidx.databinding.ObservableBoolean Name Summary asObservable When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableBoolean and also emit any future changes. fun ObservableBoolean.asObservable(): Observable< Boolean >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-boolean/#extensions-for-androidxdatabindingobservableboolean","text":"Name Summary asObservable When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableBoolean and also emit any future changes. fun ObservableBoolean.asObservable(): Observable< Boolean >","title":"Extensions for androidx.databinding.ObservableBoolean"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-boolean/as-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxproperty / androidx.databinding.ObservableBoolean / asObservable asObservable fun ObservableBoolean.asObservable(): Observable< Boolean > When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableBoolean and also emit any future changes.","title":"As observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-boolean/as-observable/#asobservable","text":"fun ObservableBoolean.asObservable(): Observable< Boolean > When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableBoolean and also emit any future changes.","title":"asObservable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-field/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxproperty / androidx.databinding.ObservableField Extensions for androidx.databinding.ObservableField Name Summary asObservable When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableField and also emit any future changes. fun <T> ObservableField<T>.asObservable(): Observable<T>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-field/#extensions-for-androidxdatabindingobservablefield","text":"Name Summary asObservable When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableField and also emit any future changes. fun <T> ObservableField<T>.asObservable(): Observable<T>","title":"Extensions for androidx.databinding.ObservableField"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-field/as-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxproperty / androidx.databinding.ObservableField / asObservable asObservable fun <T> ObservableField<T>.asObservable(): Observable<T> When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableField and also emit any future changes.","title":"As observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-field/as-observable/#asobservable","text":"fun <T> ObservableField<T>.asObservable(): Observable<T> When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableField and also emit any future changes.","title":"asObservable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-int/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxproperty / androidx.databinding.ObservableInt Extensions for androidx.databinding.ObservableInt Name Summary asObservable When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableInt and also emit any future changes. fun ObservableInt.asObservable(): Observable< Int >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-int/#extensions-for-androidxdatabindingobservableint","text":"Name Summary asObservable When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableInt and also emit any future changes. fun ObservableInt.asObservable(): Observable< Int >","title":"Extensions for androidx.databinding.ObservableInt"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-int/as-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxproperty / androidx.databinding.ObservableInt / asObservable asObservable fun ObservableInt.asObservable(): Observable< Int > When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableInt and also emit any future changes.","title":"As observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-int/as-observable/#asobservable","text":"fun ObservableInt.asObservable(): Observable< Int > When we subscribe to an Observable created by this function, the Observable will emit the current value of ObservableInt and also emit any future changes.","title":"asObservable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-list/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxproperty / androidx.databinding.ObservableList Extensions for androidx.databinding.ObservableList Name Summary asObservable fun <T> ObservableList<T>.asObservable(): Observable<ObservableList<T>>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-list/#extensions-for-androidxdatabindingobservablelist","text":"Name Summary asObservable fun <T> ObservableList<T>.asObservable(): Observable<ObservableList<T>>","title":"Extensions for androidx.databinding.ObservableList"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-list/as-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.core.rxproperty / androidx.databinding.ObservableList / asObservable asObservable fun <T> ObservableList<T>.asObservable(): Observable<ObservableList<T>>","title":"As observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.core.rxproperty/androidx.databinding.-observable-list/as-observable/#asobservable","text":"fun <T> ObservableList<T>.asObservable(): Observable<ObservableList<T>>","title":"asObservable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/","text":"tripkit-android / com.skedgo.tripkit.ui.creditsources Package com.skedgo.tripkit.ui.creditsources Types Name Summary CreditSourcesOfDataViewModel open class CreditSourcesOfDataViewModel","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/#package-comskedgotripkituicreditsources","text":"","title":"Package com.skedgo.tripkit.ui.creditsources"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/#types","text":"Name Summary CreditSourcesOfDataViewModel open class CreditSourcesOfDataViewModel","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/-credit-sources-of-data-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.creditsources / CreditSourcesOfDataViewModel CreditSourcesOfDataViewModel open class CreditSourcesOfDataViewModel Properties Name Summary creditSources val creditSources: ObservableField< String > tapAction val tapAction: TapAction < List < Source >> Functions Name Summary changeSources fun changeSources(sources: List < Source >): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/-credit-sources-of-data-view-model/#creditsourcesofdataviewmodel","text":"open class CreditSourcesOfDataViewModel","title":"CreditSourcesOfDataViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/-credit-sources-of-data-view-model/#properties","text":"Name Summary creditSources val creditSources: ObservableField< String > tapAction val tapAction: TapAction < List < Source >>","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/-credit-sources-of-data-view-model/#functions","text":"Name Summary changeSources fun changeSources(sources: List < Source >): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/-credit-sources-of-data-view-model/change-sources/","text":"tripkit-android / com.skedgo.tripkit.ui.creditsources / CreditSourcesOfDataViewModel / changeSources changeSources fun changeSources(sources: List < Source >): Unit","title":"Change sources"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/-credit-sources-of-data-view-model/change-sources/#changesources","text":"fun changeSources(sources: List < Source >): Unit","title":"changeSources"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/-credit-sources-of-data-view-model/credit-sources/","text":"tripkit-android / com.skedgo.tripkit.ui.creditsources / CreditSourcesOfDataViewModel / creditSources creditSources val creditSources: ObservableField< String >","title":"Credit sources"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/-credit-sources-of-data-view-model/credit-sources/#creditsources","text":"val creditSources: ObservableField< String >","title":"creditSources"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/-credit-sources-of-data-view-model/tap-action/","text":"tripkit-android / com.skedgo.tripkit.ui.creditsources / CreditSourcesOfDataViewModel / tapAction tapAction val tapAction: TapAction < List < Source >>","title":"Tap action"},{"location":"tripkit-android/com.skedgo.tripkit.ui.creditsources/-credit-sources-of-data-view-model/tap-action/#tapaction","text":"val tapAction: TapAction < List < Source >>","title":"tapAction"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/","text":"tripkit-android / com.skedgo.tripkit.ui.data Package com.skedgo.tripkit.ui.data Types Name Summary CursorToEntityConverter interface CursorToEntityConverter<E : Any !> : Function<Cursor!, E> CursorToServiceConverter open class CursorToServiceConverter : CursorToEntityConverter < TimetableEntry !> CursorToStopConverter open class CursorToStopConverter : CursorToEntityConverter < ScheduledStop !>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/#package-comskedgotripkituidata","text":"","title":"Package com.skedgo.tripkit.ui.data"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/#types","text":"Name Summary CursorToEntityConverter interface CursorToEntityConverter<E : Any !> : Function<Cursor!, E> CursorToServiceConverter open class CursorToServiceConverter : CursorToEntityConverter < TimetableEntry !> CursorToStopConverter open class CursorToStopConverter : CursorToEntityConverter < ScheduledStop !>","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-entity-converter/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToEntityConverter CursorToEntityConverter interface CursorToEntityConverter<E : Any !> : Function<Cursor!, E> Inheritors Name Summary CursorToServiceConverter open class CursorToServiceConverter : CursorToEntityConverter < TimetableEntry !> CursorToStopConverter open class CursorToStopConverter : CursorToEntityConverter < ScheduledStop !>","title":" cursor to entity converter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-entity-converter/#cursortoentityconverter","text":"interface CursorToEntityConverter<E : Any !> : Function<Cursor!, E>","title":"CursorToEntityConverter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-entity-converter/#inheritors","text":"Name Summary CursorToServiceConverter open class CursorToServiceConverter : CursorToEntityConverter < TimetableEntry !> CursorToStopConverter open class CursorToStopConverter : CursorToEntityConverter < ScheduledStop !>","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter CursorToServiceConverter open class CursorToServiceConverter : CursorToEntityConverter < TimetableEntry !> Types Name Summary ServiceColumnIndices NOTE: Don't hard code column indices open class ServiceColumnIndices Constructors Name Summary <init> CursorToServiceConverter(gson: Gson) Functions Name Summary apply open fun apply(cursor: Cursor): TimetableEntry ! getEndStopCode open fun getEndStopCode(): String ! getEndTimeInSecs open fun getEndTimeInSecs(): Long getFrequency open fun getFrequency(): Int getId open fun getId(): Long getMode open fun getMode(): VehicleMode ! getPairIdentifier open fun getPairIdentifier(): String ! getRealTimeStatus open fun getRealTimeStatus(): RealTimeStatus ! getSearchString open fun getSearchString(): String ! getServiceColorBlue open fun getServiceColorBlue(): Int getServiceColorGreen open fun getServiceColorGreen(): Int getServiceColorRed open fun getServiceColorRed(): Int getServiceName open fun getServiceName(): String ! getServiceNumber open fun getServiceNumber(): String ! getServiceOperator open fun getServiceOperator(): String ! getServiceTime open fun getServiceTime(): Long getServiceTripId open fun getServiceTripId(): String ! getStartStopShortName open fun getStartStopShortName(): String ! getStartTimeInSecs open fun getStartTimeInSecs(): Long getStopCode open fun getStopCode(): String ! getWheelchairAccessible open fun getWheelchairAccessible(): Boolean ! isFavourite open fun isFavourite(): Boolean setCursor open fun setCursor(cursor: Cursor): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/#cursortoserviceconverter","text":"open class CursorToServiceConverter : CursorToEntityConverter < TimetableEntry !>","title":"CursorToServiceConverter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/#types","text":"Name Summary ServiceColumnIndices NOTE: Don't hard code column indices open class ServiceColumnIndices","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/#constructors","text":"Name Summary <init> CursorToServiceConverter(gson: Gson)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/#functions","text":"Name Summary apply open fun apply(cursor: Cursor): TimetableEntry ! getEndStopCode open fun getEndStopCode(): String ! getEndTimeInSecs open fun getEndTimeInSecs(): Long getFrequency open fun getFrequency(): Int getId open fun getId(): Long getMode open fun getMode(): VehicleMode ! getPairIdentifier open fun getPairIdentifier(): String ! getRealTimeStatus open fun getRealTimeStatus(): RealTimeStatus ! getSearchString open fun getSearchString(): String ! getServiceColorBlue open fun getServiceColorBlue(): Int getServiceColorGreen open fun getServiceColorGreen(): Int getServiceColorRed open fun getServiceColorRed(): Int getServiceName open fun getServiceName(): String ! getServiceNumber open fun getServiceNumber(): String ! getServiceOperator open fun getServiceOperator(): String ! getServiceTime open fun getServiceTime(): Long getServiceTripId open fun getServiceTripId(): String ! getStartStopShortName open fun getStartStopShortName(): String ! getStartTimeInSecs open fun getStartTimeInSecs(): Long getStopCode open fun getStopCode(): String ! getWheelchairAccessible open fun getWheelchairAccessible(): Boolean ! isFavourite open fun isFavourite(): Boolean setCursor open fun setCursor(cursor: Cursor): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / <init> <init> CursorToServiceConverter(@NonNull gson: Gson)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-init-/#init","text":"CursorToServiceConverter(@NonNull gson: Gson)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/apply/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / apply apply open fun apply(@NotNull cursor: Cursor): TimetableEntry !","title":"Apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/apply/#apply","text":"open fun apply(@NotNull cursor: Cursor): TimetableEntry !","title":"apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-end-stop-code/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getEndStopCode getEndStopCode open fun getEndStopCode(): String !","title":"Get end stop code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-end-stop-code/#getendstopcode","text":"open fun getEndStopCode(): String !","title":"getEndStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-end-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getEndTimeInSecs getEndTimeInSecs open fun getEndTimeInSecs(): Long","title":"Get end time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-end-time-in-secs/#getendtimeinsecs","text":"open fun getEndTimeInSecs(): Long","title":"getEndTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-frequency/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getFrequency getFrequency open fun getFrequency(): Int","title":"Get frequency"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-frequency/#getfrequency","text":"open fun getFrequency(): Int","title":"getFrequency"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-id/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getId getId open fun getId(): Long","title":"Get id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-id/#getid","text":"open fun getId(): Long","title":"getId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-mode/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getMode getMode open fun getMode(): VehicleMode !","title":"Get mode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-mode/#getmode","text":"open fun getMode(): VehicleMode !","title":"getMode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-pair-identifier/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getPairIdentifier getPairIdentifier open fun getPairIdentifier(): String !","title":"Get pair identifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-pair-identifier/#getpairidentifier","text":"open fun getPairIdentifier(): String !","title":"getPairIdentifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-real-time-status/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getRealTimeStatus getRealTimeStatus open fun getRealTimeStatus(): RealTimeStatus !","title":"Get real time status"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-real-time-status/#getrealtimestatus","text":"open fun getRealTimeStatus(): RealTimeStatus !","title":"getRealTimeStatus"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-search-string/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getSearchString getSearchString open fun getSearchString(): String !","title":"Get search string"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-search-string/#getsearchstring","text":"open fun getSearchString(): String !","title":"getSearchString"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-color-blue/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getServiceColorBlue getServiceColorBlue open fun getServiceColorBlue(): Int","title":"Get service color blue"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-color-blue/#getservicecolorblue","text":"open fun getServiceColorBlue(): Int","title":"getServiceColorBlue"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-color-green/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getServiceColorGreen getServiceColorGreen open fun getServiceColorGreen(): Int","title":"Get service color green"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-color-green/#getservicecolorgreen","text":"open fun getServiceColorGreen(): Int","title":"getServiceColorGreen"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-color-red/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getServiceColorRed getServiceColorRed open fun getServiceColorRed(): Int","title":"Get service color red"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-color-red/#getservicecolorred","text":"open fun getServiceColorRed(): Int","title":"getServiceColorRed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-name/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getServiceName getServiceName open fun getServiceName(): String !","title":"Get service name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-name/#getservicename","text":"open fun getServiceName(): String !","title":"getServiceName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-number/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getServiceNumber getServiceNumber open fun getServiceNumber(): String !","title":"Get service number"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-number/#getservicenumber","text":"open fun getServiceNumber(): String !","title":"getServiceNumber"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-operator/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getServiceOperator getServiceOperator open fun getServiceOperator(): String !","title":"Get service operator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-operator/#getserviceoperator","text":"open fun getServiceOperator(): String !","title":"getServiceOperator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-time/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getServiceTime getServiceTime open fun getServiceTime(): Long","title":"Get service time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-time/#getservicetime","text":"open fun getServiceTime(): Long","title":"getServiceTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-trip-id/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getServiceTripId getServiceTripId open fun getServiceTripId(): String !","title":"Get service trip id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-service-trip-id/#getservicetripid","text":"open fun getServiceTripId(): String !","title":"getServiceTripId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-start-stop-short-name/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getStartStopShortName getStartStopShortName open fun getStartStopShortName(): String !","title":"Get start stop short name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-start-stop-short-name/#getstartstopshortname","text":"open fun getStartStopShortName(): String !","title":"getStartStopShortName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-start-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getStartTimeInSecs getStartTimeInSecs open fun getStartTimeInSecs(): Long","title":"Get start time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-start-time-in-secs/#getstarttimeinsecs","text":"open fun getStartTimeInSecs(): Long","title":"getStartTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-stop-code/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getStopCode getStopCode open fun getStopCode(): String !","title":"Get stop code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-stop-code/#getstopcode","text":"open fun getStopCode(): String !","title":"getStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / getWheelchairAccessible getWheelchairAccessible open fun getWheelchairAccessible(): Boolean !","title":"Get wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/get-wheelchair-accessible/#getwheelchairaccessible","text":"open fun getWheelchairAccessible(): Boolean !","title":"getWheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/is-favourite/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / isFavourite isFavourite open fun isFavourite(): Boolean","title":"Is favourite"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/is-favourite/#isfavourite","text":"open fun isFavourite(): Boolean","title":"isFavourite"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/set-cursor/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / setCursor setCursor open fun setCursor(@NotNull cursor: Cursor): Unit","title":"Set cursor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/set-cursor/#setcursor","text":"open fun setCursor(@NotNull cursor: Cursor): Unit","title":"setCursor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices ServiceColumnIndices open class ServiceColumnIndices NOTE: Don't hard code column indices Constructors Name Summary <init> NOTE: Don't hard code column indices ServiceColumnIndices() Properties Name Summary endStopCodeIndex var endStopCodeIndex: Int endTimeIndex var endTimeIndex: Int favouriteIndex var favouriteIndex: Int frequencyIndex var frequencyIndex: Int hasAlertsIndex var hasAlertsIndex: Int idIndex var idIndex: Int julianDayIndex var julianDayIndex: Int modeIndex var modeIndex: Int pairIdentifierIndex var pairIdentifierIndex: Int realTimeStatusIndex var realTimeStatusIndex: Int searchStringIndex var searchStringIndex: Int serviceColorBlueIndex var serviceColorBlueIndex: Int serviceColorGreenIndex var serviceColorGreenIndex: Int serviceColorRedIndex var serviceColorRedIndex: Int serviceNameIndex var serviceNameIndex: Int serviceNumberIndex var serviceNumberIndex: Int serviceOperator var serviceOperator: Int serviceTimeIndex var serviceTimeIndex: Int serviceTripIdIndex var serviceTripIdIndex: Int startStopShortName var startStopShortName: Int startTimeIndex var startTimeIndex: Int stopCodeIndex var stopCodeIndex: Int wheelchairAccessible var wheelchairAccessible: Int Functions Name Summary getColumnIndices open fun getColumnIndices(cursor: Cursor): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/#servicecolumnindices","text":"open class ServiceColumnIndices NOTE: Don't hard code column indices","title":"ServiceColumnIndices"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/#constructors","text":"Name Summary <init> NOTE: Don't hard code column indices ServiceColumnIndices()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/#properties","text":"Name Summary endStopCodeIndex var endStopCodeIndex: Int endTimeIndex var endTimeIndex: Int favouriteIndex var favouriteIndex: Int frequencyIndex var frequencyIndex: Int hasAlertsIndex var hasAlertsIndex: Int idIndex var idIndex: Int julianDayIndex var julianDayIndex: Int modeIndex var modeIndex: Int pairIdentifierIndex var pairIdentifierIndex: Int realTimeStatusIndex var realTimeStatusIndex: Int searchStringIndex var searchStringIndex: Int serviceColorBlueIndex var serviceColorBlueIndex: Int serviceColorGreenIndex var serviceColorGreenIndex: Int serviceColorRedIndex var serviceColorRedIndex: Int serviceNameIndex var serviceNameIndex: Int serviceNumberIndex var serviceNumberIndex: Int serviceOperator var serviceOperator: Int serviceTimeIndex var serviceTimeIndex: Int serviceTripIdIndex var serviceTripIdIndex: Int startStopShortName var startStopShortName: Int startTimeIndex var startTimeIndex: Int stopCodeIndex var stopCodeIndex: Int wheelchairAccessible var wheelchairAccessible: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/#functions","text":"Name Summary getColumnIndices open fun getColumnIndices(cursor: Cursor): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / <init> <init> ServiceColumnIndices() NOTE: Don't hard code column indices","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/-init-/#init","text":"ServiceColumnIndices() NOTE: Don't hard code column indices","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/end-stop-code-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / endStopCodeIndex endStopCodeIndex var endStopCodeIndex: Int","title":"End stop code index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/end-stop-code-index/#endstopcodeindex","text":"var endStopCodeIndex: Int","title":"endStopCodeIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/end-time-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / endTimeIndex endTimeIndex var endTimeIndex: Int","title":"End time index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/end-time-index/#endtimeindex","text":"var endTimeIndex: Int","title":"endTimeIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/favourite-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / favouriteIndex favouriteIndex var favouriteIndex: Int","title":"Favourite index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/favourite-index/#favouriteindex","text":"var favouriteIndex: Int","title":"favouriteIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/frequency-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / frequencyIndex frequencyIndex var frequencyIndex: Int","title":"Frequency index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/frequency-index/#frequencyindex","text":"var frequencyIndex: Int","title":"frequencyIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/get-column-indices/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / getColumnIndices getColumnIndices open fun getColumnIndices(@NotNull cursor: Cursor): Unit","title":"Get column indices"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/get-column-indices/#getcolumnindices","text":"open fun getColumnIndices(@NotNull cursor: Cursor): Unit","title":"getColumnIndices"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/has-alerts-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / hasAlertsIndex hasAlertsIndex var hasAlertsIndex: Int","title":"Has alerts index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/has-alerts-index/#hasalertsindex","text":"var hasAlertsIndex: Int","title":"hasAlertsIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/id-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / idIndex idIndex var idIndex: Int","title":"Id index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/id-index/#idindex","text":"var idIndex: Int","title":"idIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/julian-day-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / julianDayIndex julianDayIndex var julianDayIndex: Int","title":"Julian day index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/julian-day-index/#juliandayindex","text":"var julianDayIndex: Int","title":"julianDayIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/mode-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / modeIndex modeIndex var modeIndex: Int","title":"Mode index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/mode-index/#modeindex","text":"var modeIndex: Int","title":"modeIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/pair-identifier-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / pairIdentifierIndex pairIdentifierIndex var pairIdentifierIndex: Int","title":"Pair identifier index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/pair-identifier-index/#pairidentifierindex","text":"var pairIdentifierIndex: Int","title":"pairIdentifierIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/real-time-status-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / realTimeStatusIndex realTimeStatusIndex var realTimeStatusIndex: Int","title":"Real time status index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/real-time-status-index/#realtimestatusindex","text":"var realTimeStatusIndex: Int","title":"realTimeStatusIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/search-string-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / searchStringIndex searchStringIndex var searchStringIndex: Int","title":"Search string index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/search-string-index/#searchstringindex","text":"var searchStringIndex: Int","title":"searchStringIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-color-blue-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / serviceColorBlueIndex serviceColorBlueIndex var serviceColorBlueIndex: Int","title":"Service color blue index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-color-blue-index/#servicecolorblueindex","text":"var serviceColorBlueIndex: Int","title":"serviceColorBlueIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-color-green-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / serviceColorGreenIndex serviceColorGreenIndex var serviceColorGreenIndex: Int","title":"Service color green index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-color-green-index/#servicecolorgreenindex","text":"var serviceColorGreenIndex: Int","title":"serviceColorGreenIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-color-red-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / serviceColorRedIndex serviceColorRedIndex var serviceColorRedIndex: Int","title":"Service color red index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-color-red-index/#servicecolorredindex","text":"var serviceColorRedIndex: Int","title":"serviceColorRedIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-name-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / serviceNameIndex serviceNameIndex var serviceNameIndex: Int","title":"Service name index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-name-index/#servicenameindex","text":"var serviceNameIndex: Int","title":"serviceNameIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-number-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / serviceNumberIndex serviceNumberIndex var serviceNumberIndex: Int","title":"Service number index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-number-index/#servicenumberindex","text":"var serviceNumberIndex: Int","title":"serviceNumberIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-operator/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / serviceOperator serviceOperator var serviceOperator: Int","title":"Service operator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-operator/#serviceoperator","text":"var serviceOperator: Int","title":"serviceOperator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-time-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / serviceTimeIndex serviceTimeIndex var serviceTimeIndex: Int","title":"Service time index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-time-index/#servicetimeindex","text":"var serviceTimeIndex: Int","title":"serviceTimeIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-trip-id-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / serviceTripIdIndex serviceTripIdIndex var serviceTripIdIndex: Int","title":"Service trip id index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/service-trip-id-index/#servicetripidindex","text":"var serviceTripIdIndex: Int","title":"serviceTripIdIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/start-stop-short-name/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / startStopShortName startStopShortName var startStopShortName: Int","title":"Start stop short name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/start-stop-short-name/#startstopshortname","text":"var startStopShortName: Int","title":"startStopShortName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/start-time-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / startTimeIndex startTimeIndex var startTimeIndex: Int","title":"Start time index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/start-time-index/#starttimeindex","text":"var startTimeIndex: Int","title":"startTimeIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/stop-code-index/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / stopCodeIndex stopCodeIndex var stopCodeIndex: Int","title":"Stop code index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/stop-code-index/#stopcodeindex","text":"var stopCodeIndex: Int","title":"stopCodeIndex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToServiceConverter / ServiceColumnIndices / wheelchairAccessible wheelchairAccessible var wheelchairAccessible: Int","title":"Wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-service-converter/-service-column-indices/wheelchair-accessible/#wheelchairaccessible","text":"var wheelchairAccessible: Int","title":"wheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToStopConverter CursorToStopConverter open class CursorToStopConverter : CursorToEntityConverter < ScheduledStop !> Constructors Name Summary <init> CursorToStopConverter(gson: Gson!) Properties Name Summary PROJECTION static val PROJECTION: Array < String !>! REPLACE_WITH_VAR_ARGS static val REPLACE_WITH_VAR_ARGS: String SELECTION_ALL static val SELECTION_ALL: String ! Functions Name Summary apply open fun apply(cursor: Cursor): ScheduledStop !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/#cursortostopconverter","text":"open class CursorToStopConverter : CursorToEntityConverter < ScheduledStop !>","title":"CursorToStopConverter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/#constructors","text":"Name Summary <init> CursorToStopConverter(gson: Gson!)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/#properties","text":"Name Summary PROJECTION static val PROJECTION: Array < String !>! REPLACE_WITH_VAR_ARGS static val REPLACE_WITH_VAR_ARGS: String SELECTION_ALL static val SELECTION_ALL: String !","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/#functions","text":"Name Summary apply open fun apply(cursor: Cursor): ScheduledStop !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToStopConverter / <init> <init> CursorToStopConverter(gson: Gson!)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/-init-/#init","text":"CursorToStopConverter(gson: Gson!)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/-p-r-o-j-e-c-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToStopConverter / PROJECTION PROJECTION static val PROJECTION: Array < String !>!","title":" p r o j e c t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/-p-r-o-j-e-c-t-i-o-n/#projection","text":"static val PROJECTION: Array < String !>!","title":"PROJECTION"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/-r-e-p-l-a-c-e_-w-i-t-h_-v-a-r_-a-r-g-s/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToStopConverter / REPLACE_WITH_VAR_ARGS REPLACE_WITH_VAR_ARGS static val REPLACE_WITH_VAR_ARGS: String","title":" r e p l a c e  w i t h  v a r  a r g s"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/-r-e-p-l-a-c-e_-w-i-t-h_-v-a-r_-a-r-g-s/#replace_with_var_args","text":"static val REPLACE_WITH_VAR_ARGS: String","title":"REPLACE_WITH_VAR_ARGS"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/-s-e-l-e-c-t-i-o-n_-a-l-l/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToStopConverter / SELECTION_ALL SELECTION_ALL static val SELECTION_ALL: String !","title":" s e l e c t i o n  a l l"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/-s-e-l-e-c-t-i-o-n_-a-l-l/#selection_all","text":"static val SELECTION_ALL: String !","title":"SELECTION_ALL"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/apply/","text":"tripkit-android / com.skedgo.tripkit.ui.data / CursorToStopConverter / apply apply open fun apply(cursor: Cursor): ScheduledStop !","title":"Apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.data/-cursor-to-stop-converter/apply/#apply","text":"open fun apply(cursor: Cursor): ScheduledStop !","title":"apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog Package com.skedgo.tripkit.ui.dialog Types Name Summary DateSpinnerAdapter open class DateSpinnerAdapter : ArrayAdapter< String !> TimeDatePickedEvent open class TimeDatePickedEvent TimeDatePickerFragment open class TimeDatePickerFragment : DialogFragment, OnClickListener TripKitDateTimePickerDialogFragment A DialogFragment which allows a user to set a time and choose whether it is a departure time or an arrival time. class TripKitDateTimePickerDialogFragment : DialogFragment, OnTimeChangedListener","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/#package-comskedgotripkituidialog","text":"","title":"Package com.skedgo.tripkit.ui.dialog"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/#types","text":"Name Summary DateSpinnerAdapter open class DateSpinnerAdapter : ArrayAdapter< String !> TimeDatePickedEvent open class TimeDatePickedEvent TimeDatePickerFragment open class TimeDatePickerFragment : DialogFragment, OnClickListener TripKitDateTimePickerDialogFragment A DialogFragment which allows a user to set a time and choose whether it is a departure time or an arrival time. class TripKitDateTimePickerDialogFragment : DialogFragment, OnTimeChangedListener","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-date-spinner-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / DateSpinnerAdapter DateSpinnerAdapter open class DateSpinnerAdapter : ArrayAdapter< String !> Constructors Name Summary <init> DateSpinnerAdapter(context: Context!, resource: Int , dates: MutableList < String !>!) Functions Name Summary getItem open fun getItem(position: Int ): String ! setDates open fun setDates(dates: MutableList < String !>!): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-date-spinner-adapter/#datespinneradapter","text":"open class DateSpinnerAdapter : ArrayAdapter< String !>","title":"DateSpinnerAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-date-spinner-adapter/#constructors","text":"Name Summary <init> DateSpinnerAdapter(context: Context!, resource: Int , dates: MutableList < String !>!)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-date-spinner-adapter/#functions","text":"Name Summary getItem open fun getItem(position: Int ): String ! setDates open fun setDates(dates: MutableList < String !>!): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-date-spinner-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / DateSpinnerAdapter / <init> <init> DateSpinnerAdapter(context: Context!, resource: Int , dates: MutableList < String !>!)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-date-spinner-adapter/-init-/#init","text":"DateSpinnerAdapter(context: Context!, resource: Int , dates: MutableList < String !>!)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-date-spinner-adapter/get-item/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / DateSpinnerAdapter / getItem getItem open fun getItem(position: Int ): String !","title":"Get item"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-date-spinner-adapter/get-item/#getitem","text":"open fun getItem(position: Int ): String !","title":"getItem"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-date-spinner-adapter/set-dates/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / DateSpinnerAdapter / setDates setDates open fun setDates(dates: MutableList < String !>!): Unit","title":"Set dates"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-date-spinner-adapter/set-dates/#setdates","text":"open fun setDates(dates: MutableList < String !>!): Unit","title":"setDates"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickedEvent TimeDatePickedEvent open class TimeDatePickedEvent Constructors Name Summary <init> TimeDatePickedEvent(timeType: Int , initiatorId: String !, time: Time) Properties Name Summary DATE_FORMAT_STRING static val DATE_FORMAT_STRING: String DATE_FORMAT_STRING_NO_TIME static val DATE_FORMAT_STRING_NO_TIME: String initiatorId val initiatorId: String ! time var time: Time! TIME_TYPE_BEGIN static val TIME_TYPE_BEGIN: Int TIME_TYPE_END static val TIME_TYPE_END: Int TIME_TYPE_OTHER static val TIME_TYPE_OTHER: Int timeType var timeType: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/#timedatepickedevent","text":"open class TimeDatePickedEvent","title":"TimeDatePickedEvent"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/#constructors","text":"Name Summary <init> TimeDatePickedEvent(timeType: Int , initiatorId: String !, time: Time)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/#properties","text":"Name Summary DATE_FORMAT_STRING static val DATE_FORMAT_STRING: String DATE_FORMAT_STRING_NO_TIME static val DATE_FORMAT_STRING_NO_TIME: String initiatorId val initiatorId: String ! time var time: Time! TIME_TYPE_BEGIN static val TIME_TYPE_BEGIN: Int TIME_TYPE_END static val TIME_TYPE_END: Int TIME_TYPE_OTHER static val TIME_TYPE_OTHER: Int timeType var timeType: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-d-a-t-e_-f-o-r-m-a-t_-s-t-r-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickedEvent / DATE_FORMAT_STRING DATE_FORMAT_STRING static val DATE_FORMAT_STRING: String","title":" d a t e  f o r m a t  s t r i n g"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-d-a-t-e_-f-o-r-m-a-t_-s-t-r-i-n-g/#date_format_string","text":"static val DATE_FORMAT_STRING: String","title":"DATE_FORMAT_STRING"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-d-a-t-e_-f-o-r-m-a-t_-s-t-r-i-n-g_-n-o_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickedEvent / DATE_FORMAT_STRING_NO_TIME DATE_FORMAT_STRING_NO_TIME static val DATE_FORMAT_STRING_NO_TIME: String","title":" d a t e  f o r m a t  s t r i n g  n o  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-d-a-t-e_-f-o-r-m-a-t_-s-t-r-i-n-g_-n-o_-t-i-m-e/#date_format_string_no_time","text":"static val DATE_FORMAT_STRING_NO_TIME: String","title":"DATE_FORMAT_STRING_NO_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickedEvent / <init> <init> TimeDatePickedEvent(timeType: Int , initiatorId: String !, @NotNull time: Time)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-init-/#init","text":"TimeDatePickedEvent(timeType: Int , initiatorId: String !, @NotNull time: Time)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-t-i-m-e_-t-y-p-e_-b-e-g-i-n/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickedEvent / TIME_TYPE_BEGIN TIME_TYPE_BEGIN static val TIME_TYPE_BEGIN: Int","title":" t i m e  t y p e  b e g i n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-t-i-m-e_-t-y-p-e_-b-e-g-i-n/#time_type_begin","text":"static val TIME_TYPE_BEGIN: Int","title":"TIME_TYPE_BEGIN"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-t-i-m-e_-t-y-p-e_-e-n-d/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickedEvent / TIME_TYPE_END TIME_TYPE_END static val TIME_TYPE_END: Int","title":" t i m e  t y p e  e n d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-t-i-m-e_-t-y-p-e_-e-n-d/#time_type_end","text":"static val TIME_TYPE_END: Int","title":"TIME_TYPE_END"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-t-i-m-e_-t-y-p-e_-o-t-h-e-r/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickedEvent / TIME_TYPE_OTHER TIME_TYPE_OTHER static val TIME_TYPE_OTHER: Int","title":" t i m e  t y p e  o t h e r"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/-t-i-m-e_-t-y-p-e_-o-t-h-e-r/#time_type_other","text":"static val TIME_TYPE_OTHER: Int","title":"TIME_TYPE_OTHER"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/initiator-id/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickedEvent / initiatorId initiatorId val initiatorId: String !","title":"Initiator id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/initiator-id/#initiatorid","text":"val initiatorId: String !","title":"initiatorId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/time-type/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickedEvent / timeType timeType var timeType: Int","title":"Time type"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/time-type/#timetype","text":"var timeType: Int","title":"timeType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/time/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickedEvent / time time var time: Time!","title":"Time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picked-event/time/#time","text":"var time: Time!","title":"time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickerFragment TimeDatePickerFragment open class TimeDatePickerFragment : DialogFragment, OnClickListener Constructors Name Summary <init> TimeDatePickerFragment() Properties Name Summary timeRelay var timeRelay: BehaviorRelay< Long !>! Functions Name Summary newInstance open static fun newInstance(timeType: Int , initiatorId: String !, title: String ?, initialTimeInMillis: Long ): TimeDatePickerFragment ! open static fun newInstance(timeType: Int ): TimeDatePickerFragment ! open static fun newInstance(title: String !): TimeDatePickerFragment ! onClick open fun onClick(view: View!): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onCreateDialog open fun onCreateDialog(savedInstanceState: Bundle?): Dialog","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/#timedatepickerfragment","text":"open class TimeDatePickerFragment : DialogFragment, OnClickListener","title":"TimeDatePickerFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/#constructors","text":"Name Summary <init> TimeDatePickerFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/#properties","text":"Name Summary timeRelay var timeRelay: BehaviorRelay< Long !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/#functions","text":"Name Summary newInstance open static fun newInstance(timeType: Int , initiatorId: String !, title: String ?, initialTimeInMillis: Long ): TimeDatePickerFragment ! open static fun newInstance(timeType: Int ): TimeDatePickerFragment ! open static fun newInstance(title: String !): TimeDatePickerFragment ! onClick open fun onClick(view: View!): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onCreateDialog open fun onCreateDialog(savedInstanceState: Bundle?): Dialog","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickerFragment / <init> <init> TimeDatePickerFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/-init-/#init","text":"TimeDatePickerFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/new-instance/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickerFragment / newInstance newInstance open static fun newInstance(timeType: Int , initiatorId: String !, @Nullable title: String ?, initialTimeInMillis: Long ): TimeDatePickerFragment ! open static fun newInstance(timeType: Int ): TimeDatePickerFragment ! open static fun newInstance(title: String !): TimeDatePickerFragment !","title":"New instance"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/new-instance/#newinstance","text":"open static fun newInstance(timeType: Int , initiatorId: String !, @Nullable title: String ?, initialTimeInMillis: Long ): TimeDatePickerFragment ! open static fun newInstance(timeType: Int ): TimeDatePickerFragment ! open static fun newInstance(title: String !): TimeDatePickerFragment !","title":"newInstance"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/on-click/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickerFragment / onClick onClick open fun onClick(view: View!): Unit","title":"On click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/on-click/#onclick","text":"open fun onClick(view: View!): Unit","title":"onClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/on-create-dialog/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickerFragment / onCreateDialog onCreateDialog open fun onCreateDialog(savedInstanceState: Bundle?): Dialog","title":"On create dialog"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/on-create-dialog/#oncreatedialog","text":"open fun onCreateDialog(savedInstanceState: Bundle?): Dialog","title":"onCreateDialog"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickerFragment / onCreate onCreate open fun onCreate(savedInstanceState: Bundle?): Unit","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/on-create/#oncreate","text":"open fun onCreate(savedInstanceState: Bundle?): Unit","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/time-relay/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TimeDatePickerFragment / timeRelay timeRelay var timeRelay: BehaviorRelay< Long !>!","title":"Time relay"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-time-date-picker-fragment/time-relay/#timerelay","text":"var timeRelay: BehaviorRelay< Long !>!","title":"timeRelay"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment TripKitDateTimePickerDialogFragment class TripKitDateTimePickerDialogFragment : DialogFragment, OnTimeChangedListener A DialogFragment which allows a user to set a time and choose whether it is a departure time or an arrival time. DialogFragment fragment = TripKitDateTimePickerDialogFragment.Builder() .withLocations(toLocation, fromLocation) .withTimeTag(timeTagForQuery) .build(); fragment.show(supportFragmentManager, \"timePicker\") Types Name Summary Builder Used to create a new instance of the fragment. class Builder OnTimeSelectedListener Interface definition for a callback to be invoked when a time is selected. interface OnTimeSelectedListener Constructors Name Summary <init> A DialogFragment which allows a user to set a time and choose whether it is a departure time or an arrival time. TripKitDateTimePickerDialogFragment() Functions Name Summary setOnTimeSelectedListener fun setOnTimeSelectedListener(listener: OnTimeSelectedListener): Unit fun setOnTimeSelectedListener(listener: ( TimeTag ) -> Unit ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/#tripkitdatetimepickerdialogfragment","text":"class TripKitDateTimePickerDialogFragment : DialogFragment, OnTimeChangedListener A DialogFragment which allows a user to set a time and choose whether it is a departure time or an arrival time. DialogFragment fragment = TripKitDateTimePickerDialogFragment.Builder() .withLocations(toLocation, fromLocation) .withTimeTag(timeTagForQuery) .build(); fragment.show(supportFragmentManager, \"timePicker\")","title":"TripKitDateTimePickerDialogFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/#types","text":"Name Summary Builder Used to create a new instance of the fragment. class Builder OnTimeSelectedListener Interface definition for a callback to be invoked when a time is selected. interface OnTimeSelectedListener","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/#constructors","text":"Name Summary <init> A DialogFragment which allows a user to set a time and choose whether it is a departure time or an arrival time. TripKitDateTimePickerDialogFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/#functions","text":"Name Summary setOnTimeSelectedListener fun setOnTimeSelectedListener(listener: OnTimeSelectedListener): Unit fun setOnTimeSelectedListener(listener: ( TimeTag ) -> Unit ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / <init> <init> TripKitDateTimePickerDialogFragment() A DialogFragment which allows a user to set a time and choose whether it is a departure time or an arrival time. DialogFragment fragment = TripKitDateTimePickerDialogFragment.Builder() .withLocations(toLocation, fromLocation) .withTimeTag(timeTagForQuery) .build(); fragment.show(supportFragmentManager, \"timePicker\")","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-init-/#init","text":"TripKitDateTimePickerDialogFragment() A DialogFragment which allows a user to set a time and choose whether it is a departure time or an arrival time. DialogFragment fragment = TripKitDateTimePickerDialogFragment.Builder() .withLocations(toLocation, fromLocation) .withTimeTag(timeTagForQuery) .build(); fragment.show(supportFragmentManager, \"timePicker\")","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/set-on-time-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / setOnTimeSelectedListener setOnTimeSelectedListener fun setOnTimeSelectedListener(listener: OnTimeSelectedListener): Unit fun setOnTimeSelectedListener(listener: ( TimeTag ) -> Unit ): Unit","title":"Set on time selected listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/set-on-time-selected-listener/#setontimeselectedlistener","text":"fun setOnTimeSelectedListener(listener: OnTimeSelectedListener): Unit fun setOnTimeSelectedListener(listener: ( TimeTag ) -> Unit ): Unit","title":"setOnTimeSelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / Builder Builder class Builder Used to create a new instance of the fragment. Constructors Name Summary <init> Used to create a new instance of the fragment. Builder() Functions Name Summary build Builds a new instance of the fragment. fun build(): TripKitDateTimePickerDialogFragment timeMillis The time in milliseconds to display. fun timeMillis(millis: Long ): Builder withLocations Sets the departure and arrival location so that the timezones can be supported. fun withLocations(departureLocation: Location ?, arrivalLocation: Location ?): Builder withTimeTag Automatically populates the fragment using an existing TimeTag. fun withTimeTag(tag: TimeTag ): Builder withTimeType Sets a TimeType value, which corresponds to: 0 - Leave after 1 - Arrive by fun withTimeType(timeType: Int ): Builder withTimeZones Sets the timezones. fun withTimeZones(departureTimezone: String ?, arrivalTimezone: String ?): Builder","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/#builder","text":"class Builder Used to create a new instance of the fragment.","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/#constructors","text":"Name Summary <init> Used to create a new instance of the fragment. Builder()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/#functions","text":"Name Summary build Builds a new instance of the fragment. fun build(): TripKitDateTimePickerDialogFragment timeMillis The time in milliseconds to display. fun timeMillis(millis: Long ): Builder withLocations Sets the departure and arrival location so that the timezones can be supported. fun withLocations(departureLocation: Location ?, arrivalLocation: Location ?): Builder withTimeTag Automatically populates the fragment using an existing TimeTag. fun withTimeTag(tag: TimeTag ): Builder withTimeType Sets a TimeType value, which corresponds to: 0 - Leave after 1 - Arrive by fun withTimeType(timeType: Int ): Builder withTimeZones Sets the timezones. fun withTimeZones(departureTimezone: String ?, arrivalTimezone: String ?): Builder","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / Builder / <init> <init> Builder() Used to create a new instance of the fragment.","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/-init-/#init","text":"Builder() Used to create a new instance of the fragment.","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / Builder / build build fun build(): TripKitDateTimePickerDialogFragment Builds a new instance of the fragment. Return A new instance","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/build/#build","text":"fun build(): TripKitDateTimePickerDialogFragment Builds a new instance of the fragment. Return A new instance","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/time-millis/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / Builder / timeMillis timeMillis fun timeMillis(millis: Long ): Builder The time in milliseconds to display. Parameters millis - Return this builder","title":"Time millis"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/time-millis/#timemillis","text":"fun timeMillis(millis: Long ): Builder The time in milliseconds to display.","title":"timeMillis"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/time-millis/#parameters","text":"millis - Return this builder","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / Builder / withLocations withLocations fun withLocations(departureLocation: Location ?, arrivalLocation: Location ?): Builder Sets the departure and arrival location so that the timezones can be supported. Parameters departureLocation - arrivalLocation - Return this builder","title":"With locations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-locations/#withlocations","text":"fun withLocations(departureLocation: Location ?, arrivalLocation: Location ?): Builder Sets the departure and arrival location so that the timezones can be supported.","title":"withLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-locations/#parameters","text":"departureLocation - arrivalLocation - Return this builder","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-time-tag/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / Builder / withTimeTag withTimeTag fun withTimeTag(tag: TimeTag ): Builder Automatically populates the fragment using an existing TimeTag. Parameters tag - Return this builder","title":"With time tag"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-time-tag/#withtimetag","text":"fun withTimeTag(tag: TimeTag ): Builder Automatically populates the fragment using an existing TimeTag.","title":"withTimeTag"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-time-tag/#parameters","text":"tag - Return this builder","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-time-type/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / Builder / withTimeType withTimeType fun withTimeType(timeType: Int ): Builder Sets a TimeType value, which corresponds to: 0 - Leave after 1 - Arrive by Parameters timeType - a com.skedgo.android.common.model.TimeTag.TimeType value. Return this builder","title":"With time type"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-time-type/#withtimetype","text":"fun withTimeType(timeType: Int ): Builder Sets a TimeType value, which corresponds to: 0 - Leave after 1 - Arrive by","title":"withTimeType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-time-type/#parameters","text":"timeType - a com.skedgo.android.common.model.TimeTag.TimeType value. Return this builder","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-time-zones/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / Builder / withTimeZones withTimeZones fun withTimeZones(departureTimezone: String ?, arrivalTimezone: String ?): Builder Sets the timezones. Parameters departureTimezone - arrivalTimezone - Return this builder","title":"With time zones"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-time-zones/#withtimezones","text":"fun withTimeZones(departureTimezone: String ?, arrivalTimezone: String ?): Builder Sets the timezones.","title":"withTimeZones"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-builder/with-time-zones/#parameters","text":"departureTimezone - arrivalTimezone - Return this builder","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-on-time-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / OnTimeSelectedListener OnTimeSelectedListener interface OnTimeSelectedListener Interface definition for a callback to be invoked when a time is selected. Functions Name Summary onTimeSelected Called when the user presses the \"Done\" button. abstract fun onTimeSelected(timeTag: TimeTag ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-on-time-selected-listener/#ontimeselectedlistener","text":"interface OnTimeSelectedListener Interface definition for a callback to be invoked when a time is selected.","title":"OnTimeSelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-on-time-selected-listener/#functions","text":"Name Summary onTimeSelected Called when the user presses the \"Done\" button. abstract fun onTimeSelected(timeTag: TimeTag ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-on-time-selected-listener/on-time-selected/","text":"tripkit-android / com.skedgo.tripkit.ui.dialog / TripKitDateTimePickerDialogFragment / OnTimeSelectedListener / onTimeSelected onTimeSelected abstract fun onTimeSelected(timeTag: TimeTag ): Unit Called when the user presses the \"Done\" button. Parameters timeTag - The chosen TimeTag","title":"On time selected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-on-time-selected-listener/on-time-selected/#ontimeselected","text":"abstract fun onTimeSelected(timeTag: TimeTag ): Unit Called when the user presses the \"Done\" button.","title":"onTimeSelected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.dialog/-trip-kit-date-time-picker-dialog-fragment/-on-time-selected-listener/on-time-selected/#parameters","text":"timeTag - The chosen TimeTag","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding Package com.skedgo.tripkit.ui.geocoding Types Name Summary AppResultLocationAdapter class AppResultLocationAdapter : ResultLocationAdapter <TripGoPOI!>, GCAppResultInterface AutoCompleteResult sealed class AutoCompleteResult AutoCompleteTask open class AutoCompleteTask : FetchSuggestions CitySelectedEvent interface CitySelectedEvent FetchFoursquareLocationsImpl class FetchFoursquareLocationsImpl : FetchFoursquareLocations FetchGoogleLocationsImpl class FetchGoogleLocationsImpl : FetchGoogleLocations FetchLocalLocationsImpl class FetchLocalLocationsImpl : FetchLocalLocations FetchTripGoLocationsImpl class FetchTripGoLocationsImpl : FetchTripGoLocations FilterSupportedLocations interface FilterSupportedLocations FilterSupportedLocationsImpl class FilterSupportedLocationsImpl : FilterSupportedLocations FoursquareGeocoder open class FoursquareGeocoder FoursquareResultLocationAdapter class FoursquareResultLocationAdapter : GCFoursquareResultInterface , ResultLocationAdapter <TripGoPOI!> Geocoder open class Geocoder GeocodeResponse open class GeocodeResponse GeocodeResultAdapter open class GeocodeResultAdapter : JsonDeserializer< Location !> GeocoderLive open class GeocoderLive : RegionalGeocoder GoogleGeocoderLive class GoogleGeocoderLive GoogleResultLocationAdapter class GoogleResultLocationAdapter : GCGoogleResultInterface , ResultLocationAdapter <WithoutLocation!> HasResults data class HasResults : AutoCompleteResult NoConnection object NoConnection : AutoCompleteResult NoResult data class NoResult : AutoCompleteResult RegionalGeocoder open class RegionalGeocoder : Geocoder ResultAggregator interface ResultAggregator ResultAggregatorImpl class ResultAggregatorImpl : ResultAggregator ResultLocationAdapter interface ResultLocationAdapter<T : Place!> ReviewSummary open class ReviewSummary SkedgoResultLocationAdapter class SkedgoResultLocationAdapter : GCSkedGoResultInterface , ResultLocationAdapter <TripGoPOI!> Exceptions Name Summary UnableToFindPlaceCoordinatesError class UnableToFindPlaceCoordinatesError : Throwable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/#package-comskedgotripkituigeocoding","text":"","title":"Package com.skedgo.tripkit.ui.geocoding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/#types","text":"Name Summary AppResultLocationAdapter class AppResultLocationAdapter : ResultLocationAdapter <TripGoPOI!>, GCAppResultInterface AutoCompleteResult sealed class AutoCompleteResult AutoCompleteTask open class AutoCompleteTask : FetchSuggestions CitySelectedEvent interface CitySelectedEvent FetchFoursquareLocationsImpl class FetchFoursquareLocationsImpl : FetchFoursquareLocations FetchGoogleLocationsImpl class FetchGoogleLocationsImpl : FetchGoogleLocations FetchLocalLocationsImpl class FetchLocalLocationsImpl : FetchLocalLocations FetchTripGoLocationsImpl class FetchTripGoLocationsImpl : FetchTripGoLocations FilterSupportedLocations interface FilterSupportedLocations FilterSupportedLocationsImpl class FilterSupportedLocationsImpl : FilterSupportedLocations FoursquareGeocoder open class FoursquareGeocoder FoursquareResultLocationAdapter class FoursquareResultLocationAdapter : GCFoursquareResultInterface , ResultLocationAdapter <TripGoPOI!> Geocoder open class Geocoder GeocodeResponse open class GeocodeResponse GeocodeResultAdapter open class GeocodeResultAdapter : JsonDeserializer< Location !> GeocoderLive open class GeocoderLive : RegionalGeocoder GoogleGeocoderLive class GoogleGeocoderLive GoogleResultLocationAdapter class GoogleResultLocationAdapter : GCGoogleResultInterface , ResultLocationAdapter <WithoutLocation!> HasResults data class HasResults : AutoCompleteResult NoConnection object NoConnection : AutoCompleteResult NoResult data class NoResult : AutoCompleteResult RegionalGeocoder open class RegionalGeocoder : Geocoder ResultAggregator interface ResultAggregator ResultAggregatorImpl class ResultAggregatorImpl : ResultAggregator ResultLocationAdapter interface ResultLocationAdapter<T : Place!> ReviewSummary open class ReviewSummary SkedgoResultLocationAdapter class SkedgoResultLocationAdapter : GCSkedGoResultInterface , ResultLocationAdapter <TripGoPOI!>","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/#exceptions","text":"Name Summary UnableToFindPlaceCoordinatesError class UnableToFindPlaceCoordinatesError : Throwable","title":"Exceptions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-auto-complete-result/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AutoCompleteResult AutoCompleteResult sealed class AutoCompleteResult Inheritors Name Summary HasResults data class HasResults : AutoCompleteResult NoConnection object NoConnection : AutoCompleteResult NoResult data class NoResult : AutoCompleteResult","title":" auto complete result"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-auto-complete-result/#autocompleteresult","text":"sealed class AutoCompleteResult","title":"AutoCompleteResult"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-auto-complete-result/#inheritors","text":"Name Summary HasResults data class HasResults : AutoCompleteResult NoConnection object NoConnection : AutoCompleteResult NoResult data class NoResult : AutoCompleteResult","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-no-connection/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / NoConnection NoConnection object NoConnection : AutoCompleteResult","title":" no connection"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-no-connection/#noconnection","text":"object NoConnection : AutoCompleteResult","title":"NoConnection"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AppResultLocationAdapter AppResultLocationAdapter class AppResultLocationAdapter : ResultLocationAdapter <TripGoPOI!>, GCAppResultInterface Constructors Name Summary <init> AppResultLocationAdapter(location: Location !, resultInterface: GCAppResultInterface !) Functions Name Summary getAppResultSource fun getAppResultSource(): Source! getLat fun getLat(): Double ! getLng fun getLng(): Double ! getName fun getName(): String getPlace fun getPlace(): TripGoPOI! getSubtitle fun getSubtitle(): String ! isFavourite fun isFavourite(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/#appresultlocationadapter","text":"class AppResultLocationAdapter : ResultLocationAdapter <TripGoPOI!>, GCAppResultInterface","title":"AppResultLocationAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/#constructors","text":"Name Summary <init> AppResultLocationAdapter(location: Location !, resultInterface: GCAppResultInterface !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/#functions","text":"Name Summary getAppResultSource fun getAppResultSource(): Source! getLat fun getLat(): Double ! getLng fun getLng(): Double ! getName fun getName(): String getPlace fun getPlace(): TripGoPOI! getSubtitle fun getSubtitle(): String ! isFavourite fun isFavourite(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AppResultLocationAdapter / <init> <init> AppResultLocationAdapter(location: Location !, resultInterface: GCAppResultInterface !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/-init-/#init","text":"AppResultLocationAdapter(location: Location !, resultInterface: GCAppResultInterface !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-app-result-source/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AppResultLocationAdapter / getAppResultSource getAppResultSource fun getAppResultSource(): Source!","title":"Get app result source"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-app-result-source/#getappresultsource","text":"fun getAppResultSource(): Source!","title":"getAppResultSource"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-lat/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AppResultLocationAdapter / getLat getLat fun getLat(): Double !","title":"Get lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-lat/#getlat","text":"fun getLat(): Double !","title":"getLat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-lng/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AppResultLocationAdapter / getLng getLng fun getLng(): Double !","title":"Get lng"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-lng/#getlng","text":"fun getLng(): Double !","title":"getLng"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-name/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AppResultLocationAdapter / getName getName @NotNull fun getName(): String","title":"Get name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-name/#getname","text":"@NotNull fun getName(): String","title":"getName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-place/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AppResultLocationAdapter / getPlace getPlace fun getPlace(): TripGoPOI!","title":"Get place"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-place/#getplace","text":"fun getPlace(): TripGoPOI!","title":"getPlace"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-subtitle/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AppResultLocationAdapter / getSubtitle getSubtitle fun getSubtitle(): String !","title":"Get subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/get-subtitle/#getsubtitle","text":"fun getSubtitle(): String !","title":"getSubtitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/is-favourite/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AppResultLocationAdapter / isFavourite isFavourite fun isFavourite(): Boolean","title":"Is favourite"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-app-result-location-adapter/is-favourite/#isfavourite","text":"fun isFavourite(): Boolean","title":"isFavourite"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-auto-complete-task/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AutoCompleteTask AutoCompleteTask open class AutoCompleteTask : FetchSuggestions Functions Name Summary query open fun query(parameters: FetchLocationsParameters ): Observable< AutoCompleteResult >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-auto-complete-task/#autocompletetask","text":"open class AutoCompleteTask : FetchSuggestions","title":"AutoCompleteTask"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-auto-complete-task/#functions","text":"Name Summary query open fun query(parameters: FetchLocationsParameters ): Observable< AutoCompleteResult >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-auto-complete-task/query/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / AutoCompleteTask / query query open fun query(parameters: FetchLocationsParameters ): Observable< AutoCompleteResult >","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-auto-complete-task/query/#query","text":"open fun query(parameters: FetchLocationsParameters ): Observable< AutoCompleteResult >","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-city-selected-event/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / CitySelectedEvent CitySelectedEvent @Immutable(false) interface CitySelectedEvent Functions Name Summary bounds abstract fun bounds(): LatLngBounds!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-city-selected-event/#cityselectedevent","text":"@Immutable(false) interface CitySelectedEvent","title":"CitySelectedEvent"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-city-selected-event/#functions","text":"Name Summary bounds abstract fun bounds(): LatLngBounds!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-city-selected-event/bounds/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / CitySelectedEvent / bounds bounds @Parameter abstract fun bounds(): LatLngBounds!","title":"Bounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-city-selected-event/bounds/#bounds","text":"@Parameter abstract fun bounds(): LatLngBounds!","title":"bounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-foursquare-locations-impl/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FetchFoursquareLocationsImpl FetchFoursquareLocationsImpl class FetchFoursquareLocationsImpl : FetchFoursquareLocations Functions Name Summary getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-foursquare-locations-impl/#fetchfoursquarelocationsimpl","text":"class FetchFoursquareLocationsImpl : FetchFoursquareLocations","title":"FetchFoursquareLocationsImpl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-foursquare-locations-impl/#functions","text":"Name Summary getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-foursquare-locations-impl/get-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FetchFoursquareLocationsImpl / getLocations getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Get locations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-foursquare-locations-impl/get-locations/#getlocations","text":"fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"getLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-google-locations-impl/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FetchGoogleLocationsImpl FetchGoogleLocationsImpl class FetchGoogleLocationsImpl : FetchGoogleLocations Constructors Name Summary <init> FetchGoogleLocationsImpl(placeSearchRepository: PlaceSearchRepository) Functions Name Summary getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-google-locations-impl/#fetchgooglelocationsimpl","text":"class FetchGoogleLocationsImpl : FetchGoogleLocations","title":"FetchGoogleLocationsImpl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-google-locations-impl/#constructors","text":"Name Summary <init> FetchGoogleLocationsImpl(placeSearchRepository: PlaceSearchRepository)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-google-locations-impl/#functions","text":"Name Summary getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-google-locations-impl/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FetchGoogleLocationsImpl / <init> <init> FetchGoogleLocationsImpl(placeSearchRepository: PlaceSearchRepository)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-google-locations-impl/-init-/#init","text":"FetchGoogleLocationsImpl(placeSearchRepository: PlaceSearchRepository)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-google-locations-impl/get-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FetchGoogleLocationsImpl / getLocations getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Get locations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-google-locations-impl/get-locations/#getlocations","text":"fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"getLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-local-locations-impl/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FetchLocalLocationsImpl FetchLocalLocationsImpl class FetchLocalLocationsImpl : FetchLocalLocations Constructors Name Summary <init> FetchLocalLocationsImpl(errorLogger: ErrorLogger ) Functions Name Summary getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-local-locations-impl/#fetchlocallocationsimpl","text":"class FetchLocalLocationsImpl : FetchLocalLocations","title":"FetchLocalLocationsImpl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-local-locations-impl/#constructors","text":"Name Summary <init> FetchLocalLocationsImpl(errorLogger: ErrorLogger )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-local-locations-impl/#functions","text":"Name Summary getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-local-locations-impl/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FetchLocalLocationsImpl / <init> <init> FetchLocalLocationsImpl(errorLogger: ErrorLogger )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-local-locations-impl/-init-/#init","text":"FetchLocalLocationsImpl(errorLogger: ErrorLogger )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-local-locations-impl/get-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FetchLocalLocationsImpl / getLocations getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Get locations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-local-locations-impl/get-locations/#getlocations","text":"fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"getLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-trip-go-locations-impl/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FetchTripGoLocationsImpl FetchTripGoLocationsImpl class FetchTripGoLocationsImpl : FetchTripGoLocations Functions Name Summary getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >> getLocationsFromTripGo fun getLocationsFromTripGo(term: String ): List < GCResultInterface >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-trip-go-locations-impl/#fetchtripgolocationsimpl","text":"class FetchTripGoLocationsImpl : FetchTripGoLocations","title":"FetchTripGoLocationsImpl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-trip-go-locations-impl/#functions","text":"Name Summary getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >> getLocationsFromTripGo fun getLocationsFromTripGo(term: String ): List < GCResultInterface >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-trip-go-locations-impl/get-locations-from-trip-go/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FetchTripGoLocationsImpl / getLocationsFromTripGo getLocationsFromTripGo fun getLocationsFromTripGo(term: String ): List < GCResultInterface >","title":"Get locations from trip go"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-trip-go-locations-impl/get-locations-from-trip-go/#getlocationsfromtripgo","text":"fun getLocationsFromTripGo(term: String ): List < GCResultInterface >","title":"getLocationsFromTripGo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-trip-go-locations-impl/get-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FetchTripGoLocationsImpl / getLocations getLocations fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Get locations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-fetch-trip-go-locations-impl/get-locations/#getlocations","text":"fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"getLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FilterSupportedLocations FilterSupportedLocations interface FilterSupportedLocations Functions Name Summary invoke abstract operator fun invoke(results: List < GCResultInterface >): Observable< List < GCResultInterface >> Inheritors Name Summary FilterSupportedLocationsImpl class FilterSupportedLocationsImpl : FilterSupportedLocations","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations/#filtersupportedlocations","text":"interface FilterSupportedLocations","title":"FilterSupportedLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations/#functions","text":"Name Summary invoke abstract operator fun invoke(results: List < GCResultInterface >): Observable< List < GCResultInterface >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations/#inheritors","text":"Name Summary FilterSupportedLocationsImpl class FilterSupportedLocationsImpl : FilterSupportedLocations","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations/invoke/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FilterSupportedLocations / invoke invoke abstract operator fun invoke(results: List < GCResultInterface >): Observable< List < GCResultInterface >>","title":"Invoke"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations/invoke/#invoke","text":"abstract operator fun invoke(results: List < GCResultInterface >): Observable< List < GCResultInterface >>","title":"invoke"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations-impl/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FilterSupportedLocationsImpl FilterSupportedLocationsImpl class FilterSupportedLocationsImpl : FilterSupportedLocations Properties Name Summary regionService val regionService: RegionService Functions Name Summary invoke operator fun invoke(results: List < GCResultInterface >): Observable< List < GCResultInterface >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations-impl/#filtersupportedlocationsimpl","text":"class FilterSupportedLocationsImpl : FilterSupportedLocations","title":"FilterSupportedLocationsImpl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations-impl/#properties","text":"Name Summary regionService val regionService: RegionService","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations-impl/#functions","text":"Name Summary invoke operator fun invoke(results: List < GCResultInterface >): Observable< List < GCResultInterface >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations-impl/invoke/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FilterSupportedLocationsImpl / invoke invoke operator fun invoke(results: List < GCResultInterface >): Observable< List < GCResultInterface >>","title":"Invoke"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations-impl/invoke/#invoke","text":"operator fun invoke(results: List < GCResultInterface >): Observable< List < GCResultInterface >>","title":"invoke"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations-impl/region-service/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FilterSupportedLocationsImpl / regionService regionService val regionService: RegionService","title":"Region service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-filter-supported-locations-impl/region-service/#regionservice","text":"val regionService: RegionService","title":"regionService"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-geocoder/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareGeocoder FoursquareGeocoder open class FoursquareGeocoder Constructors Name Summary <init> FoursquareGeocoder(input: String !, nearbyLat: Double , nearbyLon: Double ) Functions Name Summary getFromFoursquare open fun getFromFoursquare(): MutableList < FoursquareResultLocationAdapter !>! getLocationsFromFoursquare open fun getLocationsFromFoursquare(): MutableList < Location !>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-geocoder/#foursquaregeocoder","text":"open class FoursquareGeocoder","title":"FoursquareGeocoder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-geocoder/#constructors","text":"Name Summary <init> FoursquareGeocoder(input: String !, nearbyLat: Double , nearbyLon: Double )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-geocoder/#functions","text":"Name Summary getFromFoursquare open fun getFromFoursquare(): MutableList < FoursquareResultLocationAdapter !>! getLocationsFromFoursquare open fun getLocationsFromFoursquare(): MutableList < Location !>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-geocoder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareGeocoder / <init> <init> FoursquareGeocoder(input: String !, nearbyLat: Double , nearbyLon: Double )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-geocoder/-init-/#init","text":"FoursquareGeocoder(input: String !, nearbyLat: Double , nearbyLon: Double )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-geocoder/get-from-foursquare/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareGeocoder / getFromFoursquare getFromFoursquare open fun getFromFoursquare(): MutableList < FoursquareResultLocationAdapter !>!","title":"Get from foursquare"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-geocoder/get-from-foursquare/#getfromfoursquare","text":"open fun getFromFoursquare(): MutableList < FoursquareResultLocationAdapter !>!","title":"getFromFoursquare"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-geocoder/get-locations-from-foursquare/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareGeocoder / getLocationsFromFoursquare getLocationsFromFoursquare open fun getLocationsFromFoursquare(): MutableList < Location !>!","title":"Get locations from foursquare"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-geocoder/get-locations-from-foursquare/#getlocationsfromfoursquare","text":"open fun getLocationsFromFoursquare(): MutableList < Location !>!","title":"getLocationsFromFoursquare"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareResultLocationAdapter FoursquareResultLocationAdapter class FoursquareResultLocationAdapter : GCFoursquareResultInterface , ResultLocationAdapter <TripGoPOI!> Constructors Name Summary <init> FoursquareResultLocationAdapter(location: Location !, resultInterface: GCFoursquareResultInterface !) Functions Name Summary getCategories fun getCategories(): MutableList < String !>! getLat fun getLat(): Double ! getLng fun getLng(): Double ! getName fun getName(): String getPlace fun getPlace(): TripGoPOI! isVerified fun isVerified(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/#foursquareresultlocationadapter","text":"class FoursquareResultLocationAdapter : GCFoursquareResultInterface , ResultLocationAdapter <TripGoPOI!>","title":"FoursquareResultLocationAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/#constructors","text":"Name Summary <init> FoursquareResultLocationAdapter(location: Location !, resultInterface: GCFoursquareResultInterface !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/#functions","text":"Name Summary getCategories fun getCategories(): MutableList < String !>! getLat fun getLat(): Double ! getLng fun getLng(): Double ! getName fun getName(): String getPlace fun getPlace(): TripGoPOI! isVerified fun isVerified(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareResultLocationAdapter / <init> <init> FoursquareResultLocationAdapter(location: Location !, resultInterface: GCFoursquareResultInterface !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/-init-/#init","text":"FoursquareResultLocationAdapter(location: Location !, resultInterface: GCFoursquareResultInterface !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/get-categories/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareResultLocationAdapter / getCategories getCategories fun getCategories(): MutableList < String !>!","title":"Get categories"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/get-categories/#getcategories","text":"fun getCategories(): MutableList < String !>!","title":"getCategories"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/get-lat/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareResultLocationAdapter / getLat getLat fun getLat(): Double !","title":"Get lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/get-lat/#getlat","text":"fun getLat(): Double !","title":"getLat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/get-lng/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareResultLocationAdapter / getLng getLng fun getLng(): Double !","title":"Get lng"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/get-lng/#getlng","text":"fun getLng(): Double !","title":"getLng"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/get-name/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareResultLocationAdapter / getName getName fun getName(): String","title":"Get name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/get-name/#getname","text":"fun getName(): String","title":"getName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/get-place/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareResultLocationAdapter / getPlace getPlace fun getPlace(): TripGoPOI!","title":"Get place"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/get-place/#getplace","text":"fun getPlace(): TripGoPOI!","title":"getPlace"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/is-verified/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / FoursquareResultLocationAdapter / isVerified isVerified fun isVerified(): Boolean","title":"Is verified"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-foursquare-result-location-adapter/is-verified/#isverified","text":"fun isVerified(): Boolean","title":"isVerified"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-response/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocodeResponse GeocodeResponse open class GeocodeResponse Constructors Name Summary <init> GeocodeResponse() Functions Name Summary getChoiceList open fun getChoiceList(): MutableList < Location !>! getQuery open fun getQuery(): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-response/#geocoderesponse","text":"open class GeocodeResponse","title":"GeocodeResponse"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-response/#constructors","text":"Name Summary <init> GeocodeResponse()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-response/#functions","text":"Name Summary getChoiceList open fun getChoiceList(): MutableList < Location !>! getQuery open fun getQuery(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-response/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocodeResponse / <init> <init> GeocodeResponse()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-response/-init-/#init","text":"GeocodeResponse()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-response/get-choice-list/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocodeResponse / getChoiceList getChoiceList open fun getChoiceList(): MutableList < Location !>!","title":"Get choice list"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-response/get-choice-list/#getchoicelist","text":"open fun getChoiceList(): MutableList < Location !>!","title":"getChoiceList"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-response/get-query/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocodeResponse / getQuery getQuery open fun getQuery(): String !","title":"Get query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-response/get-query/#getquery","text":"open fun getQuery(): String !","title":"getQuery"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-result-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocodeResultAdapter GeocodeResultAdapter open class GeocodeResultAdapter : JsonDeserializer< Location !> Constructors Name Summary <init> GeocodeResultAdapter(gson: Gson!) Functions Name Summary deserialize open fun deserialize(json: JsonElement!, typeOfT: Type !, context: JsonDeserializationContext!): Location !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-result-adapter/#geocoderesultadapter","text":"open class GeocodeResultAdapter : JsonDeserializer< Location !>","title":"GeocodeResultAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-result-adapter/#constructors","text":"Name Summary <init> GeocodeResultAdapter(gson: Gson!)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-result-adapter/#functions","text":"Name Summary deserialize open fun deserialize(json: JsonElement!, typeOfT: Type !, context: JsonDeserializationContext!): Location !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-result-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocodeResultAdapter / <init> <init> GeocodeResultAdapter(gson: Gson!)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-result-adapter/-init-/#init","text":"GeocodeResultAdapter(gson: Gson!)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-result-adapter/deserialize/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocodeResultAdapter / deserialize deserialize open fun deserialize(json: JsonElement!, typeOfT: Type !, context: JsonDeserializationContext!): Location !","title":"Deserialize"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocode-result-adapter/deserialize/#deserialize","text":"open fun deserialize(json: JsonElement!, typeOfT: Type !, context: JsonDeserializationContext!): Location !","title":"deserialize"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder Geocoder open class Geocoder Constructors Name Summary <init> Geocoder() Properties Name Summary GEOCODE_METHOD static val GEOCODE_METHOD: String mGson var mGson: Gson! mNearLatitude var mNearLatitude: Double mNearLongitude var mNearLongitude: Double PARAM_ALLOW_GOOGLE static val PARAM_ALLOW_GOOGLE: String PARAM_ALLOW_YELP static val PARAM_ALLOW_YELP: String PARAM_NEAR static val PARAM_NEAR: String PARAM_QUERY static val PARAM_QUERY: String Functions Name Summary asParams open fun asParams(query: String !): MutableList <Pair< String !, Any !>!>! getNearLatitude open fun getNearLatitude(): Double getNearLongitude open fun getNearLongitude(): Double getServiceUrl open fun getServiceUrl(): String ! query open fun query(query: String !): MutableList < Location !>! setNearLatitude open fun setNearLatitude(nearLatitude: Double ): Geocoder ! setNearLongitude open fun setNearLongitude(nearLongitude: Double ): Geocoder ! Inheritors Name Summary RegionalGeocoder open class RegionalGeocoder : Geocoder","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/#geocoder","text":"open class Geocoder","title":"Geocoder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/#constructors","text":"Name Summary <init> Geocoder()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/#properties","text":"Name Summary GEOCODE_METHOD static val GEOCODE_METHOD: String mGson var mGson: Gson! mNearLatitude var mNearLatitude: Double mNearLongitude var mNearLongitude: Double PARAM_ALLOW_GOOGLE static val PARAM_ALLOW_GOOGLE: String PARAM_ALLOW_YELP static val PARAM_ALLOW_YELP: String PARAM_NEAR static val PARAM_NEAR: String PARAM_QUERY static val PARAM_QUERY: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/#functions","text":"Name Summary asParams open fun asParams(query: String !): MutableList <Pair< String !, Any !>!>! getNearLatitude open fun getNearLatitude(): Double getNearLongitude open fun getNearLongitude(): Double getServiceUrl open fun getServiceUrl(): String ! query open fun query(query: String !): MutableList < Location !>! setNearLatitude open fun setNearLatitude(nearLatitude: Double ): Geocoder ! setNearLongitude open fun setNearLongitude(nearLongitude: Double ): Geocoder !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/#inheritors","text":"Name Summary RegionalGeocoder open class RegionalGeocoder : Geocoder","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-g-e-o-c-o-d-e_-m-e-t-h-o-d/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / GEOCODE_METHOD GEOCODE_METHOD protected static val GEOCODE_METHOD: String","title":" g e o c o d e  m e t h o d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-g-e-o-c-o-d-e_-m-e-t-h-o-d/#geocode_method","text":"protected static val GEOCODE_METHOD: String","title":"GEOCODE_METHOD"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / <init> <init> Geocoder()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-init-/#init","text":"Geocoder()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-p-a-r-a-m_-a-l-l-o-w_-g-o-o-g-l-e/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / PARAM_ALLOW_GOOGLE PARAM_ALLOW_GOOGLE protected static val PARAM_ALLOW_GOOGLE: String","title":" p a r a m  a l l o w  g o o g l e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-p-a-r-a-m_-a-l-l-o-w_-g-o-o-g-l-e/#param_allow_google","text":"protected static val PARAM_ALLOW_GOOGLE: String","title":"PARAM_ALLOW_GOOGLE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-p-a-r-a-m_-a-l-l-o-w_-y-e-l-p/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / PARAM_ALLOW_YELP PARAM_ALLOW_YELP protected static val PARAM_ALLOW_YELP: String","title":" p a r a m  a l l o w  y e l p"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-p-a-r-a-m_-a-l-l-o-w_-y-e-l-p/#param_allow_yelp","text":"protected static val PARAM_ALLOW_YELP: String","title":"PARAM_ALLOW_YELP"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-p-a-r-a-m_-n-e-a-r/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / PARAM_NEAR PARAM_NEAR protected static val PARAM_NEAR: String","title":" p a r a m  n e a r"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-p-a-r-a-m_-n-e-a-r/#param_near","text":"protected static val PARAM_NEAR: String","title":"PARAM_NEAR"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-p-a-r-a-m_-q-u-e-r-y/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / PARAM_QUERY PARAM_QUERY protected static val PARAM_QUERY: String","title":" p a r a m  q u e r y"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/-p-a-r-a-m_-q-u-e-r-y/#param_query","text":"protected static val PARAM_QUERY: String","title":"PARAM_QUERY"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/as-params/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / asParams asParams protected open fun asParams(query: String !): MutableList <Pair< String !, Any !>!>!","title":"As params"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/as-params/#asparams","text":"protected open fun asParams(query: String !): MutableList <Pair< String !, Any !>!>!","title":"asParams"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/get-near-latitude/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / getNearLatitude getNearLatitude open fun getNearLatitude(): Double","title":"Get near latitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/get-near-latitude/#getnearlatitude","text":"open fun getNearLatitude(): Double","title":"getNearLatitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/get-near-longitude/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / getNearLongitude getNearLongitude open fun getNearLongitude(): Double","title":"Get near longitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/get-near-longitude/#getnearlongitude","text":"open fun getNearLongitude(): Double","title":"getNearLongitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/get-service-url/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / getServiceUrl getServiceUrl open fun getServiceUrl(): String !","title":"Get service url"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/get-service-url/#getserviceurl","text":"open fun getServiceUrl(): String !","title":"getServiceUrl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/m-gson/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / mGson mGson protected var mGson: Gson!","title":"M gson"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/m-gson/#mgson","text":"protected var mGson: Gson!","title":"mGson"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/m-near-latitude/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / mNearLatitude mNearLatitude protected var mNearLatitude: Double","title":"M near latitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/m-near-latitude/#mnearlatitude","text":"protected var mNearLatitude: Double","title":"mNearLatitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/m-near-longitude/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / mNearLongitude mNearLongitude protected var mNearLongitude: Double","title":"M near longitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/m-near-longitude/#mnearlongitude","text":"protected var mNearLongitude: Double","title":"mNearLongitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/query/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / query query open fun query(query: String !): MutableList < Location !>!","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/query/#query","text":"open fun query(query: String !): MutableList < Location !>!","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/set-near-latitude/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / setNearLatitude setNearLatitude open fun setNearLatitude(nearLatitude: Double ): Geocoder !","title":"Set near latitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/set-near-latitude/#setnearlatitude","text":"open fun setNearLatitude(nearLatitude: Double ): Geocoder !","title":"setNearLatitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/set-near-longitude/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / Geocoder / setNearLongitude setNearLongitude open fun setNearLongitude(nearLongitude: Double ): Geocoder !","title":"Set near longitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder/set-near-longitude/#setnearlongitude","text":"open fun setNearLongitude(nearLongitude: Double ): Geocoder !","title":"setNearLongitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocoderLive GeocoderLive open class GeocoderLive : RegionalGeocoder Functions Name Summary getNearLatitude open fun getNearLatitude(): Double getNearLongitude open fun getNearLongitude(): Double query open fun query(query: String !): MutableList < Location !>! setNearLatitude open fun setNearLatitude(nearLatitude: Double ): GeocoderLive ! setNearLongitude open fun setNearLongitude(nearLongitude: Double ): GeocoderLive !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/#geocoderlive","text":"open class GeocoderLive : RegionalGeocoder","title":"GeocoderLive"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/#functions","text":"Name Summary getNearLatitude open fun getNearLatitude(): Double getNearLongitude open fun getNearLongitude(): Double query open fun query(query: String !): MutableList < Location !>! setNearLatitude open fun setNearLatitude(nearLatitude: Double ): GeocoderLive ! setNearLongitude open fun setNearLongitude(nearLongitude: Double ): GeocoderLive !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/get-near-latitude/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocoderLive / getNearLatitude getNearLatitude open fun getNearLatitude(): Double","title":"Get near latitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/get-near-latitude/#getnearlatitude","text":"open fun getNearLatitude(): Double","title":"getNearLatitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/get-near-longitude/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocoderLive / getNearLongitude getNearLongitude open fun getNearLongitude(): Double","title":"Get near longitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/get-near-longitude/#getnearlongitude","text":"open fun getNearLongitude(): Double","title":"getNearLongitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/query/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocoderLive / query query open fun query(query: String !): MutableList < Location !>!","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/query/#query","text":"open fun query(query: String !): MutableList < Location !>!","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/set-near-latitude/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocoderLive / setNearLatitude setNearLatitude open fun setNearLatitude(nearLatitude: Double ): GeocoderLive !","title":"Set near latitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/set-near-latitude/#setnearlatitude","text":"open fun setNearLatitude(nearLatitude: Double ): GeocoderLive !","title":"setNearLatitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/set-near-longitude/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GeocoderLive / setNearLongitude setNearLongitude open fun setNearLongitude(nearLongitude: Double ): GeocoderLive !","title":"Set near longitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-geocoder-live/set-near-longitude/#setnearlongitude","text":"open fun setNearLongitude(nearLongitude: Double ): GeocoderLive !","title":"setNearLongitude"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-geocoder-live/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GoogleGeocoderLive GoogleGeocoderLive class GoogleGeocoderLive Constructors Name Summary <init> GoogleGeocoderLive(placeSearchRepository: PlaceSearchRepository) Functions Name Summary query fun query(locationName: String , maxResult: Int , swLat: Double , swLon: Double , neLat: Double , neLon: Double ): Observable<WithoutLocation>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-geocoder-live/#googlegeocoderlive","text":"class GoogleGeocoderLive","title":"GoogleGeocoderLive"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-geocoder-live/#constructors","text":"Name Summary <init> GoogleGeocoderLive(placeSearchRepository: PlaceSearchRepository)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-geocoder-live/#functions","text":"Name Summary query fun query(locationName: String , maxResult: Int , swLat: Double , swLon: Double , neLat: Double , neLon: Double ): Observable<WithoutLocation>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-geocoder-live/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GoogleGeocoderLive / <init> <init> GoogleGeocoderLive(placeSearchRepository: PlaceSearchRepository)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-geocoder-live/-init-/#init","text":"GoogleGeocoderLive(placeSearchRepository: PlaceSearchRepository)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-geocoder-live/query/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GoogleGeocoderLive / query query fun query(locationName: String , maxResult: Int , swLat: Double , swLon: Double , neLat: Double , neLon: Double ): Observable<WithoutLocation>","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-geocoder-live/query/#query","text":"fun query(locationName: String , maxResult: Int , swLat: Double , swLon: Double , neLat: Double , neLon: Double ): Observable<WithoutLocation>","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GoogleResultLocationAdapter GoogleResultLocationAdapter class GoogleResultLocationAdapter : GCGoogleResultInterface , ResultLocationAdapter <WithoutLocation!> Constructors Name Summary <init> GoogleResultLocationAdapter(withoutLocation: WithoutLocation!, resultInterface: GCGoogleResultInterface !) Functions Name Summary getAddress fun getAddress(): String ! getLat fun getLat(): Double ! getLng fun getLng(): Double ! getName fun getName(): String getPlace fun getPlace(): WithoutLocation!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/#googleresultlocationadapter","text":"class GoogleResultLocationAdapter : GCGoogleResultInterface , ResultLocationAdapter <WithoutLocation!>","title":"GoogleResultLocationAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/#constructors","text":"Name Summary <init> GoogleResultLocationAdapter(withoutLocation: WithoutLocation!, resultInterface: GCGoogleResultInterface !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/#functions","text":"Name Summary getAddress fun getAddress(): String ! getLat fun getLat(): Double ! getLng fun getLng(): Double ! getName fun getName(): String getPlace fun getPlace(): WithoutLocation!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GoogleResultLocationAdapter / <init> <init> GoogleResultLocationAdapter(withoutLocation: WithoutLocation!, resultInterface: GCGoogleResultInterface !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/-init-/#init","text":"GoogleResultLocationAdapter(withoutLocation: WithoutLocation!, resultInterface: GCGoogleResultInterface !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/get-address/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GoogleResultLocationAdapter / getAddress getAddress fun getAddress(): String !","title":"Get address"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/get-address/#getaddress","text":"fun getAddress(): String !","title":"getAddress"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/get-lat/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GoogleResultLocationAdapter / getLat getLat fun getLat(): Double !","title":"Get lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/get-lat/#getlat","text":"fun getLat(): Double !","title":"getLat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/get-lng/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GoogleResultLocationAdapter / getLng getLng fun getLng(): Double !","title":"Get lng"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/get-lng/#getlng","text":"fun getLng(): Double !","title":"getLng"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/get-name/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GoogleResultLocationAdapter / getName getName @NonNull fun getName(): String","title":"Get name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/get-name/#getname","text":"@NonNull fun getName(): String","title":"getName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/get-place/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / GoogleResultLocationAdapter / getPlace getPlace fun getPlace(): WithoutLocation!","title":"Get place"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-google-result-location-adapter/get-place/#getplace","text":"fun getPlace(): WithoutLocation!","title":"getPlace"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-has-results/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / HasResults HasResults data class HasResults : AutoCompleteResult Constructors Name Summary <init> HasResults(suggestions: List <Place>) Properties Name Summary suggestions val suggestions: List <Place>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-has-results/#hasresults","text":"data class HasResults : AutoCompleteResult","title":"HasResults"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-has-results/#constructors","text":"Name Summary <init> HasResults(suggestions: List <Place>)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-has-results/#properties","text":"Name Summary suggestions val suggestions: List <Place>","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-has-results/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / HasResults / <init> <init> HasResults(suggestions: List <Place>)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-has-results/-init-/#init","text":"HasResults(suggestions: List <Place>)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-has-results/suggestions/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / HasResults / suggestions suggestions val suggestions: List <Place>","title":"Suggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-has-results/suggestions/#suggestions","text":"val suggestions: List <Place>","title":"suggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-no-result/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / NoResult NoResult data class NoResult : AutoCompleteResult Constructors Name Summary <init> NoResult(query: String ) Properties Name Summary query val query: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-no-result/#noresult","text":"data class NoResult : AutoCompleteResult","title":"NoResult"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-no-result/#constructors","text":"Name Summary <init> NoResult(query: String )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-no-result/#properties","text":"Name Summary query val query: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-no-result/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / NoResult / <init> <init> NoResult(query: String )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-no-result/-init-/#init","text":"NoResult(query: String )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-no-result/query/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / NoResult / query query val query: String","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-no-result/query/#query","text":"val query: String","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-regional-geocoder/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / RegionalGeocoder RegionalGeocoder open class RegionalGeocoder : Geocoder Constructors Name Summary <init> RegionalGeocoder() Functions Name Summary getServiceUrl open fun getServiceUrl(): String ! Inheritors Name Summary GeocoderLive open class GeocoderLive : RegionalGeocoder","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-regional-geocoder/#regionalgeocoder","text":"open class RegionalGeocoder : Geocoder","title":"RegionalGeocoder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-regional-geocoder/#constructors","text":"Name Summary <init> RegionalGeocoder()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-regional-geocoder/#functions","text":"Name Summary getServiceUrl open fun getServiceUrl(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-regional-geocoder/#inheritors","text":"Name Summary GeocoderLive open class GeocoderLive : RegionalGeocoder","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-regional-geocoder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / RegionalGeocoder / <init> <init> RegionalGeocoder()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-regional-geocoder/-init-/#init","text":"RegionalGeocoder()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-regional-geocoder/get-service-url/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / RegionalGeocoder / getServiceUrl getServiceUrl open fun getServiceUrl(): String !","title":"Get service url"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-regional-geocoder/get-service-url/#getserviceurl","text":"open fun getServiceUrl(): String !","title":"getServiceUrl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-aggregator/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / ResultAggregator ResultAggregator interface ResultAggregator Functions Name Summary aggregate abstract fun aggregate(autocompleteRequest: FetchLocationsParameters , results: List < List < GCResultInterface >>): List <Place> Inheritors Name Summary ResultAggregatorImpl class ResultAggregatorImpl : ResultAggregator","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-aggregator/#resultaggregator","text":"interface ResultAggregator","title":"ResultAggregator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-aggregator/#functions","text":"Name Summary aggregate abstract fun aggregate(autocompleteRequest: FetchLocationsParameters , results: List < List < GCResultInterface >>): List <Place>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-aggregator/#inheritors","text":"Name Summary ResultAggregatorImpl class ResultAggregatorImpl : ResultAggregator","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-aggregator/aggregate/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / ResultAggregator / aggregate aggregate abstract fun aggregate(autocompleteRequest: FetchLocationsParameters , results: List < List < GCResultInterface >>): List <Place>","title":"Aggregate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-aggregator/aggregate/#aggregate","text":"abstract fun aggregate(autocompleteRequest: FetchLocationsParameters , results: List < List < GCResultInterface >>): List <Place>","title":"aggregate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-aggregator-impl/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / ResultAggregatorImpl ResultAggregatorImpl class ResultAggregatorImpl : ResultAggregator Functions Name Summary aggregate fun aggregate(autocompleteRequest: FetchLocationsParameters , results: List < List < GCResultInterface >>): List <Place>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-aggregator-impl/#resultaggregatorimpl","text":"class ResultAggregatorImpl : ResultAggregator","title":"ResultAggregatorImpl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-aggregator-impl/#functions","text":"Name Summary aggregate fun aggregate(autocompleteRequest: FetchLocationsParameters , results: List < List < GCResultInterface >>): List <Place>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-aggregator-impl/aggregate/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / ResultAggregatorImpl / aggregate aggregate @WorkerThread fun aggregate(autocompleteRequest: FetchLocationsParameters , results: List < List < GCResultInterface >>): List <Place>","title":"Aggregate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-aggregator-impl/aggregate/#aggregate","text":"@WorkerThread fun aggregate(autocompleteRequest: FetchLocationsParameters , results: List < List < GCResultInterface >>): List <Place>","title":"aggregate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-location-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / ResultLocationAdapter ResultLocationAdapter interface ResultLocationAdapter<T : Place!> Functions Name Summary getPlace abstract fun getPlace(): T Inheritors Name Summary AppResultLocationAdapter class AppResultLocationAdapter : ResultLocationAdapter <TripGoPOI!>, GCAppResultInterface FoursquareResultLocationAdapter class FoursquareResultLocationAdapter : GCFoursquareResultInterface , ResultLocationAdapter <TripGoPOI!> GoogleResultLocationAdapter class GoogleResultLocationAdapter : GCGoogleResultInterface , ResultLocationAdapter <WithoutLocation!> SkedgoResultLocationAdapter class SkedgoResultLocationAdapter : GCSkedGoResultInterface , ResultLocationAdapter <TripGoPOI!>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-location-adapter/#resultlocationadapter","text":"interface ResultLocationAdapter<T : Place!>","title":"ResultLocationAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-location-adapter/#functions","text":"Name Summary getPlace abstract fun getPlace(): T","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-location-adapter/#inheritors","text":"Name Summary AppResultLocationAdapter class AppResultLocationAdapter : ResultLocationAdapter <TripGoPOI!>, GCAppResultInterface FoursquareResultLocationAdapter class FoursquareResultLocationAdapter : GCFoursquareResultInterface , ResultLocationAdapter <TripGoPOI!> GoogleResultLocationAdapter class GoogleResultLocationAdapter : GCGoogleResultInterface , ResultLocationAdapter <WithoutLocation!> SkedgoResultLocationAdapter class SkedgoResultLocationAdapter : GCSkedGoResultInterface , ResultLocationAdapter <TripGoPOI!>","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-location-adapter/get-place/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / ResultLocationAdapter / getPlace getPlace abstract fun getPlace(): T","title":"Get place"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-result-location-adapter/get-place/#getplace","text":"abstract fun getPlace(): T","title":"getPlace"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / ReviewSummary ReviewSummary open class ReviewSummary Constructors Name Summary <init> ReviewSummary() Properties Name Summary averageRating var averageRating: Float ratingImageURL var ratingImageURL: String ! reviewCount var reviewCount: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/#reviewsummary","text":"open class ReviewSummary","title":"ReviewSummary"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/#constructors","text":"Name Summary <init> ReviewSummary()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/#properties","text":"Name Summary averageRating var averageRating: Float ratingImageURL var ratingImageURL: String ! reviewCount var reviewCount: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / ReviewSummary / <init> <init> ReviewSummary()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/-init-/#init","text":"ReviewSummary()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/average-rating/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / ReviewSummary / averageRating averageRating @SerializedName(\"averageRating\") var averageRating: Float","title":"Average rating"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/average-rating/#averagerating","text":"@SerializedName(\"averageRating\") var averageRating: Float","title":"averageRating"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/rating-image-u-r-l/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / ReviewSummary / ratingImageURL ratingImageURL @SerializedName(\"ratingImageURL\") var ratingImageURL: String !","title":"Rating image u r l"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/rating-image-u-r-l/#ratingimageurl","text":"@SerializedName(\"ratingImageURL\") var ratingImageURL: String !","title":"ratingImageURL"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/review-count/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / ReviewSummary / reviewCount reviewCount @SerializedName(\"reviewCount\") var reviewCount: Int","title":"Review count"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-review-summary/review-count/#reviewcount","text":"@SerializedName(\"reviewCount\") var reviewCount: Int","title":"reviewCount"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / SkedgoResultLocationAdapter SkedgoResultLocationAdapter class SkedgoResultLocationAdapter : GCSkedGoResultInterface , ResultLocationAdapter <TripGoPOI!> Constructors Name Summary <init> SkedgoResultLocationAdapter(location: Location !, resultInterface: GCSkedGoResultInterface !) Functions Name Summary getLat fun getLat(): Double ! getLng fun getLng(): Double ! getName fun getName(): String getPlace fun getPlace(): TripGoPOI! getPopularity fun getPopularity(): Int getResultClass fun getResultClass(): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/#skedgoresultlocationadapter","text":"class SkedgoResultLocationAdapter : GCSkedGoResultInterface , ResultLocationAdapter <TripGoPOI!>","title":"SkedgoResultLocationAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/#constructors","text":"Name Summary <init> SkedgoResultLocationAdapter(location: Location !, resultInterface: GCSkedGoResultInterface !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/#functions","text":"Name Summary getLat fun getLat(): Double ! getLng fun getLng(): Double ! getName fun getName(): String getPlace fun getPlace(): TripGoPOI! getPopularity fun getPopularity(): Int getResultClass fun getResultClass(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / SkedgoResultLocationAdapter / <init> <init> SkedgoResultLocationAdapter(location: Location !, resultInterface: GCSkedGoResultInterface !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/-init-/#init","text":"SkedgoResultLocationAdapter(location: Location !, resultInterface: GCSkedGoResultInterface !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-lat/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / SkedgoResultLocationAdapter / getLat getLat fun getLat(): Double !","title":"Get lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-lat/#getlat","text":"fun getLat(): Double !","title":"getLat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-lng/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / SkedgoResultLocationAdapter / getLng getLng fun getLng(): Double !","title":"Get lng"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-lng/#getlng","text":"fun getLng(): Double !","title":"getLng"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-name/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / SkedgoResultLocationAdapter / getName getName @NonNull fun getName(): String","title":"Get name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-name/#getname","text":"@NonNull fun getName(): String","title":"getName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-place/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / SkedgoResultLocationAdapter / getPlace getPlace fun getPlace(): TripGoPOI!","title":"Get place"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-place/#getplace","text":"fun getPlace(): TripGoPOI!","title":"getPlace"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-popularity/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / SkedgoResultLocationAdapter / getPopularity getPopularity fun getPopularity(): Int","title":"Get popularity"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-popularity/#getpopularity","text":"fun getPopularity(): Int","title":"getPopularity"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-result-class/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / SkedgoResultLocationAdapter / getResultClass getResultClass fun getResultClass(): String !","title":"Get result class"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-skedgo-result-location-adapter/get-result-class/#getresultclass","text":"fun getResultClass(): String !","title":"getResultClass"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-unable-to-find-place-coordinates-error/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / UnableToFindPlaceCoordinatesError UnableToFindPlaceCoordinatesError class UnableToFindPlaceCoordinatesError : Throwable Constructors Name Summary <init> UnableToFindPlaceCoordinatesError(_cause: Throwable )","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-unable-to-find-place-coordinates-error/#unabletofindplacecoordinateserror","text":"class UnableToFindPlaceCoordinatesError : Throwable","title":"UnableToFindPlaceCoordinatesError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-unable-to-find-place-coordinates-error/#constructors","text":"Name Summary <init> UnableToFindPlaceCoordinatesError(_cause: Throwable )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-unable-to-find-place-coordinates-error/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.geocoding / UnableToFindPlaceCoordinatesError / <init> <init> UnableToFindPlaceCoordinatesError(_cause: Throwable )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.geocoding/-unable-to-find-place-coordinates-error/-init-/#init","text":"UnableToFindPlaceCoordinatesError(_cause: Throwable )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/","text":"tripkit-android / com.skedgo.tripkit.ui.locationhelper Package com.skedgo.tripkit.ui.locationhelper Types Name Summary LocationHelper A simple wrapper around FusedLocationProviderClient . class LocationHelper","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/#package-comskedgotripkituilocationhelper","text":"","title":"Package com.skedgo.tripkit.ui.locationhelper"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/#types","text":"Name Summary LocationHelper A simple wrapper around FusedLocationProviderClient . class LocationHelper","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/","text":"tripkit-android / com.skedgo.tripkit.ui.locationhelper / LocationHelper LocationHelper class LocationHelper A simple wrapper around FusedLocationProviderClient . It is your responsibility to make sure that your app has requested the correct permissions to get location. Types Name Summary OnLocationFoundListener Interface definition for a callback that will be called when a location is either found, or an error occurs. interface OnLocationFoundListener Constructors Name Summary <init> A simple wrapper around FusedLocationProviderClient . LocationHelper(context: Context) Functions Name Summary getCurrentLocation Retrieves the current location. fun getCurrentLocation(listener: OnLocationFoundListener): Unit fun getCurrentLocation(listener: ( Location ) -> Unit , error: ( String ) -> Unit ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/#locationhelper","text":"class LocationHelper A simple wrapper around FusedLocationProviderClient . It is your responsibility to make sure that your app has requested the correct permissions to get location.","title":"LocationHelper"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/#types","text":"Name Summary OnLocationFoundListener Interface definition for a callback that will be called when a location is either found, or an error occurs. interface OnLocationFoundListener","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/#constructors","text":"Name Summary <init> A simple wrapper around FusedLocationProviderClient . LocationHelper(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/#functions","text":"Name Summary getCurrentLocation Retrieves the current location. fun getCurrentLocation(listener: OnLocationFoundListener): Unit fun getCurrentLocation(listener: ( Location ) -> Unit , error: ( String ) -> Unit ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.locationhelper / LocationHelper / <init> <init> LocationHelper(context: Context) A simple wrapper around FusedLocationProviderClient . It is your responsibility to make sure that your app has requested the correct permissions to get location.","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/-init-/#init","text":"LocationHelper(context: Context) A simple wrapper around FusedLocationProviderClient . It is your responsibility to make sure that your app has requested the correct permissions to get location.","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/get-current-location/","text":"tripkit-android / com.skedgo.tripkit.ui.locationhelper / LocationHelper / getCurrentLocation getCurrentLocation fun getCurrentLocation(listener: OnLocationFoundListener): Unit Retrieves the current location. Parameters listener - The callback to be called when a location is found. fun getCurrentLocation(listener: ( Location ) -> Unit , error: ( String ) -> Unit ): Unit Retrieves the current location. Parameters listener - A function to be called when a location is found. error - A function to be called when an error occurred.","title":"Get current location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/get-current-location/#getcurrentlocation","text":"fun getCurrentLocation(listener: OnLocationFoundListener): Unit Retrieves the current location.","title":"getCurrentLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/get-current-location/#parameters","text":"listener - The callback to be called when a location is found. fun getCurrentLocation(listener: ( Location ) -> Unit , error: ( String ) -> Unit ): Unit Retrieves the current location.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/get-current-location/#parameters_1","text":"listener - A function to be called when a location is found. error - A function to be called when an error occurred.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/-on-location-found-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.locationhelper / LocationHelper / OnLocationFoundListener OnLocationFoundListener interface OnLocationFoundListener Interface definition for a callback that will be called when a location is either found, or an error occurs. Functions Name Summary locationError Called when an error occurred. abstract fun locationError(error: String ): Unit locationFound Called when a location is found. abstract fun locationFound(location: Location ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/-on-location-found-listener/#onlocationfoundlistener","text":"interface OnLocationFoundListener Interface definition for a callback that will be called when a location is either found, or an error occurs.","title":"OnLocationFoundListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/-on-location-found-listener/#functions","text":"Name Summary locationError Called when an error occurred. abstract fun locationError(error: String ): Unit locationFound Called when a location is found. abstract fun locationFound(location: Location ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/-on-location-found-listener/location-error/","text":"tripkit-android / com.skedgo.tripkit.ui.locationhelper / LocationHelper / OnLocationFoundListener / locationError locationError abstract fun locationError(error: String ): Unit Called when an error occurred. Parameters error - An error string.","title":"Location error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/-on-location-found-listener/location-error/#locationerror","text":"abstract fun locationError(error: String ): Unit Called when an error occurred.","title":"locationError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/-on-location-found-listener/location-error/#parameters","text":"error - An error string.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/-on-location-found-listener/location-found/","text":"tripkit-android / com.skedgo.tripkit.ui.locationhelper / LocationHelper / OnLocationFoundListener / locationFound locationFound abstract fun locationFound(location: Location ): Unit Called when a location is found. Parameters location - The user's current location.","title":"Location found"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/-on-location-found-listener/location-found/#locationfound","text":"abstract fun locationFound(location: Location ): Unit Called when a location is found.","title":"locationFound"},{"location":"tripkit-android/com.skedgo.tripkit.ui.locationhelper/-location-helper/-on-location-found-listener/location-found/#parameters","text":"location - The user's current location.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/","text":"tripkit-android / com.skedgo.tripkit.ui.map Package com.skedgo.tripkit.ui.map Types Name Summary AlertMarkerIconFetcher open class AlertMarkerIconFetcher AlertMarkerViewModel data class AlertMarkerViewModel BaseMapFragment abstract class BaseMapFragment : RxMapFragment BearingMarkerIconBuilder open class BearingMarkerIconBuilder BikePodPOILocation class BikePodPOILocation : POILocation CarPodPOILocation class CarPodPOILocation : POILocation CreateMarkerForBikePod object CreateMarkerForBikePod CreateMarkerForCarPod object CreateMarkerForCarPod CreateSegmentMarkers open class CreateSegmentMarkers DefaultLoadPOILocationsByViewPort class DefaultLoadPOILocationsByViewPort : LoadPOILocationsByViewPort DefaultStopInfoWindowAdapter class DefaultStopInfoWindowAdapter : StopInfoWindowAdapter GetTripLine open class GetTripLine IconUtils class IconUtils LoadBikePodsByViewPort open class LoadBikePodsByViewPort LoadCarPodByViewPort open class LoadCarPodByViewPort LoadPOILocationsByViewPort interface LoadPOILocationsByViewPort LoadStopsByViewPort open class LoadStopsByViewPort LocationEnhancedMapFragment open class LocationEnhancedMapFragment : BaseMapFragment MapCameraController class MapCameraController MapMarkerUtils class MapMarkerUtils MarkerTarget open class MarkerTarget : Target PinUpdateRepositoryImpl class PinUpdateRepositoryImpl : PinUpdateRepository POILocation interface POILocation ScheduledStopRepository open class ScheduledStopRepository SegmentMarkerIconMaker class SegmentMarkerIconMaker SegmentMarkerMaker class SegmentMarkerMaker SegmentStopMarkerMaker class SegmentStopMarkerMaker ServiceAlertMarkerMaker class ServiceAlertMarkerMaker ServiceStop data class ServiceStop SimpleCalloutView View to create custom callout in `[ InfoWindowAdapter ](#), simply including a title, a snippet, a left image and a right image. class SimpleCalloutView : LinearLayout` StopMarkerIconFetcher open class StopMarkerIconFetcher StopMarkerViewModel data class StopMarkerViewModel StopPOILocation class StopPOILocation : POILocation TimeLabelMaker open class TimeLabelMaker TripLine typealias TripLine = List <PolylineOptions> TripLocationMarkerCreator open class TripLocationMarkerCreator TripResultMapViewModel class TripResultMapViewModel : RxViewModel TripVehicleMarkerCreator open class TripVehicleMarkerCreator VehicleMarkerIconCreator open class VehicleMarkerIconCreator VehicleMarkerIconFetcher open class VehicleMarkerIconFetcher VehicleMarkerViewModel data class VehicleMarkerViewModel Extensions for External Classes Name Summary com.google.android.gms.maps.model.LatLngBounds Functions Name Summary createStopMarkerOptions fun ScheduledStop .createStopMarkerOptions(): Single<MarkerOptions> getStopDisplayName fun ScheduledStop .getStopDisplayName(): String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/#package-comskedgotripkituimap","text":"","title":"Package com.skedgo.tripkit.ui.map"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/#types","text":"Name Summary AlertMarkerIconFetcher open class AlertMarkerIconFetcher AlertMarkerViewModel data class AlertMarkerViewModel BaseMapFragment abstract class BaseMapFragment : RxMapFragment BearingMarkerIconBuilder open class BearingMarkerIconBuilder BikePodPOILocation class BikePodPOILocation : POILocation CarPodPOILocation class CarPodPOILocation : POILocation CreateMarkerForBikePod object CreateMarkerForBikePod CreateMarkerForCarPod object CreateMarkerForCarPod CreateSegmentMarkers open class CreateSegmentMarkers DefaultLoadPOILocationsByViewPort class DefaultLoadPOILocationsByViewPort : LoadPOILocationsByViewPort DefaultStopInfoWindowAdapter class DefaultStopInfoWindowAdapter : StopInfoWindowAdapter GetTripLine open class GetTripLine IconUtils class IconUtils LoadBikePodsByViewPort open class LoadBikePodsByViewPort LoadCarPodByViewPort open class LoadCarPodByViewPort LoadPOILocationsByViewPort interface LoadPOILocationsByViewPort LoadStopsByViewPort open class LoadStopsByViewPort LocationEnhancedMapFragment open class LocationEnhancedMapFragment : BaseMapFragment MapCameraController class MapCameraController MapMarkerUtils class MapMarkerUtils MarkerTarget open class MarkerTarget : Target PinUpdateRepositoryImpl class PinUpdateRepositoryImpl : PinUpdateRepository POILocation interface POILocation ScheduledStopRepository open class ScheduledStopRepository SegmentMarkerIconMaker class SegmentMarkerIconMaker SegmentMarkerMaker class SegmentMarkerMaker SegmentStopMarkerMaker class SegmentStopMarkerMaker ServiceAlertMarkerMaker class ServiceAlertMarkerMaker ServiceStop data class ServiceStop SimpleCalloutView View to create custom callout in `[ InfoWindowAdapter ](#), simply including a title, a snippet, a left image and a right image. class SimpleCalloutView : LinearLayout` StopMarkerIconFetcher open class StopMarkerIconFetcher StopMarkerViewModel data class StopMarkerViewModel StopPOILocation class StopPOILocation : POILocation TimeLabelMaker open class TimeLabelMaker TripLine typealias TripLine = List <PolylineOptions> TripLocationMarkerCreator open class TripLocationMarkerCreator TripResultMapViewModel class TripResultMapViewModel : RxViewModel TripVehicleMarkerCreator open class TripVehicleMarkerCreator VehicleMarkerIconCreator open class VehicleMarkerIconCreator VehicleMarkerIconFetcher open class VehicleMarkerIconFetcher VehicleMarkerViewModel data class VehicleMarkerViewModel","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/#extensions-for-external-classes","text":"Name Summary com.google.android.gms.maps.model.LatLngBounds","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/#functions","text":"Name Summary createStopMarkerOptions fun ScheduledStop .createStopMarkerOptions(): Single<MarkerOptions> getStopDisplayName fun ScheduledStop .getStopDisplayName(): String ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-line/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripLine TripLine typealias TripLine = List <PolylineOptions>","title":" trip line"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-line/#tripline","text":"typealias TripLine = List <PolylineOptions>","title":"TripLine"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/create-stop-marker-options/","text":"tripkit-android / com.skedgo.tripkit.ui.map / createStopMarkerOptions createStopMarkerOptions fun ScheduledStop .createStopMarkerOptions(): Single<MarkerOptions>","title":"Create stop marker options"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/create-stop-marker-options/#createstopmarkeroptions","text":"fun ScheduledStop .createStopMarkerOptions(): Single<MarkerOptions>","title":"createStopMarkerOptions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/get-stop-display-name/","text":"tripkit-android / com.skedgo.tripkit.ui.map / getStopDisplayName getStopDisplayName fun ScheduledStop .getStopDisplayName(): String ?","title":"Get stop display name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/get-stop-display-name/#getstopdisplayname","text":"fun ScheduledStop .getStopDisplayName(): String ?","title":"getStopDisplayName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-icon-fetcher/","text":"tripkit-android / com.skedgo.tripkit.ui.map / AlertMarkerIconFetcher AlertMarkerIconFetcher open class AlertMarkerIconFetcher Functions Name Summary call open fun call(marker: Marker!, realtimeAlert: RealtimeAlert ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-icon-fetcher/#alertmarkericonfetcher","text":"open class AlertMarkerIconFetcher","title":"AlertMarkerIconFetcher"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-icon-fetcher/#functions","text":"Name Summary call open fun call(marker: Marker!, realtimeAlert: RealtimeAlert ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-icon-fetcher/call/","text":"tripkit-android / com.skedgo.tripkit.ui.map / AlertMarkerIconFetcher / call call open fun call(marker: Marker!, @NonNull realtimeAlert: RealtimeAlert ): Unit","title":"Call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-icon-fetcher/call/#call","text":"open fun call(marker: Marker!, @NonNull realtimeAlert: RealtimeAlert ): Unit","title":"call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.map / AlertMarkerViewModel AlertMarkerViewModel data class AlertMarkerViewModel Constructors Name Summary <init> AlertMarkerViewModel(alert: RealtimeAlert , segment: TripSegment ) Properties Name Summary alert val alert: RealtimeAlert segment val segment: TripSegment","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-view-model/#alertmarkerviewmodel","text":"data class AlertMarkerViewModel","title":"AlertMarkerViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-view-model/#constructors","text":"Name Summary <init> AlertMarkerViewModel(alert: RealtimeAlert , segment: TripSegment )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-view-model/#properties","text":"Name Summary alert val alert: RealtimeAlert segment val segment: TripSegment","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / AlertMarkerViewModel / <init> <init> AlertMarkerViewModel(alert: RealtimeAlert , segment: TripSegment )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-view-model/-init-/#init","text":"AlertMarkerViewModel(alert: RealtimeAlert , segment: TripSegment )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-view-model/alert/","text":"tripkit-android / com.skedgo.tripkit.ui.map / AlertMarkerViewModel / alert alert val alert: RealtimeAlert","title":"Alert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-view-model/alert/#alert","text":"val alert: RealtimeAlert","title":"alert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-view-model/segment/","text":"tripkit-android / com.skedgo.tripkit.ui.map / AlertMarkerViewModel / segment segment val segment: TripSegment","title":"Segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-alert-marker-view-model/segment/#segment","text":"val segment: TripSegment","title":"segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BaseMapFragment BaseMapFragment abstract class BaseMapFragment : RxMapFragment Constructors Name Summary <init> BaseMapFragment() Functions Name Summary onDestroyView open fun onDestroyView(): Unit onViewCreated open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit whenSafeToUseMap A safer point to retrieve GoogleMap as the callback is invoked after fragment view is measured. This makes it safe to move or animate map with CameraUpdate. fun whenSafeToUseMap(callback: Consumer<GoogleMap>): Unit Inheritors Name Summary LocationEnhancedMapFragment open class LocationEnhancedMapFragment : BaseMapFragment","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/#basemapfragment","text":"abstract class BaseMapFragment : RxMapFragment","title":"BaseMapFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/#constructors","text":"Name Summary <init> BaseMapFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/#functions","text":"Name Summary onDestroyView open fun onDestroyView(): Unit onViewCreated open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit whenSafeToUseMap A safer point to retrieve GoogleMap as the callback is invoked after fragment view is measured. This makes it safe to move or animate map with CameraUpdate. fun whenSafeToUseMap(callback: Consumer<GoogleMap>): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/#inheritors","text":"Name Summary LocationEnhancedMapFragment open class LocationEnhancedMapFragment : BaseMapFragment","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BaseMapFragment / <init> <init> BaseMapFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/-init-/#init","text":"BaseMapFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/on-destroy-view/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BaseMapFragment / onDestroyView onDestroyView open fun onDestroyView(): Unit","title":"On destroy view"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/on-destroy-view/#ondestroyview","text":"open fun onDestroyView(): Unit","title":"onDestroyView"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/on-view-created/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BaseMapFragment / onViewCreated onViewCreated open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"On view created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/on-view-created/#onviewcreated","text":"open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"onViewCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/when-safe-to-use-map/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BaseMapFragment / whenSafeToUseMap whenSafeToUseMap fun whenSafeToUseMap(callback: Consumer<GoogleMap>): Unit A safer point to retrieve GoogleMap as the callback is invoked after fragment view is measured. This makes it safe to move or animate map with CameraUpdate.","title":"When safe to use map"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-base-map-fragment/when-safe-to-use-map/#whensafetousemap","text":"fun whenSafeToUseMap(callback: Consumer<GoogleMap>): Unit A safer point to retrieve GoogleMap as the callback is invoked after fragment view is measured. This makes it safe to move or animate map with CameraUpdate.","title":"whenSafeToUseMap"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder BearingMarkerIconBuilder open class BearingMarkerIconBuilder Constructors Name Summary <init> BearingMarkerIconBuilder(resources: Resources, timeLabelMaker: TimeLabelMaker ) Functions Name Summary baseIcon open fun baseIcon(baseIconResourceId: Int ): BearingMarkerIconBuilder ! bearing open fun bearing(bearing: Int ): BearingMarkerIconBuilder ! build open fun build(): Pair<Bitmap!, Float !>! hasBearing open fun hasBearing(hasBearing: Boolean ): BearingMarkerIconBuilder ! hasBearingVehicleIcon open fun hasBearingVehicleIcon(hasBearingVehicleIcon: Boolean ): BearingMarkerIconBuilder ! hasTime open fun hasTime(hasTime: Boolean ): BearingMarkerIconBuilder ! pointerIcon open fun pointerIcon(pointerIconResourceId: Int ): BearingMarkerIconBuilder ! time open fun time(millis: Long , timeZone: String !): BearingMarkerIconBuilder ! vehicleIcon open fun vehicleIcon(vehicleIconRes: Drawable!): BearingMarkerIconBuilder ! vehicleIconScale open fun vehicleIconScale(vehicleIconScale: Float ): BearingMarkerIconBuilder !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/#bearingmarkericonbuilder","text":"open class BearingMarkerIconBuilder","title":"BearingMarkerIconBuilder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/#constructors","text":"Name Summary <init> BearingMarkerIconBuilder(resources: Resources, timeLabelMaker: TimeLabelMaker )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/#functions","text":"Name Summary baseIcon open fun baseIcon(baseIconResourceId: Int ): BearingMarkerIconBuilder ! bearing open fun bearing(bearing: Int ): BearingMarkerIconBuilder ! build open fun build(): Pair<Bitmap!, Float !>! hasBearing open fun hasBearing(hasBearing: Boolean ): BearingMarkerIconBuilder ! hasBearingVehicleIcon open fun hasBearingVehicleIcon(hasBearingVehicleIcon: Boolean ): BearingMarkerIconBuilder ! hasTime open fun hasTime(hasTime: Boolean ): BearingMarkerIconBuilder ! pointerIcon open fun pointerIcon(pointerIconResourceId: Int ): BearingMarkerIconBuilder ! time open fun time(millis: Long , timeZone: String !): BearingMarkerIconBuilder ! vehicleIcon open fun vehicleIcon(vehicleIconRes: Drawable!): BearingMarkerIconBuilder ! vehicleIconScale open fun vehicleIconScale(vehicleIconScale: Float ): BearingMarkerIconBuilder !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder / <init> <init> BearingMarkerIconBuilder(@NonNull resources: Resources, @NonNull timeLabelMaker: TimeLabelMaker )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/-init-/#init","text":"BearingMarkerIconBuilder(@NonNull resources: Resources, @NonNull timeLabelMaker: TimeLabelMaker )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/base-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder / baseIcon baseIcon open fun baseIcon(@DrawableRes baseIconResourceId: Int ): BearingMarkerIconBuilder !","title":"Base icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/base-icon/#baseicon","text":"open fun baseIcon(@DrawableRes baseIconResourceId: Int ): BearingMarkerIconBuilder !","title":"baseIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/bearing/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder / bearing bearing open fun bearing(bearing: Int ): BearingMarkerIconBuilder !","title":"Bearing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/bearing/#bearing","text":"open fun bearing(bearing: Int ): BearingMarkerIconBuilder !","title":"bearing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder / build build open fun build(): Pair<Bitmap!, Float !>!","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/build/#build","text":"open fun build(): Pair<Bitmap!, Float !>!","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/has-bearing-vehicle-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder / hasBearingVehicleIcon hasBearingVehicleIcon open fun hasBearingVehicleIcon(hasBearingVehicleIcon: Boolean ): BearingMarkerIconBuilder !","title":"Has bearing vehicle icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/has-bearing-vehicle-icon/#hasbearingvehicleicon","text":"open fun hasBearingVehicleIcon(hasBearingVehicleIcon: Boolean ): BearingMarkerIconBuilder !","title":"hasBearingVehicleIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/has-bearing/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder / hasBearing hasBearing open fun hasBearing(hasBearing: Boolean ): BearingMarkerIconBuilder !","title":"Has bearing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/has-bearing/#hasbearing","text":"open fun hasBearing(hasBearing: Boolean ): BearingMarkerIconBuilder !","title":"hasBearing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/has-time/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder / hasTime hasTime open fun hasTime(hasTime: Boolean ): BearingMarkerIconBuilder !","title":"Has time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/has-time/#hastime","text":"open fun hasTime(hasTime: Boolean ): BearingMarkerIconBuilder !","title":"hasTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/pointer-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder / pointerIcon pointerIcon open fun pointerIcon(@DrawableRes pointerIconResourceId: Int ): BearingMarkerIconBuilder !","title":"Pointer icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/pointer-icon/#pointericon","text":"open fun pointerIcon(@DrawableRes pointerIconResourceId: Int ): BearingMarkerIconBuilder !","title":"pointerIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/time/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder / time time open fun time(millis: Long , timeZone: String !): BearingMarkerIconBuilder !","title":"Time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/time/#time","text":"open fun time(millis: Long , timeZone: String !): BearingMarkerIconBuilder !","title":"time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/vehicle-icon-scale/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder / vehicleIconScale vehicleIconScale open fun vehicleIconScale(vehicleIconScale: Float ): BearingMarkerIconBuilder !","title":"Vehicle icon scale"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/vehicle-icon-scale/#vehicleiconscale","text":"open fun vehicleIconScale(vehicleIconScale: Float ): BearingMarkerIconBuilder !","title":"vehicleIconScale"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/vehicle-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BearingMarkerIconBuilder / vehicleIcon vehicleIcon open fun vehicleIcon(vehicleIconRes: Drawable!): BearingMarkerIconBuilder ! Parameters vehicleIconRes - Drawable!: Must be an instance of `[ BitmapDrawable`](#).","title":"Vehicle icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/vehicle-icon/#vehicleicon","text":"open fun vehicleIcon(vehicleIconRes: Drawable!): BearingMarkerIconBuilder !","title":"vehicleIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bearing-marker-icon-builder/vehicle-icon/#parameters","text":"vehicleIconRes - Drawable!: Must be an instance of `[ BitmapDrawable`](#).","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BikePodPOILocation BikePodPOILocation class BikePodPOILocation : POILocation Constructors Name Summary <init> BikePodPOILocation(bikePodEntity: BikePodLocationEntity ) Properties Name Summary bikePodEntity val bikePodEntity: BikePodLocationEntity identifier val identifier: String Functions Name Summary createMarkerOptions fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions> getInfoWindowAdapter fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ? onMarkerClick fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit toLocation fun toLocation(): Location","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/#bikepodpoilocation","text":"class BikePodPOILocation : POILocation","title":"BikePodPOILocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/#constructors","text":"Name Summary <init> BikePodPOILocation(bikePodEntity: BikePodLocationEntity )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/#properties","text":"Name Summary bikePodEntity val bikePodEntity: BikePodLocationEntity identifier val identifier: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/#functions","text":"Name Summary createMarkerOptions fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions> getInfoWindowAdapter fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ? onMarkerClick fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit toLocation fun toLocation(): Location","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BikePodPOILocation / <init> <init> BikePodPOILocation(bikePodEntity: BikePodLocationEntity )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/-init-/#init","text":"BikePodPOILocation(bikePodEntity: BikePodLocationEntity )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/bike-pod-entity/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BikePodPOILocation / bikePodEntity bikePodEntity val bikePodEntity: BikePodLocationEntity","title":"Bike pod entity"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/bike-pod-entity/#bikepodentity","text":"val bikePodEntity: BikePodLocationEntity","title":"bikePodEntity"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/create-marker-options/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BikePodPOILocation / createMarkerOptions createMarkerOptions fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions>","title":"Create marker options"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/create-marker-options/#createmarkeroptions","text":"fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions>","title":"createMarkerOptions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/get-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BikePodPOILocation / getInfoWindowAdapter getInfoWindowAdapter fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ?","title":"Get info window adapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/get-info-window-adapter/#getinfowindowadapter","text":"fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ?","title":"getInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/identifier/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BikePodPOILocation / identifier identifier val identifier: String","title":"Identifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/identifier/#identifier","text":"val identifier: String","title":"identifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/on-marker-click/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BikePodPOILocation / onMarkerClick onMarkerClick fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit","title":"On marker click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/on-marker-click/#onmarkerclick","text":"fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit","title":"onMarkerClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/to-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map / BikePodPOILocation / toLocation toLocation fun toLocation(): Location","title":"To location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-bike-pod-p-o-i-location/to-location/#tolocation","text":"fun toLocation(): Location","title":"toLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CarPodPOILocation CarPodPOILocation class CarPodPOILocation : POILocation Constructors Name Summary <init> CarPodPOILocation(carPod: CarPod ) Properties Name Summary identifier val identifier: String Functions Name Summary createMarkerOptions fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions> getInfoWindowAdapter fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ? onMarkerClick fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit toLocation fun toLocation(): Location","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/#carpodpoilocation","text":"class CarPodPOILocation : POILocation","title":"CarPodPOILocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/#constructors","text":"Name Summary <init> CarPodPOILocation(carPod: CarPod )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/#properties","text":"Name Summary identifier val identifier: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/#functions","text":"Name Summary createMarkerOptions fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions> getInfoWindowAdapter fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ? onMarkerClick fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit toLocation fun toLocation(): Location","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CarPodPOILocation / <init> <init> CarPodPOILocation(carPod: CarPod )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/-init-/#init","text":"CarPodPOILocation(carPod: CarPod )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/create-marker-options/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CarPodPOILocation / createMarkerOptions createMarkerOptions fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions>","title":"Create marker options"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/create-marker-options/#createmarkeroptions","text":"fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions>","title":"createMarkerOptions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/get-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CarPodPOILocation / getInfoWindowAdapter getInfoWindowAdapter fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ?","title":"Get info window adapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/get-info-window-adapter/#getinfowindowadapter","text":"fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ?","title":"getInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/identifier/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CarPodPOILocation / identifier identifier val identifier: String","title":"Identifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/identifier/#identifier","text":"val identifier: String","title":"identifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/on-marker-click/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CarPodPOILocation / onMarkerClick onMarkerClick fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit","title":"On marker click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/on-marker-click/#onmarkerclick","text":"fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit","title":"onMarkerClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/to-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CarPodPOILocation / toLocation toLocation fun toLocation(): Location","title":"To location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-car-pod-p-o-i-location/to-location/#tolocation","text":"fun toLocation(): Location","title":"toLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-marker-for-bike-pod/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CreateMarkerForBikePod CreateMarkerForBikePod object CreateMarkerForBikePod Functions Name Summary execute fun execute(resources: Resources, bikePod: BikePodLocationEntity ): Single<MarkerOptions>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-marker-for-bike-pod/#createmarkerforbikepod","text":"object CreateMarkerForBikePod","title":"CreateMarkerForBikePod"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-marker-for-bike-pod/#functions","text":"Name Summary execute fun execute(resources: Resources, bikePod: BikePodLocationEntity ): Single<MarkerOptions>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-marker-for-bike-pod/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CreateMarkerForBikePod / execute execute fun execute(resources: Resources, bikePod: BikePodLocationEntity ): Single<MarkerOptions>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-marker-for-bike-pod/execute/#execute","text":"fun execute(resources: Resources, bikePod: BikePodLocationEntity ): Single<MarkerOptions>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-marker-for-car-pod/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CreateMarkerForCarPod CreateMarkerForCarPod object CreateMarkerForCarPod Functions Name Summary execute fun execute(resources: Resources, picasso: Picasso, carPod: CarPod ): Single<MarkerOptions>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-marker-for-car-pod/#createmarkerforcarpod","text":"object CreateMarkerForCarPod","title":"CreateMarkerForCarPod"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-marker-for-car-pod/#functions","text":"Name Summary execute fun execute(resources: Resources, picasso: Picasso, carPod: CarPod ): Single<MarkerOptions>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-marker-for-car-pod/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CreateMarkerForCarPod / execute execute fun execute(resources: Resources, picasso: Picasso, carPod: CarPod ): Single<MarkerOptions>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-marker-for-car-pod/execute/#execute","text":"fun execute(resources: Resources, picasso: Picasso, carPod: CarPod ): Single<MarkerOptions>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-segment-markers/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CreateSegmentMarkers CreateSegmentMarkers open class CreateSegmentMarkers Constructors Name Summary <init> CreateSegmentMarkers(segmentMarkerMaker: SegmentMarkerMaker ) Functions Name Summary execute open fun execute(segments: List < TripSegment >): Observable< List < Pair < TripSegment , MarkerOptions>>>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-segment-markers/#createsegmentmarkers","text":"open class CreateSegmentMarkers","title":"CreateSegmentMarkers"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-segment-markers/#constructors","text":"Name Summary <init> CreateSegmentMarkers(segmentMarkerMaker: SegmentMarkerMaker )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-segment-markers/#functions","text":"Name Summary execute open fun execute(segments: List < TripSegment >): Observable< List < Pair < TripSegment , MarkerOptions>>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-segment-markers/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CreateSegmentMarkers / <init> <init> CreateSegmentMarkers(segmentMarkerMaker: SegmentMarkerMaker )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-segment-markers/-init-/#init","text":"CreateSegmentMarkers(segmentMarkerMaker: SegmentMarkerMaker )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-segment-markers/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.map / CreateSegmentMarkers / execute execute open fun execute(segments: List < TripSegment >): Observable< List < Pair < TripSegment , MarkerOptions>>>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-create-segment-markers/execute/#execute","text":"open fun execute(segments: List < TripSegment >): Observable< List < Pair < TripSegment , MarkerOptions>>>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-load-p-o-i-locations-by-view-port/","text":"tripkit-android / com.skedgo.tripkit.ui.map / DefaultLoadPOILocationsByViewPort DefaultLoadPOILocationsByViewPort class DefaultLoadPOILocationsByViewPort : LoadPOILocationsByViewPort Constructors Name Summary <init> DefaultLoadPOILocationsByViewPort(stopInfoWindowAdapter: StopInfoWindowAdapter , loadStopsByViewPort: LoadStopsByViewPort , loadBikePodsByViewPort: LoadBikePodsByViewPort , loadCarPodByViewPort: LoadCarPodByViewPort ) Functions Name Summary execute fun execute(viewPort: ViewPort ): Observable< List < POILocation >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-load-p-o-i-locations-by-view-port/#defaultloadpoilocationsbyviewport","text":"class DefaultLoadPOILocationsByViewPort : LoadPOILocationsByViewPort","title":"DefaultLoadPOILocationsByViewPort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-load-p-o-i-locations-by-view-port/#constructors","text":"Name Summary <init> DefaultLoadPOILocationsByViewPort(stopInfoWindowAdapter: StopInfoWindowAdapter , loadStopsByViewPort: LoadStopsByViewPort , loadBikePodsByViewPort: LoadBikePodsByViewPort , loadCarPodByViewPort: LoadCarPodByViewPort )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-load-p-o-i-locations-by-view-port/#functions","text":"Name Summary execute fun execute(viewPort: ViewPort ): Observable< List < POILocation >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-load-p-o-i-locations-by-view-port/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / DefaultLoadPOILocationsByViewPort / <init> <init> DefaultLoadPOILocationsByViewPort(stopInfoWindowAdapter: StopInfoWindowAdapter , loadStopsByViewPort: LoadStopsByViewPort , loadBikePodsByViewPort: LoadBikePodsByViewPort , loadCarPodByViewPort: LoadCarPodByViewPort )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-load-p-o-i-locations-by-view-port/-init-/#init","text":"DefaultLoadPOILocationsByViewPort(stopInfoWindowAdapter: StopInfoWindowAdapter , loadStopsByViewPort: LoadStopsByViewPort , loadBikePodsByViewPort: LoadBikePodsByViewPort , loadCarPodByViewPort: LoadCarPodByViewPort )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-load-p-o-i-locations-by-view-port/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.map / DefaultLoadPOILocationsByViewPort / execute execute fun execute(viewPort: ViewPort ): Observable< List < POILocation >>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-load-p-o-i-locations-by-view-port/execute/#execute","text":"fun execute(viewPort: ViewPort ): Observable< List < POILocation >>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map / DefaultStopInfoWindowAdapter DefaultStopInfoWindowAdapter class DefaultStopInfoWindowAdapter : StopInfoWindowAdapter Constructors Name Summary <init> DefaultStopInfoWindowAdapter(viewableInfoWindowAdapter: ViewableInfoWindowAdapter ) Functions Name Summary getInfoContents fun getInfoContents(marker: Marker?): View getInfoWindow fun getInfoWindow(marker: Marker?): View? onInfoWindowClosed fun onInfoWindowClosed(marker: Marker): Unit windowInfoHeightInPixel fun windowInfoHeightInPixel(marker: Marker): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/#defaultstopinfowindowadapter","text":"class DefaultStopInfoWindowAdapter : StopInfoWindowAdapter","title":"DefaultStopInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/#constructors","text":"Name Summary <init> DefaultStopInfoWindowAdapter(viewableInfoWindowAdapter: ViewableInfoWindowAdapter )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/#functions","text":"Name Summary getInfoContents fun getInfoContents(marker: Marker?): View getInfoWindow fun getInfoWindow(marker: Marker?): View? onInfoWindowClosed fun onInfoWindowClosed(marker: Marker): Unit windowInfoHeightInPixel fun windowInfoHeightInPixel(marker: Marker): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / DefaultStopInfoWindowAdapter / <init> <init> DefaultStopInfoWindowAdapter(viewableInfoWindowAdapter: ViewableInfoWindowAdapter )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/-init-/#init","text":"DefaultStopInfoWindowAdapter(viewableInfoWindowAdapter: ViewableInfoWindowAdapter )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/get-info-contents/","text":"tripkit-android / com.skedgo.tripkit.ui.map / DefaultStopInfoWindowAdapter / getInfoContents getInfoContents fun getInfoContents(marker: Marker?): View","title":"Get info contents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/get-info-contents/#getinfocontents","text":"fun getInfoContents(marker: Marker?): View","title":"getInfoContents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/get-info-window/","text":"tripkit-android / com.skedgo.tripkit.ui.map / DefaultStopInfoWindowAdapter / getInfoWindow getInfoWindow fun getInfoWindow(marker: Marker?): View?","title":"Get info window"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/get-info-window/#getinfowindow","text":"fun getInfoWindow(marker: Marker?): View?","title":"getInfoWindow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/on-info-window-closed/","text":"tripkit-android / com.skedgo.tripkit.ui.map / DefaultStopInfoWindowAdapter / onInfoWindowClosed onInfoWindowClosed fun onInfoWindowClosed(marker: Marker): Unit","title":"On info window closed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/on-info-window-closed/#oninfowindowclosed","text":"fun onInfoWindowClosed(marker: Marker): Unit","title":"onInfoWindowClosed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/window-info-height-in-pixel/","text":"tripkit-android / com.skedgo.tripkit.ui.map / DefaultStopInfoWindowAdapter / windowInfoHeightInPixel windowInfoHeightInPixel fun windowInfoHeightInPixel(marker: Marker): Int","title":"Window info height in pixel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-default-stop-info-window-adapter/window-info-height-in-pixel/#windowinfoheightinpixel","text":"fun windowInfoHeightInPixel(marker: Marker): Int","title":"windowInfoHeightInPixel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-get-trip-line/","text":"tripkit-android / com.skedgo.tripkit.ui.map / GetTripLine GetTripLine open class GetTripLine Functions Name Summary execute open fun execute(segments: List < TripSegment >): Observable< TripLine >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-get-trip-line/#gettripline","text":"open class GetTripLine","title":"GetTripLine"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-get-trip-line/#functions","text":"Name Summary execute open fun execute(segments: List < TripSegment >): Observable< TripLine >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-get-trip-line/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.map / GetTripLine / execute execute open fun execute(segments: List < TripSegment >): Observable< TripLine >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-get-trip-line/execute/#execute","text":"open fun execute(segments: List < TripSegment >): Observable< TripLine >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-icon-utils/","text":"tripkit-android / com.skedgo.tripkit.ui.map / IconUtils IconUtils class IconUtils Functions Name Summary asUrl static fun asUrl(resources: Resources!, icon: String !, urlTemplate: String !): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-icon-utils/#iconutils","text":"class IconUtils","title":"IconUtils"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-icon-utils/#functions","text":"Name Summary asUrl static fun asUrl(resources: Resources!, icon: String !, urlTemplate: String !): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-icon-utils/as-url/","text":"tripkit-android / com.skedgo.tripkit.ui.map / IconUtils / asUrl asUrl static fun asUrl(resources: Resources!, icon: String !, urlTemplate: String !): String !","title":"As url"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-icon-utils/as-url/#asurl","text":"static fun asUrl(resources: Resources!, icon: String !, urlTemplate: String !): String !","title":"asUrl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-bike-pods-by-view-port/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LoadBikePodsByViewPort LoadBikePodsByViewPort open class LoadBikePodsByViewPort Constructors Name Summary <init> LoadBikePodsByViewPort(bikePodRepository: BikePodRepository , getCellIdsFromViewPort: GetCellIdsFromViewPort ) Functions Name Summary execute open fun execute(viewPort: ViewPort ): Observable< List < BikePodLocationEntity >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-bike-pods-by-view-port/#loadbikepodsbyviewport","text":"open class LoadBikePodsByViewPort","title":"LoadBikePodsByViewPort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-bike-pods-by-view-port/#constructors","text":"Name Summary <init> LoadBikePodsByViewPort(bikePodRepository: BikePodRepository , getCellIdsFromViewPort: GetCellIdsFromViewPort )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-bike-pods-by-view-port/#functions","text":"Name Summary execute open fun execute(viewPort: ViewPort ): Observable< List < BikePodLocationEntity >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-bike-pods-by-view-port/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LoadBikePodsByViewPort / <init> <init> LoadBikePodsByViewPort(bikePodRepository: BikePodRepository , getCellIdsFromViewPort: GetCellIdsFromViewPort )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-bike-pods-by-view-port/-init-/#init","text":"LoadBikePodsByViewPort(bikePodRepository: BikePodRepository , getCellIdsFromViewPort: GetCellIdsFromViewPort )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-bike-pods-by-view-port/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LoadBikePodsByViewPort / execute execute open fun execute(viewPort: ViewPort ): Observable< List < BikePodLocationEntity >>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-bike-pods-by-view-port/execute/#execute","text":"open fun execute(viewPort: ViewPort ): Observable< List < BikePodLocationEntity >>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-car-pod-by-view-port/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LoadCarPodByViewPort LoadCarPodByViewPort open class LoadCarPodByViewPort Constructors Name Summary <init> LoadCarPodByViewPort(carPodRepository: CarPodRepository , getCellIdsFromViewPort: GetCellIdsFromViewPort ) Functions Name Summary execute open fun execute(viewPort: ViewPort ): Observable< List < CarPod >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-car-pod-by-view-port/#loadcarpodbyviewport","text":"open class LoadCarPodByViewPort","title":"LoadCarPodByViewPort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-car-pod-by-view-port/#constructors","text":"Name Summary <init> LoadCarPodByViewPort(carPodRepository: CarPodRepository , getCellIdsFromViewPort: GetCellIdsFromViewPort )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-car-pod-by-view-port/#functions","text":"Name Summary execute open fun execute(viewPort: ViewPort ): Observable< List < CarPod >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-car-pod-by-view-port/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LoadCarPodByViewPort / <init> <init> LoadCarPodByViewPort(carPodRepository: CarPodRepository , getCellIdsFromViewPort: GetCellIdsFromViewPort )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-car-pod-by-view-port/-init-/#init","text":"LoadCarPodByViewPort(carPodRepository: CarPodRepository , getCellIdsFromViewPort: GetCellIdsFromViewPort )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-car-pod-by-view-port/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LoadCarPodByViewPort / execute execute open fun execute(viewPort: ViewPort ): Observable< List < CarPod >>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-car-pod-by-view-port/execute/#execute","text":"open fun execute(viewPort: ViewPort ): Observable< List < CarPod >>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-p-o-i-locations-by-view-port/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LoadPOILocationsByViewPort LoadPOILocationsByViewPort interface LoadPOILocationsByViewPort Functions Name Summary execute abstract fun execute(viewPort: ViewPort ): Observable< List < POILocation >> Inheritors Name Summary DefaultLoadPOILocationsByViewPort class DefaultLoadPOILocationsByViewPort : LoadPOILocationsByViewPort","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-p-o-i-locations-by-view-port/#loadpoilocationsbyviewport","text":"interface LoadPOILocationsByViewPort","title":"LoadPOILocationsByViewPort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-p-o-i-locations-by-view-port/#functions","text":"Name Summary execute abstract fun execute(viewPort: ViewPort ): Observable< List < POILocation >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-p-o-i-locations-by-view-port/#inheritors","text":"Name Summary DefaultLoadPOILocationsByViewPort class DefaultLoadPOILocationsByViewPort : LoadPOILocationsByViewPort","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-p-o-i-locations-by-view-port/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LoadPOILocationsByViewPort / execute execute abstract fun execute(viewPort: ViewPort ): Observable< List < POILocation >>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-p-o-i-locations-by-view-port/execute/#execute","text":"abstract fun execute(viewPort: ViewPort ): Observable< List < POILocation >>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-stops-by-view-port/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LoadStopsByViewPort LoadStopsByViewPort open class LoadStopsByViewPort Constructors Name Summary <init> LoadStopsByViewPort(getCellIdsFromViewPort: GetCellIdsFromViewPort , scheduledStopRepository: ScheduledStopRepository , regionService: RegionService ) Functions Name Summary execute open fun execute(viewPort: ViewPort ): Observable< List < ScheduledStop >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-stops-by-view-port/#loadstopsbyviewport","text":"open class LoadStopsByViewPort","title":"LoadStopsByViewPort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-stops-by-view-port/#constructors","text":"Name Summary <init> LoadStopsByViewPort(getCellIdsFromViewPort: GetCellIdsFromViewPort , scheduledStopRepository: ScheduledStopRepository , regionService: RegionService )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-stops-by-view-port/#functions","text":"Name Summary execute open fun execute(viewPort: ViewPort ): Observable< List < ScheduledStop >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-stops-by-view-port/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LoadStopsByViewPort / <init> <init> LoadStopsByViewPort(getCellIdsFromViewPort: GetCellIdsFromViewPort , scheduledStopRepository: ScheduledStopRepository , regionService: RegionService )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-stops-by-view-port/-init-/#init","text":"LoadStopsByViewPort(getCellIdsFromViewPort: GetCellIdsFromViewPort , scheduledStopRepository: ScheduledStopRepository , regionService: RegionService )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-stops-by-view-port/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LoadStopsByViewPort / execute execute open fun execute(viewPort: ViewPort ): Observable< List < ScheduledStop >>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-load-stops-by-view-port/execute/#execute","text":"open fun execute(viewPort: ViewPort ): Observable< List < ScheduledStop >>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LocationEnhancedMapFragment LocationEnhancedMapFragment open class LocationEnhancedMapFragment : BaseMapFragment Constructors Name Summary <init> LocationEnhancedMapFragment() Functions Name Summary animateToMyLocation open fun animateToMyLocation(): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onCreateView open fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? Inheritors Name Summary ServiceStopMapFragment open class ServiceStopMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, InfoWindowAdapter, OnTimetableEntrySelectedListener, OnScheduledStopClickListener TripKitMapFragment A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> <br> Your app must provide a TripGo API token as R.string.skedgo_api_key . open class TripKitMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, OnMapLongClickListener, OnCameraChangeListener, OnMarkerClickListener | | TripResultMapFragment | open class TripResultMapFragment : LocationEnhancedMapFragment |","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/#locationenhancedmapfragment","text":"open class LocationEnhancedMapFragment : BaseMapFragment","title":"LocationEnhancedMapFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/#constructors","text":"Name Summary <init> LocationEnhancedMapFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/#functions","text":"Name Summary animateToMyLocation open fun animateToMyLocation(): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onCreateView open fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/#inheritors","text":"Name Summary ServiceStopMapFragment open class ServiceStopMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, InfoWindowAdapter, OnTimetableEntrySelectedListener, OnScheduledStopClickListener TripKitMapFragment A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> <br> Your app must provide a TripGo API token as R.string.skedgo_api_key . open class TripKitMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, OnMapLongClickListener, OnCameraChangeListener, OnMarkerClickListener | | TripResultMapFragment | open class TripResultMapFragment : LocationEnhancedMapFragment |","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LocationEnhancedMapFragment / <init> <init> LocationEnhancedMapFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/-init-/#init","text":"LocationEnhancedMapFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/animate-to-my-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LocationEnhancedMapFragment / animateToMyLocation animateToMyLocation protected open fun animateToMyLocation(): Unit","title":"Animate to my location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/animate-to-my-location/#animatetomylocation","text":"protected open fun animateToMyLocation(): Unit","title":"animateToMyLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/on-create-view/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LocationEnhancedMapFragment / onCreateView onCreateView open fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","title":"On create view"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/on-create-view/#oncreateview","text":"open fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","title":"onCreateView"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.map / LocationEnhancedMapFragment / onCreate onCreate open fun onCreate(@Nullable savedInstanceState: Bundle?): Unit","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-location-enhanced-map-fragment/on-create/#oncreate","text":"open fun onCreate(@Nullable savedInstanceState: Bundle?): Unit","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-camera-controller/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MapCameraController MapCameraController class MapCameraController Constructors Name Summary <init> MapCameraController() Functions Name Summary moveTo fun moveTo(map: GoogleMap, marker: Marker): Unit moveToLatLng fun moveToLatLng(map: GoogleMap, latLng: LatLng): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-camera-controller/#mapcameracontroller","text":"class MapCameraController","title":"MapCameraController"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-camera-controller/#constructors","text":"Name Summary <init> MapCameraController()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-camera-controller/#functions","text":"Name Summary moveTo fun moveTo(map: GoogleMap, marker: Marker): Unit moveToLatLng fun moveToLatLng(map: GoogleMap, latLng: LatLng): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-camera-controller/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MapCameraController / <init> <init> MapCameraController()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-camera-controller/-init-/#init","text":"MapCameraController()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-camera-controller/move-to-lat-lng/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MapCameraController / moveToLatLng moveToLatLng fun moveToLatLng(map: GoogleMap, latLng: LatLng): Unit","title":"Move to lat lng"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-camera-controller/move-to-lat-lng/#movetolatlng","text":"fun moveToLatLng(map: GoogleMap, latLng: LatLng): Unit","title":"moveToLatLng"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-camera-controller/move-to/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MapCameraController / moveTo moveTo fun moveTo(map: GoogleMap, marker: Marker): Unit","title":"Move to"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-camera-controller/move-to/#moveto","text":"fun moveTo(map: GoogleMap, marker: Marker): Unit","title":"moveTo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-marker-utils/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MapMarkerUtils MapMarkerUtils class MapMarkerUtils Functions Name Summary createCityMarker static fun createCityMarker(city: City!, cityIcon: BitmapDescriptor!): MarkerOptions? createStopMarkerIcon static fun createStopMarkerIcon(diameter: Int , strokeColor: Int , fillColor: Int , showOutline: Boolean ): Bitmap! createTransparentSquaredIcon This replaces the old solution that use a transparent bitmap contained in the drawable/ folder. The advantage is that, this creates a bitmap that looks more consistent over various DPIs. static fun createTransparentSquaredIcon(res: Resources, sizeResId: Int ): BitmapDescriptor!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-marker-utils/#mapmarkerutils","text":"class MapMarkerUtils","title":"MapMarkerUtils"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-marker-utils/#functions","text":"Name Summary createCityMarker static fun createCityMarker(city: City!, cityIcon: BitmapDescriptor!): MarkerOptions? createStopMarkerIcon static fun createStopMarkerIcon(diameter: Int , strokeColor: Int , fillColor: Int , showOutline: Boolean ): Bitmap! createTransparentSquaredIcon This replaces the old solution that use a transparent bitmap contained in the drawable/ folder. The advantage is that, this creates a bitmap that looks more consistent over various DPIs. static fun createTransparentSquaredIcon(res: Resources, sizeResId: Int ): BitmapDescriptor!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-marker-utils/create-city-marker/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MapMarkerUtils / createCityMarker createCityMarker @Nullable static fun createCityMarker(city: City!, cityIcon: BitmapDescriptor!): MarkerOptions?","title":"Create city marker"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-marker-utils/create-city-marker/#createcitymarker","text":"@Nullable static fun createCityMarker(city: City!, cityIcon: BitmapDescriptor!): MarkerOptions?","title":"createCityMarker"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-marker-utils/create-stop-marker-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MapMarkerUtils / createStopMarkerIcon createStopMarkerIcon static fun createStopMarkerIcon(diameter: Int , strokeColor: Int , fillColor: Int , showOutline: Boolean ): Bitmap!","title":"Create stop marker icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-marker-utils/create-stop-marker-icon/#createstopmarkericon","text":"static fun createStopMarkerIcon(diameter: Int , strokeColor: Int , fillColor: Int , showOutline: Boolean ): Bitmap!","title":"createStopMarkerIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-marker-utils/create-transparent-squared-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MapMarkerUtils / createTransparentSquaredIcon createTransparentSquaredIcon static fun createTransparentSquaredIcon(@NonNull res: Resources, @DimenRes sizeResId: Int ): BitmapDescriptor! This replaces the old solution that use a transparent bitmap contained in the drawable/ folder. The advantage is that, this creates a bitmap that looks more consistent over various DPIs.","title":"Create transparent squared icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-map-marker-utils/create-transparent-squared-icon/#createtransparentsquaredicon","text":"static fun createTransparentSquaredIcon(@NonNull res: Resources, @DimenRes sizeResId: Int ): BitmapDescriptor! This replaces the old solution that use a transparent bitmap contained in the drawable/ folder. The advantage is that, this creates a bitmap that looks more consistent over various DPIs.","title":"createTransparentSquaredIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MarkerTarget MarkerTarget open class MarkerTarget : Target Constructors Name Summary <init> MarkerTarget(markerWeakReference: WeakReference <Marker!>!) Functions Name Summary onBitmapFailed open fun onBitmapFailed(e: Exception !, errorDrawable: Drawable!): Unit onBitmapLoaded open fun onBitmapLoaded(bitmap: Bitmap!, from: LoadedFrom!): Unit onPrepareLoad open fun onPrepareLoad(placeHolderDrawable: Drawable!): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/#markertarget","text":"open class MarkerTarget : Target","title":"MarkerTarget"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/#constructors","text":"Name Summary <init> MarkerTarget(markerWeakReference: WeakReference <Marker!>!)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/#functions","text":"Name Summary onBitmapFailed open fun onBitmapFailed(e: Exception !, errorDrawable: Drawable!): Unit onBitmapLoaded open fun onBitmapLoaded(bitmap: Bitmap!, from: LoadedFrom!): Unit onPrepareLoad open fun onPrepareLoad(placeHolderDrawable: Drawable!): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MarkerTarget / <init> <init> MarkerTarget(markerWeakReference: WeakReference <Marker!>!)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/-init-/#init","text":"MarkerTarget(markerWeakReference: WeakReference <Marker!>!)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/on-bitmap-failed/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MarkerTarget / onBitmapFailed onBitmapFailed open fun onBitmapFailed(e: Exception !, errorDrawable: Drawable!): Unit","title":"On bitmap failed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/on-bitmap-failed/#onbitmapfailed","text":"open fun onBitmapFailed(e: Exception !, errorDrawable: Drawable!): Unit","title":"onBitmapFailed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/on-bitmap-loaded/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MarkerTarget / onBitmapLoaded onBitmapLoaded open fun onBitmapLoaded(bitmap: Bitmap!, from: LoadedFrom!): Unit","title":"On bitmap loaded"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/on-bitmap-loaded/#onbitmaploaded","text":"open fun onBitmapLoaded(bitmap: Bitmap!, from: LoadedFrom!): Unit","title":"onBitmapLoaded"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/on-prepare-load/","text":"tripkit-android / com.skedgo.tripkit.ui.map / MarkerTarget / onPrepareLoad onPrepareLoad open fun onPrepareLoad(placeHolderDrawable: Drawable!): Unit","title":"On prepare load"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-marker-target/on-prepare-load/#onprepareload","text":"open fun onPrepareLoad(placeHolderDrawable: Drawable!): Unit","title":"onPrepareLoad"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map / POILocation POILocation interface POILocation Properties Name Summary identifier abstract val identifier: String Functions Name Summary createMarkerOptions abstract fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions> getInfoWindowAdapter abstract fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ? onMarkerClick abstract fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit toLocation abstract fun toLocation(): Location Inheritors Name Summary BikePodPOILocation class BikePodPOILocation : POILocation CarPodPOILocation class CarPodPOILocation : POILocation StopPOILocation class StopPOILocation : POILocation","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/#poilocation","text":"interface POILocation","title":"POILocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/#properties","text":"Name Summary identifier abstract val identifier: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/#functions","text":"Name Summary createMarkerOptions abstract fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions> getInfoWindowAdapter abstract fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ? onMarkerClick abstract fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit toLocation abstract fun toLocation(): Location","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/#inheritors","text":"Name Summary BikePodPOILocation class BikePodPOILocation : POILocation CarPodPOILocation class CarPodPOILocation : POILocation StopPOILocation class StopPOILocation : POILocation","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/create-marker-options/","text":"tripkit-android / com.skedgo.tripkit.ui.map / POILocation / createMarkerOptions createMarkerOptions abstract fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions>","title":"Create marker options"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/create-marker-options/#createmarkeroptions","text":"abstract fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions>","title":"createMarkerOptions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/get-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map / POILocation / getInfoWindowAdapter getInfoWindowAdapter abstract fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ?","title":"Get info window adapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/get-info-window-adapter/#getinfowindowadapter","text":"abstract fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ?","title":"getInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/identifier/","text":"tripkit-android / com.skedgo.tripkit.ui.map / POILocation / identifier identifier abstract val identifier: String","title":"Identifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/identifier/#identifier","text":"abstract val identifier: String","title":"identifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/on-marker-click/","text":"tripkit-android / com.skedgo.tripkit.ui.map / POILocation / onMarkerClick onMarkerClick abstract fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit","title":"On marker click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/on-marker-click/#onmarkerclick","text":"abstract fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit","title":"onMarkerClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/to-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map / POILocation / toLocation toLocation abstract fun toLocation(): Location","title":"To location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-p-o-i-location/to-location/#tolocation","text":"abstract fun toLocation(): Location","title":"toLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/","text":"tripkit-android / com.skedgo.tripkit.ui.map / PinUpdateRepositoryImpl PinUpdateRepositoryImpl class PinUpdateRepositoryImpl : PinUpdateRepository Functions Name Summary getDestinationPinUpdate fun getDestinationPinUpdate(): Observable<PinUpdate> getOriginPinUpdate fun getOriginPinUpdate(): Observable<PinUpdate> selectDestination fun selectDestination(): Unit selectOrigin fun selectOrigin(): Unit setDestinationPinUpdate fun setDestinationPinUpdate(type: Optional<NonCurrentType>): Unit setOriginPinUpdate fun setOriginPinUpdate(type: Optional<NonCurrentType>): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/#pinupdaterepositoryimpl","text":"class PinUpdateRepositoryImpl : PinUpdateRepository","title":"PinUpdateRepositoryImpl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/#functions","text":"Name Summary getDestinationPinUpdate fun getDestinationPinUpdate(): Observable<PinUpdate> getOriginPinUpdate fun getOriginPinUpdate(): Observable<PinUpdate> selectDestination fun selectDestination(): Unit selectOrigin fun selectOrigin(): Unit setDestinationPinUpdate fun setDestinationPinUpdate(type: Optional<NonCurrentType>): Unit setOriginPinUpdate fun setOriginPinUpdate(type: Optional<NonCurrentType>): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/get-destination-pin-update/","text":"tripkit-android / com.skedgo.tripkit.ui.map / PinUpdateRepositoryImpl / getDestinationPinUpdate getDestinationPinUpdate fun getDestinationPinUpdate(): Observable<PinUpdate>","title":"Get destination pin update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/get-destination-pin-update/#getdestinationpinupdate","text":"fun getDestinationPinUpdate(): Observable<PinUpdate>","title":"getDestinationPinUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/get-origin-pin-update/","text":"tripkit-android / com.skedgo.tripkit.ui.map / PinUpdateRepositoryImpl / getOriginPinUpdate getOriginPinUpdate fun getOriginPinUpdate(): Observable<PinUpdate>","title":"Get origin pin update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/get-origin-pin-update/#getoriginpinupdate","text":"fun getOriginPinUpdate(): Observable<PinUpdate>","title":"getOriginPinUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/select-destination/","text":"tripkit-android / com.skedgo.tripkit.ui.map / PinUpdateRepositoryImpl / selectDestination selectDestination fun selectDestination(): Unit","title":"Select destination"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/select-destination/#selectdestination","text":"fun selectDestination(): Unit","title":"selectDestination"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/select-origin/","text":"tripkit-android / com.skedgo.tripkit.ui.map / PinUpdateRepositoryImpl / selectOrigin selectOrigin fun selectOrigin(): Unit","title":"Select origin"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/select-origin/#selectorigin","text":"fun selectOrigin(): Unit","title":"selectOrigin"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/set-destination-pin-update/","text":"tripkit-android / com.skedgo.tripkit.ui.map / PinUpdateRepositoryImpl / setDestinationPinUpdate setDestinationPinUpdate fun setDestinationPinUpdate(type: Optional<NonCurrentType>): Unit","title":"Set destination pin update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/set-destination-pin-update/#setdestinationpinupdate","text":"fun setDestinationPinUpdate(type: Optional<NonCurrentType>): Unit","title":"setDestinationPinUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/set-origin-pin-update/","text":"tripkit-android / com.skedgo.tripkit.ui.map / PinUpdateRepositoryImpl / setOriginPinUpdate setOriginPinUpdate fun setOriginPinUpdate(type: Optional<NonCurrentType>): Unit","title":"Set origin pin update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-pin-update-repository-impl/set-origin-pin-update/#setoriginpinupdate","text":"fun setOriginPinUpdate(type: Optional<NonCurrentType>): Unit","title":"setOriginPinUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository ScheduledStopRepository @Singleton open class ScheduledStopRepository Constructors Name Summary <init> ScheduledStopRepository(dbHelper: DbHelper , cursorToStopConverter: CursorToStopConverter ) Properties Name Summary changes val changes: PublishRelay< Unit > cursorToStopConverter val cursorToStopConverter: CursorToStopConverter dbHelper val dbHelper: DbHelper Functions Name Summary bulkInsert fun bulkInsert(contentValues: Array <ContentValues>): Int delete fun delete(selection: String ?, selectionArgs: Array < String >?): Completable insertStops fun insertStops(contentValues: ContentValues): Completable notifyChange fun notifyChange(): Unit queryStops fun queryStops(projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, order: String ?): Observable< List < ScheduledStop >> queryStopsSync fun queryStopsSync(projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, order: String ?): Cursor update fun update(selection: String ?, selectionArgs: Array < String >?, contentValues: ContentValues): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/#scheduledstoprepository","text":"@Singleton open class ScheduledStopRepository","title":"ScheduledStopRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/#constructors","text":"Name Summary <init> ScheduledStopRepository(dbHelper: DbHelper , cursorToStopConverter: CursorToStopConverter )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/#properties","text":"Name Summary changes val changes: PublishRelay< Unit > cursorToStopConverter val cursorToStopConverter: CursorToStopConverter dbHelper val dbHelper: DbHelper","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/#functions","text":"Name Summary bulkInsert fun bulkInsert(contentValues: Array <ContentValues>): Int delete fun delete(selection: String ?, selectionArgs: Array < String >?): Completable insertStops fun insertStops(contentValues: ContentValues): Completable notifyChange fun notifyChange(): Unit queryStops fun queryStops(projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, order: String ?): Observable< List < ScheduledStop >> queryStopsSync fun queryStopsSync(projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, order: String ?): Cursor update fun update(selection: String ?, selectionArgs: Array < String >?, contentValues: ContentValues): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository / <init> <init> ScheduledStopRepository(dbHelper: DbHelper , cursorToStopConverter: CursorToStopConverter )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/-init-/#init","text":"ScheduledStopRepository(dbHelper: DbHelper , cursorToStopConverter: CursorToStopConverter )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/bulk-insert/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository / bulkInsert bulkInsert fun bulkInsert(contentValues: Array <ContentValues>): Int","title":"Bulk insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/bulk-insert/#bulkinsert","text":"fun bulkInsert(contentValues: Array <ContentValues>): Int","title":"bulkInsert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/changes/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository / changes changes val changes: PublishRelay< Unit >","title":"Changes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/changes/#changes","text":"val changes: PublishRelay< Unit >","title":"changes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/cursor-to-stop-converter/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository / cursorToStopConverter cursorToStopConverter val cursorToStopConverter: CursorToStopConverter","title":"Cursor to stop converter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/cursor-to-stop-converter/#cursortostopconverter","text":"val cursorToStopConverter: CursorToStopConverter","title":"cursorToStopConverter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/db-helper/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository / dbHelper dbHelper val dbHelper: DbHelper","title":"Db helper"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/db-helper/#dbhelper","text":"val dbHelper: DbHelper","title":"dbHelper"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/delete/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository / delete delete fun delete(selection: String ?, selectionArgs: Array < String >?): Completable","title":"Delete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/delete/#delete","text":"fun delete(selection: String ?, selectionArgs: Array < String >?): Completable","title":"delete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/insert-stops/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository / insertStops insertStops fun insertStops(contentValues: ContentValues): Completable","title":"Insert stops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/insert-stops/#insertstops","text":"fun insertStops(contentValues: ContentValues): Completable","title":"insertStops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/notify-change/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository / notifyChange notifyChange fun notifyChange(): Unit","title":"Notify change"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/notify-change/#notifychange","text":"fun notifyChange(): Unit","title":"notifyChange"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/query-stops-sync/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository / queryStopsSync queryStopsSync fun queryStopsSync(projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, order: String ?): Cursor","title":"Query stops sync"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/query-stops-sync/#querystopssync","text":"fun queryStopsSync(projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, order: String ?): Cursor","title":"queryStopsSync"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/query-stops/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository / queryStops queryStops fun queryStops(projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, order: String ?): Observable< List < ScheduledStop >>","title":"Query stops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/query-stops/#querystops","text":"fun queryStops(projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, order: String ?): Observable< List < ScheduledStop >>","title":"queryStops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/update/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ScheduledStopRepository / update update fun update(selection: String ?, selectionArgs: Array < String >?, contentValues: ContentValues): Completable","title":"Update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-scheduled-stop-repository/update/#update","text":"fun update(selection: String ?, selectionArgs: Array < String >?, contentValues: ContentValues): Completable","title":"update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-marker-icon-maker/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SegmentMarkerIconMaker SegmentMarkerIconMaker class SegmentMarkerIconMaker Functions Name Summary make fun make(segment: TripSegment , remoteSegmentMarkerIcon: BitmapDrawable? = null): Pair<Bitmap, Float >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-marker-icon-maker/#segmentmarkericonmaker","text":"class SegmentMarkerIconMaker","title":"SegmentMarkerIconMaker"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-marker-icon-maker/#functions","text":"Name Summary make fun make(segment: TripSegment , remoteSegmentMarkerIcon: BitmapDrawable? = null): Pair<Bitmap, Float >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-marker-icon-maker/make/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SegmentMarkerIconMaker / make make fun make(segment: TripSegment , remoteSegmentMarkerIcon: BitmapDrawable? = null): Pair<Bitmap, Float >","title":"Make"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-marker-icon-maker/make/#make","text":"fun make(segment: TripSegment , remoteSegmentMarkerIcon: BitmapDrawable? = null): Pair<Bitmap, Float >","title":"make"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-marker-maker/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SegmentMarkerMaker SegmentMarkerMaker class SegmentMarkerMaker Functions Name Summary make fun make(segment: TripSegment ): MarkerOptions?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-marker-maker/#segmentmarkermaker","text":"class SegmentMarkerMaker","title":"SegmentMarkerMaker"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-marker-maker/#functions","text":"Name Summary make fun make(segment: TripSegment ): MarkerOptions?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-marker-maker/make/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SegmentMarkerMaker / make make fun make(segment: TripSegment ): MarkerOptions?","title":"Make"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-marker-maker/make/#make","text":"fun make(segment: TripSegment ): MarkerOptions?","title":"make"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-stop-marker-maker/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SegmentStopMarkerMaker SegmentStopMarkerMaker class SegmentStopMarkerMaker Functions Name Summary make fun make(stopMarkerViewModel: StopMarkerViewModel ): MarkerOptions","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-stop-marker-maker/#segmentstopmarkermaker","text":"class SegmentStopMarkerMaker","title":"SegmentStopMarkerMaker"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-stop-marker-maker/#functions","text":"Name Summary make fun make(stopMarkerViewModel: StopMarkerViewModel ): MarkerOptions","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-stop-marker-maker/make/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SegmentStopMarkerMaker / make make fun make(stopMarkerViewModel: StopMarkerViewModel ): MarkerOptions","title":"Make"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-segment-stop-marker-maker/make/#make","text":"fun make(stopMarkerViewModel: StopMarkerViewModel ): MarkerOptions","title":"make"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-alert-marker-maker/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceAlertMarkerMaker ServiceAlertMarkerMaker class ServiceAlertMarkerMaker Properties Name Summary context val context: Context Functions Name Summary make fun make(alert: RealtimeAlert ): MarkerOptions","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-alert-marker-maker/#servicealertmarkermaker","text":"class ServiceAlertMarkerMaker","title":"ServiceAlertMarkerMaker"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-alert-marker-maker/#properties","text":"Name Summary context val context: Context","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-alert-marker-maker/#functions","text":"Name Summary make fun make(alert: RealtimeAlert ): MarkerOptions","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-alert-marker-maker/context/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceAlertMarkerMaker / context context val context: Context","title":"Context"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-alert-marker-maker/context/#context","text":"val context: Context","title":"context"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-alert-marker-maker/make/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceAlertMarkerMaker / make make fun make(alert: RealtimeAlert ): MarkerOptions","title":"Make"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-alert-marker-maker/make/#make","text":"fun make(alert: RealtimeAlert ): MarkerOptions","title":"make"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceStop ServiceStop data class ServiceStop Constructors Name Summary <init> ServiceStop(code: String , position: GeoPoint , name: String ? = null, platform: String ? = null, departureDateTime: DateTime? = null, arrivalDateTime: DateTime? = null, isWheelchairAccessible: Boolean ? = null) Properties Name Summary arrivalDateTime val arrivalDateTime: DateTime? code val code: String departureDateTime val departureDateTime: DateTime? isWheelchairAccessible val isWheelchairAccessible: Boolean ? name val name: String ? platform val platform: String ? position val position: GeoPoint","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/#servicestop","text":"data class ServiceStop","title":"ServiceStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/#constructors","text":"Name Summary <init> ServiceStop(code: String , position: GeoPoint , name: String ? = null, platform: String ? = null, departureDateTime: DateTime? = null, arrivalDateTime: DateTime? = null, isWheelchairAccessible: Boolean ? = null)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/#properties","text":"Name Summary arrivalDateTime val arrivalDateTime: DateTime? code val code: String departureDateTime val departureDateTime: DateTime? isWheelchairAccessible val isWheelchairAccessible: Boolean ? name val name: String ? platform val platform: String ? position val position: GeoPoint","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceStop / <init> <init> ServiceStop(code: String , position: GeoPoint , name: String ? = null, platform: String ? = null, departureDateTime: DateTime? = null, arrivalDateTime: DateTime? = null, isWheelchairAccessible: Boolean ? = null)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/-init-/#init","text":"ServiceStop(code: String , position: GeoPoint , name: String ? = null, platform: String ? = null, departureDateTime: DateTime? = null, arrivalDateTime: DateTime? = null, isWheelchairAccessible: Boolean ? = null)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/arrival-date-time/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceStop / arrivalDateTime arrivalDateTime val arrivalDateTime: DateTime?","title":"Arrival date time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/arrival-date-time/#arrivaldatetime","text":"val arrivalDateTime: DateTime?","title":"arrivalDateTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/code/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceStop / code code val code: String","title":"Code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/code/#code","text":"val code: String","title":"code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/departure-date-time/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceStop / departureDateTime departureDateTime val departureDateTime: DateTime?","title":"Departure date time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/departure-date-time/#departuredatetime","text":"val departureDateTime: DateTime?","title":"departureDateTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/is-wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceStop / isWheelchairAccessible isWheelchairAccessible val isWheelchairAccessible: Boolean ?","title":"Is wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/is-wheelchair-accessible/#iswheelchairaccessible","text":"val isWheelchairAccessible: Boolean ?","title":"isWheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/name/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceStop / name name val name: String ?","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/name/#name","text":"val name: String ?","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/platform/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceStop / platform platform val platform: String ?","title":"Platform"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/platform/#platform","text":"val platform: String ?","title":"platform"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/position/","text":"tripkit-android / com.skedgo.tripkit.ui.map / ServiceStop / position position val position: GeoPoint","title":"Position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-service-stop/position/#position","text":"val position: GeoPoint","title":"position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SimpleCalloutView SimpleCalloutView class SimpleCalloutView : LinearLayout View to create custom callout in `[ InfoWindowAdapter`](#), simply including a title, a snippet, a left image and a right image. Constructors Name Summary <init> Should not invoke this constructor directly. Use [`#create(LayoutInflater)`](create.md) instead.`SimpleCalloutView(context: Context!) SimpleCalloutView(context: Context!, attrs: AttributeSet!) <br> SimpleCalloutView(context: Context!, attrs: AttributeSet!, defStyleAttr: [ Int ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html) ) <br> SimpleCalloutView(context: Context!, attrs: AttributeSet!, defStyleAttr: [ Int ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html) , defStyleRes: [ Int ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html) )` Functions Name Summary create static fun create(inflater: LayoutInflater): SimpleCalloutView ! onFinishInflate fun onFinishInflate(): Unit setLeftImage fun setLeftImage(res: Int ): Unit setRightImage fun setRightImage(res: Int ): Unit setSnippet fun setSnippet(snippet: String ?): Unit setTitle fun setTitle(title: String ?): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/#simplecalloutview","text":"class SimpleCalloutView : LinearLayout View to create custom callout in `[ InfoWindowAdapter`](#), simply including a title, a snippet, a left image and a right image.","title":"SimpleCalloutView"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/#constructors","text":"Name Summary <init> Should not invoke this constructor directly. Use [`#create(LayoutInflater)`](create.md) instead.`SimpleCalloutView(context: Context!) SimpleCalloutView(context: Context!, attrs: AttributeSet!) <br> SimpleCalloutView(context: Context!, attrs: AttributeSet!, defStyleAttr: [ Int ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html) ) <br> SimpleCalloutView(context: Context!, attrs: AttributeSet!, defStyleAttr: [ Int ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html) , defStyleRes: [ Int ](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-int/index.html) )`","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/#functions","text":"Name Summary create static fun create(inflater: LayoutInflater): SimpleCalloutView ! onFinishInflate fun onFinishInflate(): Unit setLeftImage fun setLeftImage(res: Int ): Unit setRightImage fun setRightImage(res: Int ): Unit setSnippet fun setSnippet(snippet: String ?): Unit setTitle fun setTitle(title: String ?): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SimpleCalloutView / <init> <init> SimpleCalloutView(context: Context!) Should not invoke this constructor directly. Use `[ #create(LayoutInflater)`](create.md) instead. SimpleCalloutView(context: Context!, attrs: AttributeSet!) SimpleCalloutView(context: Context!, attrs: AttributeSet!, defStyleAttr: Int ) SimpleCalloutView(context: Context!, attrs: AttributeSet!, defStyleAttr: Int , defStyleRes: Int )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/-init-/#init","text":"SimpleCalloutView(context: Context!) Should not invoke this constructor directly. Use `[ #create(LayoutInflater)`](create.md) instead. SimpleCalloutView(context: Context!, attrs: AttributeSet!) SimpleCalloutView(context: Context!, attrs: AttributeSet!, defStyleAttr: Int ) SimpleCalloutView(context: Context!, attrs: AttributeSet!, defStyleAttr: Int , defStyleRes: Int )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/create/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SimpleCalloutView / create create static fun create(@NonNull inflater: LayoutInflater): SimpleCalloutView !","title":"Create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/create/#create","text":"static fun create(@NonNull inflater: LayoutInflater): SimpleCalloutView !","title":"create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/on-finish-inflate/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SimpleCalloutView / onFinishInflate onFinishInflate protected fun onFinishInflate(): Unit","title":"On finish inflate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/on-finish-inflate/#onfinishinflate","text":"protected fun onFinishInflate(): Unit","title":"onFinishInflate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/set-left-image/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SimpleCalloutView / setLeftImage setLeftImage fun setLeftImage(@DrawableRes res: Int ): Unit","title":"Set left image"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/set-left-image/#setleftimage","text":"fun setLeftImage(@DrawableRes res: Int ): Unit","title":"setLeftImage"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/set-right-image/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SimpleCalloutView / setRightImage setRightImage fun setRightImage(@DrawableRes res: Int ): Unit","title":"Set right image"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/set-right-image/#setrightimage","text":"fun setRightImage(@DrawableRes res: Int ): Unit","title":"setRightImage"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/set-snippet/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SimpleCalloutView / setSnippet setSnippet fun setSnippet(@Nullable snippet: String ?): Unit","title":"Set snippet"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/set-snippet/#setsnippet","text":"fun setSnippet(@Nullable snippet: String ?): Unit","title":"setSnippet"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/set-title/","text":"tripkit-android / com.skedgo.tripkit.ui.map / SimpleCalloutView / setTitle setTitle fun setTitle(@Nullable title: String ?): Unit","title":"Set title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-simple-callout-view/set-title/#settitle","text":"fun setTitle(@Nullable title: String ?): Unit","title":"setTitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-icon-fetcher/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerIconFetcher StopMarkerIconFetcher open class StopMarkerIconFetcher Constructors Name Summary <init> StopMarkerIconFetcher(resources: Resources, picasso: Picasso) Functions Name Summary call open fun call(marker: Marker, modeInfo: ModeInfo ?): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-icon-fetcher/#stopmarkericonfetcher","text":"open class StopMarkerIconFetcher","title":"StopMarkerIconFetcher"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-icon-fetcher/#constructors","text":"Name Summary <init> StopMarkerIconFetcher(resources: Resources, picasso: Picasso)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-icon-fetcher/#functions","text":"Name Summary call open fun call(marker: Marker, modeInfo: ModeInfo ?): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-icon-fetcher/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerIconFetcher / <init> <init> StopMarkerIconFetcher(@NonNull resources: Resources, @NonNull picasso: Picasso)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-icon-fetcher/-init-/#init","text":"StopMarkerIconFetcher(@NonNull resources: Resources, @NonNull picasso: Picasso)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-icon-fetcher/call/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerIconFetcher / call call open fun call(@NonNull marker: Marker, @Nullable modeInfo: ModeInfo ?): Unit","title":"Call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-icon-fetcher/call/#call","text":"open fun call(@NonNull marker: Marker, @Nullable modeInfo: ModeInfo ?): Unit","title":"call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel StopMarkerViewModel data class StopMarkerViewModel Constructors Name Summary <init> StopMarkerViewModel(trip: Trip , stop: ServiceStop , title: String ?, segment: TripSegment , isTravelled: Boolean ) Properties Name Summary alpha val alpha: Float fillColor val fillColor: Int isTravelled val isTravelled: Boolean position val position: LatLng segment val segment: TripSegment snippet val snippet: String ? stop val stop: ServiceStop strokeColor val strokeColor: Int title val title: String ? trip val trip: Trip","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/#stopmarkerviewmodel","text":"data class StopMarkerViewModel","title":"StopMarkerViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/#constructors","text":"Name Summary <init> StopMarkerViewModel(trip: Trip , stop: ServiceStop , title: String ?, segment: TripSegment , isTravelled: Boolean )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/#properties","text":"Name Summary alpha val alpha: Float fillColor val fillColor: Int isTravelled val isTravelled: Boolean position val position: LatLng segment val segment: TripSegment snippet val snippet: String ? stop val stop: ServiceStop strokeColor val strokeColor: Int title val title: String ? trip val trip: Trip","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel / <init> <init> StopMarkerViewModel(trip: Trip , stop: ServiceStop , title: String ?, segment: TripSegment , isTravelled: Boolean )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/-init-/#init","text":"StopMarkerViewModel(trip: Trip , stop: ServiceStop , title: String ?, segment: TripSegment , isTravelled: Boolean )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/alpha/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel / alpha alpha val alpha: Float","title":"Alpha"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/alpha/#alpha","text":"val alpha: Float","title":"alpha"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/fill-color/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel / fillColor fillColor val fillColor: Int","title":"Fill color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/fill-color/#fillcolor","text":"val fillColor: Int","title":"fillColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/is-travelled/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel / isTravelled isTravelled val isTravelled: Boolean","title":"Is travelled"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/is-travelled/#istravelled","text":"val isTravelled: Boolean","title":"isTravelled"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/position/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel / position position val position: LatLng","title":"Position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/position/#position","text":"val position: LatLng","title":"position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/segment/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel / segment segment val segment: TripSegment","title":"Segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/segment/#segment","text":"val segment: TripSegment","title":"segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/snippet/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel / snippet snippet val snippet: String ?","title":"Snippet"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/snippet/#snippet","text":"val snippet: String ?","title":"snippet"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/stop/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel / stop stop val stop: ServiceStop","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/stop/#stop","text":"val stop: ServiceStop","title":"stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/stroke-color/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel / strokeColor strokeColor val strokeColor: Int","title":"Stroke color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/stroke-color/#strokecolor","text":"val strokeColor: Int","title":"strokeColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/title/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel / title title val title: String ?","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/title/#title","text":"val title: String ?","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/trip/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopMarkerViewModel / trip trip val trip: Trip","title":"Trip"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-marker-view-model/trip/#trip","text":"val trip: Trip","title":"trip"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopPOILocation StopPOILocation class StopPOILocation : POILocation Constructors Name Summary <init> StopPOILocation(scheduledStop: ScheduledStop , stopInfoWindowAdapter: StopInfoWindowAdapter ) Properties Name Summary identifier val identifier: String scheduledStop val scheduledStop: ScheduledStop Functions Name Summary createMarkerOptions fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions> getInfoWindowAdapter fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ? onMarkerClick fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit toLocation fun toLocation(): Location","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/#stoppoilocation","text":"class StopPOILocation : POILocation","title":"StopPOILocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/#constructors","text":"Name Summary <init> StopPOILocation(scheduledStop: ScheduledStop , stopInfoWindowAdapter: StopInfoWindowAdapter )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/#properties","text":"Name Summary identifier val identifier: String scheduledStop val scheduledStop: ScheduledStop","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/#functions","text":"Name Summary createMarkerOptions fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions> getInfoWindowAdapter fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ? onMarkerClick fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit toLocation fun toLocation(): Location","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopPOILocation / <init> <init> StopPOILocation(scheduledStop: ScheduledStop , stopInfoWindowAdapter: StopInfoWindowAdapter )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/-init-/#init","text":"StopPOILocation(scheduledStop: ScheduledStop , stopInfoWindowAdapter: StopInfoWindowAdapter )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/create-marker-options/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopPOILocation / createMarkerOptions createMarkerOptions fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions>","title":"Create marker options"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/create-marker-options/#createmarkeroptions","text":"fun createMarkerOptions(resources: Resources, picasso: Picasso): Single<MarkerOptions>","title":"createMarkerOptions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/get-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopPOILocation / getInfoWindowAdapter getInfoWindowAdapter fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ?","title":"Get info window adapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/get-info-window-adapter/#getinfowindowadapter","text":"fun getInfoWindowAdapter(context: Context): StopInfoWindowAdapter ?","title":"getInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/identifier/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopPOILocation / identifier identifier val identifier: String","title":"Identifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/identifier/#identifier","text":"val identifier: String","title":"identifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/on-marker-click/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopPOILocation / onMarkerClick onMarkerClick fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit","title":"On marker click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/on-marker-click/#onmarkerclick","text":"fun onMarkerClick(bus: Bus, eventTracker: EventTracker): Unit","title":"onMarkerClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/scheduled-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopPOILocation / scheduledStop scheduledStop val scheduledStop: ScheduledStop","title":"Scheduled stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/scheduled-stop/#scheduledstop","text":"val scheduledStop: ScheduledStop","title":"scheduledStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/to-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map / StopPOILocation / toLocation toLocation fun toLocation(): Location","title":"To location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-stop-p-o-i-location/to-location/#tolocation","text":"fun toLocation(): Location","title":"toLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-time-label-maker/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TimeLabelMaker TimeLabelMaker open class TimeLabelMaker Constructors Name Summary <init> TimeLabelMaker(timeTextView: TextView) Functions Name Summary create open fun create(millis: Long , timeZone: String !): Bitmap!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-time-label-maker/#timelabelmaker","text":"open class TimeLabelMaker","title":"TimeLabelMaker"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-time-label-maker/#constructors","text":"Name Summary <init> TimeLabelMaker(timeTextView: TextView)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-time-label-maker/#functions","text":"Name Summary create open fun create(millis: Long , timeZone: String !): Bitmap!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-time-label-maker/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TimeLabelMaker / <init> <init> TimeLabelMaker(@NonNull timeTextView: TextView)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-time-label-maker/-init-/#init","text":"TimeLabelMaker(@NonNull timeTextView: TextView)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-time-label-maker/create/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TimeLabelMaker / create create open fun create(millis: Long , timeZone: String !): Bitmap!","title":"Create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-time-label-maker/create/#create","text":"open fun create(millis: Long , timeZone: String !): Bitmap!","title":"create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-location-marker-creator/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripLocationMarkerCreator TripLocationMarkerCreator open class TripLocationMarkerCreator Constructors Name Summary <init> TripLocationMarkerCreator() Functions Name Summary call open fun call(location: Location !): MarkerOptions!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-location-marker-creator/#triplocationmarkercreator","text":"open class TripLocationMarkerCreator","title":"TripLocationMarkerCreator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-location-marker-creator/#constructors","text":"Name Summary <init> TripLocationMarkerCreator()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-location-marker-creator/#functions","text":"Name Summary call open fun call(location: Location !): MarkerOptions!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-location-marker-creator/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripLocationMarkerCreator / <init> <init> TripLocationMarkerCreator()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-location-marker-creator/-init-/#init","text":"TripLocationMarkerCreator()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-location-marker-creator/call/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripLocationMarkerCreator / call call open fun call(location: Location !): MarkerOptions!","title":"Call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-location-marker-creator/call/#call","text":"open fun call(location: Location !): MarkerOptions!","title":"call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripResultMapViewModel TripResultMapViewModel class TripResultMapViewModel : RxViewModel Properties Name Summary alertMarkerViewModels val alertMarkerViewModels: Observable< List < AlertMarkerViewModel >> nonTravelledStopMarkerViewModels val nonTravelledStopMarkerViewModels: Observable< List < StopMarkerViewModel >> segments val segments: Observable< List < TripSegment >> travelledStopMarkerViewModels val travelledStopMarkerViewModels: Observable< List < StopMarkerViewModel >> tripCameraUpdate val tripCameraUpdate: Observable< MapCameraUpdate > vehicleMarkerViewModels val vehicleMarkerViewModels: Observable< List < VehicleMarkerViewModel >> Functions Name Summary getCameraUpdate fun getCameraUpdate(): CameraUpdate? onTripSegmentTapped fun onTripSegmentTapped(): Observable< Pair <CameraUpdate, Long >> setTripGroupId fun setTripGroupId(tripGroupId: String ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/#tripresultmapviewmodel","text":"class TripResultMapViewModel : RxViewModel","title":"TripResultMapViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/#properties","text":"Name Summary alertMarkerViewModels val alertMarkerViewModels: Observable< List < AlertMarkerViewModel >> nonTravelledStopMarkerViewModels val nonTravelledStopMarkerViewModels: Observable< List < StopMarkerViewModel >> segments val segments: Observable< List < TripSegment >> travelledStopMarkerViewModels val travelledStopMarkerViewModels: Observable< List < StopMarkerViewModel >> tripCameraUpdate val tripCameraUpdate: Observable< MapCameraUpdate > vehicleMarkerViewModels val vehicleMarkerViewModels: Observable< List < VehicleMarkerViewModel >>","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/#functions","text":"Name Summary getCameraUpdate fun getCameraUpdate(): CameraUpdate? onTripSegmentTapped fun onTripSegmentTapped(): Observable< Pair <CameraUpdate, Long >> setTripGroupId fun setTripGroupId(tripGroupId: String ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/alert-marker-view-models/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripResultMapViewModel / alertMarkerViewModels alertMarkerViewModels val alertMarkerViewModels: Observable< List < AlertMarkerViewModel >>","title":"Alert marker view models"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/alert-marker-view-models/#alertmarkerviewmodels","text":"val alertMarkerViewModels: Observable< List < AlertMarkerViewModel >>","title":"alertMarkerViewModels"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/get-camera-update/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripResultMapViewModel / getCameraUpdate getCameraUpdate fun getCameraUpdate(): CameraUpdate?","title":"Get camera update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/get-camera-update/#getcameraupdate","text":"fun getCameraUpdate(): CameraUpdate?","title":"getCameraUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/non-travelled-stop-marker-view-models/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripResultMapViewModel / nonTravelledStopMarkerViewModels nonTravelledStopMarkerViewModels val nonTravelledStopMarkerViewModels: Observable< List < StopMarkerViewModel >>","title":"Non travelled stop marker view models"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/non-travelled-stop-marker-view-models/#nontravelledstopmarkerviewmodels","text":"val nonTravelledStopMarkerViewModels: Observable< List < StopMarkerViewModel >>","title":"nonTravelledStopMarkerViewModels"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/on-trip-segment-tapped/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripResultMapViewModel / onTripSegmentTapped onTripSegmentTapped fun onTripSegmentTapped(): Observable< Pair <CameraUpdate, Long >>","title":"On trip segment tapped"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/on-trip-segment-tapped/#ontripsegmenttapped","text":"fun onTripSegmentTapped(): Observable< Pair <CameraUpdate, Long >>","title":"onTripSegmentTapped"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/segments/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripResultMapViewModel / segments segments val segments: Observable< List < TripSegment >>","title":"Segments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/segments/#segments","text":"val segments: Observable< List < TripSegment >>","title":"segments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/set-trip-group-id/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripResultMapViewModel / setTripGroupId setTripGroupId fun setTripGroupId(tripGroupId: String ): Unit","title":"Set trip group id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/set-trip-group-id/#settripgroupid","text":"fun setTripGroupId(tripGroupId: String ): Unit","title":"setTripGroupId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/travelled-stop-marker-view-models/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripResultMapViewModel / travelledStopMarkerViewModels travelledStopMarkerViewModels val travelledStopMarkerViewModels: Observable< List < StopMarkerViewModel >>","title":"Travelled stop marker view models"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/travelled-stop-marker-view-models/#travelledstopmarkerviewmodels","text":"val travelledStopMarkerViewModels: Observable< List < StopMarkerViewModel >>","title":"travelledStopMarkerViewModels"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/trip-camera-update/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripResultMapViewModel / tripCameraUpdate tripCameraUpdate val tripCameraUpdate: Observable< MapCameraUpdate >","title":"Trip camera update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/trip-camera-update/#tripcameraupdate","text":"val tripCameraUpdate: Observable< MapCameraUpdate >","title":"tripCameraUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/vehicle-marker-view-models/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripResultMapViewModel / vehicleMarkerViewModels vehicleMarkerViewModels val vehicleMarkerViewModels: Observable< List < VehicleMarkerViewModel >>","title":"Vehicle marker view models"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-result-map-view-model/vehicle-marker-view-models/#vehiclemarkerviewmodels","text":"val vehicleMarkerViewModels: Observable< List < VehicleMarkerViewModel >>","title":"vehicleMarkerViewModels"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-vehicle-marker-creator/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripVehicleMarkerCreator TripVehicleMarkerCreator open class TripVehicleMarkerCreator Functions Name Summary call open fun call(resources: Resources!, segment: TripSegment !): MarkerOptions!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-vehicle-marker-creator/#tripvehiclemarkercreator","text":"open class TripVehicleMarkerCreator","title":"TripVehicleMarkerCreator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-vehicle-marker-creator/#functions","text":"Name Summary call open fun call(resources: Resources!, segment: TripSegment !): MarkerOptions!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-vehicle-marker-creator/call/","text":"tripkit-android / com.skedgo.tripkit.ui.map / TripVehicleMarkerCreator / call call open fun call(resources: Resources!, segment: TripSegment !): MarkerOptions!","title":"Call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-trip-vehicle-marker-creator/call/#call","text":"open fun call(resources: Resources!, segment: TripSegment !): MarkerOptions!","title":"call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-creator/","text":"tripkit-android / com.skedgo.tripkit.ui.map / VehicleMarkerIconCreator VehicleMarkerIconCreator open class VehicleMarkerIconCreator Constructors Name Summary <init> VehicleMarkerIconCreator(resources: Resources!) Functions Name Summary call open fun call(bearing: Int , color: Int , text: String !): Bitmap!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-creator/#vehiclemarkericoncreator","text":"open class VehicleMarkerIconCreator","title":"VehicleMarkerIconCreator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-creator/#constructors","text":"Name Summary <init> VehicleMarkerIconCreator(resources: Resources!)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-creator/#functions","text":"Name Summary call open fun call(bearing: Int , color: Int , text: String !): Bitmap!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-creator/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / VehicleMarkerIconCreator / <init> <init> VehicleMarkerIconCreator(resources: Resources!)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-creator/-init-/#init","text":"VehicleMarkerIconCreator(resources: Resources!)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-creator/call/","text":"tripkit-android / com.skedgo.tripkit.ui.map / VehicleMarkerIconCreator / call call open fun call(bearing: Int , color: Int , text: String !): Bitmap!","title":"Call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-creator/call/#call","text":"open fun call(bearing: Int , color: Int , text: String !): Bitmap!","title":"call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-fetcher/","text":"tripkit-android / com.skedgo.tripkit.ui.map / VehicleMarkerIconFetcher VehicleMarkerIconFetcher open class VehicleMarkerIconFetcher Functions Name Summary call open fun call(marker: Marker!, vehicle: RealTimeVehicle ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-fetcher/#vehiclemarkericonfetcher","text":"open class VehicleMarkerIconFetcher","title":"VehicleMarkerIconFetcher"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-fetcher/#functions","text":"Name Summary call open fun call(marker: Marker!, vehicle: RealTimeVehicle ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-fetcher/call/","text":"tripkit-android / com.skedgo.tripkit.ui.map / VehicleMarkerIconFetcher / call call open fun call(marker: Marker!, @NonNull vehicle: RealTimeVehicle ): Unit","title":"Call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-icon-fetcher/call/#call","text":"open fun call(marker: Marker!, @NonNull vehicle: RealTimeVehicle ): Unit","title":"call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.map / VehicleMarkerViewModel VehicleMarkerViewModel data class VehicleMarkerViewModel Constructors Name Summary <init> VehicleMarkerViewModel(segment: TripSegment ) Properties Name Summary segment val segment: TripSegment","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-view-model/#vehiclemarkerviewmodel","text":"data class VehicleMarkerViewModel","title":"VehicleMarkerViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-view-model/#constructors","text":"Name Summary <init> VehicleMarkerViewModel(segment: TripSegment )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-view-model/#properties","text":"Name Summary segment val segment: TripSegment","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map / VehicleMarkerViewModel / <init> <init> VehicleMarkerViewModel(segment: TripSegment )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-view-model/-init-/#init","text":"VehicleMarkerViewModel(segment: TripSegment )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-view-model/segment/","text":"tripkit-android / com.skedgo.tripkit.ui.map / VehicleMarkerViewModel / segment segment val segment: TripSegment","title":"Segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/-vehicle-marker-view-model/segment/#segment","text":"val segment: TripSegment","title":"segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/com.google.android.gms.maps.model.-lat-lng-bounds/","text":"tripkit-android / com.skedgo.tripkit.ui.map / com.google.android.gms.maps.model.LatLngBounds Extensions for com.google.android.gms.maps.model.LatLngBounds Name Summary convertToDomainLatLngBounds fun LatLngBounds.convertToDomainLatLngBounds(): LatLngBounds","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/com.google.android.gms.maps.model.-lat-lng-bounds/#extensions-for-comgoogleandroidgmsmapsmodellatlngbounds","text":"Name Summary convertToDomainLatLngBounds fun LatLngBounds.convertToDomainLatLngBounds(): LatLngBounds","title":"Extensions for com.google.android.gms.maps.model.LatLngBounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/com.google.android.gms.maps.model.-lat-lng-bounds/convert-to-domain-lat-lng-bounds/","text":"tripkit-android / com.skedgo.tripkit.ui.map / com.google.android.gms.maps.model.LatLngBounds / convertToDomainLatLngBounds convertToDomainLatLngBounds fun LatLngBounds.convertToDomainLatLngBounds(): LatLngBounds","title":"Convert to domain lat lng bounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map/com.google.android.gms.maps.model.-lat-lng-bounds/convert-to-domain-lat-lng-bounds/#converttodomainlatlngbounds","text":"fun LatLngBounds.convertToDomainLatLngBounds(): LatLngBounds","title":"convertToDomainLatLngBounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter Package com.skedgo.tripkit.ui.map.adapter Types Name Summary BikePodInfoWindowAdapter class BikePodInfoWindowAdapter : StopInfoWindowAdapter CityInfoWindowAdapter class CityInfoWindowAdapter : SimpleInfoWindowAdapter NoActionWindowAdapter class NoActionWindowAdapter : SimpleInfoWindowAdapter OnInfoWindowClose interface OnInfoWindowClose POILocationInfoWindowAdapter class POILocationInfoWindowAdapter : StopInfoWindowAdapter SegmentInfoWindowAdapter class SegmentInfoWindowAdapter : SimpleInfoWindowAdapter ServiceStopInfoWindowAdapter class ServiceStopInfoWindowAdapter : SimpleInfoWindowAdapter SimpleInfoWindowAdapter open class SimpleInfoWindowAdapter : InfoWindowAdapter StopInfoWindowAdapter interface StopInfoWindowAdapter : InfoWindowAdapter, OnInfoWindowClose ViewableInfoWindowAdapter class ViewableInfoWindowAdapter : StopInfoWindowAdapter","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/#package-comskedgotripkituimapadapter","text":"","title":"Package com.skedgo.tripkit.ui.map.adapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/#types","text":"Name Summary BikePodInfoWindowAdapter class BikePodInfoWindowAdapter : StopInfoWindowAdapter CityInfoWindowAdapter class CityInfoWindowAdapter : SimpleInfoWindowAdapter NoActionWindowAdapter class NoActionWindowAdapter : SimpleInfoWindowAdapter OnInfoWindowClose interface OnInfoWindowClose POILocationInfoWindowAdapter class POILocationInfoWindowAdapter : StopInfoWindowAdapter SegmentInfoWindowAdapter class SegmentInfoWindowAdapter : SimpleInfoWindowAdapter ServiceStopInfoWindowAdapter class ServiceStopInfoWindowAdapter : SimpleInfoWindowAdapter SimpleInfoWindowAdapter open class SimpleInfoWindowAdapter : InfoWindowAdapter StopInfoWindowAdapter interface StopInfoWindowAdapter : InfoWindowAdapter, OnInfoWindowClose ViewableInfoWindowAdapter class ViewableInfoWindowAdapter : StopInfoWindowAdapter","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / BikePodInfoWindowAdapter BikePodInfoWindowAdapter class BikePodInfoWindowAdapter : StopInfoWindowAdapter Constructors Name Summary <init> BikePodInfoWindowAdapter(context: Context) Properties Name Summary view val view: View Functions Name Summary getInfoContents fun getInfoContents(marker: Marker): View? getInfoWindow fun getInfoWindow(marker: Marker): View onInfoWindowClosed fun onInfoWindowClosed(marker: Marker): Unit windowInfoHeightInPixel fun windowInfoHeightInPixel(marker: Marker): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/#bikepodinfowindowadapter","text":"class BikePodInfoWindowAdapter : StopInfoWindowAdapter","title":"BikePodInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/#constructors","text":"Name Summary <init> BikePodInfoWindowAdapter(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/#properties","text":"Name Summary view val view: View","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/#functions","text":"Name Summary getInfoContents fun getInfoContents(marker: Marker): View? getInfoWindow fun getInfoWindow(marker: Marker): View onInfoWindowClosed fun onInfoWindowClosed(marker: Marker): Unit windowInfoHeightInPixel fun windowInfoHeightInPixel(marker: Marker): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / BikePodInfoWindowAdapter / <init> <init> BikePodInfoWindowAdapter(context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/-init-/#init","text":"BikePodInfoWindowAdapter(context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/get-info-contents/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / BikePodInfoWindowAdapter / getInfoContents getInfoContents fun getInfoContents(marker: Marker): View?","title":"Get info contents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/get-info-contents/#getinfocontents","text":"fun getInfoContents(marker: Marker): View?","title":"getInfoContents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/get-info-window/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / BikePodInfoWindowAdapter / getInfoWindow getInfoWindow fun getInfoWindow(marker: Marker): View","title":"Get info window"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/get-info-window/#getinfowindow","text":"fun getInfoWindow(marker: Marker): View","title":"getInfoWindow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/on-info-window-closed/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / BikePodInfoWindowAdapter / onInfoWindowClosed onInfoWindowClosed fun onInfoWindowClosed(marker: Marker): Unit","title":"On info window closed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/on-info-window-closed/#oninfowindowclosed","text":"fun onInfoWindowClosed(marker: Marker): Unit","title":"onInfoWindowClosed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/view/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / BikePodInfoWindowAdapter / view view val view: View","title":"View"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/view/#view","text":"val view: View","title":"view"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/window-info-height-in-pixel/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / BikePodInfoWindowAdapter / windowInfoHeightInPixel windowInfoHeightInPixel fun windowInfoHeightInPixel(marker: Marker): Int","title":"Window info height in pixel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-bike-pod-info-window-adapter/window-info-height-in-pixel/#windowinfoheightinpixel","text":"fun windowInfoHeightInPixel(marker: Marker): Int","title":"windowInfoHeightInPixel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-city-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / CityInfoWindowAdapter CityInfoWindowAdapter class CityInfoWindowAdapter : SimpleInfoWindowAdapter Functions Name Summary getInfoContents fun getInfoContents(marker: Marker): View?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-city-info-window-adapter/#cityinfowindowadapter","text":"class CityInfoWindowAdapter : SimpleInfoWindowAdapter","title":"CityInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-city-info-window-adapter/#functions","text":"Name Summary getInfoContents fun getInfoContents(marker: Marker): View?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-city-info-window-adapter/get-info-contents/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / CityInfoWindowAdapter / getInfoContents getInfoContents fun getInfoContents(marker: Marker): View?","title":"Get info contents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-city-info-window-adapter/get-info-contents/#getinfocontents","text":"fun getInfoContents(marker: Marker): View?","title":"getInfoContents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-no-action-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / NoActionWindowAdapter NoActionWindowAdapter class NoActionWindowAdapter : SimpleInfoWindowAdapter Functions Name Summary getInfoContents fun getInfoContents(marker: Marker): View?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-no-action-window-adapter/#noactionwindowadapter","text":"class NoActionWindowAdapter : SimpleInfoWindowAdapter","title":"NoActionWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-no-action-window-adapter/#functions","text":"Name Summary getInfoContents fun getInfoContents(marker: Marker): View?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-no-action-window-adapter/get-info-contents/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / NoActionWindowAdapter / getInfoContents getInfoContents fun getInfoContents(marker: Marker): View?","title":"Get info contents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-no-action-window-adapter/get-info-contents/#getinfocontents","text":"fun getInfoContents(marker: Marker): View?","title":"getInfoContents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-on-info-window-close/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / OnInfoWindowClose OnInfoWindowClose interface OnInfoWindowClose Functions Name Summary onInfoWindowClosed abstract fun onInfoWindowClosed(marker: Marker): Unit Inheritors Name Summary StopInfoWindowAdapter interface StopInfoWindowAdapter : InfoWindowAdapter, OnInfoWindowClose","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-on-info-window-close/#oninfowindowclose","text":"interface OnInfoWindowClose","title":"OnInfoWindowClose"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-on-info-window-close/#functions","text":"Name Summary onInfoWindowClosed abstract fun onInfoWindowClosed(marker: Marker): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-on-info-window-close/#inheritors","text":"Name Summary StopInfoWindowAdapter interface StopInfoWindowAdapter : InfoWindowAdapter, OnInfoWindowClose","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-on-info-window-close/on-info-window-closed/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / OnInfoWindowClose / onInfoWindowClosed onInfoWindowClosed abstract fun onInfoWindowClosed(marker: Marker): Unit","title":"On info window closed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-on-info-window-close/on-info-window-closed/#oninfowindowclosed","text":"abstract fun onInfoWindowClosed(marker: Marker): Unit","title":"onInfoWindowClosed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / POILocationInfoWindowAdapter POILocationInfoWindowAdapter class POILocationInfoWindowAdapter : StopInfoWindowAdapter Constructors Name Summary <init> POILocationInfoWindowAdapter(context: Context) Functions Name Summary getInfoContents fun getInfoContents(marker: Marker): View? getInfoWindow fun getInfoWindow(marker: Marker): View? onInfoWindowClosed fun onInfoWindowClosed(marker: Marker): Unit windowInfoHeightInPixel fun windowInfoHeightInPixel(marker: Marker): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/#poilocationinfowindowadapter","text":"class POILocationInfoWindowAdapter : StopInfoWindowAdapter","title":"POILocationInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/#constructors","text":"Name Summary <init> POILocationInfoWindowAdapter(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/#functions","text":"Name Summary getInfoContents fun getInfoContents(marker: Marker): View? getInfoWindow fun getInfoWindow(marker: Marker): View? onInfoWindowClosed fun onInfoWindowClosed(marker: Marker): Unit windowInfoHeightInPixel fun windowInfoHeightInPixel(marker: Marker): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / POILocationInfoWindowAdapter / <init> <init> POILocationInfoWindowAdapter(context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/-init-/#init","text":"POILocationInfoWindowAdapter(context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/get-info-contents/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / POILocationInfoWindowAdapter / getInfoContents getInfoContents fun getInfoContents(marker: Marker): View?","title":"Get info contents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/get-info-contents/#getinfocontents","text":"fun getInfoContents(marker: Marker): View?","title":"getInfoContents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/get-info-window/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / POILocationInfoWindowAdapter / getInfoWindow getInfoWindow fun getInfoWindow(marker: Marker): View?","title":"Get info window"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/get-info-window/#getinfowindow","text":"fun getInfoWindow(marker: Marker): View?","title":"getInfoWindow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/on-info-window-closed/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / POILocationInfoWindowAdapter / onInfoWindowClosed onInfoWindowClosed fun onInfoWindowClosed(marker: Marker): Unit","title":"On info window closed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/on-info-window-closed/#oninfowindowclosed","text":"fun onInfoWindowClosed(marker: Marker): Unit","title":"onInfoWindowClosed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/window-info-height-in-pixel/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / POILocationInfoWindowAdapter / windowInfoHeightInPixel windowInfoHeightInPixel fun windowInfoHeightInPixel(marker: Marker): Int","title":"Window info height in pixel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-p-o-i-location-info-window-adapter/window-info-height-in-pixel/#windowinfoheightinpixel","text":"fun windowInfoHeightInPixel(marker: Marker): Int","title":"windowInfoHeightInPixel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-segment-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / SegmentInfoWindowAdapter SegmentInfoWindowAdapter class SegmentInfoWindowAdapter : SimpleInfoWindowAdapter Constructors Name Summary <init> SegmentInfoWindowAdapter(inflater: LayoutInflater) Functions Name Summary getInfoContents fun getInfoContents(marker: Marker): View setSegmentCache fun setSegmentCache(segmentCache: HashMap <Marker, TripSegment >): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-segment-info-window-adapter/#segmentinfowindowadapter","text":"class SegmentInfoWindowAdapter : SimpleInfoWindowAdapter","title":"SegmentInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-segment-info-window-adapter/#constructors","text":"Name Summary <init> SegmentInfoWindowAdapter(inflater: LayoutInflater)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-segment-info-window-adapter/#functions","text":"Name Summary getInfoContents fun getInfoContents(marker: Marker): View setSegmentCache fun setSegmentCache(segmentCache: HashMap <Marker, TripSegment >): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-segment-info-window-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / SegmentInfoWindowAdapter / <init> <init> SegmentInfoWindowAdapter(inflater: LayoutInflater)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-segment-info-window-adapter/-init-/#init","text":"SegmentInfoWindowAdapter(inflater: LayoutInflater)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-segment-info-window-adapter/get-info-contents/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / SegmentInfoWindowAdapter / getInfoContents getInfoContents fun getInfoContents(marker: Marker): View","title":"Get info contents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-segment-info-window-adapter/get-info-contents/#getinfocontents","text":"fun getInfoContents(marker: Marker): View","title":"getInfoContents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-segment-info-window-adapter/set-segment-cache/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / SegmentInfoWindowAdapter / setSegmentCache setSegmentCache fun setSegmentCache(segmentCache: HashMap <Marker, TripSegment >): Unit","title":"Set segment cache"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-segment-info-window-adapter/set-segment-cache/#setsegmentcache","text":"fun setSegmentCache(segmentCache: HashMap <Marker, TripSegment >): Unit","title":"setSegmentCache"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-service-stop-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / ServiceStopInfoWindowAdapter ServiceStopInfoWindowAdapter class ServiceStopInfoWindowAdapter : SimpleInfoWindowAdapter Constructors Name Summary <init> ServiceStopInfoWindowAdapter(inflater: LayoutInflater) Functions Name Summary getInfoContents fun getInfoContents(marker: Marker!): View!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-service-stop-info-window-adapter/#servicestopinfowindowadapter","text":"class ServiceStopInfoWindowAdapter : SimpleInfoWindowAdapter","title":"ServiceStopInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-service-stop-info-window-adapter/#constructors","text":"Name Summary <init> ServiceStopInfoWindowAdapter(inflater: LayoutInflater)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-service-stop-info-window-adapter/#functions","text":"Name Summary getInfoContents fun getInfoContents(marker: Marker!): View!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-service-stop-info-window-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / ServiceStopInfoWindowAdapter / <init> <init> ServiceStopInfoWindowAdapter(@NonNull inflater: LayoutInflater)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-service-stop-info-window-adapter/-init-/#init","text":"ServiceStopInfoWindowAdapter(@NonNull inflater: LayoutInflater)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-service-stop-info-window-adapter/get-info-contents/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / ServiceStopInfoWindowAdapter / getInfoContents getInfoContents fun getInfoContents(marker: Marker!): View!","title":"Get info contents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-service-stop-info-window-adapter/get-info-contents/#getinfocontents","text":"fun getInfoContents(marker: Marker!): View!","title":"getInfoContents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-simple-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / SimpleInfoWindowAdapter SimpleInfoWindowAdapter open class SimpleInfoWindowAdapter : InfoWindowAdapter Constructors Name Summary <init> SimpleInfoWindowAdapter() Functions Name Summary getInfoContents open fun getInfoContents(marker: Marker!): View! getInfoWindow open fun getInfoWindow(marker: Marker!): View! Inheritors Name Summary CityInfoWindowAdapter class CityInfoWindowAdapter : SimpleInfoWindowAdapter NoActionWindowAdapter class NoActionWindowAdapter : SimpleInfoWindowAdapter SegmentInfoWindowAdapter class SegmentInfoWindowAdapter : SimpleInfoWindowAdapter ServiceStopInfoWindowAdapter class ServiceStopInfoWindowAdapter : SimpleInfoWindowAdapter","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-simple-info-window-adapter/#simpleinfowindowadapter","text":"open class SimpleInfoWindowAdapter : InfoWindowAdapter","title":"SimpleInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-simple-info-window-adapter/#constructors","text":"Name Summary <init> SimpleInfoWindowAdapter()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-simple-info-window-adapter/#functions","text":"Name Summary getInfoContents open fun getInfoContents(marker: Marker!): View! getInfoWindow open fun getInfoWindow(marker: Marker!): View!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-simple-info-window-adapter/#inheritors","text":"Name Summary CityInfoWindowAdapter class CityInfoWindowAdapter : SimpleInfoWindowAdapter NoActionWindowAdapter class NoActionWindowAdapter : SimpleInfoWindowAdapter SegmentInfoWindowAdapter class SegmentInfoWindowAdapter : SimpleInfoWindowAdapter ServiceStopInfoWindowAdapter class ServiceStopInfoWindowAdapter : SimpleInfoWindowAdapter","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-simple-info-window-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / SimpleInfoWindowAdapter / <init> <init> SimpleInfoWindowAdapter()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-simple-info-window-adapter/-init-/#init","text":"SimpleInfoWindowAdapter()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-simple-info-window-adapter/get-info-contents/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / SimpleInfoWindowAdapter / getInfoContents getInfoContents open fun getInfoContents(marker: Marker!): View!","title":"Get info contents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-simple-info-window-adapter/get-info-contents/#getinfocontents","text":"open fun getInfoContents(marker: Marker!): View!","title":"getInfoContents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-simple-info-window-adapter/get-info-window/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / SimpleInfoWindowAdapter / getInfoWindow getInfoWindow open fun getInfoWindow(marker: Marker!): View!","title":"Get info window"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-simple-info-window-adapter/get-info-window/#getinfowindow","text":"open fun getInfoWindow(marker: Marker!): View!","title":"getInfoWindow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-stop-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / StopInfoWindowAdapter StopInfoWindowAdapter interface StopInfoWindowAdapter : InfoWindowAdapter, OnInfoWindowClose Functions Name Summary windowInfoHeightInPixel abstract fun windowInfoHeightInPixel(marker: Marker): Int Inheritors Name Summary BikePodInfoWindowAdapter class BikePodInfoWindowAdapter : StopInfoWindowAdapter DefaultStopInfoWindowAdapter class DefaultStopInfoWindowAdapter : StopInfoWindowAdapter POILocationInfoWindowAdapter class POILocationInfoWindowAdapter : StopInfoWindowAdapter ViewableInfoWindowAdapter class ViewableInfoWindowAdapter : StopInfoWindowAdapter","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-stop-info-window-adapter/#stopinfowindowadapter","text":"interface StopInfoWindowAdapter : InfoWindowAdapter, OnInfoWindowClose","title":"StopInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-stop-info-window-adapter/#functions","text":"Name Summary windowInfoHeightInPixel abstract fun windowInfoHeightInPixel(marker: Marker): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-stop-info-window-adapter/#inheritors","text":"Name Summary BikePodInfoWindowAdapter class BikePodInfoWindowAdapter : StopInfoWindowAdapter DefaultStopInfoWindowAdapter class DefaultStopInfoWindowAdapter : StopInfoWindowAdapter POILocationInfoWindowAdapter class POILocationInfoWindowAdapter : StopInfoWindowAdapter ViewableInfoWindowAdapter class ViewableInfoWindowAdapter : StopInfoWindowAdapter","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-stop-info-window-adapter/window-info-height-in-pixel/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / StopInfoWindowAdapter / windowInfoHeightInPixel windowInfoHeightInPixel abstract fun windowInfoHeightInPixel(marker: Marker): Int","title":"Window info height in pixel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-stop-info-window-adapter/window-info-height-in-pixel/#windowinfoheightinpixel","text":"abstract fun windowInfoHeightInPixel(marker: Marker): Int","title":"windowInfoHeightInPixel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / ViewableInfoWindowAdapter ViewableInfoWindowAdapter class ViewableInfoWindowAdapter : StopInfoWindowAdapter Constructors Name Summary <init> ViewableInfoWindowAdapter(inflater: LayoutInflater) Functions Name Summary getInfoContents fun getInfoContents(marker: Marker!): View! getInfoWindow fun getInfoWindow(marker: Marker!): View! onInfoWindowClosed fun onInfoWindowClosed(marker: Marker): Unit windowInfoHeightInPixel fun windowInfoHeightInPixel(marker: Marker): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/#viewableinfowindowadapter","text":"class ViewableInfoWindowAdapter : StopInfoWindowAdapter","title":"ViewableInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/#constructors","text":"Name Summary <init> ViewableInfoWindowAdapter(inflater: LayoutInflater)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/#functions","text":"Name Summary getInfoContents fun getInfoContents(marker: Marker!): View! getInfoWindow fun getInfoWindow(marker: Marker!): View! onInfoWindowClosed fun onInfoWindowClosed(marker: Marker): Unit windowInfoHeightInPixel fun windowInfoHeightInPixel(marker: Marker): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / ViewableInfoWindowAdapter / <init> <init> ViewableInfoWindowAdapter(@NonNull inflater: LayoutInflater)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/-init-/#init","text":"ViewableInfoWindowAdapter(@NonNull inflater: LayoutInflater)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/get-info-contents/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / ViewableInfoWindowAdapter / getInfoContents getInfoContents fun getInfoContents(marker: Marker!): View!","title":"Get info contents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/get-info-contents/#getinfocontents","text":"fun getInfoContents(marker: Marker!): View!","title":"getInfoContents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/get-info-window/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / ViewableInfoWindowAdapter / getInfoWindow getInfoWindow fun getInfoWindow(marker: Marker!): View!","title":"Get info window"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/get-info-window/#getinfowindow","text":"fun getInfoWindow(marker: Marker!): View!","title":"getInfoWindow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/on-info-window-closed/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / ViewableInfoWindowAdapter / onInfoWindowClosed onInfoWindowClosed fun onInfoWindowClosed(@NotNull marker: Marker): Unit","title":"On info window closed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/on-info-window-closed/#oninfowindowclosed","text":"fun onInfoWindowClosed(@NotNull marker: Marker): Unit","title":"onInfoWindowClosed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/window-info-height-in-pixel/","text":"tripkit-android / com.skedgo.tripkit.ui.map.adapter / ViewableInfoWindowAdapter / windowInfoHeightInPixel windowInfoHeightInPixel fun windowInfoHeightInPixel(@NotNull marker: Marker): Int","title":"Window info height in pixel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.adapter/-viewable-info-window-adapter/window-info-height-in-pixel/#windowinfoheightinpixel","text":"fun windowInfoHeightInPixel(@NotNull marker: Marker): Int","title":"windowInfoHeightInPixel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home Package com.skedgo.tripkit.ui.map.home Types Name Summary ApiZoomLevels Zoom level that is compatible with the locations.json API class ApiZoomLevels FetchStopParams class FetchStopParams FetchStopsByViewport open class FetchStopsByViewport GetCellIdsFromViewPort open class GetCellIdsFromViewPort MapViewModel class MapViewModel : RxViewModel StopLoaderArgs class StopLoaderArgs TripKitMapFragment A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> <br> Your app must provide a TripGo API token as R.string.skedgo_api_key . open class TripKitMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, OnMapLongClickListener, OnCameraChangeListener, OnMarkerClickListener | | ViewPort | sealed class ViewPort | | ZoomLevel | class ZoomLevel | Extensions for External Classes Name Summary io.reactivex.Observable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/#package-comskedgotripkituimaphome","text":"","title":"Package com.skedgo.tripkit.ui.map.home"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/#types","text":"Name Summary ApiZoomLevels Zoom level that is compatible with the locations.json API class ApiZoomLevels FetchStopParams class FetchStopParams FetchStopsByViewport open class FetchStopsByViewport GetCellIdsFromViewPort open class GetCellIdsFromViewPort MapViewModel class MapViewModel : RxViewModel StopLoaderArgs class StopLoaderArgs TripKitMapFragment A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> <br> Your app must provide a TripGo API token as R.string.skedgo_api_key . open class TripKitMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, OnMapLongClickListener, OnCameraChangeListener, OnMarkerClickListener | | ViewPort | sealed class ViewPort | | ZoomLevel | class ZoomLevel |","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/#extensions-for-external-classes","text":"Name Summary io.reactivex.Observable","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ApiZoomLevels ApiZoomLevels class ApiZoomLevels Zoom level that is compatible with the locations.json API Properties Name Summary LOCAL Only non-parent stops (e.g, bus) are returned at this level. static val LOCAL: Int REGION Only parent stops (e.g, train) are returned at this level. static val REGION: Int UNKNOWN static val UNKNOWN: Int Functions Name Summary fromMapZoomLevel Converts zoom level defined by Google map into zoom level compatible with the locations.json API. static fun fromMapZoomLevel(zoomLevel: ZoomLevel !): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/#apizoomlevels","text":"class ApiZoomLevels Zoom level that is compatible with the locations.json API","title":"ApiZoomLevels"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/#properties","text":"Name Summary LOCAL Only non-parent stops (e.g, bus) are returned at this level. static val LOCAL: Int REGION Only parent stops (e.g, train) are returned at this level. static val REGION: Int UNKNOWN static val UNKNOWN: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/#functions","text":"Name Summary fromMapZoomLevel Converts zoom level defined by Google map into zoom level compatible with the locations.json API. static fun fromMapZoomLevel(zoomLevel: ZoomLevel !): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/-l-o-c-a-l/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ApiZoomLevels / LOCAL LOCAL static val LOCAL: Int Only non-parent stops (e.g, bus) are returned at this level.","title":" l o c a l"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/-l-o-c-a-l/#local","text":"static val LOCAL: Int Only non-parent stops (e.g, bus) are returned at this level.","title":"LOCAL"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/-r-e-g-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ApiZoomLevels / REGION REGION static val REGION: Int Only parent stops (e.g, train) are returned at this level.","title":" r e g i o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/-r-e-g-i-o-n/#region","text":"static val REGION: Int Only parent stops (e.g, train) are returned at this level.","title":"REGION"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/-u-n-k-n-o-w-n/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ApiZoomLevels / UNKNOWN UNKNOWN static val UNKNOWN: Int","title":" u n k n o w n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/-u-n-k-n-o-w-n/#unknown","text":"static val UNKNOWN: Int","title":"UNKNOWN"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/from-map-zoom-level/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ApiZoomLevels / fromMapZoomLevel fromMapZoomLevel static fun fromMapZoomLevel(zoomLevel: ZoomLevel !): Int Converts zoom level defined by Google map into zoom level compatible with the locations.json API. Parameters zoomLevel - ZoomLevel !: Zoom level defined by Google map.","title":"From map zoom level"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/from-map-zoom-level/#frommapzoomlevel","text":"static fun fromMapZoomLevel(zoomLevel: ZoomLevel !): Int Converts zoom level defined by Google map into zoom level compatible with the locations.json API.","title":"fromMapZoomLevel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-api-zoom-levels/from-map-zoom-level/#parameters","text":"zoomLevel - ZoomLevel !: Zoom level defined by Google map.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / FetchStopParams FetchStopParams class FetchStopParams Constructors Name Summary <init> FetchStopParams(cellIds: List < String >, region: Region , level: Int ) Properties Name Summary cellIds val cellIds: List < String > level val level: Int region val region: Region","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/#fetchstopparams","text":"class FetchStopParams","title":"FetchStopParams"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/#constructors","text":"Name Summary <init> FetchStopParams(cellIds: List < String >, region: Region , level: Int )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/#properties","text":"Name Summary cellIds val cellIds: List < String > level val level: Int region val region: Region","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / FetchStopParams / <init> <init> FetchStopParams(cellIds: List < String >, region: Region , level: Int )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/-init-/#init","text":"FetchStopParams(cellIds: List < String >, region: Region , level: Int )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/cell-ids/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / FetchStopParams / cellIds cellIds val cellIds: List < String >","title":"Cell ids"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/cell-ids/#cellids","text":"val cellIds: List < String >","title":"cellIds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/level/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / FetchStopParams / level level val level: Int","title":"Level"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/level/#level","text":"val level: Int","title":"level"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/region/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / FetchStopParams / region region val region: Region","title":"Region"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stop-params/region/#region","text":"val region: Region","title":"region"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stops-by-viewport/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / FetchStopsByViewport FetchStopsByViewport open class FetchStopsByViewport Constructors Name Summary <init> FetchStopsByViewport(getCellIdsFromViewPort: GetCellIdsFromViewPort , regionService: RegionService , stopsFetcher: StopsFetcher ) Functions Name Summary execute open fun execute(viewPort: ViewPort ): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stops-by-viewport/#fetchstopsbyviewport","text":"open class FetchStopsByViewport","title":"FetchStopsByViewport"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stops-by-viewport/#constructors","text":"Name Summary <init> FetchStopsByViewport(getCellIdsFromViewPort: GetCellIdsFromViewPort , regionService: RegionService , stopsFetcher: StopsFetcher )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stops-by-viewport/#functions","text":"Name Summary execute open fun execute(viewPort: ViewPort ): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stops-by-viewport/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / FetchStopsByViewport / <init> <init> FetchStopsByViewport(getCellIdsFromViewPort: GetCellIdsFromViewPort , regionService: RegionService , stopsFetcher: StopsFetcher )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stops-by-viewport/-init-/#init","text":"FetchStopsByViewport(getCellIdsFromViewPort: GetCellIdsFromViewPort , regionService: RegionService , stopsFetcher: StopsFetcher )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stops-by-viewport/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / FetchStopsByViewport / execute execute open fun execute(viewPort: ViewPort ): Completable","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-fetch-stops-by-viewport/execute/#execute","text":"open fun execute(viewPort: ViewPort ): Completable","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-get-cell-ids-from-view-port/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / GetCellIdsFromViewPort GetCellIdsFromViewPort open class GetCellIdsFromViewPort Constructors Name Summary <init> GetCellIdsFromViewPort(regionService: RegionService ) Properties Name Summary regionService val regionService: RegionService Functions Name Summary execute open fun execute(viewPort: ViewPort ): Observable< List < String >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-get-cell-ids-from-view-port/#getcellidsfromviewport","text":"open class GetCellIdsFromViewPort","title":"GetCellIdsFromViewPort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-get-cell-ids-from-view-port/#constructors","text":"Name Summary <init> GetCellIdsFromViewPort(regionService: RegionService )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-get-cell-ids-from-view-port/#properties","text":"Name Summary regionService val regionService: RegionService","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-get-cell-ids-from-view-port/#functions","text":"Name Summary execute open fun execute(viewPort: ViewPort ): Observable< List < String >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-get-cell-ids-from-view-port/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / GetCellIdsFromViewPort / <init> <init> GetCellIdsFromViewPort(regionService: RegionService )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-get-cell-ids-from-view-port/-init-/#init","text":"GetCellIdsFromViewPort(regionService: RegionService )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-get-cell-ids-from-view-port/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / GetCellIdsFromViewPort / execute execute open fun execute(viewPort: ViewPort ): Observable< List < String >>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-get-cell-ids-from-view-port/execute/#execute","text":"open fun execute(viewPort: ViewPort ): Observable< List < String >>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-get-cell-ids-from-view-port/region-service/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / GetCellIdsFromViewPort / regionService regionService val regionService: RegionService","title":"Region service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-get-cell-ids-from-view-port/region-service/#regionservice","text":"val regionService: RegionService","title":"regionService"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / MapViewModel MapViewModel class MapViewModel : RxViewModel Properties Name Summary markers val markers: Observable< Pair < List < Pair <MarkerOptions, POILocation >>, Set < String >>!> myLocation val myLocation: Observable< Location > myLocationError val myLocationError: Observable< Throwable > Functions Name Summary getDestinationPinUpdate fun getDestinationPinUpdate(): Observable<PinUpdate> getInitialCameraUpdate fun getInitialCameraUpdate(requestLocationPermission: () -> Observable< Boolean > = { Observable.just(true) }): Observable<CameraUpdate> getOriginPinUpdate fun getOriginPinUpdate(): Observable<PinUpdate> goToMyLocation fun goToMyLocation(): Unit onViewPortChanged fun onViewPortChanged(viewPort: ViewPort ): Unit putCameraPosition fun putCameraPosition(cameraPosition: CameraPosition?): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/#mapviewmodel","text":"class MapViewModel : RxViewModel","title":"MapViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/#properties","text":"Name Summary markers val markers: Observable< Pair < List < Pair <MarkerOptions, POILocation >>, Set < String >>!> myLocation val myLocation: Observable< Location > myLocationError val myLocationError: Observable< Throwable >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/#functions","text":"Name Summary getDestinationPinUpdate fun getDestinationPinUpdate(): Observable<PinUpdate> getInitialCameraUpdate fun getInitialCameraUpdate(requestLocationPermission: () -> Observable< Boolean > = { Observable.just(true) }): Observable<CameraUpdate> getOriginPinUpdate fun getOriginPinUpdate(): Observable<PinUpdate> goToMyLocation fun goToMyLocation(): Unit onViewPortChanged fun onViewPortChanged(viewPort: ViewPort ): Unit putCameraPosition fun putCameraPosition(cameraPosition: CameraPosition?): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/get-destination-pin-update/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / MapViewModel / getDestinationPinUpdate getDestinationPinUpdate fun getDestinationPinUpdate(): Observable<PinUpdate>","title":"Get destination pin update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/get-destination-pin-update/#getdestinationpinupdate","text":"fun getDestinationPinUpdate(): Observable<PinUpdate>","title":"getDestinationPinUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/get-initial-camera-update/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / MapViewModel / getInitialCameraUpdate getInitialCameraUpdate fun getInitialCameraUpdate(requestLocationPermission: () -> Observable< Boolean > = { Observable.just(true) }): Observable<CameraUpdate>","title":"Get initial camera update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/get-initial-camera-update/#getinitialcameraupdate","text":"fun getInitialCameraUpdate(requestLocationPermission: () -> Observable< Boolean > = { Observable.just(true) }): Observable<CameraUpdate>","title":"getInitialCameraUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/get-origin-pin-update/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / MapViewModel / getOriginPinUpdate getOriginPinUpdate fun getOriginPinUpdate(): Observable<PinUpdate>","title":"Get origin pin update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/get-origin-pin-update/#getoriginpinupdate","text":"fun getOriginPinUpdate(): Observable<PinUpdate>","title":"getOriginPinUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/go-to-my-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / MapViewModel / goToMyLocation goToMyLocation fun goToMyLocation(): Unit","title":"Go to my location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/go-to-my-location/#gotomylocation","text":"fun goToMyLocation(): Unit","title":"goToMyLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/markers/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / MapViewModel / markers markers val markers: Observable< Pair < List < Pair <MarkerOptions, POILocation >>, Set < String >>!>","title":"Markers"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/markers/#markers","text":"val markers: Observable< Pair < List < Pair <MarkerOptions, POILocation >>, Set < String >>!>","title":"markers"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/my-location-error/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / MapViewModel / myLocationError myLocationError val myLocationError: Observable< Throwable >","title":"My location error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/my-location-error/#mylocationerror","text":"val myLocationError: Observable< Throwable >","title":"myLocationError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/my-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / MapViewModel / myLocation myLocation val myLocation: Observable< Location >","title":"My location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/my-location/#mylocation","text":"val myLocation: Observable< Location >","title":"myLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/on-view-port-changed/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / MapViewModel / onViewPortChanged onViewPortChanged fun onViewPortChanged(viewPort: ViewPort ): Unit","title":"On view port changed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/on-view-port-changed/#onviewportchanged","text":"fun onViewPortChanged(viewPort: ViewPort ): Unit","title":"onViewPortChanged"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/put-camera-position/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / MapViewModel / putCameraPosition putCameraPosition fun putCameraPosition(cameraPosition: CameraPosition?): Completable","title":"Put camera position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-map-view-model/put-camera-position/#putcameraposition","text":"fun putCameraPosition(cameraPosition: CameraPosition?): Completable","title":"putCameraPosition"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / StopLoaderArgs StopLoaderArgs class StopLoaderArgs Properties Name Summary CELLS_PER_DEGREE FIXME: Why 75? This was taken from the iOS impl. If we change into something else rather than 75, it might produce cell ids incompatible with locations.json API. static val CELLS_PER_DEGREE: Int KEY_CELL_IDS static val KEY_CELL_IDS: String KEY_VISIBLE_BOUND static val KEY_VISIBLE_BOUND: String Functions Name Summary createStopLoaderSelection static fun createStopLoaderSelection(cellsIdSize: Int ): String ! createStopLoaderSelectionArgs static fun createStopLoaderSelectionArgs(cellIds: MutableList < String !>, visibleBounds: LatLngBounds): Array < String !>! getCellIdsByCameraZoom static fun getCellIdsByCameraZoom(region: Region , geoPoint: GeoPoint , zoom: Float , span: LatLngBounds): ArrayList < String !> getCellIdsForLoading Defines proper cell ids so that the loader can load up stops that should be visible at corresponding level. static fun getCellIdsForLoading(cellIds: MutableList < String !>, region: Region ): ArrayList < String !> getCellIdsForLocalLevel static fun getCellIdsForLocalLevel(geoPoint: GeoPoint , span: LatLngBounds): ArrayList < String !> static fun getCellIdsForLocalLevel(lat: Double , lon: Double , latSpan: Double , lonSpan: Double ): ArrayList < String !> getCellIdsForRegionalLevel static fun getCellIdsForRegionalLevel(region: Region ): ArrayList < String !> newArgsForStopsLoader static fun newArgsForStopsLoader(cellIds: MutableList < String !>, region: Region , visibleBounds: LatLngBounds): Pair< MutableList < String !>!, LatLngBounds!>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/#stoploaderargs","text":"class StopLoaderArgs","title":"StopLoaderArgs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/#properties","text":"Name Summary CELLS_PER_DEGREE FIXME: Why 75? This was taken from the iOS impl. If we change into something else rather than 75, it might produce cell ids incompatible with locations.json API. static val CELLS_PER_DEGREE: Int KEY_CELL_IDS static val KEY_CELL_IDS: String KEY_VISIBLE_BOUND static val KEY_VISIBLE_BOUND: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/#functions","text":"Name Summary createStopLoaderSelection static fun createStopLoaderSelection(cellsIdSize: Int ): String ! createStopLoaderSelectionArgs static fun createStopLoaderSelectionArgs(cellIds: MutableList < String !>, visibleBounds: LatLngBounds): Array < String !>! getCellIdsByCameraZoom static fun getCellIdsByCameraZoom(region: Region , geoPoint: GeoPoint , zoom: Float , span: LatLngBounds): ArrayList < String !> getCellIdsForLoading Defines proper cell ids so that the loader can load up stops that should be visible at corresponding level. static fun getCellIdsForLoading(cellIds: MutableList < String !>, region: Region ): ArrayList < String !> getCellIdsForLocalLevel static fun getCellIdsForLocalLevel(geoPoint: GeoPoint , span: LatLngBounds): ArrayList < String !> static fun getCellIdsForLocalLevel(lat: Double , lon: Double , latSpan: Double , lonSpan: Double ): ArrayList < String !> getCellIdsForRegionalLevel static fun getCellIdsForRegionalLevel(region: Region ): ArrayList < String !> newArgsForStopsLoader static fun newArgsForStopsLoader(cellIds: MutableList < String !>, region: Region , visibleBounds: LatLngBounds): Pair< MutableList < String !>!, LatLngBounds!>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/-c-e-l-l-s_-p-e-r_-d-e-g-r-e-e/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / StopLoaderArgs / CELLS_PER_DEGREE CELLS_PER_DEGREE static val CELLS_PER_DEGREE: Int FIXME: Why 75? This was taken from the iOS impl. If we change into something else rather than 75, it might produce cell ids incompatible with locations.json API. See Also <a href=\" https://github.com/skedgo/tripgo-ios/blob/release-v4/Libraries/TripKit/TKCellHelper.m#L11\">iOS impl</a>","title":" c e l l s  p e r  d e g r e e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/-c-e-l-l-s_-p-e-r_-d-e-g-r-e-e/#cells_per_degree","text":"static val CELLS_PER_DEGREE: Int FIXME: Why 75? This was taken from the iOS impl. If we change into something else rather than 75, it might produce cell ids incompatible with locations.json API. See Also <a href=\" https://github.com/skedgo/tripgo-ios/blob/release-v4/Libraries/TripKit/TKCellHelper.m#L11\">iOS impl</a>","title":"CELLS_PER_DEGREE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/-k-e-y_-c-e-l-l_-i-d-s/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / StopLoaderArgs / KEY_CELL_IDS KEY_CELL_IDS static val KEY_CELL_IDS: String","title":" k e y  c e l l  i d s"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/-k-e-y_-c-e-l-l_-i-d-s/#key_cell_ids","text":"static val KEY_CELL_IDS: String","title":"KEY_CELL_IDS"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/-k-e-y_-v-i-s-i-b-l-e_-b-o-u-n-d/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / StopLoaderArgs / KEY_VISIBLE_BOUND KEY_VISIBLE_BOUND static val KEY_VISIBLE_BOUND: String","title":" k e y  v i s i b l e  b o u n d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/-k-e-y_-v-i-s-i-b-l-e_-b-o-u-n-d/#key_visible_bound","text":"static val KEY_VISIBLE_BOUND: String","title":"KEY_VISIBLE_BOUND"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/create-stop-loader-selection-args/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / StopLoaderArgs / createStopLoaderSelectionArgs createStopLoaderSelectionArgs static fun createStopLoaderSelectionArgs(@NonNull cellIds: MutableList < String !>, @NonNull visibleBounds: LatLngBounds): Array < String !>!","title":"Create stop loader selection args"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/create-stop-loader-selection-args/#createstoploaderselectionargs","text":"static fun createStopLoaderSelectionArgs(@NonNull cellIds: MutableList < String !>, @NonNull visibleBounds: LatLngBounds): Array < String !>!","title":"createStopLoaderSelectionArgs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/create-stop-loader-selection/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / StopLoaderArgs / createStopLoaderSelection createStopLoaderSelection static fun createStopLoaderSelection(cellsIdSize: Int ): String !","title":"Create stop loader selection"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/create-stop-loader-selection/#createstoploaderselection","text":"static fun createStopLoaderSelection(cellsIdSize: Int ): String !","title":"createStopLoaderSelection"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/get-cell-ids-by-camera-zoom/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / StopLoaderArgs / getCellIdsByCameraZoom getCellIdsByCameraZoom @NonNull static fun getCellIdsByCameraZoom(@NonNull region: Region , @NonNull geoPoint: GeoPoint , zoom: Float , @NonNull span: LatLngBounds): ArrayList < String !> Return ArrayList < String !>: A list of cell ids for regional level or local level based on the zoom level of camera position","title":"Get cell ids by camera zoom"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/get-cell-ids-by-camera-zoom/#getcellidsbycamerazoom","text":"@NonNull static fun getCellIdsByCameraZoom(@NonNull region: Region , @NonNull geoPoint: GeoPoint , zoom: Float , @NonNull span: LatLngBounds): ArrayList < String !> Return ArrayList < String !>: A list of cell ids for regional level or local level based on the zoom level of camera position","title":"getCellIdsByCameraZoom"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/get-cell-ids-for-loading/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / StopLoaderArgs / getCellIdsForLoading getCellIdsForLoading @NonNull static fun getCellIdsForLoading(@NonNull cellIds: MutableList < String !>, @NonNull region: Region ): ArrayList < String !> Defines proper cell ids so that the loader can load up stops that should be visible at corresponding level. If given cell ids are for the regional level, just return themselves. Why? Because we expect that only parent stops are visible at this level. However, if they are for the local level, should plus the cell ids for the regional level. Why? Because we expect both parent stops and non-parent stops are visible at this level.","title":"Get cell ids for loading"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/get-cell-ids-for-loading/#getcellidsforloading","text":"@NonNull static fun getCellIdsForLoading(@NonNull cellIds: MutableList < String !>, @NonNull region: Region ): ArrayList < String !> Defines proper cell ids so that the loader can load up stops that should be visible at corresponding level. If given cell ids are for the regional level, just return themselves. Why? Because we expect that only parent stops are visible at this level. However, if they are for the local level, should plus the cell ids for the regional level. Why? Because we expect both parent stops and non-parent stops are visible at this level.","title":"getCellIdsForLoading"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/get-cell-ids-for-local-level/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / StopLoaderArgs / getCellIdsForLocalLevel getCellIdsForLocalLevel @NonNull static fun getCellIdsForLocalLevel(@NonNull geoPoint: GeoPoint , @NonNull span: LatLngBounds): ArrayList < String !> Return ArrayList < String !>: A list of cell ids for local level @NonNull static fun getCellIdsForLocalLevel(lat: Double , lon: Double , latSpan: Double , lonSpan: Double ): ArrayList < String !>","title":"Get cell ids for local level"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/get-cell-ids-for-local-level/#getcellidsforlocallevel","text":"@NonNull static fun getCellIdsForLocalLevel(@NonNull geoPoint: GeoPoint , @NonNull span: LatLngBounds): ArrayList < String !> Return ArrayList < String !>: A list of cell ids for local level @NonNull static fun getCellIdsForLocalLevel(lat: Double , lon: Double , latSpan: Double , lonSpan: Double ): ArrayList < String !>","title":"getCellIdsForLocalLevel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/get-cell-ids-for-regional-level/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / StopLoaderArgs / getCellIdsForRegionalLevel getCellIdsForRegionalLevel @NonNull static fun getCellIdsForRegionalLevel(@NonNull region: Region ): ArrayList < String !> Return ArrayList < String !>: A list containing region name used as cell id for regional level","title":"Get cell ids for regional level"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/get-cell-ids-for-regional-level/#getcellidsforregionallevel","text":"@NonNull static fun getCellIdsForRegionalLevel(@NonNull region: Region ): ArrayList < String !> Return ArrayList < String !>: A list containing region name used as cell id for regional level","title":"getCellIdsForRegionalLevel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/new-args-for-stops-loader/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / StopLoaderArgs / newArgsForStopsLoader newArgsForStopsLoader @NonNull static fun newArgsForStopsLoader(@NonNull cellIds: MutableList < String !>, @NonNull region: Region , @NonNull visibleBounds: LatLngBounds): Pair< MutableList < String !>!, LatLngBounds!>","title":"New args for stops loader"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-stop-loader-args/new-args-for-stops-loader/#newargsforstopsloader","text":"@NonNull static fun newArgsForStopsLoader(@NonNull cellIds: MutableList < String !>, @NonNull region: Region , @NonNull visibleBounds: LatLngBounds): Pair< MutableList < String !>!, LatLngBounds!>","title":"newArgsForStopsLoader"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment TripKitMapFragment open class TripKitMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, OnMapLongClickListener, OnCameraChangeListener, OnMarkerClickListener A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> Your app must provide a TripGo API token as R.string.skedgo_api_key . Types Name Summary OnInfoWindowClickListener When an icon in the map is clicked, an information window is displayed. When that information window is clicked, this interface is used as a callback to notify the app of the click. interface OnInfoWindowClickListener Constructors Name Summary <init> A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> <br> Your app must provide a TripGo API token as R.string.skedgo_api_key . TripKitMapFragment() | Functions Name Summary animateToMyLocation open fun animateToMyLocation(): Unit onAttach open fun onAttach(context: Context): Unit onCameraChange open fun onCameraChange(position: CameraPosition!): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onDestroy open fun onDestroy(): Unit onInfoWindowClick open fun onInfoWindowClick(marker: Marker!): Unit onLocationAddressDecoded open fun onLocationAddressDecoded(locationTag: LocationTag!): Unit onLocationSelected open fun onLocationSelected(locationTag: LocationTag!): Unit onMapLongClick open fun onMapLongClick(point: LatLng!): Unit onMarkerClick open fun onMarkerClick(marker: Marker!): Boolean onPause open fun onPause(): Unit onResume open fun onResume(): Unit setInfoWindowAdapter If we do not specify our own implementation, GoogleMap will fall back to its default implementation for InfoWindowAdapter. open fun setInfoWindowAdapter(infoWindowAdapter: InfoWindowAdapter!): Unit setOnInfoWindowClickListener open fun setOnInfoWindowClickListener(listener: OnInfoWindowClickListener!): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/#tripkitmapfragment","text":"open class TripKitMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, OnMapLongClickListener, OnCameraChangeListener, OnMarkerClickListener A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> Your app must provide a TripGo API token as R.string.skedgo_api_key .","title":"TripKitMapFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/#types","text":"Name Summary OnInfoWindowClickListener When an icon in the map is clicked, an information window is displayed. When that information window is clicked, this interface is used as a callback to notify the app of the click. interface OnInfoWindowClickListener","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/#constructors","text":"Name Summary <init> A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> <br> Your app must provide a TripGo API token as R.string.skedgo_api_key . TripKitMapFragment() |","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/#functions","text":"Name Summary animateToMyLocation open fun animateToMyLocation(): Unit onAttach open fun onAttach(context: Context): Unit onCameraChange open fun onCameraChange(position: CameraPosition!): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onDestroy open fun onDestroy(): Unit onInfoWindowClick open fun onInfoWindowClick(marker: Marker!): Unit onLocationAddressDecoded open fun onLocationAddressDecoded(locationTag: LocationTag!): Unit onLocationSelected open fun onLocationSelected(locationTag: LocationTag!): Unit onMapLongClick open fun onMapLongClick(point: LatLng!): Unit onMarkerClick open fun onMarkerClick(marker: Marker!): Boolean onPause open fun onPause(): Unit onResume open fun onResume(): Unit setInfoWindowAdapter If we do not specify our own implementation, GoogleMap will fall back to its default implementation for InfoWindowAdapter. open fun setInfoWindowAdapter(infoWindowAdapter: InfoWindowAdapter!): Unit setOnInfoWindowClickListener open fun setOnInfoWindowClickListener(listener: OnInfoWindowClickListener!): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / <init> <init> TripKitMapFragment() A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> Your app must provide a TripGo API token as R.string.skedgo_api_key .","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/-init-/#init","text":"TripKitMapFragment() A map component for an app. It automatically integrates with SkedGo's backend, display transit information without any additional intervention. Being a fragment, it can very easily be added to an activity's layout. <fragment android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/map\" android:name=\"com.skedgo.tripkit.ui.map.home.TripKitMapFragment\"/> Your app must provide a TripGo API token as R.string.skedgo_api_key .","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/animate-to-my-location/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / animateToMyLocation animateToMyLocation protected open fun animateToMyLocation(): Unit","title":"Animate to my location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/animate-to-my-location/#animatetomylocation","text":"protected open fun animateToMyLocation(): Unit","title":"animateToMyLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-attach/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / onAttach onAttach open fun onAttach(context: Context): Unit","title":"On attach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-attach/#onattach","text":"open fun onAttach(context: Context): Unit","title":"onAttach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-camera-change/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / onCameraChange onCameraChange open fun onCameraChange(position: CameraPosition!): Unit","title":"On camera change"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-camera-change/#oncamerachange","text":"open fun onCameraChange(position: CameraPosition!): Unit","title":"onCameraChange"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / onCreate onCreate open fun onCreate(savedInstanceState: Bundle?): Unit","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-create/#oncreate","text":"open fun onCreate(savedInstanceState: Bundle?): Unit","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-destroy/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / onDestroy onDestroy open fun onDestroy(): Unit","title":"On destroy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-destroy/#ondestroy","text":"open fun onDestroy(): Unit","title":"onDestroy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-info-window-click/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / onInfoWindowClick onInfoWindowClick open fun onInfoWindowClick(marker: Marker!): Unit","title":"On info window click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-info-window-click/#oninfowindowclick","text":"open fun onInfoWindowClick(marker: Marker!): Unit","title":"onInfoWindowClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-location-address-decoded/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / onLocationAddressDecoded onLocationAddressDecoded open fun onLocationAddressDecoded(locationTag: LocationTag!): Unit","title":"On location address decoded"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-location-address-decoded/#onlocationaddressdecoded","text":"open fun onLocationAddressDecoded(locationTag: LocationTag!): Unit","title":"onLocationAddressDecoded"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-location-selected/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / onLocationSelected onLocationSelected open fun onLocationSelected(locationTag: LocationTag!): Unit","title":"On location selected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-location-selected/#onlocationselected","text":"open fun onLocationSelected(locationTag: LocationTag!): Unit","title":"onLocationSelected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-map-long-click/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / onMapLongClick onMapLongClick open fun onMapLongClick(point: LatLng!): Unit","title":"On map long click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-map-long-click/#onmaplongclick","text":"open fun onMapLongClick(point: LatLng!): Unit","title":"onMapLongClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-marker-click/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / onMarkerClick onMarkerClick open fun onMarkerClick(marker: Marker!): Boolean","title":"On marker click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-marker-click/#onmarkerclick","text":"open fun onMarkerClick(marker: Marker!): Boolean","title":"onMarkerClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-pause/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / onPause onPause open fun onPause(): Unit","title":"On pause"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-pause/#onpause","text":"open fun onPause(): Unit","title":"onPause"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-resume/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / onResume onResume open fun onResume(): Unit","title":"On resume"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/on-resume/#onresume","text":"open fun onResume(): Unit","title":"onResume"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/set-info-window-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / setInfoWindowAdapter setInfoWindowAdapter open fun setInfoWindowAdapter(infoWindowAdapter: InfoWindowAdapter!): Unit If we do not specify our own implementation, GoogleMap will fall back to its default implementation for InfoWindowAdapter.","title":"Set info window adapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/set-info-window-adapter/#setinfowindowadapter","text":"open fun setInfoWindowAdapter(infoWindowAdapter: InfoWindowAdapter!): Unit If we do not specify our own implementation, GoogleMap will fall back to its default implementation for InfoWindowAdapter.","title":"setInfoWindowAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/set-on-info-window-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / setOnInfoWindowClickListener setOnInfoWindowClickListener open fun setOnInfoWindowClickListener(listener: OnInfoWindowClickListener!): Unit","title":"Set on info window click listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/set-on-info-window-click-listener/#setoninfowindowclicklistener","text":"open fun setOnInfoWindowClickListener(listener: OnInfoWindowClickListener!): Unit","title":"setOnInfoWindowClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/-on-info-window-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / OnInfoWindowClickListener OnInfoWindowClickListener interface OnInfoWindowClickListener When an icon in the map is clicked, an information window is displayed. When that information window is clicked, this interface is used as a callback to notify the app of the click. Functions Name Summary onInfoWindowClick Called when an info window is clicked. abstract fun onInfoWindowClick(location: Location !): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/-on-info-window-click-listener/#oninfowindowclicklistener","text":"interface OnInfoWindowClickListener When an icon in the map is clicked, an information window is displayed. When that information window is clicked, this interface is used as a callback to notify the app of the click.","title":"OnInfoWindowClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/-on-info-window-click-listener/#functions","text":"Name Summary onInfoWindowClick Called when an info window is clicked. abstract fun onInfoWindowClick(location: Location !): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/-on-info-window-click-listener/on-info-window-click/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / TripKitMapFragment / OnInfoWindowClickListener / onInfoWindowClick onInfoWindowClick abstract fun onInfoWindowClick(location: Location !): Unit Called when an info window is clicked. Parameters location - Location !: The location represented by the info window that was clicked","title":"On info window click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/-on-info-window-click-listener/on-info-window-click/#oninfowindowclick","text":"abstract fun onInfoWindowClick(location: Location !): Unit Called when an info window is clicked.","title":"onInfoWindowClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-trip-kit-map-fragment/-on-info-window-click-listener/on-info-window-click/#parameters","text":"location - Location !: The location represented by the info window that was clicked","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ViewPort ViewPort sealed class ViewPort Types Name Summary CloseEnough class CloseEnough : ViewPort NotCloseEnough class NotCloseEnough : ViewPort Properties Name Summary visibleBounds val visibleBounds: LatLngBounds zoom val zoom: Float Functions Name Summary isInner fun isInner(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/#viewport","text":"sealed class ViewPort","title":"ViewPort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/#types","text":"Name Summary CloseEnough class CloseEnough : ViewPort NotCloseEnough class NotCloseEnough : ViewPort","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/#properties","text":"Name Summary visibleBounds val visibleBounds: LatLngBounds zoom val zoom: Float","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/#functions","text":"Name Summary isInner fun isInner(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/is-inner/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ViewPort / isInner isInner fun isInner(): Boolean","title":"Is inner"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/is-inner/#isinner","text":"fun isInner(): Boolean","title":"isInner"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/visible-bounds/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ViewPort / visibleBounds visibleBounds val visibleBounds: LatLngBounds","title":"Visible bounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/visible-bounds/#visiblebounds","text":"val visibleBounds: LatLngBounds","title":"visibleBounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/zoom/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ViewPort / zoom zoom val zoom: Float","title":"Zoom"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/zoom/#zoom","text":"val zoom: Float","title":"zoom"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/-close-enough/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ViewPort / CloseEnough CloseEnough class CloseEnough : ViewPort Constructors Name Summary <init> CloseEnough(zoom: Float , visibleBounds: LatLngBounds)","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/-close-enough/#closeenough","text":"class CloseEnough : ViewPort","title":"CloseEnough"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/-close-enough/#constructors","text":"Name Summary <init> CloseEnough(zoom: Float , visibleBounds: LatLngBounds)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/-close-enough/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ViewPort / CloseEnough / <init> <init> CloseEnough(zoom: Float , visibleBounds: LatLngBounds)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/-close-enough/-init-/#init","text":"CloseEnough(zoom: Float , visibleBounds: LatLngBounds)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/-not-close-enough/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ViewPort / NotCloseEnough NotCloseEnough class NotCloseEnough : ViewPort Constructors Name Summary <init> NotCloseEnough(zoom: Float , visibleBounds: LatLngBounds)","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/-not-close-enough/#notcloseenough","text":"class NotCloseEnough : ViewPort","title":"NotCloseEnough"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/-not-close-enough/#constructors","text":"Name Summary <init> NotCloseEnough(zoom: Float , visibleBounds: LatLngBounds)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/-not-close-enough/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ViewPort / NotCloseEnough / <init> <init> NotCloseEnough(zoom: Float , visibleBounds: LatLngBounds)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-view-port/-not-close-enough/-init-/#init","text":"NotCloseEnough(zoom: Float , visibleBounds: LatLngBounds)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ZoomLevel ZoomLevel class ZoomLevel Enum Values Name Summary INNER OUTER Properties Name Summary level val level: Float ZOOM_VALUE_TO_SHOW_CITIES static val ZOOM_VALUE_TO_SHOW_CITIES: Float Functions Name Summary fromLevel static fun fromLevel(level: Float ): ZoomLevel ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/#zoomlevel","text":"class ZoomLevel","title":"ZoomLevel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/#enum-values","text":"Name Summary INNER OUTER","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/#properties","text":"Name Summary level val level: Float ZOOM_VALUE_TO_SHOW_CITIES static val ZOOM_VALUE_TO_SHOW_CITIES: Float","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/#functions","text":"Name Summary fromLevel static fun fromLevel(level: Float ): ZoomLevel ?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/-i-n-n-e-r/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ZoomLevel / INNER INNER INNER","title":" i n n e r"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/-i-n-n-e-r/#inner","text":"INNER","title":"INNER"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/-o-u-t-e-r/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ZoomLevel / OUTER OUTER OUTER","title":" o u t e r"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/-o-u-t-e-r/#outer","text":"OUTER","title":"OUTER"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/-z-o-o-m_-v-a-l-u-e_-t-o_-s-h-o-w_-c-i-t-i-e-s/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ZoomLevel / ZOOM_VALUE_TO_SHOW_CITIES ZOOM_VALUE_TO_SHOW_CITIES static val ZOOM_VALUE_TO_SHOW_CITIES: Float","title":" z o o m  v a l u e  t o  s h o w  c i t i e s"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/-z-o-o-m_-v-a-l-u-e_-t-o_-s-h-o-w_-c-i-t-i-e-s/#zoom_value_to_show_cities","text":"static val ZOOM_VALUE_TO_SHOW_CITIES: Float","title":"ZOOM_VALUE_TO_SHOW_CITIES"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/from-level/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ZoomLevel / fromLevel fromLevel @Nullable static fun fromLevel(level: Float ): ZoomLevel ?","title":"From level"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/from-level/#fromlevel","text":"@Nullable static fun fromLevel(level: Float ): ZoomLevel ?","title":"fromLevel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/level/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / ZoomLevel / level level val level: Float","title":"Level"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/-zoom-level/level/#level","text":"val level: Float","title":"level"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/io.reactivex.-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / io.reactivex.Observable Extensions for io.reactivex.Observable Name Summary ignoreOutOfRegionsException fun Observable< Region >.ignoreOutOfRegionsException(): Observable< Region >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/io.reactivex.-observable/#extensions-for-ioreactivexobservable","text":"Name Summary ignoreOutOfRegionsException fun Observable< Region >.ignoreOutOfRegionsException(): Observable< Region >","title":"Extensions for io.reactivex.Observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/io.reactivex.-observable/ignore-out-of-regions-exception/","text":"tripkit-android / com.skedgo.tripkit.ui.map.home / io.reactivex.Observable / ignoreOutOfRegionsException ignoreOutOfRegionsException fun Observable< Region >.ignoreOutOfRegionsException(): Observable< Region >","title":"Ignore out of regions exception"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.home/io.reactivex.-observable/ignore-out-of-regions-exception/#ignoreoutofregionsexception","text":"fun Observable< Region >.ignoreOutOfRegionsException(): Observable< Region >","title":"ignoreOutOfRegionsException"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop Package com.skedgo.tripkit.ui.map.servicestop Types Name Summary ServiceStopMapFragment open class ServiceStopMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, InfoWindowAdapter, OnTimetableEntrySelectedListener, OnScheduledStopClickListener ServiceStopMapViewModel class ServiceStopMapViewModel : RxViewModel ServiceStopMarkerCreator open class ServiceStopMarkerCreator","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/#package-comskedgotripkituimapservicestop","text":"","title":"Package com.skedgo.tripkit.ui.map.servicestop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/#types","text":"Name Summary ServiceStopMapFragment open class ServiceStopMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, InfoWindowAdapter, OnTimetableEntrySelectedListener, OnScheduledStopClickListener ServiceStopMapViewModel class ServiceStopMapViewModel : RxViewModel ServiceStopMarkerCreator open class ServiceStopMarkerCreator","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment ServiceStopMapFragment open class ServiceStopMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, InfoWindowAdapter, OnTimetableEntrySelectedListener, OnScheduledStopClickListener Constructors Name Summary <init> ServiceStopMapFragment() Functions Name Summary getInfoContents open fun getInfoContents(marker: Marker!): View! getInfoWindow open fun getInfoWindow(marker: Marker!): View! onActivityCreated open fun onActivityCreated(savedInstanceState: Bundle?): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onDestroy open fun onDestroy(): Unit onInfoWindowClick open fun onInfoWindowClick(marker: Marker!): Unit onScheduledStopClicked open fun onScheduledStopClicked(stop: ServiceStop ): Unit onStart open fun onStart(): Unit onStop open fun onStop(): Unit onTimetableEntrySelected open fun onTimetableEntrySelected(service: TimetableEntry , stop: ScheduledStop , minStartTime: Long ): Unit setService open fun setService(service: TimetableEntry !): Unit setStop open fun setStop(stop: ScheduledStop !): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/#servicestopmapfragment","text":"open class ServiceStopMapFragment : LocationEnhancedMapFragment , OnInfoWindowClickListener, InfoWindowAdapter, OnTimetableEntrySelectedListener, OnScheduledStopClickListener","title":"ServiceStopMapFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/#constructors","text":"Name Summary <init> ServiceStopMapFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/#functions","text":"Name Summary getInfoContents open fun getInfoContents(marker: Marker!): View! getInfoWindow open fun getInfoWindow(marker: Marker!): View! onActivityCreated open fun onActivityCreated(savedInstanceState: Bundle?): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onDestroy open fun onDestroy(): Unit onInfoWindowClick open fun onInfoWindowClick(marker: Marker!): Unit onScheduledStopClicked open fun onScheduledStopClicked(stop: ServiceStop ): Unit onStart open fun onStart(): Unit onStop open fun onStop(): Unit onTimetableEntrySelected open fun onTimetableEntrySelected(service: TimetableEntry , stop: ScheduledStop , minStartTime: Long ): Unit setService open fun setService(service: TimetableEntry !): Unit setStop open fun setStop(stop: ScheduledStop !): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / <init> <init> ServiceStopMapFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/-init-/#init","text":"ServiceStopMapFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/get-info-contents/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / getInfoContents getInfoContents open fun getInfoContents(marker: Marker!): View!","title":"Get info contents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/get-info-contents/#getinfocontents","text":"open fun getInfoContents(marker: Marker!): View!","title":"getInfoContents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/get-info-window/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / getInfoWindow getInfoWindow open fun getInfoWindow(marker: Marker!): View!","title":"Get info window"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/get-info-window/#getinfowindow","text":"open fun getInfoWindow(marker: Marker!): View!","title":"getInfoWindow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-activity-created/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / onActivityCreated onActivityCreated open fun onActivityCreated(savedInstanceState: Bundle?): Unit","title":"On activity created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-activity-created/#onactivitycreated","text":"open fun onActivityCreated(savedInstanceState: Bundle?): Unit","title":"onActivityCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / onCreate onCreate open fun onCreate(savedInstanceState: Bundle?): Unit","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-create/#oncreate","text":"open fun onCreate(savedInstanceState: Bundle?): Unit","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-destroy/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / onDestroy onDestroy open fun onDestroy(): Unit","title":"On destroy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-destroy/#ondestroy","text":"open fun onDestroy(): Unit","title":"onDestroy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-info-window-click/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / onInfoWindowClick onInfoWindowClick open fun onInfoWindowClick(marker: Marker!): Unit","title":"On info window click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-info-window-click/#oninfowindowclick","text":"open fun onInfoWindowClick(marker: Marker!): Unit","title":"onInfoWindowClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-scheduled-stop-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / onScheduledStopClicked onScheduledStopClicked open fun onScheduledStopClicked(@NotNull stop: ServiceStop ): Unit","title":"On scheduled stop clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-scheduled-stop-clicked/#onscheduledstopclicked","text":"open fun onScheduledStopClicked(@NotNull stop: ServiceStop ): Unit","title":"onScheduledStopClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-start/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / onStart onStart open fun onStart(): Unit","title":"On start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-start/#onstart","text":"open fun onStart(): Unit","title":"onStart"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / onStop onStop open fun onStop(): Unit","title":"On stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-stop/#onstop","text":"open fun onStop(): Unit","title":"onStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-timetable-entry-selected/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / onTimetableEntrySelected onTimetableEntrySelected open fun onTimetableEntrySelected(@NotNull service: TimetableEntry , @NotNull stop: ScheduledStop , minStartTime: Long ): Unit","title":"On timetable entry selected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/on-timetable-entry-selected/#ontimetableentryselected","text":"open fun onTimetableEntrySelected(@NotNull service: TimetableEntry , @NotNull stop: ScheduledStop , minStartTime: Long ): Unit","title":"onTimetableEntrySelected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/set-service/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / setService setService open fun setService(service: TimetableEntry !): Unit","title":"Set service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/set-service/#setservice","text":"open fun setService(service: TimetableEntry !): Unit","title":"setService"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/set-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapFragment / setStop setStop open fun setStop(stop: ScheduledStop !): Unit","title":"Set stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-fragment/set-stop/#setstop","text":"open fun setStop(stop: ScheduledStop !): Unit","title":"setStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel ServiceStopMapViewModel class ServiceStopMapViewModel : RxViewModel Constructors Name Summary <init> ServiceStopMapViewModel(context: Context, fetchAndLoadServices: FetchAndLoadServices , regionService: RegionService , getStopDisplayText: GetStopDisplayText ) Properties Name Summary context val context: Context drawServiceLine val drawServiceLine: Observable< MutableList <PolylineOptions!>!> drawStops val drawStops: Observable< Pair < List < Pair <MarkerOptions, String !>>, Set < String >>!> fetchAndLoadServices val fetchAndLoadServices: FetchAndLoadServices getStopDisplayText val getStopDisplayText: GetStopDisplayText realtimeVehicle val realtimeVehicle: Observable<Optional< RealTimeVehicle >!> realtimeViewModel lateinit var realtimeViewModel: RealTimeChoreographerViewModel region val region: Observable< Region !> regionService val regionService: RegionService service val service: BehaviorRelay< TimetableEntry !> serviceStopMarkerCreator lateinit var serviceStopMarkerCreator: ServiceStopMarkerCreator stop val stop: BehaviorRelay< ScheduledStop !> viewPort val viewPort: Observable< List <LatLng>!>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/#servicestopmapviewmodel","text":"class ServiceStopMapViewModel : RxViewModel","title":"ServiceStopMapViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/#constructors","text":"Name Summary <init> ServiceStopMapViewModel(context: Context, fetchAndLoadServices: FetchAndLoadServices , regionService: RegionService , getStopDisplayText: GetStopDisplayText )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/#properties","text":"Name Summary context val context: Context drawServiceLine val drawServiceLine: Observable< MutableList <PolylineOptions!>!> drawStops val drawStops: Observable< Pair < List < Pair <MarkerOptions, String !>>, Set < String >>!> fetchAndLoadServices val fetchAndLoadServices: FetchAndLoadServices getStopDisplayText val getStopDisplayText: GetStopDisplayText realtimeVehicle val realtimeVehicle: Observable<Optional< RealTimeVehicle >!> realtimeViewModel lateinit var realtimeViewModel: RealTimeChoreographerViewModel region val region: Observable< Region !> regionService val regionService: RegionService service val service: BehaviorRelay< TimetableEntry !> serviceStopMarkerCreator lateinit var serviceStopMarkerCreator: ServiceStopMarkerCreator stop val stop: BehaviorRelay< ScheduledStop !> viewPort val viewPort: Observable< List <LatLng>!>","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / <init> <init> ServiceStopMapViewModel(context: Context, fetchAndLoadServices: FetchAndLoadServices , regionService: RegionService , getStopDisplayText: GetStopDisplayText )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/-init-/#init","text":"ServiceStopMapViewModel(context: Context, fetchAndLoadServices: FetchAndLoadServices , regionService: RegionService , getStopDisplayText: GetStopDisplayText )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/context/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / context context val context: Context","title":"Context"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/context/#context","text":"val context: Context","title":"context"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/draw-service-line/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / drawServiceLine drawServiceLine val drawServiceLine: Observable< MutableList <PolylineOptions!>!>","title":"Draw service line"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/draw-service-line/#drawserviceline","text":"val drawServiceLine: Observable< MutableList <PolylineOptions!>!>","title":"drawServiceLine"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/draw-stops/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / drawStops drawStops val drawStops: Observable< Pair < List < Pair <MarkerOptions, String !>>, Set < String >>!>","title":"Draw stops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/draw-stops/#drawstops","text":"val drawStops: Observable< Pair < List < Pair <MarkerOptions, String !>>, Set < String >>!>","title":"drawStops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/fetch-and-load-services/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / fetchAndLoadServices fetchAndLoadServices val fetchAndLoadServices: FetchAndLoadServices","title":"Fetch and load services"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/fetch-and-load-services/#fetchandloadservices","text":"val fetchAndLoadServices: FetchAndLoadServices","title":"fetchAndLoadServices"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/get-stop-display-text/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / getStopDisplayText getStopDisplayText val getStopDisplayText: GetStopDisplayText","title":"Get stop display text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/get-stop-display-text/#getstopdisplaytext","text":"val getStopDisplayText: GetStopDisplayText","title":"getStopDisplayText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/realtime-vehicle/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / realtimeVehicle realtimeVehicle val realtimeVehicle: Observable<Optional< RealTimeVehicle >!>","title":"Realtime vehicle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/realtime-vehicle/#realtimevehicle","text":"val realtimeVehicle: Observable<Optional< RealTimeVehicle >!>","title":"realtimeVehicle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/realtime-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / realtimeViewModel realtimeViewModel lateinit var realtimeViewModel: RealTimeChoreographerViewModel","title":"Realtime view model"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/realtime-view-model/#realtimeviewmodel","text":"lateinit var realtimeViewModel: RealTimeChoreographerViewModel","title":"realtimeViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/region-service/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / regionService regionService val regionService: RegionService","title":"Region service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/region-service/#regionservice","text":"val regionService: RegionService","title":"regionService"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/region/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / region region val region: Observable< Region !>","title":"Region"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/region/#region","text":"val region: Observable< Region !>","title":"region"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/service-stop-marker-creator/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / serviceStopMarkerCreator serviceStopMarkerCreator lateinit var serviceStopMarkerCreator: ServiceStopMarkerCreator","title":"Service stop marker creator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/service-stop-marker-creator/#servicestopmarkercreator","text":"lateinit var serviceStopMarkerCreator: ServiceStopMarkerCreator","title":"serviceStopMarkerCreator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/service/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / service service val service: BehaviorRelay< TimetableEntry !>","title":"Service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/service/#service","text":"val service: BehaviorRelay< TimetableEntry !>","title":"service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/stop/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / stop stop val stop: BehaviorRelay< ScheduledStop !>","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/stop/#stop","text":"val stop: BehaviorRelay< ScheduledStop !>","title":"stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/view-port/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMapViewModel / viewPort viewPort val viewPort: Observable< List <LatLng>!>","title":"View port"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-map-view-model/view-port/#viewport","text":"val viewPort: Observable< List <LatLng>!>","title":"viewPort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-marker-creator/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMarkerCreator ServiceStopMarkerCreator open class ServiceStopMarkerCreator Constructors Name Summary <init> ServiceStopMarkerCreator(context: Context, timeLabelMaker: TimeLabelMaker ) Functions Name Summary convert open static fun convert(resources: Resources, mode: VehicleMode !, realTimeStatus: RealTimeStatus !): Drawable! toMarkerOptions open fun toMarkerOptions(stopInfo: StopInfo , displayText: String !, timeZone: String !): MarkerOptions!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-marker-creator/#servicestopmarkercreator","text":"open class ServiceStopMarkerCreator","title":"ServiceStopMarkerCreator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-marker-creator/#constructors","text":"Name Summary <init> ServiceStopMarkerCreator(context: Context, timeLabelMaker: TimeLabelMaker )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-marker-creator/#functions","text":"Name Summary convert open static fun convert(resources: Resources, mode: VehicleMode !, realTimeStatus: RealTimeStatus !): Drawable! toMarkerOptions open fun toMarkerOptions(stopInfo: StopInfo , displayText: String !, timeZone: String !): MarkerOptions!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-marker-creator/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMarkerCreator / <init> <init> ServiceStopMarkerCreator(@NonNull context: Context, @NonNull timeLabelMaker: TimeLabelMaker )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-marker-creator/-init-/#init","text":"ServiceStopMarkerCreator(@NonNull context: Context, @NonNull timeLabelMaker: TimeLabelMaker )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-marker-creator/convert/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMarkerCreator / convert convert open static fun convert(@NonNull resources: Resources, mode: VehicleMode !, realTimeStatus: RealTimeStatus !): Drawable!","title":"Convert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-marker-creator/convert/#convert","text":"open static fun convert(@NonNull resources: Resources, mode: VehicleMode !, realTimeStatus: RealTimeStatus !): Drawable!","title":"convert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-marker-creator/to-marker-options/","text":"tripkit-android / com.skedgo.tripkit.ui.map.servicestop / ServiceStopMarkerCreator / toMarkerOptions toMarkerOptions open fun toMarkerOptions(@NonNull stopInfo: StopInfo , displayText: String !, timeZone: String !): MarkerOptions!","title":"To marker options"},{"location":"tripkit-android/com.skedgo.tripkit.ui.map.servicestop/-service-stop-marker-creator/to-marker-options/#tomarkeroptions","text":"open fun toMarkerOptions(@NonNull stopInfo: StopInfo , displayText: String !, timeZone: String !): MarkerOptions!","title":"toMarkerOptions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/","text":"tripkit-android / com.skedgo.tripkit.ui.model Package com.skedgo.tripkit.ui.model Types Name Summary DeparturesResponse open class DeparturesResponse StopInfo Thuy's remark: This should have been [`ServiceStop`](../com.skedgo.tripkit.common.model/-service-stop/index.md). We parse network response into ServiceStops, then persist them into SQLite database. However, when loading, we use such StopInfo to indicate service' stops. open class StopInfo TimetableEntry (Aka Service) open class TimetableEntry : Parcelable, IRealTimeElement , ITimeRange , WheelchairAccessible TimetableHeaderLineItem open class TimetableHeaderLineItem TripKitButton class TripKitButton","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/#package-comskedgotripkituimodel","text":"","title":"Package com.skedgo.tripkit.ui.model"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/#types","text":"Name Summary DeparturesResponse open class DeparturesResponse StopInfo Thuy's remark: This should have been [`ServiceStop`](../com.skedgo.tripkit.common.model/-service-stop/index.md). We parse network response into ServiceStops, then persist them into SQLite database. However, when loading, we use such StopInfo to indicate service' stops. open class StopInfo TimetableEntry (Aka Service) open class TimetableEntry : Parcelable, IRealTimeElement , ITimeRange , WheelchairAccessible TimetableHeaderLineItem open class TimetableHeaderLineItem TripKitButton class TripKitButton","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse DeparturesResponse open class DeparturesResponse See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/RealTime_API#DepartureServlet-new-servlet-departuresjson\">departures.json API</a> Types Name Summary ServicesResponse open class ServicesResponse Constructors Name Summary <init> DeparturesResponse() Properties Name Summary embarkationStopList var embarkationStopList: MutableList <ServicesResponse!>! error (Optional) var error: String ! hasError (Optional) var hasError: Boolean stopList (Optional) var stopList: MutableList < ScheduledStop !>! Functions Name Summary getAlerts open fun getAlerts(): MutableList < RealtimeAlert !>? getParentInfo open fun getParentInfo(): ScheduledStop ? getServiceList open fun getServiceList(): MutableList < TimetableEntry !>? processEmbarkationStopList Assigns stop code into corresponding service open fun processEmbarkationStopList(): Unit setAlerts open fun setAlerts(alerts: MutableList < RealtimeAlert !>!): Unit Extension Functions Name Summary postProcess fun DeparturesResponse .postProcess(embarkationStops: List < String >, disembarkationStops: List < String >?): DeparturesResponse","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/#departuresresponse","text":"open class DeparturesResponse See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/RealTime_API#DepartureServlet-new-servlet-departuresjson\">departures.json API</a>","title":"DeparturesResponse"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/#types","text":"Name Summary ServicesResponse open class ServicesResponse","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/#constructors","text":"Name Summary <init> DeparturesResponse()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/#properties","text":"Name Summary embarkationStopList var embarkationStopList: MutableList <ServicesResponse!>! error (Optional) var error: String ! hasError (Optional) var hasError: Boolean stopList (Optional) var stopList: MutableList < ScheduledStop !>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/#functions","text":"Name Summary getAlerts open fun getAlerts(): MutableList < RealtimeAlert !>? getParentInfo open fun getParentInfo(): ScheduledStop ? getServiceList open fun getServiceList(): MutableList < TimetableEntry !>? processEmbarkationStopList Assigns stop code into corresponding service open fun processEmbarkationStopList(): Unit setAlerts open fun setAlerts(alerts: MutableList < RealtimeAlert !>!): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/#extension-functions","text":"Name Summary postProcess fun DeparturesResponse .postProcess(embarkationStops: List < String >, disembarkationStops: List < String >?): DeparturesResponse","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / <init> <init> DeparturesResponse() See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/RealTime_API#DepartureServlet-new-servlet-departuresjson\">departures.json API</a>","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-init-/#init","text":"DeparturesResponse() See Also <a href=\" https://redmine.buzzhives.com/projects/buzzhives/wiki/RealTime_API#DepartureServlet-new-servlet-departuresjson\">departures.json API</a>","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/embarkation-stop-list/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / embarkationStopList embarkationStopList @SerializedName(\"embarkationStops\") var embarkationStopList: MutableList <ServicesResponse!>!","title":"Embarkation stop list"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/embarkation-stop-list/#embarkationstoplist","text":"@SerializedName(\"embarkationStops\") var embarkationStopList: MutableList <ServicesResponse!>!","title":"embarkationStopList"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/error/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / error error @SerializedName(\"error\") var error: String ! (Optional)","title":"Error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/error/#error","text":"@SerializedName(\"error\") var error: String ! (Optional)","title":"error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/get-alerts/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / getAlerts getAlerts @Nullable open fun getAlerts(): MutableList < RealtimeAlert !>?","title":"Get alerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/get-alerts/#getalerts","text":"@Nullable open fun getAlerts(): MutableList < RealtimeAlert !>?","title":"getAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/get-parent-info/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / getParentInfo getParentInfo @Nullable open fun getParentInfo(): ScheduledStop ?","title":"Get parent info"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/get-parent-info/#getparentinfo","text":"@Nullable open fun getParentInfo(): ScheduledStop ?","title":"getParentInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/get-service-list/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / getServiceList getServiceList @Nullable open fun getServiceList(): MutableList < TimetableEntry !>?","title":"Get service list"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/get-service-list/#getservicelist","text":"@Nullable open fun getServiceList(): MutableList < TimetableEntry !>?","title":"getServiceList"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/has-error/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / hasError hasError @SerializedName(\"usererror\") var hasError: Boolean (Optional)","title":"Has error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/has-error/#haserror","text":"@SerializedName(\"usererror\") var hasError: Boolean (Optional)","title":"hasError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/process-embarkation-stop-list/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / processEmbarkationStopList processEmbarkationStopList open fun processEmbarkationStopList(): Unit Assigns stop code into corresponding service NOTE: Must call this method after parsing the response","title":"Process embarkation stop list"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/process-embarkation-stop-list/#processembarkationstoplist","text":"open fun processEmbarkationStopList(): Unit Assigns stop code into corresponding service NOTE: Must call this method after parsing the response","title":"processEmbarkationStopList"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/set-alerts/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / setAlerts setAlerts open fun setAlerts(alerts: MutableList < RealtimeAlert !>!): Unit","title":"Set alerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/set-alerts/#setalerts","text":"open fun setAlerts(alerts: MutableList < RealtimeAlert !>!): Unit","title":"setAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/stop-list/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / stopList stopList @SerializedName(\"stops\") var stopList: MutableList < ScheduledStop !>! (Optional)","title":"Stop list"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/stop-list/#stoplist","text":"@SerializedName(\"stops\") var stopList: MutableList < ScheduledStop !>! (Optional)","title":"stopList"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-services-response/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / ServicesResponse ServicesResponse open class ServicesResponse Constructors Name Summary <init> ServicesResponse() Properties Name Summary serviceList var serviceList: MutableList < TimetableEntry !>! stopCode var stopCode: String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-services-response/#servicesresponse","text":"open class ServicesResponse","title":"ServicesResponse"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-services-response/#constructors","text":"Name Summary <init> ServicesResponse()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-services-response/#properties","text":"Name Summary serviceList var serviceList: MutableList < TimetableEntry !>! stopCode var stopCode: String !","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-services-response/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / ServicesResponse / <init> <init> ServicesResponse()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-services-response/-init-/#init","text":"ServicesResponse()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-services-response/service-list/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / ServicesResponse / serviceList serviceList @SerializedName(\"services\") var serviceList: MutableList < TimetableEntry !>!","title":"Service list"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-services-response/service-list/#servicelist","text":"@SerializedName(\"services\") var serviceList: MutableList < TimetableEntry !>!","title":"serviceList"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-services-response/stop-code/","text":"tripkit-android / com.skedgo.tripkit.ui.model / DeparturesResponse / ServicesResponse / stopCode stopCode @SerializedName(\"stopCode\") var stopCode: String !","title":"Stop code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-departures-response/-services-response/stop-code/#stopcode","text":"@SerializedName(\"stopCode\") var stopCode: String !","title":"stopCode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/","text":"tripkit-android / com.skedgo.tripkit.ui.model / StopInfo StopInfo open class StopInfo Thuy's remark: This should have been [`ServiceStop`](../../com.skedgo.tripkit.common.model/-service-stop/index.md). We parse network response into ServiceStops, then persist them into SQLite database. However, when loading, we use such StopInfo to indicate service' stops. Constructors Name Summary <init> StopInfo(id: Int , realTimeStatus: RealTimeStatus !, sortByArrive: Boolean , stop: ServiceStop !, serviceColor: Int , travelled: Boolean ) Properties Name Summary id val id: Int realTimeStatus val realTimeStatus: RealTimeStatus ! serviceColor val serviceColor: Int sortByArrive val sortByArrive: Boolean stop val stop: ServiceStop ! travelled var travelled: Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/#stopinfo","text":"open class StopInfo Thuy's remark: This should have been [`ServiceStop`](../../com.skedgo.tripkit.common.model/-service-stop/index.md). We parse network response into ServiceStops, then persist them into SQLite database. However, when loading, we use such StopInfo to indicate service' stops.","title":"StopInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/#constructors","text":"Name Summary <init> StopInfo(id: Int , realTimeStatus: RealTimeStatus !, sortByArrive: Boolean , stop: ServiceStop !, serviceColor: Int , travelled: Boolean )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/#properties","text":"Name Summary id val id: Int realTimeStatus val realTimeStatus: RealTimeStatus ! serviceColor val serviceColor: Int sortByArrive val sortByArrive: Boolean stop val stop: ServiceStop ! travelled var travelled: Boolean","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.model / StopInfo / <init> <init> StopInfo(id: Int , realTimeStatus: RealTimeStatus !, sortByArrive: Boolean , stop: ServiceStop !, serviceColor: Int , travelled: Boolean )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/-init-/#init","text":"StopInfo(id: Int , realTimeStatus: RealTimeStatus !, sortByArrive: Boolean , stop: ServiceStop !, serviceColor: Int , travelled: Boolean )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/id/","text":"tripkit-android / com.skedgo.tripkit.ui.model / StopInfo / id id val id: Int","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/id/#id","text":"val id: Int","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/real-time-status/","text":"tripkit-android / com.skedgo.tripkit.ui.model / StopInfo / realTimeStatus realTimeStatus val realTimeStatus: RealTimeStatus !","title":"Real time status"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/real-time-status/#realtimestatus","text":"val realTimeStatus: RealTimeStatus !","title":"realTimeStatus"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/service-color/","text":"tripkit-android / com.skedgo.tripkit.ui.model / StopInfo / serviceColor serviceColor val serviceColor: Int","title":"Service color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/service-color/#servicecolor","text":"val serviceColor: Int","title":"serviceColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/sort-by-arrive/","text":"tripkit-android / com.skedgo.tripkit.ui.model / StopInfo / sortByArrive sortByArrive val sortByArrive: Boolean","title":"Sort by arrive"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/sort-by-arrive/#sortbyarrive","text":"val sortByArrive: Boolean","title":"sortByArrive"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/stop/","text":"tripkit-android / com.skedgo.tripkit.ui.model / StopInfo / stop stop val stop: ServiceStop !","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/stop/#stop","text":"val stop: ServiceStop !","title":"stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/travelled/","text":"tripkit-android / com.skedgo.tripkit.ui.model / StopInfo / travelled travelled var travelled: Boolean","title":"Travelled"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-stop-info/travelled/#travelled","text":"var travelled: Boolean","title":"travelled"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry TimetableEntry open class TimetableEntry : Parcelable, IRealTimeElement , ITimeRange , WheelchairAccessible (Aka Service) Constructors Name Summary <init> TimetableEntry() Properties Name Summary CREATOR static val CREATOR: Creator< TimetableEntry !>! endStop For A2B-timetable-related stuff. var endStop: ScheduledStop ! pairIdentifier For A2B-timetable-related stuff. var pairIdentifier: String ! startStop For A2B-timetable-related stuff. var startStop: ScheduledStop ! stops val stops: Var< MutableList < StopInfo !>!>! wheelchairAccessible open val wheelchairAccessible: Boolean ? Functions Name Summary describeContents open fun describeContents(): Int getAlertHashCodes open fun getAlertHashCodes(): ArrayList < Long !>? getAlerts open fun getAlerts(): ArrayList < RealtimeAlert !>! getEndStopCode open fun getEndStopCode(): String ! getEndTimeInSecs open fun getEndTimeInSecs(): Long getFrequency open fun getFrequency(): Int getId open fun getId(): Long getModeInfo open fun getModeInfo(): ModeInfo ? getOperator open fun getOperator(): String ! getRealTimeArrival open fun getRealTimeArrival(): Int getRealTimeDeparture open fun getRealTimeDeparture(): Int getRealTimeStatus open fun getRealTimeStatus(): RealTimeStatus ! getRealtimeVehicle open fun getRealtimeVehicle(): RealTimeVehicle ! getSearchString open fun getSearchString(): String ! getServiceColor open fun getServiceColor(): ServiceColor ! getServiceDirection open fun getServiceDirection(): String ? getServiceName open fun getServiceName(): String ? getServiceNumber open fun getServiceNumber(): String ? getServiceTime In secs. open fun getServiceTime(): Long getServiceTripId open fun getServiceTripId(): String ! getStartStopCode open fun getStartStopCode(): String ! getStartStopShortName open fun getStartStopShortName(): String ! getStartTimeInSecs open fun getStartTimeInSecs(): Long getStopCode open fun getStopCode(): String ! hasAlerts open fun hasAlerts(): Boolean isBefore For example, in order to determine a past service trip. open fun isBefore(pointSecs: Long ): Boolean isFavourite open fun isFavourite(): Boolean open fun isFavourite(isFavourite: Boolean ): Unit isFrequencyBased open fun isFrequencyBased(): Boolean setAlertHashCodes open fun setAlertHashCodes(alertHashCodes: ArrayList < Long !>?): Unit setAlerts open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit setEndStopCode open fun setEndStopCode(endStopCode: String !): Unit setEndTimeInSecs open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit setFrequency open fun setFrequency(freq: Int ): Unit setId open fun setId(id: Long ): Unit setModeInfo open fun setModeInfo(modeInfo: ModeInfo ?): Unit setOperator open fun setOperator(operator: String !): Unit setRealTimeArrival open fun setRealTimeArrival(realTimeArrival: Int ): Unit setRealTimeDeparture open fun setRealTimeDeparture(realTimeDeparture: Int ): Unit setRealTimeStatus open fun setRealTimeStatus(realTimeStatus: RealTimeStatus !): Unit setRealtimeVehicle open fun setRealtimeVehicle(realtimeVehicle: RealTimeVehicle !): Unit setSearchString open fun setSearchString(searchString: String !): Unit setServiceColor open fun setServiceColor(serviceColor: ServiceColor !): Unit setServiceDirection open fun setServiceDirection(serviceDirection: String !): Unit setServiceName open fun setServiceName(serviceName: String !): Unit setServiceNumber open fun setServiceNumber(serviceNumber: String !): Unit setServiceTime open fun setServiceTime(serviceTime: Long ): Unit setServiceTripId open fun setServiceTripId(serviceTripId: String !): Unit setStartStopCode open fun setStartStopCode(startStopCode: String !): Unit setStartStopShortName open fun setStartStopShortName(startStopShortName: String !): Unit setStartTimeInSecs open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit setStopCode open fun setStopCode(stopCode: String !): Unit setWheelchairAccessible open fun setWheelchairAccessible(wheelchairAccessible: Boolean ?): Unit toString For debug purpose only. open fun toString(): String writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit Extension Functions Name Summary getTimeLeftToDepartInterval fun TimetableEntry .getTimeLeftToDepartInterval(period: Long , timeUnit: TimeUnit ): Observable< Long >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/#timetableentry","text":"open class TimetableEntry : Parcelable, IRealTimeElement , ITimeRange , WheelchairAccessible (Aka Service)","title":"TimetableEntry"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/#constructors","text":"Name Summary <init> TimetableEntry()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/#properties","text":"Name Summary CREATOR static val CREATOR: Creator< TimetableEntry !>! endStop For A2B-timetable-related stuff. var endStop: ScheduledStop ! pairIdentifier For A2B-timetable-related stuff. var pairIdentifier: String ! startStop For A2B-timetable-related stuff. var startStop: ScheduledStop ! stops val stops: Var< MutableList < StopInfo !>!>! wheelchairAccessible open val wheelchairAccessible: Boolean ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/#functions","text":"Name Summary describeContents open fun describeContents(): Int getAlertHashCodes open fun getAlertHashCodes(): ArrayList < Long !>? getAlerts open fun getAlerts(): ArrayList < RealtimeAlert !>! getEndStopCode open fun getEndStopCode(): String ! getEndTimeInSecs open fun getEndTimeInSecs(): Long getFrequency open fun getFrequency(): Int getId open fun getId(): Long getModeInfo open fun getModeInfo(): ModeInfo ? getOperator open fun getOperator(): String ! getRealTimeArrival open fun getRealTimeArrival(): Int getRealTimeDeparture open fun getRealTimeDeparture(): Int getRealTimeStatus open fun getRealTimeStatus(): RealTimeStatus ! getRealtimeVehicle open fun getRealtimeVehicle(): RealTimeVehicle ! getSearchString open fun getSearchString(): String ! getServiceColor open fun getServiceColor(): ServiceColor ! getServiceDirection open fun getServiceDirection(): String ? getServiceName open fun getServiceName(): String ? getServiceNumber open fun getServiceNumber(): String ? getServiceTime In secs. open fun getServiceTime(): Long getServiceTripId open fun getServiceTripId(): String ! getStartStopCode open fun getStartStopCode(): String ! getStartStopShortName open fun getStartStopShortName(): String ! getStartTimeInSecs open fun getStartTimeInSecs(): Long getStopCode open fun getStopCode(): String ! hasAlerts open fun hasAlerts(): Boolean isBefore For example, in order to determine a past service trip. open fun isBefore(pointSecs: Long ): Boolean isFavourite open fun isFavourite(): Boolean open fun isFavourite(isFavourite: Boolean ): Unit isFrequencyBased open fun isFrequencyBased(): Boolean setAlertHashCodes open fun setAlertHashCodes(alertHashCodes: ArrayList < Long !>?): Unit setAlerts open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit setEndStopCode open fun setEndStopCode(endStopCode: String !): Unit setEndTimeInSecs open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit setFrequency open fun setFrequency(freq: Int ): Unit setId open fun setId(id: Long ): Unit setModeInfo open fun setModeInfo(modeInfo: ModeInfo ?): Unit setOperator open fun setOperator(operator: String !): Unit setRealTimeArrival open fun setRealTimeArrival(realTimeArrival: Int ): Unit setRealTimeDeparture open fun setRealTimeDeparture(realTimeDeparture: Int ): Unit setRealTimeStatus open fun setRealTimeStatus(realTimeStatus: RealTimeStatus !): Unit setRealtimeVehicle open fun setRealtimeVehicle(realtimeVehicle: RealTimeVehicle !): Unit setSearchString open fun setSearchString(searchString: String !): Unit setServiceColor open fun setServiceColor(serviceColor: ServiceColor !): Unit setServiceDirection open fun setServiceDirection(serviceDirection: String !): Unit setServiceName open fun setServiceName(serviceName: String !): Unit setServiceNumber open fun setServiceNumber(serviceNumber: String !): Unit setServiceTime open fun setServiceTime(serviceTime: Long ): Unit setServiceTripId open fun setServiceTripId(serviceTripId: String !): Unit setStartStopCode open fun setStartStopCode(startStopCode: String !): Unit setStartStopShortName open fun setStartStopShortName(startStopShortName: String !): Unit setStartTimeInSecs open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit setStopCode open fun setStopCode(stopCode: String !): Unit setWheelchairAccessible open fun setWheelchairAccessible(wheelchairAccessible: Boolean ?): Unit toString For debug purpose only. open fun toString(): String writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/#extension-functions","text":"Name Summary getTimeLeftToDepartInterval fun TimetableEntry .getTimeLeftToDepartInterval(period: Long , timeUnit: TimeUnit ): Observable< Long >","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/-c-r-e-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / CREATOR CREATOR static val CREATOR: Creator< TimetableEntry !>!","title":" c r e a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/-c-r-e-a-t-o-r/#creator","text":"static val CREATOR: Creator< TimetableEntry !>!","title":"CREATOR"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / <init> <init> TimetableEntry()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/-init-/#init","text":"TimetableEntry()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/describe-contents/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / describeContents describeContents open fun describeContents(): Int","title":"Describe contents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/describe-contents/#describecontents","text":"open fun describeContents(): Int","title":"describeContents"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/end-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / endStop endStop var endStop: ScheduledStop ! For A2B-timetable-related stuff.","title":"End stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/end-stop/#endstop","text":"var endStop: ScheduledStop ! For A2B-timetable-related stuff.","title":"endStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-alert-hash-codes/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getAlertHashCodes getAlertHashCodes @Nullable open fun getAlertHashCodes(): ArrayList < Long !>?","title":"Get alert hash codes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-alert-hash-codes/#getalerthashcodes","text":"@Nullable open fun getAlertHashCodes(): ArrayList < Long !>?","title":"getAlertHashCodes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-alerts/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getAlerts getAlerts open fun getAlerts(): ArrayList < RealtimeAlert !>!","title":"Get alerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-alerts/#getalerts","text":"open fun getAlerts(): ArrayList < RealtimeAlert !>!","title":"getAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-end-stop-code/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getEndStopCode getEndStopCode open fun getEndStopCode(): String !","title":"Get end stop code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-end-stop-code/#getendstopcode","text":"open fun getEndStopCode(): String !","title":"getEndStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-end-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getEndTimeInSecs getEndTimeInSecs open fun getEndTimeInSecs(): Long","title":"Get end time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-end-time-in-secs/#getendtimeinsecs","text":"open fun getEndTimeInSecs(): Long","title":"getEndTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-frequency/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getFrequency getFrequency open fun getFrequency(): Int","title":"Get frequency"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-frequency/#getfrequency","text":"open fun getFrequency(): Int","title":"getFrequency"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-id/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getId getId open fun getId(): Long","title":"Get id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-id/#getid","text":"open fun getId(): Long","title":"getId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-mode-info/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getModeInfo getModeInfo @Nullable open fun getModeInfo(): ModeInfo ?","title":"Get mode info"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-mode-info/#getmodeinfo","text":"@Nullable open fun getModeInfo(): ModeInfo ?","title":"getModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-operator/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getOperator getOperator open fun getOperator(): String !","title":"Get operator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-operator/#getoperator","text":"open fun getOperator(): String !","title":"getOperator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-real-time-arrival/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getRealTimeArrival getRealTimeArrival open fun getRealTimeArrival(): Int","title":"Get real time arrival"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-real-time-arrival/#getrealtimearrival","text":"open fun getRealTimeArrival(): Int","title":"getRealTimeArrival"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-real-time-departure/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getRealTimeDeparture getRealTimeDeparture open fun getRealTimeDeparture(): Int","title":"Get real time departure"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-real-time-departure/#getrealtimedeparture","text":"open fun getRealTimeDeparture(): Int","title":"getRealTimeDeparture"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-real-time-status/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getRealTimeStatus getRealTimeStatus open fun getRealTimeStatus(): RealTimeStatus !","title":"Get real time status"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-real-time-status/#getrealtimestatus","text":"open fun getRealTimeStatus(): RealTimeStatus !","title":"getRealTimeStatus"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-realtime-vehicle/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getRealtimeVehicle getRealtimeVehicle open fun getRealtimeVehicle(): RealTimeVehicle !","title":"Get realtime vehicle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-realtime-vehicle/#getrealtimevehicle","text":"open fun getRealtimeVehicle(): RealTimeVehicle !","title":"getRealtimeVehicle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-search-string/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getSearchString getSearchString open fun getSearchString(): String !","title":"Get search string"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-search-string/#getsearchstring","text":"open fun getSearchString(): String !","title":"getSearchString"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-color/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getServiceColor getServiceColor open fun getServiceColor(): ServiceColor !","title":"Get service color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-color/#getservicecolor","text":"open fun getServiceColor(): ServiceColor !","title":"getServiceColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-direction/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getServiceDirection getServiceDirection @Nullable open fun getServiceDirection(): String ?","title":"Get service direction"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-direction/#getservicedirection","text":"@Nullable open fun getServiceDirection(): String ?","title":"getServiceDirection"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-name/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getServiceName getServiceName @Nullable open fun getServiceName(): String ?","title":"Get service name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-name/#getservicename","text":"@Nullable open fun getServiceName(): String ?","title":"getServiceName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-number/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getServiceNumber getServiceNumber @Nullable open fun getServiceNumber(): String ?","title":"Get service number"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-number/#getservicenumber","text":"@Nullable open fun getServiceNumber(): String ?","title":"getServiceNumber"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-time/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getServiceTime getServiceTime open fun getServiceTime(): Long In secs.","title":"Get service time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-time/#getservicetime","text":"open fun getServiceTime(): Long In secs.","title":"getServiceTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-trip-id/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getServiceTripId getServiceTripId open fun getServiceTripId(): String !","title":"Get service trip id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-service-trip-id/#getservicetripid","text":"open fun getServiceTripId(): String !","title":"getServiceTripId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-start-stop-code/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getStartStopCode getStartStopCode open fun getStartStopCode(): String !","title":"Get start stop code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-start-stop-code/#getstartstopcode","text":"open fun getStartStopCode(): String !","title":"getStartStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-start-stop-short-name/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getStartStopShortName getStartStopShortName open fun getStartStopShortName(): String !","title":"Get start stop short name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-start-stop-short-name/#getstartstopshortname","text":"open fun getStartStopShortName(): String !","title":"getStartStopShortName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-start-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getStartTimeInSecs getStartTimeInSecs open fun getStartTimeInSecs(): Long","title":"Get start time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-start-time-in-secs/#getstarttimeinsecs","text":"open fun getStartTimeInSecs(): Long","title":"getStartTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-stop-code/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / getStopCode getStopCode open fun getStopCode(): String !","title":"Get stop code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/get-stop-code/#getstopcode","text":"open fun getStopCode(): String !","title":"getStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/has-alerts/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / hasAlerts hasAlerts open fun hasAlerts(): Boolean","title":"Has alerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/has-alerts/#hasalerts","text":"open fun hasAlerts(): Boolean","title":"hasAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/is-before/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / isBefore isBefore open fun isBefore(pointSecs: Long ): Boolean For example, in order to determine a past service trip.","title":"Is before"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/is-before/#isbefore","text":"open fun isBefore(pointSecs: Long ): Boolean For example, in order to determine a past service trip.","title":"isBefore"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/is-favourite/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / isFavourite isFavourite open fun isFavourite(): Boolean open fun isFavourite(isFavourite: Boolean ): Unit","title":"Is favourite"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/is-favourite/#isfavourite","text":"open fun isFavourite(): Boolean open fun isFavourite(isFavourite: Boolean ): Unit","title":"isFavourite"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/is-frequency-based/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / isFrequencyBased isFrequencyBased open fun isFrequencyBased(): Boolean","title":"Is frequency based"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/is-frequency-based/#isfrequencybased","text":"open fun isFrequencyBased(): Boolean","title":"isFrequencyBased"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/pair-identifier/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / pairIdentifier pairIdentifier var pairIdentifier: String ! For A2B-timetable-related stuff.","title":"Pair identifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/pair-identifier/#pairidentifier","text":"var pairIdentifier: String ! For A2B-timetable-related stuff.","title":"pairIdentifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-alert-hash-codes/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setAlertHashCodes setAlertHashCodes open fun setAlertHashCodes(@Nullable alertHashCodes: ArrayList < Long !>?): Unit","title":"Set alert hash codes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-alert-hash-codes/#setalerthashcodes","text":"open fun setAlertHashCodes(@Nullable alertHashCodes: ArrayList < Long !>?): Unit","title":"setAlertHashCodes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-alerts/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setAlerts setAlerts open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit","title":"Set alerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-alerts/#setalerts","text":"open fun setAlerts(alerts: ArrayList < RealtimeAlert !>!): Unit","title":"setAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-end-stop-code/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setEndStopCode setEndStopCode open fun setEndStopCode(endStopCode: String !): Unit","title":"Set end stop code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-end-stop-code/#setendstopcode","text":"open fun setEndStopCode(endStopCode: String !): Unit","title":"setEndStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-end-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setEndTimeInSecs setEndTimeInSecs open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit","title":"Set end time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-end-time-in-secs/#setendtimeinsecs","text":"open fun setEndTimeInSecs(endTimeInSecs: Long ): Unit","title":"setEndTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-frequency/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setFrequency setFrequency open fun setFrequency(freq: Int ): Unit","title":"Set frequency"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-frequency/#setfrequency","text":"open fun setFrequency(freq: Int ): Unit","title":"setFrequency"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-id/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setId setId open fun setId(id: Long ): Unit","title":"Set id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-id/#setid","text":"open fun setId(id: Long ): Unit","title":"setId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-mode-info/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setModeInfo setModeInfo open fun setModeInfo(@Nullable modeInfo: ModeInfo ?): Unit","title":"Set mode info"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-mode-info/#setmodeinfo","text":"open fun setModeInfo(@Nullable modeInfo: ModeInfo ?): Unit","title":"setModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-operator/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setOperator setOperator open fun setOperator(operator: String !): Unit","title":"Set operator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-operator/#setoperator","text":"open fun setOperator(operator: String !): Unit","title":"setOperator"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-real-time-arrival/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setRealTimeArrival setRealTimeArrival open fun setRealTimeArrival(realTimeArrival: Int ): Unit","title":"Set real time arrival"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-real-time-arrival/#setrealtimearrival","text":"open fun setRealTimeArrival(realTimeArrival: Int ): Unit","title":"setRealTimeArrival"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-real-time-departure/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setRealTimeDeparture setRealTimeDeparture open fun setRealTimeDeparture(realTimeDeparture: Int ): Unit","title":"Set real time departure"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-real-time-departure/#setrealtimedeparture","text":"open fun setRealTimeDeparture(realTimeDeparture: Int ): Unit","title":"setRealTimeDeparture"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-real-time-status/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setRealTimeStatus setRealTimeStatus open fun setRealTimeStatus(realTimeStatus: RealTimeStatus !): Unit","title":"Set real time status"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-real-time-status/#setrealtimestatus","text":"open fun setRealTimeStatus(realTimeStatus: RealTimeStatus !): Unit","title":"setRealTimeStatus"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-realtime-vehicle/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setRealtimeVehicle setRealtimeVehicle open fun setRealtimeVehicle(realtimeVehicle: RealTimeVehicle !): Unit","title":"Set realtime vehicle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-realtime-vehicle/#setrealtimevehicle","text":"open fun setRealtimeVehicle(realtimeVehicle: RealTimeVehicle !): Unit","title":"setRealtimeVehicle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-search-string/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setSearchString setSearchString open fun setSearchString(searchString: String !): Unit","title":"Set search string"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-search-string/#setsearchstring","text":"open fun setSearchString(searchString: String !): Unit","title":"setSearchString"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-color/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setServiceColor setServiceColor open fun setServiceColor(serviceColor: ServiceColor !): Unit","title":"Set service color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-color/#setservicecolor","text":"open fun setServiceColor(serviceColor: ServiceColor !): Unit","title":"setServiceColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-direction/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setServiceDirection setServiceDirection open fun setServiceDirection(serviceDirection: String !): Unit","title":"Set service direction"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-direction/#setservicedirection","text":"open fun setServiceDirection(serviceDirection: String !): Unit","title":"setServiceDirection"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-name/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setServiceName setServiceName open fun setServiceName(serviceName: String !): Unit","title":"Set service name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-name/#setservicename","text":"open fun setServiceName(serviceName: String !): Unit","title":"setServiceName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-number/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setServiceNumber setServiceNumber open fun setServiceNumber(serviceNumber: String !): Unit","title":"Set service number"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-number/#setservicenumber","text":"open fun setServiceNumber(serviceNumber: String !): Unit","title":"setServiceNumber"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-time/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setServiceTime setServiceTime open fun setServiceTime(serviceTime: Long ): Unit","title":"Set service time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-time/#setservicetime","text":"open fun setServiceTime(serviceTime: Long ): Unit","title":"setServiceTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-trip-id/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setServiceTripId setServiceTripId open fun setServiceTripId(serviceTripId: String !): Unit","title":"Set service trip id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-service-trip-id/#setservicetripid","text":"open fun setServiceTripId(serviceTripId: String !): Unit","title":"setServiceTripId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-start-stop-code/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setStartStopCode setStartStopCode open fun setStartStopCode(startStopCode: String !): Unit","title":"Set start stop code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-start-stop-code/#setstartstopcode","text":"open fun setStartStopCode(startStopCode: String !): Unit","title":"setStartStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-start-stop-short-name/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setStartStopShortName setStartStopShortName open fun setStartStopShortName(startStopShortName: String !): Unit","title":"Set start stop short name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-start-stop-short-name/#setstartstopshortname","text":"open fun setStartStopShortName(startStopShortName: String !): Unit","title":"setStartStopShortName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-start-time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setStartTimeInSecs setStartTimeInSecs open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit","title":"Set start time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-start-time-in-secs/#setstarttimeinsecs","text":"open fun setStartTimeInSecs(startTimeInSecs: Long ): Unit","title":"setStartTimeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-stop-code/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setStopCode setStopCode open fun setStopCode(stopCode: String !): Unit","title":"Set stop code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-stop-code/#setstopcode","text":"open fun setStopCode(stopCode: String !): Unit","title":"setStopCode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / setWheelchairAccessible setWheelchairAccessible open fun setWheelchairAccessible(@Nullable wheelchairAccessible: Boolean ?): Unit","title":"Set wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/set-wheelchair-accessible/#setwheelchairaccessible","text":"open fun setWheelchairAccessible(@Nullable wheelchairAccessible: Boolean ?): Unit","title":"setWheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/start-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / startStop startStop var startStop: ScheduledStop ! For A2B-timetable-related stuff.","title":"Start stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/start-stop/#startstop","text":"var startStop: ScheduledStop ! For A2B-timetable-related stuff.","title":"startStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/stops/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / stops stops val stops: Var< MutableList < StopInfo !>!>!","title":"Stops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/stops/#stops","text":"val stops: Var< MutableList < StopInfo !>!>!","title":"stops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/to-string/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / toString toString @NotNull open fun toString(): String For debug purpose only.","title":"To string"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/to-string/#tostring","text":"@NotNull open fun toString(): String For debug purpose only.","title":"toString"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / wheelchairAccessible wheelchairAccessible open val wheelchairAccessible: Boolean ?","title":"Wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/wheelchair-accessible/#wheelchairaccessible","text":"open val wheelchairAccessible: Boolean ?","title":"wheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/write-to-parcel/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableEntry / writeToParcel writeToParcel open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"Write to parcel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-entry/write-to-parcel/#writetoparcel","text":"open fun writeToParcel(out: Parcel!, flags: Int ): Unit","title":"writeToParcel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-header-line-item/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableHeaderLineItem TimetableHeaderLineItem open class TimetableHeaderLineItem Constructors Name Summary <init> TimetableHeaderLineItem(serviceNumber: String !, serviceColor: Int !) Properties Name Summary serviceColor var serviceColor: Int ! serviceNumber var serviceNumber: String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-header-line-item/#timetableheaderlineitem","text":"open class TimetableHeaderLineItem","title":"TimetableHeaderLineItem"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-header-line-item/#constructors","text":"Name Summary <init> TimetableHeaderLineItem(serviceNumber: String !, serviceColor: Int !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-header-line-item/#properties","text":"Name Summary serviceColor var serviceColor: Int ! serviceNumber var serviceNumber: String !","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-header-line-item/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableHeaderLineItem / <init> <init> TimetableHeaderLineItem(serviceNumber: String !, serviceColor: Int !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-header-line-item/-init-/#init","text":"TimetableHeaderLineItem(serviceNumber: String !, serviceColor: Int !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-header-line-item/service-color/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableHeaderLineItem / serviceColor serviceColor var serviceColor: Int !","title":"Service color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-header-line-item/service-color/#servicecolor","text":"var serviceColor: Int !","title":"serviceColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-header-line-item/service-number/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TimetableHeaderLineItem / serviceNumber serviceNumber var serviceNumber: String !","title":"Service number"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-timetable-header-line-item/service-number/#servicenumber","text":"var serviceNumber: String !","title":"serviceNumber"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-trip-kit-button/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TripKitButton TripKitButton class TripKitButton Constructors Name Summary <init> TripKitButton(id: String , layoutResourceId: Int ) Properties Name Summary id var id: String layoutResourceId var layoutResourceId: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-trip-kit-button/#tripkitbutton","text":"class TripKitButton","title":"TripKitButton"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-trip-kit-button/#constructors","text":"Name Summary <init> TripKitButton(id: String , layoutResourceId: Int )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-trip-kit-button/#properties","text":"Name Summary id var id: String layoutResourceId var layoutResourceId: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-trip-kit-button/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TripKitButton / <init> <init> TripKitButton(id: String , layoutResourceId: Int )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-trip-kit-button/-init-/#init","text":"TripKitButton(id: String , layoutResourceId: Int )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-trip-kit-button/id/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TripKitButton / id id var id: String","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-trip-kit-button/id/#id","text":"var id: String","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-trip-kit-button/layout-resource-id/","text":"tripkit-android / com.skedgo.tripkit.ui.model / TripKitButton / layoutResourceId layoutResourceId var layoutResourceId: Int","title":"Layout resource id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.model/-trip-kit-button/layout-resource-id/#layoutresourceid","text":"var layoutResourceId: Int","title":"layoutResourceId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/","text":"tripkit-android / com.skedgo.tripkit.ui.provider Package com.skedgo.tripkit.ui.provider Types Name Summary ScheduledStopsProvider open class ScheduledStopsProvider : ContentProvider ServiceStopsProvider class ServiceStopsProvider : ContentProvider TimetableProvider class TimetableProvider : ContentProvider","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/#package-comskedgotripkituiprovider","text":"","title":"Package com.skedgo.tripkit.ui.provider"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/#types","text":"Name Summary ScheduledStopsProvider open class ScheduledStopsProvider : ContentProvider ServiceStopsProvider class ServiceStopsProvider : ContentProvider TimetableProvider class TimetableProvider : ContentProvider","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider ScheduledStopsProvider open class ScheduledStopsProvider : ContentProvider Author Daniel Grech Constructors Name Summary <init> ScheduledStopsProvider() Properties Name Summary AUTHORITY static val AUTHORITY: String ! CONTENT_URI static val CONTENT_URI: Uri! DOWNLOAD_HISTORY_URI static val DOWNLOAD_HISTORY_URI: Uri! LOCATIONS_BY_SCHEDULED_STOP_URI Only valid whilst bulkInserting. static val LOCATIONS_BY_SCHEDULED_STOP_URI: Uri! LOCATIONS_URI Supports insertion only - used for bulk transactions when inserting stops static val LOCATIONS_URI: Uri! Functions Name Summary bulkInsert open fun bulkInsert(uri: Uri!, values: Array <ContentValues!>!): Int delete open fun delete(uri: Uri!, sel: String !, selArgs: Array < String !>!): Int getType open fun getType(uri: Uri!): String ! insert open fun insert(uri: Uri!, values: ContentValues!): Uri! onCreate open fun onCreate(): Boolean query open fun query(uri: Uri!, proj: Array < String !>!, sel: String !, selArgs: Array < String !>!, sort: String !): Cursor! update open fun update(uri: Uri!, values: ContentValues!, sel: String !, selArgs: Array < String !>!): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/#scheduledstopsprovider","text":"open class ScheduledStopsProvider : ContentProvider Author Daniel Grech","title":"ScheduledStopsProvider"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/#constructors","text":"Name Summary <init> ScheduledStopsProvider()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/#properties","text":"Name Summary AUTHORITY static val AUTHORITY: String ! CONTENT_URI static val CONTENT_URI: Uri! DOWNLOAD_HISTORY_URI static val DOWNLOAD_HISTORY_URI: Uri! LOCATIONS_BY_SCHEDULED_STOP_URI Only valid whilst bulkInserting. static val LOCATIONS_BY_SCHEDULED_STOP_URI: Uri! LOCATIONS_URI Supports insertion only - used for bulk transactions when inserting stops static val LOCATIONS_URI: Uri!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/#functions","text":"Name Summary bulkInsert open fun bulkInsert(uri: Uri!, values: Array <ContentValues!>!): Int delete open fun delete(uri: Uri!, sel: String !, selArgs: Array < String !>!): Int getType open fun getType(uri: Uri!): String ! insert open fun insert(uri: Uri!, values: ContentValues!): Uri! onCreate open fun onCreate(): Boolean query open fun query(uri: Uri!, proj: Array < String !>!, sel: String !, selArgs: Array < String !>!, sort: String !): Cursor! update open fun update(uri: Uri!, values: ContentValues!, sel: String !, selArgs: Array < String !>!): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-a-u-t-h-o-r-i-t-y/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / AUTHORITY AUTHORITY static val AUTHORITY: String !","title":" a u t h o r i t y"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-a-u-t-h-o-r-i-t-y/#authority","text":"static val AUTHORITY: String !","title":"AUTHORITY"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-c-o-n-t-e-n-t_-u-r-i/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / CONTENT_URI CONTENT_URI static val CONTENT_URI: Uri!","title":" c o n t e n t  u r i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-c-o-n-t-e-n-t_-u-r-i/#content_uri","text":"static val CONTENT_URI: Uri!","title":"CONTENT_URI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-d-o-w-n-l-o-a-d_-h-i-s-t-o-r-y_-u-r-i/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / DOWNLOAD_HISTORY_URI DOWNLOAD_HISTORY_URI static val DOWNLOAD_HISTORY_URI: Uri!","title":" d o w n l o a d  h i s t o r y  u r i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-d-o-w-n-l-o-a-d_-h-i-s-t-o-r-y_-u-r-i/#download_history_uri","text":"static val DOWNLOAD_HISTORY_URI: Uri!","title":"DOWNLOAD_HISTORY_URI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / <init> <init> ScheduledStopsProvider() Author Daniel Grech","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-init-/#init","text":"ScheduledStopsProvider() Author Daniel Grech","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-l-o-c-a-t-i-o-n-s_-b-y_-s-c-h-e-d-u-l-e-d_-s-t-o-p_-u-r-i/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / LOCATIONS_BY_SCHEDULED_STOP_URI LOCATIONS_BY_SCHEDULED_STOP_URI static val LOCATIONS_BY_SCHEDULED_STOP_URI: Uri! Only valid whilst bulkInserting. Groups locations by their scheduled_stop_id rather than id","title":" l o c a t i o n s  b y  s c h e d u l e d  s t o p  u r i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-l-o-c-a-t-i-o-n-s_-b-y_-s-c-h-e-d-u-l-e-d_-s-t-o-p_-u-r-i/#locations_by_scheduled_stop_uri","text":"static val LOCATIONS_BY_SCHEDULED_STOP_URI: Uri! Only valid whilst bulkInserting. Groups locations by their scheduled_stop_id rather than id","title":"LOCATIONS_BY_SCHEDULED_STOP_URI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-l-o-c-a-t-i-o-n-s_-u-r-i/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / LOCATIONS_URI LOCATIONS_URI static val LOCATIONS_URI: Uri! Supports insertion only - used for bulk transactions when inserting stops","title":" l o c a t i o n s  u r i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/-l-o-c-a-t-i-o-n-s_-u-r-i/#locations_uri","text":"static val LOCATIONS_URI: Uri! Supports insertion only - used for bulk transactions when inserting stops","title":"LOCATIONS_URI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/bulk-insert/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / bulkInsert bulkInsert open fun bulkInsert(uri: Uri!, values: Array <ContentValues!>!): Int","title":"Bulk insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/bulk-insert/#bulkinsert","text":"open fun bulkInsert(uri: Uri!, values: Array <ContentValues!>!): Int","title":"bulkInsert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/delete/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / delete delete open fun delete(uri: Uri!, sel: String !, selArgs: Array < String !>!): Int","title":"Delete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/delete/#delete","text":"open fun delete(uri: Uri!, sel: String !, selArgs: Array < String !>!): Int","title":"delete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/get-type/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / getType getType open fun getType(uri: Uri!): String !","title":"Get type"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/get-type/#gettype","text":"open fun getType(uri: Uri!): String !","title":"getType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/insert/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / insert insert open fun insert(uri: Uri!, values: ContentValues!): Uri!","title":"Insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/insert/#insert","text":"open fun insert(uri: Uri!, values: ContentValues!): Uri!","title":"insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / onCreate onCreate open fun onCreate(): Boolean","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/on-create/#oncreate","text":"open fun onCreate(): Boolean","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/query/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / query query open fun query(uri: Uri!, proj: Array < String !>!, sel: String !, selArgs: Array < String !>!, sort: String !): Cursor!","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/query/#query","text":"open fun query(uri: Uri!, proj: Array < String !>!, sel: String !, selArgs: Array < String !>!, sort: String !): Cursor!","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/update/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ScheduledStopsProvider / update update open fun update(uri: Uri!, values: ContentValues!, sel: String !, selArgs: Array < String !>!): Int","title":"Update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-scheduled-stops-provider/update/#update","text":"open fun update(uri: Uri!, values: ContentValues!, sel: String !, selArgs: Array < String !>!): Int","title":"update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider ServiceStopsProvider class ServiceStopsProvider : ContentProvider Constructors Name Summary <init> ServiceStopsProvider() Functions Name Summary bulkInsert fun bulkInsert(uri: Uri, values: Array <ContentValues>): Int delete fun delete(uri: Uri, sel: String ?, selArgs: Array < String >?): Int getType fun getType(uri: Uri): String ? insert fun insert(uri: Uri, values: ContentValues?): Uri? onCreate fun onCreate(): Boolean query fun query(uri: Uri, proj: Array < String >?, sel: String ?, selArgs: Array < String >?, sort: String ?): Cursor update fun update(uri: Uri, values: ContentValues?, sel: String ?, selArgs: Array < String >?): Int Companion Object Properties Name Summary AUTHORITY val AUTHORITY: String LOCATIONS_URI val LOCATIONS_URI: Uri! SHAPES_URI val SHAPES_URI: Uri! STOPS_BY_SERVICE_URI val STOPS_BY_SERVICE_URI: Uri! STOPS_URI Supports insertion only - used for batch transactions when inserting stops val STOPS_URI: Uri!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/#servicestopsprovider","text":"class ServiceStopsProvider : ContentProvider","title":"ServiceStopsProvider"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/#constructors","text":"Name Summary <init> ServiceStopsProvider()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/#functions","text":"Name Summary bulkInsert fun bulkInsert(uri: Uri, values: Array <ContentValues>): Int delete fun delete(uri: Uri, sel: String ?, selArgs: Array < String >?): Int getType fun getType(uri: Uri): String ? insert fun insert(uri: Uri, values: ContentValues?): Uri? onCreate fun onCreate(): Boolean query fun query(uri: Uri, proj: Array < String >?, sel: String ?, selArgs: Array < String >?, sort: String ?): Cursor update fun update(uri: Uri, values: ContentValues?, sel: String ?, selArgs: Array < String >?): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/#companion-object-properties","text":"Name Summary AUTHORITY val AUTHORITY: String LOCATIONS_URI val LOCATIONS_URI: Uri! SHAPES_URI val SHAPES_URI: Uri! STOPS_BY_SERVICE_URI val STOPS_BY_SERVICE_URI: Uri! STOPS_URI Supports insertion only - used for batch transactions when inserting stops val STOPS_URI: Uri!","title":"Companion Object Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-a-u-t-h-o-r-i-t-y/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / AUTHORITY AUTHORITY val AUTHORITY: String","title":" a u t h o r i t y"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-a-u-t-h-o-r-i-t-y/#authority","text":"val AUTHORITY: String","title":"AUTHORITY"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / <init> <init> ServiceStopsProvider()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-init-/#init","text":"ServiceStopsProvider()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-l-o-c-a-t-i-o-n-s_-u-r-i/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / LOCATIONS_URI LOCATIONS_URI val LOCATIONS_URI: Uri!","title":" l o c a t i o n s  u r i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-l-o-c-a-t-i-o-n-s_-u-r-i/#locations_uri","text":"val LOCATIONS_URI: Uri!","title":"LOCATIONS_URI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-s-h-a-p-e-s_-u-r-i/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / SHAPES_URI SHAPES_URI val SHAPES_URI: Uri!","title":" s h a p e s  u r i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-s-h-a-p-e-s_-u-r-i/#shapes_uri","text":"val SHAPES_URI: Uri!","title":"SHAPES_URI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-s-t-o-p-s_-b-y_-s-e-r-v-i-c-e_-u-r-i/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / STOPS_BY_SERVICE_URI STOPS_BY_SERVICE_URI val STOPS_BY_SERVICE_URI: Uri!","title":" s t o p s  b y  s e r v i c e  u r i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-s-t-o-p-s_-b-y_-s-e-r-v-i-c-e_-u-r-i/#stops_by_service_uri","text":"val STOPS_BY_SERVICE_URI: Uri!","title":"STOPS_BY_SERVICE_URI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-s-t-o-p-s_-u-r-i/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / STOPS_URI STOPS_URI val STOPS_URI: Uri! Supports insertion only - used for batch transactions when inserting stops","title":" s t o p s  u r i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/-s-t-o-p-s_-u-r-i/#stops_uri","text":"val STOPS_URI: Uri! Supports insertion only - used for batch transactions when inserting stops","title":"STOPS_URI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/bulk-insert/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / bulkInsert bulkInsert fun bulkInsert(uri: Uri, values: Array <ContentValues>): Int","title":"Bulk insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/bulk-insert/#bulkinsert","text":"fun bulkInsert(uri: Uri, values: Array <ContentValues>): Int","title":"bulkInsert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/delete/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / delete delete fun delete(uri: Uri, sel: String ?, selArgs: Array < String >?): Int","title":"Delete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/delete/#delete","text":"fun delete(uri: Uri, sel: String ?, selArgs: Array < String >?): Int","title":"delete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/get-type/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / getType getType fun getType(uri: Uri): String ?","title":"Get type"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/get-type/#gettype","text":"fun getType(uri: Uri): String ?","title":"getType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/insert/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / insert insert fun insert(uri: Uri, values: ContentValues?): Uri?","title":"Insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/insert/#insert","text":"fun insert(uri: Uri, values: ContentValues?): Uri?","title":"insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / onCreate onCreate fun onCreate(): Boolean","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/on-create/#oncreate","text":"fun onCreate(): Boolean","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/query/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / query query fun query(uri: Uri, proj: Array < String >?, sel: String ?, selArgs: Array < String >?, sort: String ?): Cursor","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/query/#query","text":"fun query(uri: Uri, proj: Array < String >?, sel: String ?, selArgs: Array < String >?, sort: String ?): Cursor","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/update/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / ServiceStopsProvider / update update fun update(uri: Uri, values: ContentValues?, sel: String ?, selArgs: Array < String >?): Int","title":"Update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-service-stops-provider/update/#update","text":"fun update(uri: Uri, values: ContentValues?, sel: String ?, selArgs: Array < String >?): Int","title":"update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider TimetableProvider class TimetableProvider : ContentProvider Constructors Name Summary <init> TimetableProvider() Properties Name Summary mDbHelper lateinit var mDbHelper: DbHelper scheduledServiceRealtimeInfoDao lateinit var scheduledServiceRealtimeInfoDao: ScheduledServiceRealtimeInfoDao Functions Name Summary bulkInsert fun bulkInsert(uri: Uri, values: Array <ContentValues>): Int delete fun delete(uri: Uri, sel: String ?, selArgs: Array < String >?): Int getType fun getType(uri: Uri): String ? insert fun insert(uri: Uri, values: ContentValues?): Uri? onCreate fun onCreate(): Boolean query fun query(uri: Uri, projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?): Cursor? update fun update(uri: Uri, values: ContentValues?, sel: String ?, selArgs: Array < String >?): Int Companion Object Properties Name Summary AUTHORITY val AUTHORITY: String REMINDERS_URI val REMINDERS_URI: Uri! SCHEDULED_SERVICES_URI val SCHEDULED_SERVICES_URI: Uri! SERVICE_ALERT_URI val SERVICE_ALERT_URI: Uri!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/#timetableprovider","text":"class TimetableProvider : ContentProvider","title":"TimetableProvider"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/#constructors","text":"Name Summary <init> TimetableProvider()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/#properties","text":"Name Summary mDbHelper lateinit var mDbHelper: DbHelper scheduledServiceRealtimeInfoDao lateinit var scheduledServiceRealtimeInfoDao: ScheduledServiceRealtimeInfoDao","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/#functions","text":"Name Summary bulkInsert fun bulkInsert(uri: Uri, values: Array <ContentValues>): Int delete fun delete(uri: Uri, sel: String ?, selArgs: Array < String >?): Int getType fun getType(uri: Uri): String ? insert fun insert(uri: Uri, values: ContentValues?): Uri? onCreate fun onCreate(): Boolean query fun query(uri: Uri, projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?): Cursor? update fun update(uri: Uri, values: ContentValues?, sel: String ?, selArgs: Array < String >?): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/#companion-object-properties","text":"Name Summary AUTHORITY val AUTHORITY: String REMINDERS_URI val REMINDERS_URI: Uri! SCHEDULED_SERVICES_URI val SCHEDULED_SERVICES_URI: Uri! SERVICE_ALERT_URI val SERVICE_ALERT_URI: Uri!","title":"Companion Object Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/-a-u-t-h-o-r-i-t-y/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / AUTHORITY AUTHORITY val AUTHORITY: String","title":" a u t h o r i t y"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/-a-u-t-h-o-r-i-t-y/#authority","text":"val AUTHORITY: String","title":"AUTHORITY"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / <init> <init> TimetableProvider()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/-init-/#init","text":"TimetableProvider()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/-r-e-m-i-n-d-e-r-s_-u-r-i/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / REMINDERS_URI REMINDERS_URI val REMINDERS_URI: Uri!","title":" r e m i n d e r s  u r i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/-r-e-m-i-n-d-e-r-s_-u-r-i/#reminders_uri","text":"val REMINDERS_URI: Uri!","title":"REMINDERS_URI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/-s-c-h-e-d-u-l-e-d_-s-e-r-v-i-c-e-s_-u-r-i/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / SCHEDULED_SERVICES_URI SCHEDULED_SERVICES_URI val SCHEDULED_SERVICES_URI: Uri!","title":" s c h e d u l e d  s e r v i c e s  u r i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/-s-c-h-e-d-u-l-e-d_-s-e-r-v-i-c-e-s_-u-r-i/#scheduled_services_uri","text":"val SCHEDULED_SERVICES_URI: Uri!","title":"SCHEDULED_SERVICES_URI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/-s-e-r-v-i-c-e_-a-l-e-r-t_-u-r-i/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / SERVICE_ALERT_URI SERVICE_ALERT_URI val SERVICE_ALERT_URI: Uri!","title":" s e r v i c e  a l e r t  u r i"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/-s-e-r-v-i-c-e_-a-l-e-r-t_-u-r-i/#service_alert_uri","text":"val SERVICE_ALERT_URI: Uri!","title":"SERVICE_ALERT_URI"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/bulk-insert/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / bulkInsert bulkInsert fun bulkInsert(uri: Uri, values: Array <ContentValues>): Int","title":"Bulk insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/bulk-insert/#bulkinsert","text":"fun bulkInsert(uri: Uri, values: Array <ContentValues>): Int","title":"bulkInsert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/delete/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / delete delete fun delete(uri: Uri, sel: String ?, selArgs: Array < String >?): Int","title":"Delete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/delete/#delete","text":"fun delete(uri: Uri, sel: String ?, selArgs: Array < String >?): Int","title":"delete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/get-type/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / getType getType fun getType(uri: Uri): String ?","title":"Get type"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/get-type/#gettype","text":"fun getType(uri: Uri): String ?","title":"getType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/insert/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / insert insert fun insert(uri: Uri, values: ContentValues?): Uri?","title":"Insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/insert/#insert","text":"fun insert(uri: Uri, values: ContentValues?): Uri?","title":"insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/m-db-helper/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / mDbHelper mDbHelper lateinit var mDbHelper: DbHelper","title":"M db helper"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/m-db-helper/#mdbhelper","text":"lateinit var mDbHelper: DbHelper","title":"mDbHelper"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / onCreate onCreate fun onCreate(): Boolean","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/on-create/#oncreate","text":"fun onCreate(): Boolean","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/query/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / query query fun query(uri: Uri, projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?): Cursor?","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/query/#query","text":"fun query(uri: Uri, projection: Array < String >?, selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?): Cursor?","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/scheduled-service-realtime-info-dao/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / scheduledServiceRealtimeInfoDao scheduledServiceRealtimeInfoDao lateinit var scheduledServiceRealtimeInfoDao: ScheduledServiceRealtimeInfoDao","title":"Scheduled service realtime info dao"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/scheduled-service-realtime-info-dao/#scheduledservicerealtimeinfodao","text":"lateinit var scheduledServiceRealtimeInfoDao: ScheduledServiceRealtimeInfoDao","title":"scheduledServiceRealtimeInfoDao"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/update/","text":"tripkit-android / com.skedgo.tripkit.ui.provider / TimetableProvider / update update fun update(uri: Uri, values: ContentValues?, sel: String ?, selArgs: Array < String >?): Int","title":"Update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.provider/-timetable-provider/update/#update","text":"fun update(uri: Uri, values: ContentValues?, sel: String ?, selArgs: Array < String >?): Int","title":"update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime Package com.skedgo.tripkit.ui.realtime Types Name Summary RealTimeChoreographer open class RealTimeChoreographer RealTimeChoreographerViewModel class RealTimeChoreographerViewModel : ViewModel RealTimeViewModelFactory class RealTimeViewModelFactory : Factory","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/#package-comskedgotripkituirealtime","text":"","title":"Package com.skedgo.tripkit.ui.realtime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/#types","text":"Name Summary RealTimeChoreographer open class RealTimeChoreographer RealTimeChoreographerViewModel class RealTimeChoreographerViewModel : ViewModel RealTimeViewModelFactory class RealTimeViewModelFactory : Factory","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime / RealTimeChoreographer RealTimeChoreographer open class RealTimeChoreographer Constructors Name Summary <init> RealTimeChoreographer(realTimeRepository: RealTimeRepository) Functions Name Summary getRealTimeResults open fun getRealTimeResults(region: Region , elements: List < IRealTimeElement >): Observable< List < RealTimeVehicle >> getRealTimeResultsFromCleanElements open fun getRealTimeResultsFromCleanElements(region: Region , elements: List < IRealTimeElement ?>): Observable< List < RealTimeVehicle >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer/#realtimechoreographer","text":"open class RealTimeChoreographer","title":"RealTimeChoreographer"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer/#constructors","text":"Name Summary <init> RealTimeChoreographer(realTimeRepository: RealTimeRepository)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer/#functions","text":"Name Summary getRealTimeResults open fun getRealTimeResults(region: Region , elements: List < IRealTimeElement >): Observable< List < RealTimeVehicle >> getRealTimeResultsFromCleanElements open fun getRealTimeResultsFromCleanElements(region: Region , elements: List < IRealTimeElement ?>): Observable< List < RealTimeVehicle >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime / RealTimeChoreographer / <init> <init> RealTimeChoreographer(realTimeRepository: RealTimeRepository)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer/-init-/#init","text":"RealTimeChoreographer(realTimeRepository: RealTimeRepository)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer/get-real-time-results-from-clean-elements/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime / RealTimeChoreographer / getRealTimeResultsFromCleanElements getRealTimeResultsFromCleanElements open fun getRealTimeResultsFromCleanElements(region: Region , elements: List < IRealTimeElement ?>): Observable< List < RealTimeVehicle >>","title":"Get real time results from clean elements"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer/get-real-time-results-from-clean-elements/#getrealtimeresultsfromcleanelements","text":"open fun getRealTimeResultsFromCleanElements(region: Region , elements: List < IRealTimeElement ?>): Observable< List < RealTimeVehicle >>","title":"getRealTimeResultsFromCleanElements"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer/get-real-time-results/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime / RealTimeChoreographer / getRealTimeResults getRealTimeResults open fun getRealTimeResults(region: Region , elements: List < IRealTimeElement >): Observable< List < RealTimeVehicle >>","title":"Get real time results"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer/get-real-time-results/#getrealtimeresults","text":"open fun getRealTimeResults(region: Region , elements: List < IRealTimeElement >): Observable< List < RealTimeVehicle >>","title":"getRealTimeResults"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime / RealTimeChoreographerViewModel RealTimeChoreographerViewModel class RealTimeChoreographerViewModel : ViewModel Constructors Name Summary <init> RealTimeChoreographerViewModel(realTimeChoreographer: RealTimeChoreographer ) Functions Name Summary getRealTimeVehicles fun getRealTimeVehicles(region: Region , services: List < IRealTimeElement >): Observable< List < RealTimeVehicle >> realTimeVehicleObservable fun realTimeVehicleObservable(service: IRealTimeElement ): Observable< RealTimeVehicle >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer-view-model/#realtimechoreographerviewmodel","text":"class RealTimeChoreographerViewModel : ViewModel","title":"RealTimeChoreographerViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer-view-model/#constructors","text":"Name Summary <init> RealTimeChoreographerViewModel(realTimeChoreographer: RealTimeChoreographer )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer-view-model/#functions","text":"Name Summary getRealTimeVehicles fun getRealTimeVehicles(region: Region , services: List < IRealTimeElement >): Observable< List < RealTimeVehicle >> realTimeVehicleObservable fun realTimeVehicleObservable(service: IRealTimeElement ): Observable< RealTimeVehicle >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime / RealTimeChoreographerViewModel / <init> <init> RealTimeChoreographerViewModel(realTimeChoreographer: RealTimeChoreographer )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer-view-model/-init-/#init","text":"RealTimeChoreographerViewModel(realTimeChoreographer: RealTimeChoreographer )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer-view-model/get-real-time-vehicles/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime / RealTimeChoreographerViewModel / getRealTimeVehicles getRealTimeVehicles fun getRealTimeVehicles(region: Region , services: List < IRealTimeElement >): Observable< List < RealTimeVehicle >>","title":"Get real time vehicles"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer-view-model/get-real-time-vehicles/#getrealtimevehicles","text":"fun getRealTimeVehicles(region: Region , services: List < IRealTimeElement >): Observable< List < RealTimeVehicle >>","title":"getRealTimeVehicles"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer-view-model/real-time-vehicle-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime / RealTimeChoreographerViewModel / realTimeVehicleObservable realTimeVehicleObservable fun realTimeVehicleObservable(service: IRealTimeElement ): Observable< RealTimeVehicle >","title":"Real time vehicle observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-choreographer-view-model/real-time-vehicle-observable/#realtimevehicleobservable","text":"fun realTimeVehicleObservable(service: IRealTimeElement ): Observable< RealTimeVehicle >","title":"realTimeVehicleObservable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-view-model-factory/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime / RealTimeViewModelFactory RealTimeViewModelFactory class RealTimeViewModelFactory : Factory Constructors Name Summary <init> RealTimeViewModelFactory(realTimeChoreographerVMProvider: Provider< RealTimeChoreographerViewModel >) Functions Name Summary create fun <T : ViewModel> create(modelClass: Class <T>): T","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-view-model-factory/#realtimeviewmodelfactory","text":"class RealTimeViewModelFactory : Factory","title":"RealTimeViewModelFactory"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-view-model-factory/#constructors","text":"Name Summary <init> RealTimeViewModelFactory(realTimeChoreographerVMProvider: Provider< RealTimeChoreographerViewModel >)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-view-model-factory/#functions","text":"Name Summary create fun <T : ViewModel> create(modelClass: Class <T>): T","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-view-model-factory/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime / RealTimeViewModelFactory / <init> <init> RealTimeViewModelFactory(realTimeChoreographerVMProvider: Provider< RealTimeChoreographerViewModel >)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-view-model-factory/-init-/#init","text":"RealTimeViewModelFactory(realTimeChoreographerVMProvider: Provider< RealTimeChoreographerViewModel >)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-view-model-factory/create/","text":"tripkit-android / com.skedgo.tripkit.ui.realtime / RealTimeViewModelFactory / create create fun <T : ViewModel> create(modelClass: Class <T>): T","title":"Create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.realtime/-real-time-view-model-factory/create/#create","text":"fun <T : ViewModel> create(modelClass: Class <T>): T","title":"create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput Package com.skedgo.tripkit.ui.routeinput Types Name Summary RouteInputView A widget for display start and destination locations, as well as departure/arrival times and a \"Route\" button. class RouteInputView : CardView, OnClickListener RouteInputViewModel class RouteInputViewModel : RxViewModel","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/#package-comskedgotripkituirouteinput","text":"","title":"Package com.skedgo.tripkit.ui.routeinput"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/#types","text":"Name Summary RouteInputView A widget for display start and destination locations, as well as departure/arrival times and a \"Route\" button. class RouteInputView : CardView, OnClickListener RouteInputViewModel class RouteInputViewModel : RxViewModel","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView RouteInputView class RouteInputView : CardView, OnClickListener A widget for display start and destination locations, as well as departure/arrival times and a \"Route\" button. Types Name Summary OnRouteWidgetClickedListener Interface definition for a callback that is called when one of several widgets are clicked. interface OnRouteWidgetClickedListener Constructors Name Summary <init> RouteInputView(context: Context) RouteInputView(context: Context, attrs: AttributeSet?) Functions Name Summary onClick fun onClick(view: View?): Unit setDestinationText Sets the displayed text in the Destination field. fun setDestinationText(text: String ): Unit setOnRouteWidgetClickedListener Register a callback to be invoked when a widget is clicked. fun setOnRouteWidgetClickedListener(callback: OnRouteWidgetClickedListener): Unit fun setOnRouteWidgetClickedListener(listener: (Widget) -> Unit ): Unit setStartText Sets the displayed text in the Start field. fun setStartText(text: String ): Unit setTimeButton Sets the displayed text on the Time button. fun setTimeButton(text: String ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/#routeinputview","text":"class RouteInputView : CardView, OnClickListener A widget for display start and destination locations, as well as departure/arrival times and a \"Route\" button.","title":"RouteInputView"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/#types","text":"Name Summary OnRouteWidgetClickedListener Interface definition for a callback that is called when one of several widgets are clicked. interface OnRouteWidgetClickedListener","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/#constructors","text":"Name Summary <init> RouteInputView(context: Context) RouteInputView(context: Context, attrs: AttributeSet?)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/#functions","text":"Name Summary onClick fun onClick(view: View?): Unit setDestinationText Sets the displayed text in the Destination field. fun setDestinationText(text: String ): Unit setOnRouteWidgetClickedListener Register a callback to be invoked when a widget is clicked. fun setOnRouteWidgetClickedListener(callback: OnRouteWidgetClickedListener): Unit fun setOnRouteWidgetClickedListener(listener: (Widget) -> Unit ): Unit setStartText Sets the displayed text in the Start field. fun setStartText(text: String ): Unit setTimeButton Sets the displayed text on the Time button. fun setTimeButton(text: String ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / <init> <init> RouteInputView(context: Context) RouteInputView(context: Context, attrs: AttributeSet?)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-init-/#init","text":"RouteInputView(context: Context) RouteInputView(context: Context, attrs: AttributeSet?)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/on-click/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / onClick onClick fun onClick(view: View?): Unit","title":"On click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/on-click/#onclick","text":"fun onClick(view: View?): Unit","title":"onClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-destination-text/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / setDestinationText setDestinationText fun setDestinationText(text: String ): Unit Sets the displayed text in the Destination field. Parameters text - The text to display, which will most likely be the name of a location.","title":"Set destination text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-destination-text/#setdestinationtext","text":"fun setDestinationText(text: String ): Unit Sets the displayed text in the Destination field.","title":"setDestinationText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-destination-text/#parameters","text":"text - The text to display, which will most likely be the name of a location.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-on-route-widget-clicked-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / setOnRouteWidgetClickedListener setOnRouteWidgetClickedListener fun setOnRouteWidgetClickedListener(callback: OnRouteWidgetClickedListener): Unit Register a callback to be invoked when a widget is clicked. Parameters callback - The callback that will be run. fun setOnRouteWidgetClickedListener(listener: (Widget) -> Unit ): Unit","title":"Set on route widget clicked listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-on-route-widget-clicked-listener/#setonroutewidgetclickedlistener","text":"fun setOnRouteWidgetClickedListener(callback: OnRouteWidgetClickedListener): Unit Register a callback to be invoked when a widget is clicked.","title":"setOnRouteWidgetClickedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-on-route-widget-clicked-listener/#parameters","text":"callback - The callback that will be run. fun setOnRouteWidgetClickedListener(listener: (Widget) -> Unit ): Unit","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-start-text/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / setStartText setStartText fun setStartText(text: String ): Unit Sets the displayed text in the Start field. Parameters text - The text to display, which will most likely be the name of a location.","title":"Set start text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-start-text/#setstarttext","text":"fun setStartText(text: String ): Unit Sets the displayed text in the Start field.","title":"setStartText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-start-text/#parameters","text":"text - The text to display, which will most likely be the name of a location.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-time-button/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / setTimeButton setTimeButton fun setTimeButton(text: String ): Unit Sets the displayed text on the Time button. Parameters text - The text to display","title":"Set time button"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-time-button/#settimebutton","text":"fun setTimeButton(text: String ): Unit Sets the displayed text on the Time button.","title":"setTimeButton"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/set-time-button/#parameters","text":"text - The text to display","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / OnRouteWidgetClickedListener OnRouteWidgetClickedListener interface OnRouteWidgetClickedListener Interface definition for a callback that is called when one of several widgets are clicked. Types Name Summary Widget enum class Widget Functions Name Summary widgetClicked Called when the button is clicked;. abstract fun widgetClicked(button: Widget): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/#onroutewidgetclickedlistener","text":"interface OnRouteWidgetClickedListener Interface definition for a callback that is called when one of several widgets are clicked.","title":"OnRouteWidgetClickedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/#types","text":"Name Summary Widget enum class Widget","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/#functions","text":"Name Summary widgetClicked Called when the button is clicked;. abstract fun widgetClicked(button: Widget): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/widget-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / OnRouteWidgetClickedListener / widgetClicked widgetClicked abstract fun widgetClicked(button: Widget): Unit Called when the button is clicked;. Parameters button - The {@link #WhichButton} button} which was clicked.","title":"Widget clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/widget-clicked/#widgetclicked","text":"abstract fun widgetClicked(button: Widget): Unit Called when the button is clicked;.","title":"widgetClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/widget-clicked/#parameters","text":"button - The {@link #WhichButton} button} which was clicked.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / OnRouteWidgetClickedListener / Widget Widget enum class Widget Enum Values Name Summary START The \"Start\" EditText. DESTINATION The \"Destination\" EditText. SWAPPED The \"Swap Start and Destination\" button. TIME The \"Set Time\" button. ROUTE The \"Route\" button.","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/#widget","text":"enum class Widget","title":"Widget"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/#enum-values","text":"Name Summary START The \"Start\" EditText. DESTINATION The \"Destination\" EditText. SWAPPED The \"Swap Start and Destination\" button. TIME The \"Set Time\" button. ROUTE The \"Route\" button.","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/-d-e-s-t-i-n-a-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / OnRouteWidgetClickedListener / Widget / DESTINATION DESTINATION DESTINATION The \"Destination\" EditText.","title":" d e s t i n a t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/-d-e-s-t-i-n-a-t-i-o-n/#destination","text":"DESTINATION The \"Destination\" EditText.","title":"DESTINATION"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/-r-o-u-t-e/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / OnRouteWidgetClickedListener / Widget / ROUTE ROUTE ROUTE The \"Route\" button.","title":" r o u t e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/-r-o-u-t-e/#route","text":"ROUTE The \"Route\" button.","title":"ROUTE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/-s-t-a-r-t/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / OnRouteWidgetClickedListener / Widget / START START START The \"Start\" EditText.","title":" s t a r t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/-s-t-a-r-t/#start","text":"START The \"Start\" EditText.","title":"START"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/-s-w-a-p-p-e-d/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / OnRouteWidgetClickedListener / Widget / SWAPPED SWAPPED SWAPPED The \"Swap Start and Destination\" button.","title":" s w a p p e d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/-s-w-a-p-p-e-d/#swapped","text":"SWAPPED The \"Swap Start and Destination\" button.","title":"SWAPPED"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputView / OnRouteWidgetClickedListener / Widget / TIME TIME TIME The \"Set Time\" button.","title":" t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view/-on-route-widget-clicked-listener/-widget/-t-i-m-e/#time","text":"TIME The \"Set Time\" button.","title":"TIME"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputViewModel RouteInputViewModel class RouteInputViewModel : RxViewModel Constructors Name Summary <init> RouteInputViewModel()","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view-model/#routeinputviewmodel","text":"class RouteInputViewModel : RxViewModel","title":"RouteInputViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view-model/#constructors","text":"Name Summary <init> RouteInputViewModel()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routeinput / RouteInputViewModel / <init> <init> RouteInputViewModel()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routeinput/-route-input-view-model/-init-/#init","text":"RouteInputViewModel()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/","text":"tripkit-android / com.skedgo.tripkit.ui.routing Package com.skedgo.tripkit.ui.routing Types Name Summary GetRoutingConfig interface GetRoutingConfig GetSortedTripGroups open class GetSortedTripGroups GetSortedTripGroupsWithRoutingStatus class GetSortedTripGroupsWithRoutingStatus GetStopsByTravelType open class GetStopsByTravelType PerformRouting FIXME: Should move this into TripGoDomainLegacy module. open class PerformRouting PreferredTransferTimeRepository interface PreferredTransferTimeRepository QueryLocationResolver open class QueryLocationResolver : Function< Query , Observable< Query >> RoutingConfig data class RoutingConfig SegmentCameraUpdate sealed class SegmentCameraUpdate SegmentCameraUpdateMapper open class SegmentCameraUpdateMapper SegmentCameraUpdateRepository open class SegmentCameraUpdateRepository TripGroupsSorter open class TripGroupsSorter Extensions for External Classes Name Summary com.google.android.gms.maps.GoogleMap kotlin.collections.List","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/#package-comskedgotripkituirouting","text":"","title":"Package com.skedgo.tripkit.ui.routing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/#types","text":"Name Summary GetRoutingConfig interface GetRoutingConfig GetSortedTripGroups open class GetSortedTripGroups GetSortedTripGroupsWithRoutingStatus class GetSortedTripGroupsWithRoutingStatus GetStopsByTravelType open class GetStopsByTravelType PerformRouting FIXME: Should move this into TripGoDomainLegacy module. open class PerformRouting PreferredTransferTimeRepository interface PreferredTransferTimeRepository QueryLocationResolver open class QueryLocationResolver : Function< Query , Observable< Query >> RoutingConfig data class RoutingConfig SegmentCameraUpdate sealed class SegmentCameraUpdate SegmentCameraUpdateMapper open class SegmentCameraUpdateMapper SegmentCameraUpdateRepository open class SegmentCameraUpdateRepository TripGroupsSorter open class TripGroupsSorter","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/#extensions-for-external-classes","text":"Name Summary com.google.android.gms.maps.GoogleMap kotlin.collections.List","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-routing-config/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / GetRoutingConfig GetRoutingConfig interface GetRoutingConfig Functions Name Summary execute abstract fun execute(): Observable< RoutingConfig >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-routing-config/#getroutingconfig","text":"interface GetRoutingConfig","title":"GetRoutingConfig"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-routing-config/#functions","text":"Name Summary execute abstract fun execute(): Observable< RoutingConfig >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-routing-config/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / GetRoutingConfig / execute execute abstract fun execute(): Observable< RoutingConfig >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-routing-config/execute/#execute","text":"abstract fun execute(): Observable< RoutingConfig >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / GetSortedTripGroups GetSortedTripGroups open class GetSortedTripGroups Functions Name Summary execute open fun execute(queryId: String , arriveBy: Long , sortOrder: Int ): Observable< List < TripGroup >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups/#getsortedtripgroups","text":"open class GetSortedTripGroups","title":"GetSortedTripGroups"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups/#functions","text":"Name Summary execute open fun execute(queryId: String , arriveBy: Long , sortOrder: Int ): Observable< List < TripGroup >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / GetSortedTripGroups / execute execute open fun execute(queryId: String , arriveBy: Long , sortOrder: Int ): Observable< List < TripGroup >>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups/execute/#execute","text":"open fun execute(queryId: String , arriveBy: Long , sortOrder: Int ): Observable< List < TripGroup >>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups-with-routing-status/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / GetSortedTripGroupsWithRoutingStatus GetSortedTripGroupsWithRoutingStatus class GetSortedTripGroupsWithRoutingStatus Constructors Name Summary <init> GetSortedTripGroupsWithRoutingStatus(getSortedTripGroups: GetSortedTripGroups , routingStatusRepository: RoutingStatusRepository ) Functions Name Summary execute fun execute(query: Query , sortOrder: Int ): Observable< Pair < List < TripGroup >, Status >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups-with-routing-status/#getsortedtripgroupswithroutingstatus","text":"class GetSortedTripGroupsWithRoutingStatus","title":"GetSortedTripGroupsWithRoutingStatus"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups-with-routing-status/#constructors","text":"Name Summary <init> GetSortedTripGroupsWithRoutingStatus(getSortedTripGroups: GetSortedTripGroups , routingStatusRepository: RoutingStatusRepository )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups-with-routing-status/#functions","text":"Name Summary execute fun execute(query: Query , sortOrder: Int ): Observable< Pair < List < TripGroup >, Status >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups-with-routing-status/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / GetSortedTripGroupsWithRoutingStatus / <init> <init> GetSortedTripGroupsWithRoutingStatus(getSortedTripGroups: GetSortedTripGroups , routingStatusRepository: RoutingStatusRepository )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups-with-routing-status/-init-/#init","text":"GetSortedTripGroupsWithRoutingStatus(getSortedTripGroups: GetSortedTripGroups , routingStatusRepository: RoutingStatusRepository )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups-with-routing-status/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / GetSortedTripGroupsWithRoutingStatus / execute execute fun execute(query: Query , sortOrder: Int ): Observable< Pair < List < TripGroup >, Status >>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-sorted-trip-groups-with-routing-status/execute/#execute","text":"fun execute(query: Query , sortOrder: Int ): Observable< Pair < List < TripGroup >, Status >>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-stops-by-travel-type/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / GetStopsByTravelType GetStopsByTravelType open class GetStopsByTravelType Functions Name Summary execute open fun execute(segment: TripSegment , travelled: Boolean ): Observable< ServiceStop >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-stops-by-travel-type/#getstopsbytraveltype","text":"open class GetStopsByTravelType","title":"GetStopsByTravelType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-stops-by-travel-type/#functions","text":"Name Summary execute open fun execute(segment: TripSegment , travelled: Boolean ): Observable< ServiceStop >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-stops-by-travel-type/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / GetStopsByTravelType / execute execute open fun execute(segment: TripSegment , travelled: Boolean ): Observable< ServiceStop >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-get-stops-by-travel-type/execute/#execute","text":"open fun execute(segment: TripSegment , travelled: Boolean ): Observable< ServiceStop >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-perform-routing/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / PerformRouting PerformRouting @Singleton open class PerformRouting FIXME: Should move this into TripGoDomainLegacy module. Functions Name Summary buildRoutingConfigAndExecuteQuery fun buildRoutingConfigAndExecuteQuery(query: Query ): Observable< List < TripGroup >> executeQuery fun executeQuery(query: Query ): Observable< List < TripGroup >>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-perform-routing/#performrouting","text":"@Singleton open class PerformRouting FIXME: Should move this into TripGoDomainLegacy module.","title":"PerformRouting"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-perform-routing/#functions","text":"Name Summary buildRoutingConfigAndExecuteQuery fun buildRoutingConfigAndExecuteQuery(query: Query ): Observable< List < TripGroup >> executeQuery fun executeQuery(query: Query ): Observable< List < TripGroup >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-perform-routing/build-routing-config-and-execute-query/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / PerformRouting / buildRoutingConfigAndExecuteQuery buildRoutingConfigAndExecuteQuery fun buildRoutingConfigAndExecuteQuery(query: Query ): Observable< List < TripGroup >>","title":"Build routing config and execute query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-perform-routing/build-routing-config-and-execute-query/#buildroutingconfigandexecutequery","text":"fun buildRoutingConfigAndExecuteQuery(query: Query ): Observable< List < TripGroup >>","title":"buildRoutingConfigAndExecuteQuery"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-perform-routing/execute-query/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / PerformRouting / executeQuery executeQuery fun executeQuery(query: Query ): Observable< List < TripGroup >>","title":"Execute query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-perform-routing/execute-query/#executequery","text":"fun executeQuery(query: Query ): Observable< List < TripGroup >>","title":"executeQuery"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-preferred-transfer-time-repository/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / PreferredTransferTimeRepository PreferredTransferTimeRepository interface PreferredTransferTimeRepository Functions Name Summary getPreferredTransferTime abstract fun getPreferredTransferTime(defaultIfEmpty: () -> Minutes = { Minutes.THREE }): Observable<Minutes> putPreferredTransferTime abstract fun putPreferredTransferTime(preferredTransferTime: Minutes): Completable whenPreferredTransferTimeChanges Emits when preferred transfer time has changed. abstract fun whenPreferredTransferTimeChanges(): Observable<Minutes>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-preferred-transfer-time-repository/#preferredtransfertimerepository","text":"interface PreferredTransferTimeRepository","title":"PreferredTransferTimeRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-preferred-transfer-time-repository/#functions","text":"Name Summary getPreferredTransferTime abstract fun getPreferredTransferTime(defaultIfEmpty: () -> Minutes = { Minutes.THREE }): Observable<Minutes> putPreferredTransferTime abstract fun putPreferredTransferTime(preferredTransferTime: Minutes): Completable whenPreferredTransferTimeChanges Emits when preferred transfer time has changed. abstract fun whenPreferredTransferTimeChanges(): Observable<Minutes>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-preferred-transfer-time-repository/get-preferred-transfer-time/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / PreferredTransferTimeRepository / getPreferredTransferTime getPreferredTransferTime abstract fun getPreferredTransferTime(defaultIfEmpty: () -> Minutes = { Minutes.THREE }): Observable<Minutes>","title":"Get preferred transfer time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-preferred-transfer-time-repository/get-preferred-transfer-time/#getpreferredtransfertime","text":"abstract fun getPreferredTransferTime(defaultIfEmpty: () -> Minutes = { Minutes.THREE }): Observable<Minutes>","title":"getPreferredTransferTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-preferred-transfer-time-repository/put-preferred-transfer-time/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / PreferredTransferTimeRepository / putPreferredTransferTime putPreferredTransferTime abstract fun putPreferredTransferTime(preferredTransferTime: Minutes): Completable","title":"Put preferred transfer time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-preferred-transfer-time-repository/put-preferred-transfer-time/#putpreferredtransfertime","text":"abstract fun putPreferredTransferTime(preferredTransferTime: Minutes): Completable","title":"putPreferredTransferTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-preferred-transfer-time-repository/when-preferred-transfer-time-changes/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / PreferredTransferTimeRepository / whenPreferredTransferTimeChanges whenPreferredTransferTimeChanges abstract fun whenPreferredTransferTimeChanges(): Observable<Minutes> Emits when preferred transfer time has changed.","title":"When preferred transfer time changes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-preferred-transfer-time-repository/when-preferred-transfer-time-changes/#whenpreferredtransfertimechanges","text":"abstract fun whenPreferredTransferTimeChanges(): Observable<Minutes> Emits when preferred transfer time has changed.","title":"whenPreferredTransferTimeChanges"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-query-location-resolver/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / QueryLocationResolver QueryLocationResolver open class QueryLocationResolver : Function< Query , Observable< Query >> Constructors Name Summary <init> QueryLocationResolver(provider: Provider<Observable<Location>>) Functions Name Summary apply open fun apply(query: Query ): Observable< Query >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-query-location-resolver/#querylocationresolver","text":"open class QueryLocationResolver : Function< Query , Observable< Query >>","title":"QueryLocationResolver"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-query-location-resolver/#constructors","text":"Name Summary <init> QueryLocationResolver(provider: Provider<Observable<Location>>)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-query-location-resolver/#functions","text":"Name Summary apply open fun apply(query: Query ): Observable< Query >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-query-location-resolver/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / QueryLocationResolver / <init> <init> QueryLocationResolver(provider: Provider<Observable<Location>>)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-query-location-resolver/-init-/#init","text":"QueryLocationResolver(provider: Provider<Observable<Location>>)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-query-location-resolver/apply/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / QueryLocationResolver / apply apply open fun apply(query: Query ): Observable< Query >","title":"Apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-query-location-resolver/apply/#apply","text":"open fun apply(query: Query ): Observable< Query >","title":"apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / RoutingConfig RoutingConfig data class RoutingConfig Constructors Name Summary <init> RoutingConfig(preferredTransferTime: Minutes = Minutes.THREE, walkingSpeed: WalkingSpeed = WalkingSpeed.Medium, cyclingSpeed: CyclingSpeed = CyclingSpeed.Medium, shouldUseConcessionPricing: Boolean = false, isOnWheelchair: Boolean = false, weightingProfile: WeightingProfile = WeightingProfile()) Properties Name Summary cyclingSpeed val cyclingSpeed: CyclingSpeed isOnWheelchair val isOnWheelchair: Boolean preferredTransferTime val preferredTransferTime: Minutes shouldUseConcessionPricing val shouldUseConcessionPricing: Boolean walkingSpeed val walkingSpeed: WalkingSpeed weightingProfile val weightingProfile: WeightingProfile","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/#routingconfig","text":"data class RoutingConfig","title":"RoutingConfig"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/#constructors","text":"Name Summary <init> RoutingConfig(preferredTransferTime: Minutes = Minutes.THREE, walkingSpeed: WalkingSpeed = WalkingSpeed.Medium, cyclingSpeed: CyclingSpeed = CyclingSpeed.Medium, shouldUseConcessionPricing: Boolean = false, isOnWheelchair: Boolean = false, weightingProfile: WeightingProfile = WeightingProfile())","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/#properties","text":"Name Summary cyclingSpeed val cyclingSpeed: CyclingSpeed isOnWheelchair val isOnWheelchair: Boolean preferredTransferTime val preferredTransferTime: Minutes shouldUseConcessionPricing val shouldUseConcessionPricing: Boolean walkingSpeed val walkingSpeed: WalkingSpeed weightingProfile val weightingProfile: WeightingProfile","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / RoutingConfig / <init> <init> RoutingConfig(preferredTransferTime: Minutes = Minutes.THREE, walkingSpeed: WalkingSpeed = WalkingSpeed.Medium, cyclingSpeed: CyclingSpeed = CyclingSpeed.Medium, shouldUseConcessionPricing: Boolean = false, isOnWheelchair: Boolean = false, weightingProfile: WeightingProfile = WeightingProfile())","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/-init-/#init","text":"RoutingConfig(preferredTransferTime: Minutes = Minutes.THREE, walkingSpeed: WalkingSpeed = WalkingSpeed.Medium, cyclingSpeed: CyclingSpeed = CyclingSpeed.Medium, shouldUseConcessionPricing: Boolean = false, isOnWheelchair: Boolean = false, weightingProfile: WeightingProfile = WeightingProfile())","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/cycling-speed/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / RoutingConfig / cyclingSpeed cyclingSpeed val cyclingSpeed: CyclingSpeed","title":"Cycling speed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/cycling-speed/#cyclingspeed","text":"val cyclingSpeed: CyclingSpeed","title":"cyclingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/is-on-wheelchair/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / RoutingConfig / isOnWheelchair isOnWheelchair val isOnWheelchair: Boolean","title":"Is on wheelchair"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/is-on-wheelchair/#isonwheelchair","text":"val isOnWheelchair: Boolean","title":"isOnWheelchair"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/preferred-transfer-time/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / RoutingConfig / preferredTransferTime preferredTransferTime val preferredTransferTime: Minutes","title":"Preferred transfer time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/preferred-transfer-time/#preferredtransfertime","text":"val preferredTransferTime: Minutes","title":"preferredTransferTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/should-use-concession-pricing/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / RoutingConfig / shouldUseConcessionPricing shouldUseConcessionPricing val shouldUseConcessionPricing: Boolean","title":"Should use concession pricing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/should-use-concession-pricing/#shoulduseconcessionpricing","text":"val shouldUseConcessionPricing: Boolean","title":"shouldUseConcessionPricing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/walking-speed/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / RoutingConfig / walkingSpeed walkingSpeed val walkingSpeed: WalkingSpeed","title":"Walking speed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/walking-speed/#walkingspeed","text":"val walkingSpeed: WalkingSpeed","title":"walkingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/weighting-profile/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / RoutingConfig / weightingProfile weightingProfile val weightingProfile: WeightingProfile","title":"Weighting profile"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-routing-config/weighting-profile/#weightingprofile","text":"val weightingProfile: WeightingProfile","title":"weightingProfile"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate SegmentCameraUpdate sealed class SegmentCameraUpdate Types Name Summary HasEmptyLocations data class HasEmptyLocations : SegmentCameraUpdate HasOneLocation data class HasOneLocation : SegmentCameraUpdate HasTwoLocations data class HasTwoLocations : SegmentCameraUpdate Functions Name Summary tripSegmentId abstract fun tripSegmentId(): Long","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/#segmentcameraupdate","text":"sealed class SegmentCameraUpdate","title":"SegmentCameraUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/#types","text":"Name Summary HasEmptyLocations data class HasEmptyLocations : SegmentCameraUpdate HasOneLocation data class HasOneLocation : SegmentCameraUpdate HasTwoLocations data class HasTwoLocations : SegmentCameraUpdate","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/#functions","text":"Name Summary tripSegmentId abstract fun tripSegmentId(): Long","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/trip-segment-id/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / tripSegmentId tripSegmentId abstract fun tripSegmentId(): Long","title":"Trip segment id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/trip-segment-id/#tripsegmentid","text":"abstract fun tripSegmentId(): Long","title":"tripSegmentId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-empty-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasEmptyLocations HasEmptyLocations data class HasEmptyLocations : SegmentCameraUpdate Constructors Name Summary <init> HasEmptyLocations(id: Long ) Properties Name Summary id val id: Long Functions Name Summary tripSegmentId fun tripSegmentId(): Long","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-empty-locations/#hasemptylocations","text":"data class HasEmptyLocations : SegmentCameraUpdate","title":"HasEmptyLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-empty-locations/#constructors","text":"Name Summary <init> HasEmptyLocations(id: Long )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-empty-locations/#properties","text":"Name Summary id val id: Long","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-empty-locations/#functions","text":"Name Summary tripSegmentId fun tripSegmentId(): Long","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-empty-locations/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasEmptyLocations / <init> <init> HasEmptyLocations(id: Long )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-empty-locations/-init-/#init","text":"HasEmptyLocations(id: Long )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-empty-locations/id/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasEmptyLocations / id id val id: Long","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-empty-locations/id/#id","text":"val id: Long","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-empty-locations/trip-segment-id/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasEmptyLocations / tripSegmentId tripSegmentId fun tripSegmentId(): Long","title":"Trip segment id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-empty-locations/trip-segment-id/#tripsegmentid","text":"fun tripSegmentId(): Long","title":"tripSegmentId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasOneLocation HasOneLocation data class HasOneLocation : SegmentCameraUpdate Constructors Name Summary <init> HasOneLocation(id: Long , location: Location ) Properties Name Summary id val id: Long location val location: Location Functions Name Summary tripSegmentId fun tripSegmentId(): Long","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/#hasonelocation","text":"data class HasOneLocation : SegmentCameraUpdate","title":"HasOneLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/#constructors","text":"Name Summary <init> HasOneLocation(id: Long , location: Location )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/#properties","text":"Name Summary id val id: Long location val location: Location","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/#functions","text":"Name Summary tripSegmentId fun tripSegmentId(): Long","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasOneLocation / <init> <init> HasOneLocation(id: Long , location: Location )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/-init-/#init","text":"HasOneLocation(id: Long , location: Location )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/id/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasOneLocation / id id val id: Long","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/id/#id","text":"val id: Long","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/location/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasOneLocation / location location val location: Location","title":"Location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/location/#location","text":"val location: Location","title":"location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/trip-segment-id/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasOneLocation / tripSegmentId tripSegmentId fun tripSegmentId(): Long","title":"Trip segment id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-one-location/trip-segment-id/#tripsegmentid","text":"fun tripSegmentId(): Long","title":"tripSegmentId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasTwoLocations HasTwoLocations data class HasTwoLocations : SegmentCameraUpdate Constructors Name Summary <init> HasTwoLocations(id: Long , start: Location , end: Location ) Properties Name Summary end val end: Location id val id: Long start val start: Location Functions Name Summary tripSegmentId fun tripSegmentId(): Long","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/#hastwolocations","text":"data class HasTwoLocations : SegmentCameraUpdate","title":"HasTwoLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/#constructors","text":"Name Summary <init> HasTwoLocations(id: Long , start: Location , end: Location )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/#properties","text":"Name Summary end val end: Location id val id: Long start val start: Location","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/#functions","text":"Name Summary tripSegmentId fun tripSegmentId(): Long","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasTwoLocations / <init> <init> HasTwoLocations(id: Long , start: Location , end: Location )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/-init-/#init","text":"HasTwoLocations(id: Long , start: Location , end: Location )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/end/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasTwoLocations / end end val end: Location","title":"End"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/end/#end","text":"val end: Location","title":"end"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/id/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasTwoLocations / id id val id: Long","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/id/#id","text":"val id: Long","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/start/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasTwoLocations / start start val start: Location","title":"Start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/start/#start","text":"val start: Location","title":"start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/trip-segment-id/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdate / HasTwoLocations / tripSegmentId tripSegmentId fun tripSegmentId(): Long","title":"Trip segment id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update/-has-two-locations/trip-segment-id/#tripsegmentid","text":"fun tripSegmentId(): Long","title":"tripSegmentId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-mapper/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdateMapper SegmentCameraUpdateMapper open class SegmentCameraUpdateMapper Functions Name Summary toCameraUpdate open fun toCameraUpdate(segmentCameraUpdate: SegmentCameraUpdate ): Optional<CameraUpdate>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-mapper/#segmentcameraupdatemapper","text":"open class SegmentCameraUpdateMapper","title":"SegmentCameraUpdateMapper"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-mapper/#functions","text":"Name Summary toCameraUpdate open fun toCameraUpdate(segmentCameraUpdate: SegmentCameraUpdate ): Optional<CameraUpdate>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-mapper/to-camera-update/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdateMapper / toCameraUpdate toCameraUpdate open fun toCameraUpdate(segmentCameraUpdate: SegmentCameraUpdate ): Optional<CameraUpdate>","title":"To camera update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-mapper/to-camera-update/#tocameraupdate","text":"open fun toCameraUpdate(segmentCameraUpdate: SegmentCameraUpdate ): Optional<CameraUpdate>","title":"toCameraUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-repository/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdateRepository SegmentCameraUpdateRepository open class SegmentCameraUpdateRepository Constructors Name Summary <init> SegmentCameraUpdateRepository(getSelectedTrip: GetSelectedTrip) Functions Name Summary getSegmentCameraUpdate fun getSegmentCameraUpdate(): Observable< SegmentCameraUpdate > putSegment fun putSegment(segment: TripSegment ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-repository/#segmentcameraupdaterepository","text":"open class SegmentCameraUpdateRepository","title":"SegmentCameraUpdateRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-repository/#constructors","text":"Name Summary <init> SegmentCameraUpdateRepository(getSelectedTrip: GetSelectedTrip)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-repository/#functions","text":"Name Summary getSegmentCameraUpdate fun getSegmentCameraUpdate(): Observable< SegmentCameraUpdate > putSegment fun putSegment(segment: TripSegment ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-repository/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdateRepository / <init> <init> SegmentCameraUpdateRepository(getSelectedTrip: GetSelectedTrip)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-repository/-init-/#init","text":"SegmentCameraUpdateRepository(getSelectedTrip: GetSelectedTrip)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-repository/get-segment-camera-update/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdateRepository / getSegmentCameraUpdate getSegmentCameraUpdate fun getSegmentCameraUpdate(): Observable< SegmentCameraUpdate >","title":"Get segment camera update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-repository/get-segment-camera-update/#getsegmentcameraupdate","text":"fun getSegmentCameraUpdate(): Observable< SegmentCameraUpdate >","title":"getSegmentCameraUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-repository/put-segment/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / SegmentCameraUpdateRepository / putSegment putSegment fun putSegment(segment: TripSegment ): Unit","title":"Put segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-segment-camera-update-repository/put-segment/#putsegment","text":"fun putSegment(segment: TripSegment ): Unit","title":"putSegment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-trip-groups-sorter/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / TripGroupsSorter TripGroupsSorter open class TripGroupsSorter Functions Name Summary checkViolationInvisible fun checkViolationInvisible(modeIds: List < String >, removalModeIdSet: HashSet < String >): Boolean getMinimizedModeIdsWithoutWalking fun getMinimizedModeIdsWithoutWalking(minimizedModeIds: List < String >): HashSet < String > sort open fun sort(sortOrder: Int , groups: List < TripGroup >?, willArriveBy: Boolean ): Unit updateTripGroupVisibilities open fun updateTripGroupVisibilities(tripGroups: MutableList < TripGroup >, modePreferences: List < TransportModePreference >): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-trip-groups-sorter/#tripgroupssorter","text":"open class TripGroupsSorter","title":"TripGroupsSorter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-trip-groups-sorter/#functions","text":"Name Summary checkViolationInvisible fun checkViolationInvisible(modeIds: List < String >, removalModeIdSet: HashSet < String >): Boolean getMinimizedModeIdsWithoutWalking fun getMinimizedModeIdsWithoutWalking(minimizedModeIds: List < String >): HashSet < String > sort open fun sort(sortOrder: Int , groups: List < TripGroup >?, willArriveBy: Boolean ): Unit updateTripGroupVisibilities open fun updateTripGroupVisibilities(tripGroups: MutableList < TripGroup >, modePreferences: List < TransportModePreference >): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-trip-groups-sorter/check-violation-invisible/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / TripGroupsSorter / checkViolationInvisible checkViolationInvisible fun checkViolationInvisible(modeIds: List < String >, removalModeIdSet: HashSet < String >): Boolean","title":"Check violation invisible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-trip-groups-sorter/check-violation-invisible/#checkviolationinvisible","text":"fun checkViolationInvisible(modeIds: List < String >, removalModeIdSet: HashSet < String >): Boolean","title":"checkViolationInvisible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-trip-groups-sorter/get-minimized-mode-ids-without-walking/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / TripGroupsSorter / getMinimizedModeIdsWithoutWalking getMinimizedModeIdsWithoutWalking fun getMinimizedModeIdsWithoutWalking(minimizedModeIds: List < String >): HashSet < String >","title":"Get minimized mode ids without walking"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-trip-groups-sorter/get-minimized-mode-ids-without-walking/#getminimizedmodeidswithoutwalking","text":"fun getMinimizedModeIdsWithoutWalking(minimizedModeIds: List < String >): HashSet < String >","title":"getMinimizedModeIdsWithoutWalking"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-trip-groups-sorter/sort/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / TripGroupsSorter / sort sort open fun sort(sortOrder: Int , groups: List < TripGroup >?, willArriveBy: Boolean ): Unit","title":"Sort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-trip-groups-sorter/sort/#sort","text":"open fun sort(sortOrder: Int , groups: List < TripGroup >?, willArriveBy: Boolean ): Unit","title":"sort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-trip-groups-sorter/update-trip-group-visibilities/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / TripGroupsSorter / updateTripGroupVisibilities updateTripGroupVisibilities open fun updateTripGroupVisibilities(tripGroups: MutableList < TripGroup >, modePreferences: List < TransportModePreference >): Unit","title":"Update trip group visibilities"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/-trip-groups-sorter/update-trip-group-visibilities/#updatetripgroupvisibilities","text":"open fun updateTripGroupVisibilities(tripGroups: MutableList < TripGroup >, modePreferences: List < TransportModePreference >): Unit","title":"updateTripGroupVisibilities"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/com.google.android.gms.maps.-google-map/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / com.google.android.gms.maps.GoogleMap Extensions for com.google.android.gms.maps.GoogleMap Name Summary updateCamera fun GoogleMap.updateCamera(mapCameraUpdate: MapCameraUpdate ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/com.google.android.gms.maps.-google-map/#extensions-for-comgoogleandroidgmsmapsgooglemap","text":"Name Summary updateCamera fun GoogleMap.updateCamera(mapCameraUpdate: MapCameraUpdate ): Unit","title":"Extensions for com.google.android.gms.maps.GoogleMap"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/com.google.android.gms.maps.-google-map/update-camera/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / com.google.android.gms.maps.GoogleMap / updateCamera updateCamera fun GoogleMap.updateCamera(mapCameraUpdate: MapCameraUpdate ): Unit","title":"Update camera"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/com.google.android.gms.maps.-google-map/update-camera/#updatecamera","text":"fun GoogleMap.updateCamera(mapCameraUpdate: MapCameraUpdate ): Unit","title":"updateCamera"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/kotlin.collections.-list/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / kotlin.collections.List Extensions for kotlin.collections.List Name Summary getVisibleGeoPointsOnMap fun List < TripSegment >.getVisibleGeoPointsOnMap(): List < GeoPoint >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/kotlin.collections.-list/#extensions-for-kotlincollectionslist","text":"Name Summary getVisibleGeoPointsOnMap fun List < TripSegment >.getVisibleGeoPointsOnMap(): List < GeoPoint >","title":"Extensions for kotlin.collections.List"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/kotlin.collections.-list/get-visible-geo-points-on-map/","text":"tripkit-android / com.skedgo.tripkit.ui.routing / kotlin.collections.List / getVisibleGeoPointsOnMap getVisibleGeoPointsOnMap fun List < TripSegment >.getVisibleGeoPointsOnMap(): List < GeoPoint >","title":"Get visible geo points on map"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing/kotlin.collections.-list/get-visible-geo-points-on-map/#getvisiblegeopointsonmap","text":"fun List < TripSegment >.getVisibleGeoPointsOnMap(): List < GeoPoint >","title":"getVisibleGeoPointsOnMap"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings Package com.skedgo.tripkit.ui.routing.settings Types Name Summary CyclingSpeed enum class CyclingSpeed CyclingSpeedRepository interface CyclingSpeedRepository PrioritiesRepository interface PrioritiesRepository Priority sealed class Priority WalkingSpeed enum class WalkingSpeed WalkingSpeedRepository interface WalkingSpeedRepository WeightingProfile data class WeightingProfile Extensions for External Classes Name Summary kotlin.Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/#package-comskedgotripkituiroutingsettings","text":"","title":"Package com.skedgo.tripkit.ui.routing.settings"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/#types","text":"Name Summary CyclingSpeed enum class CyclingSpeed CyclingSpeedRepository interface CyclingSpeedRepository PrioritiesRepository interface PrioritiesRepository Priority sealed class Priority WalkingSpeed enum class WalkingSpeed WalkingSpeedRepository interface WalkingSpeedRepository WeightingProfile data class WeightingProfile","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/#extensions-for-external-classes","text":"Name Summary kotlin.Int","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / CyclingSpeed CyclingSpeed enum class CyclingSpeed Enum Values Name Summary Slow Medium Fast Properties Name Summary value val value: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/#cyclingspeed","text":"enum class CyclingSpeed","title":"CyclingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/#enum-values","text":"Name Summary Slow Medium Fast","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/#properties","text":"Name Summary value val value: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/-fast/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / CyclingSpeed / Fast Fast Fast","title":" fast"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/-fast/#fast","text":"Fast","title":"Fast"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/-medium/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / CyclingSpeed / Medium Medium Medium","title":" medium"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/-medium/#medium","text":"Medium","title":"Medium"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/-slow/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / CyclingSpeed / Slow Slow Slow","title":" slow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/-slow/#slow","text":"Slow","title":"Slow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/value/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / CyclingSpeed / value value val value: Int","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed/value/#value","text":"val value: Int","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed-repository/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / CyclingSpeedRepository CyclingSpeedRepository interface CyclingSpeedRepository Functions Name Summary getCyclingSpeed abstract fun getCyclingSpeed(): Observable< CyclingSpeed > putCyclingSpeed abstract fun putCyclingSpeed(cyclingSpeed: CyclingSpeed ): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed-repository/#cyclingspeedrepository","text":"interface CyclingSpeedRepository","title":"CyclingSpeedRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed-repository/#functions","text":"Name Summary getCyclingSpeed abstract fun getCyclingSpeed(): Observable< CyclingSpeed > putCyclingSpeed abstract fun putCyclingSpeed(cyclingSpeed: CyclingSpeed ): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed-repository/get-cycling-speed/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / CyclingSpeedRepository / getCyclingSpeed getCyclingSpeed abstract fun getCyclingSpeed(): Observable< CyclingSpeed >","title":"Get cycling speed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed-repository/get-cycling-speed/#getcyclingspeed","text":"abstract fun getCyclingSpeed(): Observable< CyclingSpeed >","title":"getCyclingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed-repository/put-cycling-speed/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / CyclingSpeedRepository / putCyclingSpeed putCyclingSpeed abstract fun putCyclingSpeed(cyclingSpeed: CyclingSpeed ): Completable","title":"Put cycling speed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-cycling-speed-repository/put-cycling-speed/#putcyclingspeed","text":"abstract fun putCyclingSpeed(cyclingSpeed: CyclingSpeed ): Completable","title":"putCyclingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / PrioritiesRepository PrioritiesRepository interface PrioritiesRepository Functions Name Summary getBudgetPriority abstract fun getBudgetPriority(): Observable<Budget> getConveniencePriority abstract fun getConveniencePriority(): Observable<Convenience> getEnvironmentPriority abstract fun getEnvironmentPriority(): Observable<Environment> getExercisePriority abstract fun getExercisePriority(): Observable<Exercise> getTimePriority abstract fun getTimePriority(): Observable<Time> putBudgetPriority abstract fun putBudgetPriority(budgetPriority: Budget): Completable putConveniencePriority abstract fun putConveniencePriority(conveniencePriority: Convenience): Completable putEnvironmentPriority abstract fun putEnvironmentPriority(environmentPriority: Environment): Completable putExercisePriority abstract fun putExercisePriority(exercisePriority: Exercise): Completable putTimePriority abstract fun putTimePriority(timePriority: Time): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/#prioritiesrepository","text":"interface PrioritiesRepository","title":"PrioritiesRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/#functions","text":"Name Summary getBudgetPriority abstract fun getBudgetPriority(): Observable<Budget> getConveniencePriority abstract fun getConveniencePriority(): Observable<Convenience> getEnvironmentPriority abstract fun getEnvironmentPriority(): Observable<Environment> getExercisePriority abstract fun getExercisePriority(): Observable<Exercise> getTimePriority abstract fun getTimePriority(): Observable<Time> putBudgetPriority abstract fun putBudgetPriority(budgetPriority: Budget): Completable putConveniencePriority abstract fun putConveniencePriority(conveniencePriority: Convenience): Completable putEnvironmentPriority abstract fun putEnvironmentPriority(environmentPriority: Environment): Completable putExercisePriority abstract fun putExercisePriority(exercisePriority: Exercise): Completable putTimePriority abstract fun putTimePriority(timePriority: Time): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/get-budget-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / PrioritiesRepository / getBudgetPriority getBudgetPriority abstract fun getBudgetPriority(): Observable<Budget>","title":"Get budget priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/get-budget-priority/#getbudgetpriority","text":"abstract fun getBudgetPriority(): Observable<Budget>","title":"getBudgetPriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/get-convenience-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / PrioritiesRepository / getConveniencePriority getConveniencePriority abstract fun getConveniencePriority(): Observable<Convenience>","title":"Get convenience priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/get-convenience-priority/#getconveniencepriority","text":"abstract fun getConveniencePriority(): Observable<Convenience>","title":"getConveniencePriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/get-environment-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / PrioritiesRepository / getEnvironmentPriority getEnvironmentPriority abstract fun getEnvironmentPriority(): Observable<Environment>","title":"Get environment priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/get-environment-priority/#getenvironmentpriority","text":"abstract fun getEnvironmentPriority(): Observable<Environment>","title":"getEnvironmentPriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/get-exercise-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / PrioritiesRepository / getExercisePriority getExercisePriority abstract fun getExercisePriority(): Observable<Exercise>","title":"Get exercise priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/get-exercise-priority/#getexercisepriority","text":"abstract fun getExercisePriority(): Observable<Exercise>","title":"getExercisePriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/get-time-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / PrioritiesRepository / getTimePriority getTimePriority abstract fun getTimePriority(): Observable<Time>","title":"Get time priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/get-time-priority/#gettimepriority","text":"abstract fun getTimePriority(): Observable<Time>","title":"getTimePriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/put-budget-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / PrioritiesRepository / putBudgetPriority putBudgetPriority abstract fun putBudgetPriority(budgetPriority: Budget): Completable","title":"Put budget priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/put-budget-priority/#putbudgetpriority","text":"abstract fun putBudgetPriority(budgetPriority: Budget): Completable","title":"putBudgetPriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/put-convenience-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / PrioritiesRepository / putConveniencePriority putConveniencePriority abstract fun putConveniencePriority(conveniencePriority: Convenience): Completable","title":"Put convenience priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/put-convenience-priority/#putconveniencepriority","text":"abstract fun putConveniencePriority(conveniencePriority: Convenience): Completable","title":"putConveniencePriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/put-environment-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / PrioritiesRepository / putEnvironmentPriority putEnvironmentPriority abstract fun putEnvironmentPriority(environmentPriority: Environment): Completable","title":"Put environment priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/put-environment-priority/#putenvironmentpriority","text":"abstract fun putEnvironmentPriority(environmentPriority: Environment): Completable","title":"putEnvironmentPriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/put-exercise-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / PrioritiesRepository / putExercisePriority putExercisePriority abstract fun putExercisePriority(exercisePriority: Exercise): Completable","title":"Put exercise priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/put-exercise-priority/#putexercisepriority","text":"abstract fun putExercisePriority(exercisePriority: Exercise): Completable","title":"putExercisePriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/put-time-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / PrioritiesRepository / putTimePriority putTimePriority abstract fun putTimePriority(timePriority: Time): Completable","title":"Put time priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priorities-repository/put-time-priority/#puttimepriority","text":"abstract fun putTimePriority(timePriority: Time): Completable","title":"putTimePriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority Priority sealed class Priority Types Name Summary Budget data class Budget : Priority Convenience data class Convenience : Priority Environment data class Environment : Priority Exercise data class Exercise : Priority Time data class Time : Priority","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/#priority","text":"sealed class Priority","title":"Priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/#types","text":"Name Summary Budget data class Budget : Priority Convenience data class Convenience : Priority Environment data class Environment : Priority Exercise data class Exercise : Priority Time data class Time : Priority","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-budget/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Budget Budget data class Budget : Priority Constructors Name Summary <init> Budget(value: Int = 50) Properties Name Summary value val value: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-budget/#budget","text":"data class Budget : Priority","title":"Budget"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-budget/#constructors","text":"Name Summary <init> Budget(value: Int = 50)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-budget/#properties","text":"Name Summary value val value: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-budget/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Budget / <init> <init> Budget(value: Int = 50)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-budget/-init-/#init","text":"Budget(value: Int = 50)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-budget/value/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Budget / value value val value: Int","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-budget/value/#value","text":"val value: Int","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-convenience/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Convenience Convenience data class Convenience : Priority Constructors Name Summary <init> Convenience(value: Int = 50) Properties Name Summary value val value: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-convenience/#convenience","text":"data class Convenience : Priority","title":"Convenience"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-convenience/#constructors","text":"Name Summary <init> Convenience(value: Int = 50)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-convenience/#properties","text":"Name Summary value val value: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-convenience/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Convenience / <init> <init> Convenience(value: Int = 50)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-convenience/-init-/#init","text":"Convenience(value: Int = 50)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-convenience/value/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Convenience / value value val value: Int","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-convenience/value/#value","text":"val value: Int","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-environment/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Environment Environment data class Environment : Priority Constructors Name Summary <init> Environment(value: Int = 50) Properties Name Summary value val value: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-environment/#environment","text":"data class Environment : Priority","title":"Environment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-environment/#constructors","text":"Name Summary <init> Environment(value: Int = 50)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-environment/#properties","text":"Name Summary value val value: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-environment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Environment / <init> <init> Environment(value: Int = 50)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-environment/-init-/#init","text":"Environment(value: Int = 50)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-environment/value/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Environment / value value val value: Int","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-environment/value/#value","text":"val value: Int","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-exercise/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Exercise Exercise data class Exercise : Priority Constructors Name Summary <init> Exercise(value: Int = 50) Properties Name Summary value val value: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-exercise/#exercise","text":"data class Exercise : Priority","title":"Exercise"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-exercise/#constructors","text":"Name Summary <init> Exercise(value: Int = 50)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-exercise/#properties","text":"Name Summary value val value: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-exercise/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Exercise / <init> <init> Exercise(value: Int = 50)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-exercise/-init-/#init","text":"Exercise(value: Int = 50)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-exercise/value/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Exercise / value value val value: Int","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-exercise/value/#value","text":"val value: Int","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-time/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Time Time data class Time : Priority Constructors Name Summary <init> Time(value: Int = 50) Properties Name Summary value val value: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-time/#time","text":"data class Time : Priority","title":"Time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-time/#constructors","text":"Name Summary <init> Time(value: Int = 50)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-time/#properties","text":"Name Summary value val value: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-time/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Time / <init> <init> Time(value: Int = 50)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-time/-init-/#init","text":"Time(value: Int = 50)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-time/value/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / Priority / Time / value value val value: Int","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-priority/-time/value/#value","text":"val value: Int","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WalkingSpeed WalkingSpeed enum class WalkingSpeed Enum Values Name Summary Slow Medium Fast Properties Name Summary value val value: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/#walkingspeed","text":"enum class WalkingSpeed","title":"WalkingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/#enum-values","text":"Name Summary Slow Medium Fast","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/#properties","text":"Name Summary value val value: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/-fast/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WalkingSpeed / Fast Fast Fast","title":" fast"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/-fast/#fast","text":"Fast","title":"Fast"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/-medium/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WalkingSpeed / Medium Medium Medium","title":" medium"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/-medium/#medium","text":"Medium","title":"Medium"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/-slow/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WalkingSpeed / Slow Slow Slow","title":" slow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/-slow/#slow","text":"Slow","title":"Slow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/value/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WalkingSpeed / value value val value: Int","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed/value/#value","text":"val value: Int","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed-repository/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WalkingSpeedRepository WalkingSpeedRepository interface WalkingSpeedRepository Functions Name Summary getWalkingSpeed abstract fun getWalkingSpeed(): Observable< WalkingSpeed > putWalkingSpeed abstract fun putWalkingSpeed(walkingSpeed: WalkingSpeed ): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed-repository/#walkingspeedrepository","text":"interface WalkingSpeedRepository","title":"WalkingSpeedRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed-repository/#functions","text":"Name Summary getWalkingSpeed abstract fun getWalkingSpeed(): Observable< WalkingSpeed > putWalkingSpeed abstract fun putWalkingSpeed(walkingSpeed: WalkingSpeed ): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed-repository/get-walking-speed/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WalkingSpeedRepository / getWalkingSpeed getWalkingSpeed abstract fun getWalkingSpeed(): Observable< WalkingSpeed >","title":"Get walking speed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed-repository/get-walking-speed/#getwalkingspeed","text":"abstract fun getWalkingSpeed(): Observable< WalkingSpeed >","title":"getWalkingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed-repository/put-walking-speed/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WalkingSpeedRepository / putWalkingSpeed putWalkingSpeed abstract fun putWalkingSpeed(walkingSpeed: WalkingSpeed ): Completable","title":"Put walking speed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-walking-speed-repository/put-walking-speed/#putwalkingspeed","text":"abstract fun putWalkingSpeed(walkingSpeed: WalkingSpeed ): Completable","title":"putWalkingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WeightingProfile WeightingProfile data class WeightingProfile Constructors Name Summary <init> WeightingProfile(budgetPriority: Budget = Budget(), environmentPriority: Environment = Environment(), timePriority: Time = Time(), conveniencePriority: Convenience = Convenience()) Properties Name Summary budgetPriority val budgetPriority: Budget conveniencePriority val conveniencePriority: Convenience environmentPriority val environmentPriority: Environment timePriority val timePriority: Time","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/#weightingprofile","text":"data class WeightingProfile","title":"WeightingProfile"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/#constructors","text":"Name Summary <init> WeightingProfile(budgetPriority: Budget = Budget(), environmentPriority: Environment = Environment(), timePriority: Time = Time(), conveniencePriority: Convenience = Convenience())","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/#properties","text":"Name Summary budgetPriority val budgetPriority: Budget conveniencePriority val conveniencePriority: Convenience environmentPriority val environmentPriority: Environment timePriority val timePriority: Time","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WeightingProfile / <init> <init> WeightingProfile(budgetPriority: Budget = Budget(), environmentPriority: Environment = Environment(), timePriority: Time = Time(), conveniencePriority: Convenience = Convenience())","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/-init-/#init","text":"WeightingProfile(budgetPriority: Budget = Budget(), environmentPriority: Environment = Environment(), timePriority: Time = Time(), conveniencePriority: Convenience = Convenience())","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/budget-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WeightingProfile / budgetPriority budgetPriority val budgetPriority: Budget","title":"Budget priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/budget-priority/#budgetpriority","text":"val budgetPriority: Budget","title":"budgetPriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/convenience-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WeightingProfile / conveniencePriority conveniencePriority val conveniencePriority: Convenience","title":"Convenience priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/convenience-priority/#conveniencepriority","text":"val conveniencePriority: Convenience","title":"conveniencePriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/environment-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WeightingProfile / environmentPriority environmentPriority val environmentPriority: Environment","title":"Environment priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/environment-priority/#environmentpriority","text":"val environmentPriority: Environment","title":"environmentPriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/time-priority/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / WeightingProfile / timePriority timePriority val timePriority: Time","title":"Time priority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/-weighting-profile/time-priority/#timepriority","text":"val timePriority: Time","title":"timePriority"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/kotlin.-int/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / kotlin.Int Extensions for kotlin.Int Name Summary toCyclingSpeed fun Int .toCyclingSpeed(): CyclingSpeed toWalkingSpeed fun Int .toWalkingSpeed(): WalkingSpeed","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/kotlin.-int/#extensions-for-kotlinint","text":"Name Summary toCyclingSpeed fun Int .toCyclingSpeed(): CyclingSpeed toWalkingSpeed fun Int .toWalkingSpeed(): WalkingSpeed","title":"Extensions for kotlin.Int"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/kotlin.-int/to-cycling-speed/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / kotlin.Int / toCyclingSpeed toCyclingSpeed fun Int .toCyclingSpeed(): CyclingSpeed","title":"To cycling speed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/kotlin.-int/to-cycling-speed/#tocyclingspeed","text":"fun Int .toCyclingSpeed(): CyclingSpeed","title":"toCyclingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/kotlin.-int/to-walking-speed/","text":"tripkit-android / com.skedgo.tripkit.ui.routing.settings / kotlin.Int / toWalkingSpeed toWalkingSpeed fun Int .toWalkingSpeed(): WalkingSpeed","title":"To walking speed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.routing.settings/kotlin.-int/to-walking-speed/#towalkingspeed","text":"fun Int .toWalkingSpeed(): WalkingSpeed","title":"toWalkingSpeed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/","text":"tripkit-android / com.skedgo.tripkit.ui.search Package com.skedgo.tripkit.ui.search Types Name Summary CurrentLocationSuggestionViewModel class CurrentLocationSuggestionViewModel : SuggestionViewModel DropNewPinSuggestionViewModel class DropNewPinSuggestionViewModel : SuggestionViewModel FetchFoursquareLocations interface FetchFoursquareLocations : FetchLocations FetchGoogleLocations interface FetchGoogleLocations : FetchLocations FetchLocalLocations interface FetchLocalLocations : FetchLocations FetchLocations interface FetchLocations FetchLocationsParameters abstract class FetchLocationsParameters FetchSuggestions interface FetchSuggestions FetchTripGoLocations interface FetchTripGoLocations : FetchLocations GoogleSuggestionViewModel class GoogleSuggestionViewModel : SuggestionViewModel LocationSearchErrorViewModel class LocationSearchErrorViewModel LocationSearchFragment This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. class LocationSearchFragment : AbstractTripKitFragment LocationSearchViewModel class LocationSearchViewModel : RxViewModel SearchErrorType sealed class SearchErrorType SearchSuggestionChoice sealed class SearchSuggestionChoice SuggestionViewModel sealed class SuggestionViewModel VisibilityState enum class VisibilityState Properties Name Summary ARG_CAN_OPEN_TIMETABLE const val ARG_CAN_OPEN_TIMETABLE: String ARG_INITIAL_QUERY const val ARG_INITIAL_QUERY: String ARG_NEAR_LAT const val ARG_NEAR_LAT: String ARG_NEAR_LON const val ARG_NEAR_LON: String ARG_NORTHEAST_LAT const val ARG_NORTHEAST_LAT: String ARG_NORTHEAST_LON const val ARG_NORTHEAST_LON: String ARG_QUERY_HINT const val ARG_QUERY_HINT: String ARG_SOUTHWEST_LAT const val ARG_SOUTHWEST_LAT: String ARG_SOUTHWEST_LON const val ARG_SOUTHWEST_LON: String ARG_WITH_CURRENT_LOCATION const val ARG_WITH_CURRENT_LOCATION: String ARG_WITH_DROP_PIN const val ARG_WITH_DROP_PIN: String KEY_BOUNDS const val KEY_BOUNDS: String KEY_CENTER const val KEY_CENTER: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/#package-comskedgotripkituisearch","text":"","title":"Package com.skedgo.tripkit.ui.search"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/#types","text":"Name Summary CurrentLocationSuggestionViewModel class CurrentLocationSuggestionViewModel : SuggestionViewModel DropNewPinSuggestionViewModel class DropNewPinSuggestionViewModel : SuggestionViewModel FetchFoursquareLocations interface FetchFoursquareLocations : FetchLocations FetchGoogleLocations interface FetchGoogleLocations : FetchLocations FetchLocalLocations interface FetchLocalLocations : FetchLocations FetchLocations interface FetchLocations FetchLocationsParameters abstract class FetchLocationsParameters FetchSuggestions interface FetchSuggestions FetchTripGoLocations interface FetchTripGoLocations : FetchLocations GoogleSuggestionViewModel class GoogleSuggestionViewModel : SuggestionViewModel LocationSearchErrorViewModel class LocationSearchErrorViewModel LocationSearchFragment This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. class LocationSearchFragment : AbstractTripKitFragment LocationSearchViewModel class LocationSearchViewModel : RxViewModel SearchErrorType sealed class SearchErrorType SearchSuggestionChoice sealed class SearchSuggestionChoice SuggestionViewModel sealed class SuggestionViewModel VisibilityState enum class VisibilityState","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/#properties","text":"Name Summary ARG_CAN_OPEN_TIMETABLE const val ARG_CAN_OPEN_TIMETABLE: String ARG_INITIAL_QUERY const val ARG_INITIAL_QUERY: String ARG_NEAR_LAT const val ARG_NEAR_LAT: String ARG_NEAR_LON const val ARG_NEAR_LON: String ARG_NORTHEAST_LAT const val ARG_NORTHEAST_LAT: String ARG_NORTHEAST_LON const val ARG_NORTHEAST_LON: String ARG_QUERY_HINT const val ARG_QUERY_HINT: String ARG_SOUTHWEST_LAT const val ARG_SOUTHWEST_LAT: String ARG_SOUTHWEST_LON const val ARG_SOUTHWEST_LON: String ARG_WITH_CURRENT_LOCATION const val ARG_WITH_CURRENT_LOCATION: String ARG_WITH_DROP_PIN const val ARG_WITH_DROP_PIN: String KEY_BOUNDS const val KEY_BOUNDS: String KEY_CENTER const val KEY_CENTER: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-c-a-n_-o-p-e-n_-t-i-m-e-t-a-b-l-e/","text":"tripkit-android / com.skedgo.tripkit.ui.search / ARG_CAN_OPEN_TIMETABLE ARG_CAN_OPEN_TIMETABLE const val ARG_CAN_OPEN_TIMETABLE: String","title":" a r g  c a n  o p e n  t i m e t a b l e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-c-a-n_-o-p-e-n_-t-i-m-e-t-a-b-l-e/#arg_can_open_timetable","text":"const val ARG_CAN_OPEN_TIMETABLE: String","title":"ARG_CAN_OPEN_TIMETABLE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-i-n-i-t-i-a-l_-q-u-e-r-y/","text":"tripkit-android / com.skedgo.tripkit.ui.search / ARG_INITIAL_QUERY ARG_INITIAL_QUERY const val ARG_INITIAL_QUERY: String","title":" a r g  i n i t i a l  q u e r y"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-i-n-i-t-i-a-l_-q-u-e-r-y/#arg_initial_query","text":"const val ARG_INITIAL_QUERY: String","title":"ARG_INITIAL_QUERY"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-n-e-a-r_-l-a-t/","text":"tripkit-android / com.skedgo.tripkit.ui.search / ARG_NEAR_LAT ARG_NEAR_LAT const val ARG_NEAR_LAT: String","title":" a r g  n e a r  l a t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-n-e-a-r_-l-a-t/#arg_near_lat","text":"const val ARG_NEAR_LAT: String","title":"ARG_NEAR_LAT"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-n-e-a-r_-l-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.search / ARG_NEAR_LON ARG_NEAR_LON const val ARG_NEAR_LON: String","title":" a r g  n e a r  l o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-n-e-a-r_-l-o-n/#arg_near_lon","text":"const val ARG_NEAR_LON: String","title":"ARG_NEAR_LON"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-n-o-r-t-h-e-a-s-t_-l-a-t/","text":"tripkit-android / com.skedgo.tripkit.ui.search / ARG_NORTHEAST_LAT ARG_NORTHEAST_LAT const val ARG_NORTHEAST_LAT: String","title":" a r g  n o r t h e a s t  l a t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-n-o-r-t-h-e-a-s-t_-l-a-t/#arg_northeast_lat","text":"const val ARG_NORTHEAST_LAT: String","title":"ARG_NORTHEAST_LAT"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-n-o-r-t-h-e-a-s-t_-l-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.search / ARG_NORTHEAST_LON ARG_NORTHEAST_LON const val ARG_NORTHEAST_LON: String","title":" a r g  n o r t h e a s t  l o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-n-o-r-t-h-e-a-s-t_-l-o-n/#arg_northeast_lon","text":"const val ARG_NORTHEAST_LON: String","title":"ARG_NORTHEAST_LON"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-q-u-e-r-y_-h-i-n-t/","text":"tripkit-android / com.skedgo.tripkit.ui.search / ARG_QUERY_HINT ARG_QUERY_HINT const val ARG_QUERY_HINT: String","title":" a r g  q u e r y  h i n t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-q-u-e-r-y_-h-i-n-t/#arg_query_hint","text":"const val ARG_QUERY_HINT: String","title":"ARG_QUERY_HINT"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-s-o-u-t-h-w-e-s-t_-l-a-t/","text":"tripkit-android / com.skedgo.tripkit.ui.search / ARG_SOUTHWEST_LAT ARG_SOUTHWEST_LAT const val ARG_SOUTHWEST_LAT: String","title":" a r g  s o u t h w e s t  l a t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-s-o-u-t-h-w-e-s-t_-l-a-t/#arg_southwest_lat","text":"const val ARG_SOUTHWEST_LAT: String","title":"ARG_SOUTHWEST_LAT"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-s-o-u-t-h-w-e-s-t_-l-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.search / ARG_SOUTHWEST_LON ARG_SOUTHWEST_LON const val ARG_SOUTHWEST_LON: String","title":" a r g  s o u t h w e s t  l o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-s-o-u-t-h-w-e-s-t_-l-o-n/#arg_southwest_lon","text":"const val ARG_SOUTHWEST_LON: String","title":"ARG_SOUTHWEST_LON"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-w-i-t-h_-c-u-r-r-e-n-t_-l-o-c-a-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.search / ARG_WITH_CURRENT_LOCATION ARG_WITH_CURRENT_LOCATION const val ARG_WITH_CURRENT_LOCATION: String","title":" a r g  w i t h  c u r r e n t  l o c a t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-w-i-t-h_-c-u-r-r-e-n-t_-l-o-c-a-t-i-o-n/#arg_with_current_location","text":"const val ARG_WITH_CURRENT_LOCATION: String","title":"ARG_WITH_CURRENT_LOCATION"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-w-i-t-h_-d-r-o-p_-p-i-n/","text":"tripkit-android / com.skedgo.tripkit.ui.search / ARG_WITH_DROP_PIN ARG_WITH_DROP_PIN const val ARG_WITH_DROP_PIN: String","title":" a r g  w i t h  d r o p  p i n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-a-r-g_-w-i-t-h_-d-r-o-p_-p-i-n/#arg_with_drop_pin","text":"const val ARG_WITH_DROP_PIN: String","title":"ARG_WITH_DROP_PIN"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-k-e-y_-b-o-u-n-d-s/","text":"tripkit-android / com.skedgo.tripkit.ui.search / KEY_BOUNDS KEY_BOUNDS const val KEY_BOUNDS: String","title":" k e y  b o u n d s"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-k-e-y_-b-o-u-n-d-s/#key_bounds","text":"const val KEY_BOUNDS: String","title":"KEY_BOUNDS"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-k-e-y_-c-e-n-t-e-r/","text":"tripkit-android / com.skedgo.tripkit.ui.search / KEY_CENTER KEY_CENTER const val KEY_CENTER: String","title":" k e y  c e n t e r"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-k-e-y_-c-e-n-t-e-r/#key_center","text":"const val KEY_CENTER: String","title":"KEY_CENTER"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.search / CurrentLocationSuggestionViewModel CurrentLocationSuggestionViewModel class CurrentLocationSuggestionViewModel : SuggestionViewModel Constructors Name Summary <init> CurrentLocationSuggestionViewModel(context: Context) Properties Name Summary onItemClicked val onItemClicked: TapAction < SuggestionViewModel > subtitleTextColorRes val subtitleTextColorRes: Int title val title: String ! titleTextColorRes val titleTextColorRes: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/#currentlocationsuggestionviewmodel","text":"class CurrentLocationSuggestionViewModel : SuggestionViewModel","title":"CurrentLocationSuggestionViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/#constructors","text":"Name Summary <init> CurrentLocationSuggestionViewModel(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/#properties","text":"Name Summary onItemClicked val onItemClicked: TapAction < SuggestionViewModel > subtitleTextColorRes val subtitleTextColorRes: Int title val title: String ! titleTextColorRes val titleTextColorRes: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.search / CurrentLocationSuggestionViewModel / <init> <init> CurrentLocationSuggestionViewModel(context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/-init-/#init","text":"CurrentLocationSuggestionViewModel(context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/on-item-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.search / CurrentLocationSuggestionViewModel / onItemClicked onItemClicked val onItemClicked: TapAction < SuggestionViewModel >","title":"On item clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/on-item-clicked/#onitemclicked","text":"val onItemClicked: TapAction < SuggestionViewModel >","title":"onItemClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/subtitle-text-color-res/","text":"tripkit-android / com.skedgo.tripkit.ui.search / CurrentLocationSuggestionViewModel / subtitleTextColorRes subtitleTextColorRes protected val subtitleTextColorRes: Int","title":"Subtitle text color res"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/subtitle-text-color-res/#subtitletextcolorres","text":"protected val subtitleTextColorRes: Int","title":"subtitleTextColorRes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/title-text-color-res/","text":"tripkit-android / com.skedgo.tripkit.ui.search / CurrentLocationSuggestionViewModel / titleTextColorRes titleTextColorRes protected val titleTextColorRes: Int","title":"Title text color res"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/title-text-color-res/#titletextcolorres","text":"protected val titleTextColorRes: Int","title":"titleTextColorRes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/title/","text":"tripkit-android / com.skedgo.tripkit.ui.search / CurrentLocationSuggestionViewModel / title title val title: String !","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-current-location-suggestion-view-model/title/#title","text":"val title: String !","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.search / DropNewPinSuggestionViewModel DropNewPinSuggestionViewModel class DropNewPinSuggestionViewModel : SuggestionViewModel Constructors Name Summary <init> DropNewPinSuggestionViewModel(context: Context) Properties Name Summary onItemClicked val onItemClicked: TapAction < SuggestionViewModel > subtitleTextColorRes val subtitleTextColorRes: Int title val title: String ! titleTextColorRes val titleTextColorRes: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/#dropnewpinsuggestionviewmodel","text":"class DropNewPinSuggestionViewModel : SuggestionViewModel","title":"DropNewPinSuggestionViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/#constructors","text":"Name Summary <init> DropNewPinSuggestionViewModel(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/#properties","text":"Name Summary onItemClicked val onItemClicked: TapAction < SuggestionViewModel > subtitleTextColorRes val subtitleTextColorRes: Int title val title: String ! titleTextColorRes val titleTextColorRes: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.search / DropNewPinSuggestionViewModel / <init> <init> DropNewPinSuggestionViewModel(context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/-init-/#init","text":"DropNewPinSuggestionViewModel(context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/on-item-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.search / DropNewPinSuggestionViewModel / onItemClicked onItemClicked val onItemClicked: TapAction < SuggestionViewModel >","title":"On item clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/on-item-clicked/#onitemclicked","text":"val onItemClicked: TapAction < SuggestionViewModel >","title":"onItemClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/subtitle-text-color-res/","text":"tripkit-android / com.skedgo.tripkit.ui.search / DropNewPinSuggestionViewModel / subtitleTextColorRes subtitleTextColorRes protected val subtitleTextColorRes: Int","title":"Subtitle text color res"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/subtitle-text-color-res/#subtitletextcolorres","text":"protected val subtitleTextColorRes: Int","title":"subtitleTextColorRes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/title-text-color-res/","text":"tripkit-android / com.skedgo.tripkit.ui.search / DropNewPinSuggestionViewModel / titleTextColorRes titleTextColorRes protected val titleTextColorRes: Int","title":"Title text color res"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/title-text-color-res/#titletextcolorres","text":"protected val titleTextColorRes: Int","title":"titleTextColorRes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/title/","text":"tripkit-android / com.skedgo.tripkit.ui.search / DropNewPinSuggestionViewModel / title title val title: String !","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-drop-new-pin-suggestion-view-model/title/#title","text":"val title: String !","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-foursquare-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchFoursquareLocations FetchFoursquareLocations interface FetchFoursquareLocations : FetchLocations Functions Name Summary getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >> Inheritors Name Summary FetchFoursquareLocationsImpl class FetchFoursquareLocationsImpl : FetchFoursquareLocations","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-foursquare-locations/#fetchfoursquarelocations","text":"interface FetchFoursquareLocations : FetchLocations","title":"FetchFoursquareLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-foursquare-locations/#functions","text":"Name Summary getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-foursquare-locations/#inheritors","text":"Name Summary FetchFoursquareLocationsImpl class FetchFoursquareLocationsImpl : FetchFoursquareLocations","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-foursquare-locations/get-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchFoursquareLocations / getLocations getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Get locations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-foursquare-locations/get-locations/#getlocations","text":"abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"getLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-google-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchGoogleLocations FetchGoogleLocations interface FetchGoogleLocations : FetchLocations Functions Name Summary getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >> Inheritors Name Summary FetchGoogleLocationsImpl class FetchGoogleLocationsImpl : FetchGoogleLocations","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-google-locations/#fetchgooglelocations","text":"interface FetchGoogleLocations : FetchLocations","title":"FetchGoogleLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-google-locations/#functions","text":"Name Summary getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-google-locations/#inheritors","text":"Name Summary FetchGoogleLocationsImpl class FetchGoogleLocationsImpl : FetchGoogleLocations","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-google-locations/get-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchGoogleLocations / getLocations getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Get locations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-google-locations/get-locations/#getlocations","text":"abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"getLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-local-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocalLocations FetchLocalLocations interface FetchLocalLocations : FetchLocations Functions Name Summary getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >> Inheritors Name Summary FetchLocalLocationsImpl class FetchLocalLocationsImpl : FetchLocalLocations","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-local-locations/#fetchlocallocations","text":"interface FetchLocalLocations : FetchLocations","title":"FetchLocalLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-local-locations/#functions","text":"Name Summary getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-local-locations/#inheritors","text":"Name Summary FetchLocalLocationsImpl class FetchLocalLocationsImpl : FetchLocalLocations","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-local-locations/get-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocalLocations / getLocations getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Get locations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-local-locations/get-locations/#getlocations","text":"abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"getLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocations FetchLocations interface FetchLocations Functions Name Summary getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >> Inheritors Name Summary FetchFoursquareLocations interface FetchFoursquareLocations : FetchLocations FetchGoogleLocations interface FetchGoogleLocations : FetchLocations FetchLocalLocations interface FetchLocalLocations : FetchLocations FetchTripGoLocations interface FetchTripGoLocations : FetchLocations","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations/#fetchlocations","text":"interface FetchLocations","title":"FetchLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations/#functions","text":"Name Summary getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations/#inheritors","text":"Name Summary FetchFoursquareLocations interface FetchFoursquareLocations : FetchLocations FetchGoogleLocations interface FetchGoogleLocations : FetchLocations FetchLocalLocations interface FetchLocalLocations : FetchLocations FetchTripGoLocations interface FetchTripGoLocations : FetchLocations","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations/get-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocations / getLocations getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Get locations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations/get-locations/#getlocations","text":"abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"getLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters FetchLocationsParameters @Immutable abstract class FetchLocationsParameters Types Name Summary Builder interface Builder Constructors Name Summary <init> FetchLocationsParameters() Functions Name Summary builder open static fun builder(): Builder! nearbyLat abstract fun nearbyLat(): Double nearbyLon abstract fun nearbyLon(): Double northeastLat abstract fun northeastLat(): Double northeastLon abstract fun northeastLon(): Double southwestLat abstract fun southwestLat(): Double southwestLon abstract fun southwestLon(): Double term abstract fun term(): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/#fetchlocationsparameters","text":"@Immutable abstract class FetchLocationsParameters","title":"FetchLocationsParameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/#types","text":"Name Summary Builder interface Builder","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/#constructors","text":"Name Summary <init> FetchLocationsParameters()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/#functions","text":"Name Summary builder open static fun builder(): Builder! nearbyLat abstract fun nearbyLat(): Double nearbyLon abstract fun nearbyLon(): Double northeastLat abstract fun northeastLat(): Double northeastLon abstract fun northeastLon(): Double southwestLat abstract fun southwestLat(): Double southwestLon abstract fun southwestLon(): Double term abstract fun term(): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / <init> <init> FetchLocationsParameters()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-init-/#init","text":"FetchLocationsParameters()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/builder/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / builder builder open static fun builder(): Builder!","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/builder/#builder","text":"open static fun builder(): Builder!","title":"builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/nearby-lat/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / nearbyLat nearbyLat abstract fun nearbyLat(): Double","title":"Nearby lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/nearby-lat/#nearbylat","text":"abstract fun nearbyLat(): Double","title":"nearbyLat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/nearby-lon/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / nearbyLon nearbyLon abstract fun nearbyLon(): Double","title":"Nearby lon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/nearby-lon/#nearbylon","text":"abstract fun nearbyLon(): Double","title":"nearbyLon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/northeast-lat/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / northeastLat northeastLat abstract fun northeastLat(): Double","title":"Northeast lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/northeast-lat/#northeastlat","text":"abstract fun northeastLat(): Double","title":"northeastLat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/northeast-lon/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / northeastLon northeastLon abstract fun northeastLon(): Double","title":"Northeast lon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/northeast-lon/#northeastlon","text":"abstract fun northeastLon(): Double","title":"northeastLon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/southwest-lat/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / southwestLat southwestLat abstract fun southwestLat(): Double","title":"Southwest lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/southwest-lat/#southwestlat","text":"abstract fun southwestLat(): Double","title":"southwestLat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/southwest-lon/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / southwestLon southwestLon abstract fun southwestLon(): Double","title":"Southwest lon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/southwest-lon/#southwestlon","text":"abstract fun southwestLon(): Double","title":"southwestLon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/term/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / term term abstract fun term(): String !","title":"Term"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/term/#term","text":"abstract fun term(): String !","title":"term"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / Builder Builder interface Builder Functions Name Summary build abstract fun build(): FetchLocationsParameters ! nearbyLat abstract fun nearbyLat(nearbyLat: Double ): Builder! nearbyLon abstract fun nearbyLon(nearbyLon: Double ): Builder! northeastLat abstract fun northeastLat(northeastLat: Double ): Builder! northeastLon abstract fun northeastLon(northeastLon: Double ): Builder! southwestLat abstract fun southwestLat(southwestLat: Double ): Builder! southwestLon abstract fun southwestLon(southwestLon: Double ): Builder! term abstract fun term(term: String !): Builder!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/#builder","text":"interface Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/#functions","text":"Name Summary build abstract fun build(): FetchLocationsParameters ! nearbyLat abstract fun nearbyLat(nearbyLat: Double ): Builder! nearbyLon abstract fun nearbyLon(nearbyLon: Double ): Builder! northeastLat abstract fun northeastLat(northeastLat: Double ): Builder! northeastLon abstract fun northeastLon(northeastLon: Double ): Builder! southwestLat abstract fun southwestLat(southwestLat: Double ): Builder! southwestLon abstract fun southwestLon(southwestLon: Double ): Builder! term abstract fun term(term: String !): Builder!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / Builder / build build abstract fun build(): FetchLocationsParameters !","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/build/#build","text":"abstract fun build(): FetchLocationsParameters !","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/nearby-lat/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / Builder / nearbyLat nearbyLat abstract fun nearbyLat(nearbyLat: Double ): Builder!","title":"Nearby lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/nearby-lat/#nearbylat","text":"abstract fun nearbyLat(nearbyLat: Double ): Builder!","title":"nearbyLat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/nearby-lon/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / Builder / nearbyLon nearbyLon abstract fun nearbyLon(nearbyLon: Double ): Builder!","title":"Nearby lon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/nearby-lon/#nearbylon","text":"abstract fun nearbyLon(nearbyLon: Double ): Builder!","title":"nearbyLon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/northeast-lat/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / Builder / northeastLat northeastLat abstract fun northeastLat(northeastLat: Double ): Builder!","title":"Northeast lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/northeast-lat/#northeastlat","text":"abstract fun northeastLat(northeastLat: Double ): Builder!","title":"northeastLat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/northeast-lon/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / Builder / northeastLon northeastLon abstract fun northeastLon(northeastLon: Double ): Builder!","title":"Northeast lon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/northeast-lon/#northeastlon","text":"abstract fun northeastLon(northeastLon: Double ): Builder!","title":"northeastLon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/southwest-lat/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / Builder / southwestLat southwestLat abstract fun southwestLat(southwestLat: Double ): Builder!","title":"Southwest lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/southwest-lat/#southwestlat","text":"abstract fun southwestLat(southwestLat: Double ): Builder!","title":"southwestLat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/southwest-lon/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / Builder / southwestLon southwestLon abstract fun southwestLon(southwestLon: Double ): Builder!","title":"Southwest lon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/southwest-lon/#southwestlon","text":"abstract fun southwestLon(southwestLon: Double ): Builder!","title":"southwestLon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/term/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchLocationsParameters / Builder / term term abstract fun term(term: String !): Builder!","title":"Term"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-locations-parameters/-builder/term/#term","text":"abstract fun term(term: String !): Builder!","title":"term"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-suggestions/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchSuggestions FetchSuggestions interface FetchSuggestions Functions Name Summary query abstract fun query(parameters: FetchLocationsParameters ): Observable< AutoCompleteResult > Inheritors Name Summary AutoCompleteTask open class AutoCompleteTask : FetchSuggestions","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-suggestions/#fetchsuggestions","text":"interface FetchSuggestions","title":"FetchSuggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-suggestions/#functions","text":"Name Summary query abstract fun query(parameters: FetchLocationsParameters ): Observable< AutoCompleteResult >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-suggestions/#inheritors","text":"Name Summary AutoCompleteTask open class AutoCompleteTask : FetchSuggestions","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-suggestions/query/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchSuggestions / query query abstract fun query(parameters: FetchLocationsParameters ): Observable< AutoCompleteResult >","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-suggestions/query/#query","text":"abstract fun query(parameters: FetchLocationsParameters ): Observable< AutoCompleteResult >","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-trip-go-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchTripGoLocations FetchTripGoLocations interface FetchTripGoLocations : FetchLocations Functions Name Summary getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >> Inheritors Name Summary FetchTripGoLocationsImpl class FetchTripGoLocationsImpl : FetchTripGoLocations","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-trip-go-locations/#fetchtripgolocations","text":"interface FetchTripGoLocations : FetchLocations","title":"FetchTripGoLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-trip-go-locations/#functions","text":"Name Summary getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-trip-go-locations/#inheritors","text":"Name Summary FetchTripGoLocationsImpl class FetchTripGoLocationsImpl : FetchTripGoLocations","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-trip-go-locations/get-locations/","text":"tripkit-android / com.skedgo.tripkit.ui.search / FetchTripGoLocations / getLocations getLocations abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"Get locations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-fetch-trip-go-locations/get-locations/#getlocations","text":"abstract fun getLocations(parameters: FetchLocationsParameters ): Observable< List < GCResultInterface >>","title":"getLocations"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel GoogleSuggestionViewModel class GoogleSuggestionViewModel : SuggestionViewModel Constructors Name Summary <init> GoogleSuggestionViewModel(context: Context, picasso: Picasso, place: Place, canOpenTimetable: Boolean ) Properties Name Summary canOpenTimetable val canOpenTimetable: Boolean location val location: Location onItemClicked val onItemClicked: TapAction < SuggestionViewModel > picasso val picasso: Picasso place val place: Place showTimetableIcon val showTimetableIcon: Boolean subtitle val subtitle: String ? subtitleTextColorRes val subtitleTextColorRes: Int title val title: String titleTextColorRes val titleTextColorRes: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/#googlesuggestionviewmodel","text":"class GoogleSuggestionViewModel : SuggestionViewModel","title":"GoogleSuggestionViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/#constructors","text":"Name Summary <init> GoogleSuggestionViewModel(context: Context, picasso: Picasso, place: Place, canOpenTimetable: Boolean )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/#properties","text":"Name Summary canOpenTimetable val canOpenTimetable: Boolean location val location: Location onItemClicked val onItemClicked: TapAction < SuggestionViewModel > picasso val picasso: Picasso place val place: Place showTimetableIcon val showTimetableIcon: Boolean subtitle val subtitle: String ? subtitleTextColorRes val subtitleTextColorRes: Int title val title: String titleTextColorRes val titleTextColorRes: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel / <init> <init> GoogleSuggestionViewModel(context: Context, picasso: Picasso, place: Place, canOpenTimetable: Boolean )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/-init-/#init","text":"GoogleSuggestionViewModel(context: Context, picasso: Picasso, place: Place, canOpenTimetable: Boolean )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/can-open-timetable/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel / canOpenTimetable canOpenTimetable val canOpenTimetable: Boolean","title":"Can open timetable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/can-open-timetable/#canopentimetable","text":"val canOpenTimetable: Boolean","title":"canOpenTimetable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/location/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel / location location val location: Location","title":"Location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/location/#location","text":"val location: Location","title":"location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/on-item-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel / onItemClicked onItemClicked val onItemClicked: TapAction < SuggestionViewModel >","title":"On item clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/on-item-clicked/#onitemclicked","text":"val onItemClicked: TapAction < SuggestionViewModel >","title":"onItemClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/picasso/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel / picasso picasso val picasso: Picasso","title":"Picasso"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/picasso/#picasso","text":"val picasso: Picasso","title":"picasso"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/place/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel / place place val place: Place","title":"Place"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/place/#place","text":"val place: Place","title":"place"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/show-timetable-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel / showTimetableIcon showTimetableIcon val showTimetableIcon: Boolean","title":"Show timetable icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/show-timetable-icon/#showtimetableicon","text":"val showTimetableIcon: Boolean","title":"showTimetableIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/subtitle-text-color-res/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel / subtitleTextColorRes subtitleTextColorRes protected val subtitleTextColorRes: Int","title":"Subtitle text color res"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/subtitle-text-color-res/#subtitletextcolorres","text":"protected val subtitleTextColorRes: Int","title":"subtitleTextColorRes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/subtitle/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel / subtitle subtitle val subtitle: String ?","title":"Subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/subtitle/#subtitle","text":"val subtitle: String ?","title":"subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/title-text-color-res/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel / titleTextColorRes titleTextColorRes protected val titleTextColorRes: Int","title":"Title text color res"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/title-text-color-res/#titletextcolorres","text":"protected val titleTextColorRes: Int","title":"titleTextColorRes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/title/","text":"tripkit-android / com.skedgo.tripkit.ui.search / GoogleSuggestionViewModel / title title val title: String","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-google-suggestion-view-model/title/#title","text":"val title: String","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchErrorViewModel LocationSearchErrorViewModel class LocationSearchErrorViewModel Constructors Name Summary <init> LocationSearchErrorViewModel(context: Context) Properties Name Summary actionText val actionText: ObservableField< String > chooseOnMapObservable val chooseOnMapObservable: Observable< Unit > context val context: Context iconSrc val iconSrc: ObservableField<Drawable> retryObservable val retryObservable: Observable< Unit > title val title: ObservableField< String > Functions Name Summary performAction fun performAction(): Unit updateError fun updateError(errorType: SearchErrorType ?): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/#locationsearcherrorviewmodel","text":"class LocationSearchErrorViewModel","title":"LocationSearchErrorViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/#constructors","text":"Name Summary <init> LocationSearchErrorViewModel(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/#properties","text":"Name Summary actionText val actionText: ObservableField< String > chooseOnMapObservable val chooseOnMapObservable: Observable< Unit > context val context: Context iconSrc val iconSrc: ObservableField<Drawable> retryObservable val retryObservable: Observable< Unit > title val title: ObservableField< String >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/#functions","text":"Name Summary performAction fun performAction(): Unit updateError fun updateError(errorType: SearchErrorType ?): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchErrorViewModel / <init> <init> LocationSearchErrorViewModel(context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/-init-/#init","text":"LocationSearchErrorViewModel(context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/action-text/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchErrorViewModel / actionText actionText val actionText: ObservableField< String >","title":"Action text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/action-text/#actiontext","text":"val actionText: ObservableField< String >","title":"actionText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/choose-on-map-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchErrorViewModel / chooseOnMapObservable chooseOnMapObservable val chooseOnMapObservable: Observable< Unit >","title":"Choose on map observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/choose-on-map-observable/#chooseonmapobservable","text":"val chooseOnMapObservable: Observable< Unit >","title":"chooseOnMapObservable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/context/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchErrorViewModel / context context val context: Context","title":"Context"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/context/#context","text":"val context: Context","title":"context"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/icon-src/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchErrorViewModel / iconSrc iconSrc val iconSrc: ObservableField<Drawable>","title":"Icon src"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/icon-src/#iconsrc","text":"val iconSrc: ObservableField<Drawable>","title":"iconSrc"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/perform-action/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchErrorViewModel / performAction performAction fun performAction(): Unit","title":"Perform action"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/perform-action/#performaction","text":"fun performAction(): Unit","title":"performAction"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/retry-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchErrorViewModel / retryObservable retryObservable val retryObservable: Observable< Unit >","title":"Retry observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/retry-observable/#retryobservable","text":"val retryObservable: Observable< Unit >","title":"retryObservable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/title/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchErrorViewModel / title title val title: ObservableField< String >","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/title/#title","text":"val title: ObservableField< String >","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/update-error/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchErrorViewModel / updateError updateError fun updateError(errorType: SearchErrorType ?): Unit","title":"Update error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-error-view-model/update-error/#updateerror","text":"fun updateError(errorType: SearchErrorType ?): Unit","title":"updateError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment LocationSearchFragment class LocationSearchFragment : AbstractTripKitFragment This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. Use it with its Builder: LocationSearchFragment.Builder() .withBounds(mMap.projection.visibleRegion.latLngBounds) .near(mMap.cameraPosition.target) .withHint(getString(R.string.search)) .allowCurrentLocation(true) .allowDropPin() .build() Types Name Summary Builder Used to create a new instance of the fragment. class Builder OnCurrentLocationSelectedListener This callback will be invoked when the user chooses \"Current Location\" interface OnCurrentLocationSelectedListener OnDropPinSelectedListener This callback will be invoked when the user chooses \"Choose on Map\" interface OnDropPinSelectedListener OnLocationSelectedListener This callback will be invoked when a search result is clicked. interface OnLocationSelectedListener Constructors Name Summary <init> This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. LocationSearchFragment() Functions Name Summary setOnCurrentLocationSelectedListener fun setOnCurrentLocationSelectedListener(callback: OnCurrentLocationSelectedListener): Unit fun setOnCurrentLocationSelectedListener(listener: () -> Unit ): Unit setOnDropPinSelectedListener fun setOnDropPinSelectedListener(callback: OnDropPinSelectedListener): Unit fun setOnDropPinSelectedListener(listener: () -> Unit ): Unit setOnLocationSelectedListener fun setOnLocationSelectedListener(callback: OnLocationSelectedListener): Unit fun setOnLocationSelectedListener(listener: ( Location ) -> Unit ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/#locationsearchfragment","text":"class LocationSearchFragment : AbstractTripKitFragment This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. Use it with its Builder: LocationSearchFragment.Builder() .withBounds(mMap.projection.visibleRegion.latLngBounds) .near(mMap.cameraPosition.target) .withHint(getString(R.string.search)) .allowCurrentLocation(true) .allowDropPin() .build()","title":"LocationSearchFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/#types","text":"Name Summary Builder Used to create a new instance of the fragment. class Builder OnCurrentLocationSelectedListener This callback will be invoked when the user chooses \"Current Location\" interface OnCurrentLocationSelectedListener OnDropPinSelectedListener This callback will be invoked when the user chooses \"Choose on Map\" interface OnDropPinSelectedListener OnLocationSelectedListener This callback will be invoked when a search result is clicked. interface OnLocationSelectedListener","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/#constructors","text":"Name Summary <init> This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. LocationSearchFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/#functions","text":"Name Summary setOnCurrentLocationSelectedListener fun setOnCurrentLocationSelectedListener(callback: OnCurrentLocationSelectedListener): Unit fun setOnCurrentLocationSelectedListener(listener: () -> Unit ): Unit setOnDropPinSelectedListener fun setOnDropPinSelectedListener(callback: OnDropPinSelectedListener): Unit fun setOnDropPinSelectedListener(listener: () -> Unit ): Unit setOnLocationSelectedListener fun setOnLocationSelectedListener(callback: OnLocationSelectedListener): Unit fun setOnLocationSelectedListener(listener: ( Location ) -> Unit ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / <init> <init> LocationSearchFragment() This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. Use it with its Builder: LocationSearchFragment.Builder() .withBounds(mMap.projection.visibleRegion.latLngBounds) .near(mMap.cameraPosition.target) .withHint(getString(R.string.search)) .allowCurrentLocation(true) .allowDropPin() .build()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-init-/#init","text":"LocationSearchFragment() This is a self-contained location search component which merges search results from both SkedGo's search results as well as Google Places. Use it with its Builder: LocationSearchFragment.Builder() .withBounds(mMap.projection.visibleRegion.latLngBounds) .near(mMap.cameraPosition.target) .withHint(getString(R.string.search)) .allowCurrentLocation(true) .allowDropPin() .build()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/set-on-current-location-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / setOnCurrentLocationSelectedListener setOnCurrentLocationSelectedListener fun setOnCurrentLocationSelectedListener(callback: OnCurrentLocationSelectedListener): Unit fun setOnCurrentLocationSelectedListener(listener: () -> Unit ): Unit","title":"Set on current location selected listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/set-on-current-location-selected-listener/#setoncurrentlocationselectedlistener","text":"fun setOnCurrentLocationSelectedListener(callback: OnCurrentLocationSelectedListener): Unit fun setOnCurrentLocationSelectedListener(listener: () -> Unit ): Unit","title":"setOnCurrentLocationSelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/set-on-drop-pin-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / setOnDropPinSelectedListener setOnDropPinSelectedListener fun setOnDropPinSelectedListener(callback: OnDropPinSelectedListener): Unit fun setOnDropPinSelectedListener(listener: () -> Unit ): Unit","title":"Set on drop pin selected listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/set-on-drop-pin-selected-listener/#setondroppinselectedlistener","text":"fun setOnDropPinSelectedListener(callback: OnDropPinSelectedListener): Unit fun setOnDropPinSelectedListener(listener: () -> Unit ): Unit","title":"setOnDropPinSelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/set-on-location-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / setOnLocationSelectedListener setOnLocationSelectedListener fun setOnLocationSelectedListener(callback: OnLocationSelectedListener): Unit fun setOnLocationSelectedListener(listener: ( Location ) -> Unit ): Unit","title":"Set on location selected listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/set-on-location-selected-listener/#setonlocationselectedlistener","text":"fun setOnLocationSelectedListener(callback: OnLocationSelectedListener): Unit fun setOnLocationSelectedListener(listener: ( Location ) -> Unit ): Unit","title":"setOnLocationSelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / Builder Builder class Builder Used to create a new instance of the fragment. Constructors Name Summary <init> Used to create a new instance of the fragment. Builder() Functions Name Summary allowCurrentLocation The fragment can optionally show a static option of \"Current Location\". fun allowCurrentLocation(withCurrentLocation: Boolean = true): Builder allowDropPin The fragment can optionally show a static option of \"Choose on Map\". fun allowDropPin(withDropPin: Boolean = true): Builder build Finalize and build the Fragment fun build(): LocationSearchFragment near Used for TripGo searches. For example, the center of a map. fun near(near: LatLng?): Builder withBounds Used for Google Places searches. For example, a map's visible boundaries. fun withBounds(bounds: LatLngBounds?): Builder withHint Sets the EditText hint. For example, \"Where do you want to go?\" fun withHint(hint: String ?): Builder withInitialQuery Sets the initial query. fun withInitialQuery(initialQuery: String ?): Builder","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/#builder","text":"class Builder Used to create a new instance of the fragment.","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/#constructors","text":"Name Summary <init> Used to create a new instance of the fragment. Builder()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/#functions","text":"Name Summary allowCurrentLocation The fragment can optionally show a static option of \"Current Location\". fun allowCurrentLocation(withCurrentLocation: Boolean = true): Builder allowDropPin The fragment can optionally show a static option of \"Choose on Map\". fun allowDropPin(withDropPin: Boolean = true): Builder build Finalize and build the Fragment fun build(): LocationSearchFragment near Used for TripGo searches. For example, the center of a map. fun near(near: LatLng?): Builder withBounds Used for Google Places searches. For example, a map's visible boundaries. fun withBounds(bounds: LatLngBounds?): Builder withHint Sets the EditText hint. For example, \"Where do you want to go?\" fun withHint(hint: String ?): Builder withInitialQuery Sets the initial query. fun withInitialQuery(initialQuery: String ?): Builder","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / Builder / <init> <init> Builder() Used to create a new instance of the fragment.","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/-init-/#init","text":"Builder() Used to create a new instance of the fragment.","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/allow-current-location/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / Builder / allowCurrentLocation allowCurrentLocation fun allowCurrentLocation(withCurrentLocation: Boolean = true): Builder The fragment can optionally show a static option of \"Current Location\". Parameters withCurrentLocation - When true , show the \"Current Location\" option Return this Builder","title":"Allow current location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/allow-current-location/#allowcurrentlocation","text":"fun allowCurrentLocation(withCurrentLocation: Boolean = true): Builder The fragment can optionally show a static option of \"Current Location\".","title":"allowCurrentLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/allow-current-location/#parameters","text":"withCurrentLocation - When true , show the \"Current Location\" option Return this Builder","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/allow-drop-pin/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / Builder / allowDropPin allowDropPin fun allowDropPin(withDropPin: Boolean = true): Builder The fragment can optionally show a static option of \"Choose on Map\". Parameters withDropPin - When true , show the \"Choose on Map\" option Return this Builder","title":"Allow drop pin"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/allow-drop-pin/#allowdroppin","text":"fun allowDropPin(withDropPin: Boolean = true): Builder The fragment can optionally show a static option of \"Choose on Map\".","title":"allowDropPin"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/allow-drop-pin/#parameters","text":"withDropPin - When true , show the \"Choose on Map\" option Return this Builder","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / Builder / build build fun build(): LocationSearchFragment Finalize and build the Fragment Return A usable LocationSearchFragment","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/build/#build","text":"fun build(): LocationSearchFragment Finalize and build the Fragment Return A usable LocationSearchFragment","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/near/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / Builder / near near fun near(near: LatLng?): Builder Used for TripGo searches. For example, the center of a map. Parameters near - Where to center TripGo searches on Return this Builder","title":"Near"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/near/#near","text":"fun near(near: LatLng?): Builder Used for TripGo searches. For example, the center of a map.","title":"near"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/near/#parameters","text":"near - Where to center TripGo searches on Return this Builder","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/with-bounds/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / Builder / withBounds withBounds fun withBounds(bounds: LatLngBounds?): Builder Used for Google Places searches. For example, a map's visible boundaries. Parameters bounds - The boundaries for Google Places Return this Builder","title":"With bounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/with-bounds/#withbounds","text":"fun withBounds(bounds: LatLngBounds?): Builder Used for Google Places searches. For example, a map's visible boundaries.","title":"withBounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/with-bounds/#parameters","text":"bounds - The boundaries for Google Places Return this Builder","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/with-hint/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / Builder / withHint withHint fun withHint(hint: String ?): Builder Sets the EditText hint. For example, \"Where do you want to go?\" Parameters hint - A hint Return this Builder","title":"With hint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/with-hint/#withhint","text":"fun withHint(hint: String ?): Builder Sets the EditText hint. For example, \"Where do you want to go?\"","title":"withHint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/with-hint/#parameters","text":"hint - A hint Return this Builder","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/with-initial-query/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / Builder / withInitialQuery withInitialQuery fun withInitialQuery(initialQuery: String ?): Builder Sets the initial query. Parameters initialQuery - The query to pre-populate Return this Builder","title":"With initial query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/with-initial-query/#withinitialquery","text":"fun withInitialQuery(initialQuery: String ?): Builder Sets the initial query.","title":"withInitialQuery"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-builder/with-initial-query/#parameters","text":"initialQuery - The query to pre-populate Return this Builder","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-current-location-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / OnCurrentLocationSelectedListener OnCurrentLocationSelectedListener interface OnCurrentLocationSelectedListener This callback will be invoked when the user chooses \"Current Location\" Functions Name Summary onCurrentLocationSelected abstract fun onCurrentLocationSelected(): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-current-location-selected-listener/#oncurrentlocationselectedlistener","text":"interface OnCurrentLocationSelectedListener This callback will be invoked when the user chooses \"Current Location\"","title":"OnCurrentLocationSelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-current-location-selected-listener/#functions","text":"Name Summary onCurrentLocationSelected abstract fun onCurrentLocationSelected(): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-current-location-selected-listener/on-current-location-selected/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / OnCurrentLocationSelectedListener / onCurrentLocationSelected onCurrentLocationSelected abstract fun onCurrentLocationSelected(): Unit","title":"On current location selected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-current-location-selected-listener/on-current-location-selected/#oncurrentlocationselected","text":"abstract fun onCurrentLocationSelected(): Unit","title":"onCurrentLocationSelected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-drop-pin-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / OnDropPinSelectedListener OnDropPinSelectedListener interface OnDropPinSelectedListener This callback will be invoked when the user chooses \"Choose on Map\" Functions Name Summary onDropPinSelected abstract fun onDropPinSelected(): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-drop-pin-selected-listener/#ondroppinselectedlistener","text":"interface OnDropPinSelectedListener This callback will be invoked when the user chooses \"Choose on Map\"","title":"OnDropPinSelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-drop-pin-selected-listener/#functions","text":"Name Summary onDropPinSelected abstract fun onDropPinSelected(): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-drop-pin-selected-listener/on-drop-pin-selected/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / OnDropPinSelectedListener / onDropPinSelected onDropPinSelected abstract fun onDropPinSelected(): Unit","title":"On drop pin selected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-drop-pin-selected-listener/on-drop-pin-selected/#ondroppinselected","text":"abstract fun onDropPinSelected(): Unit","title":"onDropPinSelected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-location-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / OnLocationSelectedListener OnLocationSelectedListener interface OnLocationSelectedListener This callback will be invoked when a search result is clicked. Functions Name Summary onLocationSelected abstract fun onLocationSelected(location: Location ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-location-selected-listener/#onlocationselectedlistener","text":"interface OnLocationSelectedListener This callback will be invoked when a search result is clicked.","title":"OnLocationSelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-location-selected-listener/#functions","text":"Name Summary onLocationSelected abstract fun onLocationSelected(location: Location ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-location-selected-listener/on-location-selected/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchFragment / OnLocationSelectedListener / onLocationSelected onLocationSelected abstract fun onLocationSelected(location: Location ): Unit","title":"On location selected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-fragment/-on-location-selected-listener/on-location-selected/#onlocationselected","text":"abstract fun onLocationSelected(location: Location ): Unit","title":"onLocationSelected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel LocationSearchViewModel class LocationSearchViewModel : RxViewModel Constructors Name Summary <init> LocationSearchViewModel(context: Context, regionService: RegionService , bus: Bus, placeSearchRepository: PlaceSearchRepository, fetchSuggestions: FetchSuggestions , errorLogger: ErrorLogger , picasso: Picasso, schedulerFactory: SchedulerFactory , errorViewModel: LocationSearchErrorViewModel ) Properties Name Summary allSuggestions val allSuggestions: MergeObservableList< SuggestionViewModel > chosenCityName val chosenCityName: ObservableField< String > currentLocationChosen val currentLocationChosen: PublishRelay< Unit > dismiss val dismiss: PublishRelay< Unit > errorViewModel val errorViewModel: LocationSearchErrorViewModel fixedSuggestions val fixedSuggestions: ObservableList< SuggestionViewModel > googleSuggestions val googleSuggestions: ObservableList< GoogleSuggestionViewModel > itemBinding val itemBinding: ItemBinding< SuggestionViewModel !> locationChosen val locationChosen: PublishRelay< Location > pinDropChosen val pinDropChosen: PublishRelay< Unit > queries val queries: PublishRelay< FetchLocationsParameters > showError val showError: ObservableBoolean showGoogleAttribution val showGoogleAttribution: ObservableBoolean showList val showList: ObservableBoolean showMiddleProgressBar val showMiddleProgressBar: ObservableBoolean showRefreshing val showRefreshing: ObservableBoolean unableToFindPlaceCoordinatesError val unableToFindPlaceCoordinatesError: Observable< Throwable > Functions Name Summary bounds fun bounds(): LatLngBounds center fun center(): LatLng changeCity fun changeCity(data: Intent): Unit goBack fun goBack(): Unit handleArgs fun handleArgs(args: Bundle?): Unit loadCity fun loadCity(): Unit observeGoogleAttribution fun observeGoogleAttribution(suggestions: Observable< List <Place>>): Observable< Unit > onQueryTextChanged fun onQueryTextChanged(query: String ): Unit onSuggestionItemClick fun onSuggestionItemClick(choice: SearchSuggestionChoice ): Unit onTextSubmit fun onTextSubmit(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/#locationsearchviewmodel","text":"class LocationSearchViewModel : RxViewModel","title":"LocationSearchViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/#constructors","text":"Name Summary <init> LocationSearchViewModel(context: Context, regionService: RegionService , bus: Bus, placeSearchRepository: PlaceSearchRepository, fetchSuggestions: FetchSuggestions , errorLogger: ErrorLogger , picasso: Picasso, schedulerFactory: SchedulerFactory , errorViewModel: LocationSearchErrorViewModel )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/#properties","text":"Name Summary allSuggestions val allSuggestions: MergeObservableList< SuggestionViewModel > chosenCityName val chosenCityName: ObservableField< String > currentLocationChosen val currentLocationChosen: PublishRelay< Unit > dismiss val dismiss: PublishRelay< Unit > errorViewModel val errorViewModel: LocationSearchErrorViewModel fixedSuggestions val fixedSuggestions: ObservableList< SuggestionViewModel > googleSuggestions val googleSuggestions: ObservableList< GoogleSuggestionViewModel > itemBinding val itemBinding: ItemBinding< SuggestionViewModel !> locationChosen val locationChosen: PublishRelay< Location > pinDropChosen val pinDropChosen: PublishRelay< Unit > queries val queries: PublishRelay< FetchLocationsParameters > showError val showError: ObservableBoolean showGoogleAttribution val showGoogleAttribution: ObservableBoolean showList val showList: ObservableBoolean showMiddleProgressBar val showMiddleProgressBar: ObservableBoolean showRefreshing val showRefreshing: ObservableBoolean unableToFindPlaceCoordinatesError val unableToFindPlaceCoordinatesError: Observable< Throwable >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/#functions","text":"Name Summary bounds fun bounds(): LatLngBounds center fun center(): LatLng changeCity fun changeCity(data: Intent): Unit goBack fun goBack(): Unit handleArgs fun handleArgs(args: Bundle?): Unit loadCity fun loadCity(): Unit observeGoogleAttribution fun observeGoogleAttribution(suggestions: Observable< List <Place>>): Observable< Unit > onQueryTextChanged fun onQueryTextChanged(query: String ): Unit onSuggestionItemClick fun onSuggestionItemClick(choice: SearchSuggestionChoice ): Unit onTextSubmit fun onTextSubmit(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / <init> <init> LocationSearchViewModel(context: Context, regionService: RegionService , bus: Bus, placeSearchRepository: PlaceSearchRepository, fetchSuggestions: FetchSuggestions , errorLogger: ErrorLogger , picasso: Picasso, schedulerFactory: SchedulerFactory , errorViewModel: LocationSearchErrorViewModel )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/-init-/#init","text":"LocationSearchViewModel(context: Context, regionService: RegionService , bus: Bus, placeSearchRepository: PlaceSearchRepository, fetchSuggestions: FetchSuggestions , errorLogger: ErrorLogger , picasso: Picasso, schedulerFactory: SchedulerFactory , errorViewModel: LocationSearchErrorViewModel )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/all-suggestions/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / allSuggestions allSuggestions val allSuggestions: MergeObservableList< SuggestionViewModel >","title":"All suggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/all-suggestions/#allsuggestions","text":"val allSuggestions: MergeObservableList< SuggestionViewModel >","title":"allSuggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/bounds/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / bounds bounds fun bounds(): LatLngBounds","title":"Bounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/bounds/#bounds","text":"fun bounds(): LatLngBounds","title":"bounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/center/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / center center fun center(): LatLng","title":"Center"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/center/#center","text":"fun center(): LatLng","title":"center"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/change-city/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / changeCity changeCity fun changeCity(data: Intent): Unit","title":"Change city"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/change-city/#changecity","text":"fun changeCity(data: Intent): Unit","title":"changeCity"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/chosen-city-name/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / chosenCityName chosenCityName val chosenCityName: ObservableField< String >","title":"Chosen city name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/chosen-city-name/#chosencityname","text":"val chosenCityName: ObservableField< String >","title":"chosenCityName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/current-location-chosen/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / currentLocationChosen currentLocationChosen val currentLocationChosen: PublishRelay< Unit >","title":"Current location chosen"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/current-location-chosen/#currentlocationchosen","text":"val currentLocationChosen: PublishRelay< Unit >","title":"currentLocationChosen"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/dismiss/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / dismiss dismiss val dismiss: PublishRelay< Unit >","title":"Dismiss"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/dismiss/#dismiss","text":"val dismiss: PublishRelay< Unit >","title":"dismiss"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/error-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / errorViewModel errorViewModel val errorViewModel: LocationSearchErrorViewModel","title":"Error view model"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/error-view-model/#errorviewmodel","text":"val errorViewModel: LocationSearchErrorViewModel","title":"errorViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/fixed-suggestions/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / fixedSuggestions fixedSuggestions val fixedSuggestions: ObservableList< SuggestionViewModel >","title":"Fixed suggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/fixed-suggestions/#fixedsuggestions","text":"val fixedSuggestions: ObservableList< SuggestionViewModel >","title":"fixedSuggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/go-back/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / goBack goBack fun goBack(): Unit","title":"Go back"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/go-back/#goback","text":"fun goBack(): Unit","title":"goBack"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/google-suggestions/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / googleSuggestions googleSuggestions val googleSuggestions: ObservableList< GoogleSuggestionViewModel >","title":"Google suggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/google-suggestions/#googlesuggestions","text":"val googleSuggestions: ObservableList< GoogleSuggestionViewModel >","title":"googleSuggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/handle-args/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / handleArgs handleArgs fun handleArgs(args: Bundle?): Unit","title":"Handle args"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/handle-args/#handleargs","text":"fun handleArgs(args: Bundle?): Unit","title":"handleArgs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/item-binding/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / itemBinding itemBinding val itemBinding: ItemBinding< SuggestionViewModel !>","title":"Item binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/item-binding/#itembinding","text":"val itemBinding: ItemBinding< SuggestionViewModel !>","title":"itemBinding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/load-city/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / loadCity loadCity fun loadCity(): Unit","title":"Load city"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/load-city/#loadcity","text":"fun loadCity(): Unit","title":"loadCity"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/location-chosen/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / locationChosen locationChosen val locationChosen: PublishRelay< Location >","title":"Location chosen"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/location-chosen/#locationchosen","text":"val locationChosen: PublishRelay< Location >","title":"locationChosen"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/observe-google-attribution/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / observeGoogleAttribution observeGoogleAttribution fun observeGoogleAttribution(suggestions: Observable< List <Place>>): Observable< Unit >","title":"Observe google attribution"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/observe-google-attribution/#observegoogleattribution","text":"fun observeGoogleAttribution(suggestions: Observable< List <Place>>): Observable< Unit >","title":"observeGoogleAttribution"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/on-query-text-changed/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / onQueryTextChanged onQueryTextChanged fun onQueryTextChanged(query: String ): Unit","title":"On query text changed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/on-query-text-changed/#onquerytextchanged","text":"fun onQueryTextChanged(query: String ): Unit","title":"onQueryTextChanged"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/on-suggestion-item-click/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / onSuggestionItemClick onSuggestionItemClick fun onSuggestionItemClick(choice: SearchSuggestionChoice ): Unit","title":"On suggestion item click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/on-suggestion-item-click/#onsuggestionitemclick","text":"fun onSuggestionItemClick(choice: SearchSuggestionChoice ): Unit","title":"onSuggestionItemClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/on-text-submit/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / onTextSubmit onTextSubmit fun onTextSubmit(): Boolean","title":"On text submit"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/on-text-submit/#ontextsubmit","text":"fun onTextSubmit(): Boolean","title":"onTextSubmit"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/pin-drop-chosen/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / pinDropChosen pinDropChosen val pinDropChosen: PublishRelay< Unit >","title":"Pin drop chosen"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/pin-drop-chosen/#pindropchosen","text":"val pinDropChosen: PublishRelay< Unit >","title":"pinDropChosen"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/queries/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / queries queries val queries: PublishRelay< FetchLocationsParameters >","title":"Queries"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/queries/#queries","text":"val queries: PublishRelay< FetchLocationsParameters >","title":"queries"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/show-error/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / showError showError val showError: ObservableBoolean","title":"Show error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/show-error/#showerror","text":"val showError: ObservableBoolean","title":"showError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/show-google-attribution/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / showGoogleAttribution showGoogleAttribution val showGoogleAttribution: ObservableBoolean","title":"Show google attribution"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/show-google-attribution/#showgoogleattribution","text":"val showGoogleAttribution: ObservableBoolean","title":"showGoogleAttribution"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/show-list/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / showList showList val showList: ObservableBoolean","title":"Show list"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/show-list/#showlist","text":"val showList: ObservableBoolean","title":"showList"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/show-middle-progress-bar/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / showMiddleProgressBar showMiddleProgressBar val showMiddleProgressBar: ObservableBoolean","title":"Show middle progress bar"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/show-middle-progress-bar/#showmiddleprogressbar","text":"val showMiddleProgressBar: ObservableBoolean","title":"showMiddleProgressBar"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/show-refreshing/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / showRefreshing showRefreshing val showRefreshing: ObservableBoolean","title":"Show refreshing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/show-refreshing/#showrefreshing","text":"val showRefreshing: ObservableBoolean","title":"showRefreshing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/unable-to-find-place-coordinates-error/","text":"tripkit-android / com.skedgo.tripkit.ui.search / LocationSearchViewModel / unableToFindPlaceCoordinatesError unableToFindPlaceCoordinatesError val unableToFindPlaceCoordinatesError: Observable< Throwable >","title":"Unable to find place coordinates error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-location-search-view-model/unable-to-find-place-coordinates-error/#unabletofindplacecoordinateserror","text":"val unableToFindPlaceCoordinatesError: Observable< Throwable >","title":"unableToFindPlaceCoordinatesError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchErrorType SearchErrorType sealed class SearchErrorType Types Name Summary NoConnection object NoConnection : SearchErrorType NoResults data class NoResults : SearchErrorType OtherError object OtherError : SearchErrorType Properties Name Summary searchText val searchText: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/#searcherrortype","text":"sealed class SearchErrorType","title":"SearchErrorType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/#types","text":"Name Summary NoConnection object NoConnection : SearchErrorType NoResults data class NoResults : SearchErrorType OtherError object OtherError : SearchErrorType","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/#properties","text":"Name Summary searchText val searchText: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-no-connection/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchErrorType / NoConnection NoConnection object NoConnection : SearchErrorType","title":" no connection"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-no-connection/#noconnection","text":"object NoConnection : SearchErrorType","title":"NoConnection"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-other-error/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchErrorType / OtherError OtherError object OtherError : SearchErrorType","title":" other error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-other-error/#othererror","text":"object OtherError : SearchErrorType","title":"OtherError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/search-text/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchErrorType / searchText searchText val searchText: String ?","title":"Search text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/search-text/#searchtext","text":"val searchText: String ?","title":"searchText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-no-results/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchErrorType / NoResults NoResults data class NoResults : SearchErrorType Constructors Name Summary <init> NoResults(query: String ? = null) Properties Name Summary query val query: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-no-results/#noresults","text":"data class NoResults : SearchErrorType","title":"NoResults"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-no-results/#constructors","text":"Name Summary <init> NoResults(query: String ? = null)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-no-results/#properties","text":"Name Summary query val query: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-no-results/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchErrorType / NoResults / <init> <init> NoResults(query: String ? = null)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-no-results/-init-/#init","text":"NoResults(query: String ? = null)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-no-results/query/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchErrorType / NoResults / query query val query: String ?","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-error-type/-no-results/query/#query","text":"val query: String ?","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchSuggestionChoice SearchSuggestionChoice sealed class SearchSuggestionChoice Types Name Summary FixedChoice data class FixedChoice : SearchSuggestionChoice PlaceChoice data class PlaceChoice : SearchSuggestionChoice","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/#searchsuggestionchoice","text":"sealed class SearchSuggestionChoice","title":"SearchSuggestionChoice"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/#types","text":"Name Summary FixedChoice data class FixedChoice : SearchSuggestionChoice PlaceChoice data class PlaceChoice : SearchSuggestionChoice","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-fixed-choice/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchSuggestionChoice / FixedChoice FixedChoice data class FixedChoice : SearchSuggestionChoice Constructors Name Summary <init> FixedChoice(position: Int ) Properties Name Summary position val position: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-fixed-choice/#fixedchoice","text":"data class FixedChoice : SearchSuggestionChoice","title":"FixedChoice"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-fixed-choice/#constructors","text":"Name Summary <init> FixedChoice(position: Int )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-fixed-choice/#properties","text":"Name Summary position val position: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-fixed-choice/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchSuggestionChoice / FixedChoice / <init> <init> FixedChoice(position: Int )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-fixed-choice/-init-/#init","text":"FixedChoice(position: Int )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-fixed-choice/position/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchSuggestionChoice / FixedChoice / position position val position: Int","title":"Position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-fixed-choice/position/#position","text":"val position: Int","title":"position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-place-choice/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchSuggestionChoice / PlaceChoice PlaceChoice data class PlaceChoice : SearchSuggestionChoice Constructors Name Summary <init> PlaceChoice(place: Place, position: Int ) Properties Name Summary place val place: Place position val position: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-place-choice/#placechoice","text":"data class PlaceChoice : SearchSuggestionChoice","title":"PlaceChoice"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-place-choice/#constructors","text":"Name Summary <init> PlaceChoice(place: Place, position: Int )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-place-choice/#properties","text":"Name Summary place val place: Place position val position: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-place-choice/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchSuggestionChoice / PlaceChoice / <init> <init> PlaceChoice(place: Place, position: Int )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-place-choice/-init-/#init","text":"PlaceChoice(place: Place, position: Int )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-place-choice/place/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchSuggestionChoice / PlaceChoice / place place val place: Place","title":"Place"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-place-choice/place/#place","text":"val place: Place","title":"place"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-place-choice/position/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SearchSuggestionChoice / PlaceChoice / position position val position: Int","title":"Position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-search-suggestion-choice/-place-choice/position/#position","text":"val position: Int","title":"position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SuggestionViewModel SuggestionViewModel sealed class SuggestionViewModel Properties Name Summary icon val icon: ObservableField<Drawable?> onItemClicked abstract val onItemClicked: TapAction < SuggestionViewModel > showTimetableIcon open val showTimetableIcon: Boolean subtitle open val subtitle: String ? subtitleTextColor val subtitleTextColor: Int subtitleTextColorRes abstract val subtitleTextColorRes: Int title abstract val title: String titleTextColor val titleTextColor: Int titleTextColorRes abstract val titleTextColorRes: Int Inheritors Name Summary CurrentLocationSuggestionViewModel class CurrentLocationSuggestionViewModel : SuggestionViewModel DropNewPinSuggestionViewModel class DropNewPinSuggestionViewModel : SuggestionViewModel GoogleSuggestionViewModel class GoogleSuggestionViewModel : SuggestionViewModel","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/#suggestionviewmodel","text":"sealed class SuggestionViewModel","title":"SuggestionViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/#properties","text":"Name Summary icon val icon: ObservableField<Drawable?> onItemClicked abstract val onItemClicked: TapAction < SuggestionViewModel > showTimetableIcon open val showTimetableIcon: Boolean subtitle open val subtitle: String ? subtitleTextColor val subtitleTextColor: Int subtitleTextColorRes abstract val subtitleTextColorRes: Int title abstract val title: String titleTextColor val titleTextColor: Int titleTextColorRes abstract val titleTextColorRes: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/#inheritors","text":"Name Summary CurrentLocationSuggestionViewModel class CurrentLocationSuggestionViewModel : SuggestionViewModel DropNewPinSuggestionViewModel class DropNewPinSuggestionViewModel : SuggestionViewModel GoogleSuggestionViewModel class GoogleSuggestionViewModel : SuggestionViewModel","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/icon/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SuggestionViewModel / icon icon val icon: ObservableField<Drawable?>","title":"Icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/icon/#icon","text":"val icon: ObservableField<Drawable?>","title":"icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/on-item-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SuggestionViewModel / onItemClicked onItemClicked abstract val onItemClicked: TapAction < SuggestionViewModel >","title":"On item clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/on-item-clicked/#onitemclicked","text":"abstract val onItemClicked: TapAction < SuggestionViewModel >","title":"onItemClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/show-timetable-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SuggestionViewModel / showTimetableIcon showTimetableIcon open val showTimetableIcon: Boolean","title":"Show timetable icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/show-timetable-icon/#showtimetableicon","text":"open val showTimetableIcon: Boolean","title":"showTimetableIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/subtitle-text-color-res/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SuggestionViewModel / subtitleTextColorRes subtitleTextColorRes protected abstract val subtitleTextColorRes: Int","title":"Subtitle text color res"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/subtitle-text-color-res/#subtitletextcolorres","text":"protected abstract val subtitleTextColorRes: Int","title":"subtitleTextColorRes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/subtitle-text-color/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SuggestionViewModel / subtitleTextColor subtitleTextColor val subtitleTextColor: Int","title":"Subtitle text color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/subtitle-text-color/#subtitletextcolor","text":"val subtitleTextColor: Int","title":"subtitleTextColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/subtitle/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SuggestionViewModel / subtitle subtitle open val subtitle: String ?","title":"Subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/subtitle/#subtitle","text":"open val subtitle: String ?","title":"subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/title-text-color-res/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SuggestionViewModel / titleTextColorRes titleTextColorRes protected abstract val titleTextColorRes: Int","title":"Title text color res"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/title-text-color-res/#titletextcolorres","text":"protected abstract val titleTextColorRes: Int","title":"titleTextColorRes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/title-text-color/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SuggestionViewModel / titleTextColor titleTextColor val titleTextColor: Int","title":"Title text color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/title-text-color/#titletextcolor","text":"val titleTextColor: Int","title":"titleTextColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/title/","text":"tripkit-android / com.skedgo.tripkit.ui.search / SuggestionViewModel / title title abstract val title: String","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-suggestion-view-model/title/#title","text":"abstract val title: String","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-visibility-state/","text":"tripkit-android / com.skedgo.tripkit.ui.search / VisibilityState VisibilityState enum class VisibilityState Enum Values Name Summary HasSuggestions HasSuggestionsAndFetchingSuggestions Error FetchingPlaceDetails","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-visibility-state/#visibilitystate","text":"enum class VisibilityState","title":"VisibilityState"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-visibility-state/#enum-values","text":"Name Summary HasSuggestions HasSuggestionsAndFetchingSuggestions Error FetchingPlaceDetails","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-visibility-state/-error/","text":"tripkit-android / com.skedgo.tripkit.ui.search / VisibilityState / Error Error Error","title":" error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-visibility-state/-error/#error","text":"Error","title":"Error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-visibility-state/-fetching-place-details/","text":"tripkit-android / com.skedgo.tripkit.ui.search / VisibilityState / FetchingPlaceDetails FetchingPlaceDetails FetchingPlaceDetails","title":" fetching place details"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-visibility-state/-fetching-place-details/#fetchingplacedetails","text":"FetchingPlaceDetails","title":"FetchingPlaceDetails"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-visibility-state/-has-suggestions-and-fetching-suggestions/","text":"tripkit-android / com.skedgo.tripkit.ui.search / VisibilityState / HasSuggestionsAndFetchingSuggestions HasSuggestionsAndFetchingSuggestions HasSuggestionsAndFetchingSuggestions","title":" has suggestions and fetching suggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-visibility-state/-has-suggestions-and-fetching-suggestions/#hassuggestionsandfetchingsuggestions","text":"HasSuggestionsAndFetchingSuggestions","title":"HasSuggestionsAndFetchingSuggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-visibility-state/-has-suggestions/","text":"tripkit-android / com.skedgo.tripkit.ui.search / VisibilityState / HasSuggestions HasSuggestions HasSuggestions","title":" has suggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.search/-visibility-state/-has-suggestions/#hassuggestions","text":"HasSuggestions","title":"HasSuggestions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail Package com.skedgo.tripkit.ui.servicedetail Types Name Summary FetchAndLoadServices class FetchAndLoadServices GetStopDisplayText open class GetStopDisplayText GetStopTimeDisplayText open class GetStopTimeDisplayText LoadServices class LoadServices ServiceDetailFragment class ServiceDetailFragment : AbstractTripKitFragment ServiceDetailItemViewModel class ServiceDetailItemViewModel : RxViewModel ServiceDetailViewModel class ServiceDetailViewModel : RxViewModel ServiceStopAndLine typealias ServiceStopAndLine = Pair< List < StopInfo >, List <ServiceLineInfo>> Properties Name Summary ARG_STOP const val ARG_STOP: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/#package-comskedgotripkituiservicedetail","text":"","title":"Package com.skedgo.tripkit.ui.servicedetail"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/#types","text":"Name Summary FetchAndLoadServices class FetchAndLoadServices GetStopDisplayText open class GetStopDisplayText GetStopTimeDisplayText open class GetStopTimeDisplayText LoadServices class LoadServices ServiceDetailFragment class ServiceDetailFragment : AbstractTripKitFragment ServiceDetailItemViewModel class ServiceDetailItemViewModel : RxViewModel ServiceDetailViewModel class ServiceDetailViewModel : RxViewModel ServiceStopAndLine typealias ServiceStopAndLine = Pair< List < StopInfo >, List <ServiceLineInfo>>","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/#properties","text":"Name Summary ARG_STOP const val ARG_STOP: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-a-r-g_-s-t-o-p/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ARG_STOP ARG_STOP const val ARG_STOP: String","title":" a r g  s t o p"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-a-r-g_-s-t-o-p/#arg_stop","text":"const val ARG_STOP: String","title":"ARG_STOP"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-stop-and-line/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceStopAndLine ServiceStopAndLine typealias ServiceStopAndLine = Pair< List < StopInfo >, List <ServiceLineInfo>>","title":" service stop and line"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-stop-and-line/#servicestopandline","text":"typealias ServiceStopAndLine = Pair< List < StopInfo >, List <ServiceLineInfo>>","title":"ServiceStopAndLine"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-fetch-and-load-services/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / FetchAndLoadServices FetchAndLoadServices class FetchAndLoadServices Constructors Name Summary <init> FetchAndLoadServices(serviceRepository: ServiceRepository ) Functions Name Summary execute fun execute(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-fetch-and-load-services/#fetchandloadservices","text":"class FetchAndLoadServices","title":"FetchAndLoadServices"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-fetch-and-load-services/#constructors","text":"Name Summary <init> FetchAndLoadServices(serviceRepository: ServiceRepository )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-fetch-and-load-services/#functions","text":"Name Summary execute fun execute(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-fetch-and-load-services/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / FetchAndLoadServices / <init> <init> FetchAndLoadServices(serviceRepository: ServiceRepository )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-fetch-and-load-services/-init-/#init","text":"FetchAndLoadServices(serviceRepository: ServiceRepository )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-fetch-and-load-services/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / FetchAndLoadServices / execute execute fun execute(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-fetch-and-load-services/execute/#execute","text":"fun execute(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / GetStopDisplayText GetStopDisplayText open class GetStopDisplayText Constructors Name Summary <init> GetStopDisplayText(regionService: RegionService , printTime: PrintTime ) Properties Name Summary printTime val printTime: PrintTime regionService val regionService: RegionService Functions Name Summary execute open fun execute(stop: ServiceStop ): Observable< String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/#getstopdisplaytext","text":"open class GetStopDisplayText","title":"GetStopDisplayText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/#constructors","text":"Name Summary <init> GetStopDisplayText(regionService: RegionService , printTime: PrintTime )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/#properties","text":"Name Summary printTime val printTime: PrintTime regionService val regionService: RegionService","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/#functions","text":"Name Summary execute open fun execute(stop: ServiceStop ): Observable< String >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / GetStopDisplayText / <init> <init> GetStopDisplayText(regionService: RegionService , printTime: PrintTime )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/-init-/#init","text":"GetStopDisplayText(regionService: RegionService , printTime: PrintTime )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / GetStopDisplayText / execute execute open fun execute(stop: ServiceStop ): Observable< String >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/execute/#execute","text":"open fun execute(stop: ServiceStop ): Observable< String >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/print-time/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / GetStopDisplayText / printTime printTime val printTime: PrintTime","title":"Print time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/print-time/#printtime","text":"val printTime: PrintTime","title":"printTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/region-service/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / GetStopDisplayText / regionService regionService val regionService: RegionService","title":"Region service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-display-text/region-service/#regionservice","text":"val regionService: RegionService","title":"regionService"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / GetStopTimeDisplayText GetStopTimeDisplayText open class GetStopTimeDisplayText Constructors Name Summary <init> GetStopTimeDisplayText(regionService: RegionService , printTime: PrintTime ) Properties Name Summary printTime val printTime: PrintTime regionService val regionService: RegionService Functions Name Summary execute open fun execute(stop: ServiceStop ): Observable< String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/#getstoptimedisplaytext","text":"open class GetStopTimeDisplayText","title":"GetStopTimeDisplayText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/#constructors","text":"Name Summary <init> GetStopTimeDisplayText(regionService: RegionService , printTime: PrintTime )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/#properties","text":"Name Summary printTime val printTime: PrintTime regionService val regionService: RegionService","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/#functions","text":"Name Summary execute open fun execute(stop: ServiceStop ): Observable< String >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / GetStopTimeDisplayText / <init> <init> GetStopTimeDisplayText(regionService: RegionService , printTime: PrintTime )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/-init-/#init","text":"GetStopTimeDisplayText(regionService: RegionService , printTime: PrintTime )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / GetStopTimeDisplayText / execute execute open fun execute(stop: ServiceStop ): Observable< String >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/execute/#execute","text":"open fun execute(stop: ServiceStop ): Observable< String >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/print-time/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / GetStopTimeDisplayText / printTime printTime val printTime: PrintTime","title":"Print time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/print-time/#printtime","text":"val printTime: PrintTime","title":"printTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/region-service/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / GetStopTimeDisplayText / regionService regionService val regionService: RegionService","title":"Region service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-get-stop-time-display-text/region-service/#regionservice","text":"val regionService: RegionService","title":"regionService"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-load-services/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / LoadServices LoadServices class LoadServices Constructors Name Summary <init> LoadServices(context: Context, serviceRepository: ServiceRepository ) Functions Name Summary execute fun execute(service: TimetableEntry , stop: ScheduledStop ): Flowable< ServiceStopAndLine > fetch fun fetch(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-load-services/#loadservices","text":"class LoadServices","title":"LoadServices"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-load-services/#constructors","text":"Name Summary <init> LoadServices(context: Context, serviceRepository: ServiceRepository )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-load-services/#functions","text":"Name Summary execute fun execute(service: TimetableEntry , stop: ScheduledStop ): Flowable< ServiceStopAndLine > fetch fun fetch(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-load-services/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / LoadServices / <init> <init> LoadServices(context: Context, serviceRepository: ServiceRepository )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-load-services/-init-/#init","text":"LoadServices(context: Context, serviceRepository: ServiceRepository )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-load-services/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / LoadServices / execute execute fun execute(service: TimetableEntry , stop: ScheduledStop ): Flowable< ServiceStopAndLine >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-load-services/execute/#execute","text":"fun execute(service: TimetableEntry , stop: ScheduledStop ): Flowable< ServiceStopAndLine >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-load-services/fetch/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / LoadServices / fetch fetch fun fetch(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"Fetch"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-load-services/fetch/#fetch","text":"fun fetch(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"fetch"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment ServiceDetailFragment class ServiceDetailFragment : AbstractTripKitFragment Types Name Summary Builder class Builder OnScheduledStopClickListener interface OnScheduledStopClickListener Constructors Name Summary <init> ServiceDetailFragment() Properties Name Summary binding lateinit var binding: <ERROR CLASS> viewModel lateinit var viewModel: ServiceDetailViewModel Functions Name Summary addOnScheduledStopClickListener fun addOnScheduledStopClickListener(callback: OnScheduledStopClickListener): Unit fun addOnScheduledStopClickListener(listener: ( ServiceStop ) -> Unit ): Unit onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit onAttach fun onAttach(context: Context): Unit onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? onViewCreated fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/#servicedetailfragment","text":"class ServiceDetailFragment : AbstractTripKitFragment","title":"ServiceDetailFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/#types","text":"Name Summary Builder class Builder OnScheduledStopClickListener interface OnScheduledStopClickListener","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/#constructors","text":"Name Summary <init> ServiceDetailFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/#properties","text":"Name Summary binding lateinit var binding: <ERROR CLASS> viewModel lateinit var viewModel: ServiceDetailViewModel","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/#functions","text":"Name Summary addOnScheduledStopClickListener fun addOnScheduledStopClickListener(callback: OnScheduledStopClickListener): Unit fun addOnScheduledStopClickListener(listener: ( ServiceStop ) -> Unit ): Unit onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit onAttach fun onAttach(context: Context): Unit onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? onViewCreated fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / <init> <init> ServiceDetailFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-init-/#init","text":"ServiceDetailFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/add-on-scheduled-stop-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / addOnScheduledStopClickListener addOnScheduledStopClickListener fun addOnScheduledStopClickListener(callback: OnScheduledStopClickListener): Unit fun addOnScheduledStopClickListener(listener: ( ServiceStop ) -> Unit ): Unit","title":"Add on scheduled stop click listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/add-on-scheduled-stop-click-listener/#addonscheduledstopclicklistener","text":"fun addOnScheduledStopClickListener(callback: OnScheduledStopClickListener): Unit fun addOnScheduledStopClickListener(listener: ( ServiceStop ) -> Unit ): Unit","title":"addOnScheduledStopClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/binding/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / binding binding lateinit var binding: <ERROR CLASS>","title":"Binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/binding/#binding","text":"lateinit var binding: <ERROR CLASS>","title":"binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/on-activity-created/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / onActivityCreated onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit","title":"On activity created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/on-activity-created/#onactivitycreated","text":"fun onActivityCreated(savedInstanceState: Bundle?): Unit","title":"onActivityCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/on-attach/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / onAttach onAttach fun onAttach(context: Context): Unit","title":"On attach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/on-attach/#onattach","text":"fun onAttach(context: Context): Unit","title":"onAttach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/on-create-view/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / onCreateView onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","title":"On create view"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/on-create-view/#oncreateview","text":"fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","title":"onCreateView"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/on-view-created/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / onViewCreated onViewCreated fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"On view created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/on-view-created/#onviewcreated","text":"fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"onViewCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / viewModel viewModel lateinit var viewModel: ServiceDetailViewModel","title":"View model"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/view-model/#viewmodel","text":"lateinit var viewModel: ServiceDetailViewModel","title":"viewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / Builder Builder class Builder Constructors Name Summary <init> Builder() Functions Name Summary build fun build(): ServiceDetailFragment withStop fun withStop(stop: ScheduledStop ?): Builder withTimetableEntry fun withTimetableEntry(timetableEntry: TimetableEntry ?): Builder","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/#builder","text":"class Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/#functions","text":"Name Summary build fun build(): ServiceDetailFragment withStop fun withStop(stop: ScheduledStop ?): Builder withTimetableEntry fun withTimetableEntry(timetableEntry: TimetableEntry ?): Builder","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / Builder / <init> <init> Builder()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / Builder / build build fun build(): ServiceDetailFragment","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/build/#build","text":"fun build(): ServiceDetailFragment","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/with-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / Builder / withStop withStop fun withStop(stop: ScheduledStop ?): Builder","title":"With stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/with-stop/#withstop","text":"fun withStop(stop: ScheduledStop ?): Builder","title":"withStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/with-timetable-entry/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / Builder / withTimetableEntry withTimetableEntry fun withTimetableEntry(timetableEntry: TimetableEntry ?): Builder","title":"With timetable entry"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-builder/with-timetable-entry/#withtimetableentry","text":"fun withTimetableEntry(timetableEntry: TimetableEntry ?): Builder","title":"withTimetableEntry"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-on-scheduled-stop-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / OnScheduledStopClickListener OnScheduledStopClickListener interface OnScheduledStopClickListener Functions Name Summary onScheduledStopClicked abstract fun onScheduledStopClicked(stop: ServiceStop ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-on-scheduled-stop-click-listener/#onscheduledstopclicklistener","text":"interface OnScheduledStopClickListener","title":"OnScheduledStopClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-on-scheduled-stop-click-listener/#functions","text":"Name Summary onScheduledStopClicked abstract fun onScheduledStopClicked(stop: ServiceStop ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-on-scheduled-stop-click-listener/on-scheduled-stop-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailFragment / OnScheduledStopClickListener / onScheduledStopClicked onScheduledStopClicked abstract fun onScheduledStopClicked(stop: ServiceStop ): Unit","title":"On scheduled stop clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-fragment/-on-scheduled-stop-click-listener/on-scheduled-stop-clicked/#onscheduledstopclicked","text":"abstract fun onScheduledStopClicked(stop: ServiceStop ): Unit","title":"onScheduledStopClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel ServiceDetailItemViewModel class ServiceDetailItemViewModel : RxViewModel Types Name Summary LineDirection enum class LineDirection Constructors Name Summary <init> ServiceDetailItemViewModel(getStopTimeDisplayText: GetStopTimeDisplayText ) Properties Name Summary getStopTimeDisplayText val getStopTimeDisplayText: GetStopTimeDisplayText lineColor var lineColor: Int lineDrawable val lineDrawable: ObservableField<NinePatchDrawable> onItemClick val onItemClick: TapAction < StopInfo ?> scheduledTime val scheduledTime: ObservableField< String > scheduledTimeTextColor val scheduledTimeTextColor: ObservableInt stop var stop: StopInfo ? stopName val stopName: ObservableField< String > stopNameColor val stopNameColor: ObservableInt Functions Name Summary setDrawable fun setDrawable(context: Context, direction: LineDirection): Unit setStop fun setStop(context: Context, stop: StopInfo , _lineColor: Int , travelled: Boolean ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/#servicedetailitemviewmodel","text":"class ServiceDetailItemViewModel : RxViewModel","title":"ServiceDetailItemViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/#types","text":"Name Summary LineDirection enum class LineDirection","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/#constructors","text":"Name Summary <init> ServiceDetailItemViewModel(getStopTimeDisplayText: GetStopTimeDisplayText )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/#properties","text":"Name Summary getStopTimeDisplayText val getStopTimeDisplayText: GetStopTimeDisplayText lineColor var lineColor: Int lineDrawable val lineDrawable: ObservableField<NinePatchDrawable> onItemClick val onItemClick: TapAction < StopInfo ?> scheduledTime val scheduledTime: ObservableField< String > scheduledTimeTextColor val scheduledTimeTextColor: ObservableInt stop var stop: StopInfo ? stopName val stopName: ObservableField< String > stopNameColor val stopNameColor: ObservableInt","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/#functions","text":"Name Summary setDrawable fun setDrawable(context: Context, direction: LineDirection): Unit setStop fun setStop(context: Context, stop: StopInfo , _lineColor: Int , travelled: Boolean ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / <init> <init> ServiceDetailItemViewModel(getStopTimeDisplayText: GetStopTimeDisplayText )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/-init-/#init","text":"ServiceDetailItemViewModel(getStopTimeDisplayText: GetStopTimeDisplayText )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/get-stop-time-display-text/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / getStopTimeDisplayText getStopTimeDisplayText val getStopTimeDisplayText: GetStopTimeDisplayText","title":"Get stop time display text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/get-stop-time-display-text/#getstoptimedisplaytext","text":"val getStopTimeDisplayText: GetStopTimeDisplayText","title":"getStopTimeDisplayText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/line-color/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / lineColor lineColor var lineColor: Int","title":"Line color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/line-color/#linecolor","text":"var lineColor: Int","title":"lineColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/line-drawable/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / lineDrawable lineDrawable val lineDrawable: ObservableField<NinePatchDrawable>","title":"Line drawable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/line-drawable/#linedrawable","text":"val lineDrawable: ObservableField<NinePatchDrawable>","title":"lineDrawable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/on-item-click/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / onItemClick onItemClick val onItemClick: TapAction < StopInfo ?>","title":"On item click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/on-item-click/#onitemclick","text":"val onItemClick: TapAction < StopInfo ?>","title":"onItemClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/scheduled-time-text-color/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / scheduledTimeTextColor scheduledTimeTextColor val scheduledTimeTextColor: ObservableInt","title":"Scheduled time text color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/scheduled-time-text-color/#scheduledtimetextcolor","text":"val scheduledTimeTextColor: ObservableInt","title":"scheduledTimeTextColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/scheduled-time/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / scheduledTime scheduledTime val scheduledTime: ObservableField< String >","title":"Scheduled time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/scheduled-time/#scheduledtime","text":"val scheduledTime: ObservableField< String >","title":"scheduledTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/set-drawable/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / setDrawable setDrawable fun setDrawable(context: Context, direction: LineDirection): Unit","title":"Set drawable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/set-drawable/#setdrawable","text":"fun setDrawable(context: Context, direction: LineDirection): Unit","title":"setDrawable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/set-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / setStop setStop fun setStop(context: Context, stop: StopInfo , _lineColor: Int , travelled: Boolean ): Unit","title":"Set stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/set-stop/#setstop","text":"fun setStop(context: Context, stop: StopInfo , _lineColor: Int , travelled: Boolean ): Unit","title":"setStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/stop-name-color/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / stopNameColor stopNameColor val stopNameColor: ObservableInt","title":"Stop name color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/stop-name-color/#stopnamecolor","text":"val stopNameColor: ObservableInt","title":"stopNameColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/stop-name/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / stopName stopName val stopName: ObservableField< String >","title":"Stop name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/stop-name/#stopname","text":"val stopName: ObservableField< String >","title":"stopName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/stop/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / stop stop var stop: StopInfo ?","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/stop/#stop","text":"var stop: StopInfo ?","title":"stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/-line-direction/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / LineDirection LineDirection enum class LineDirection Enum Values Name Summary START MIDDLE END","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/-line-direction/#linedirection","text":"enum class LineDirection","title":"LineDirection"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/-line-direction/#enum-values","text":"Name Summary START MIDDLE END","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/-line-direction/-e-n-d/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / LineDirection / END END END","title":" e n d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/-line-direction/-e-n-d/#end","text":"END","title":"END"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/-line-direction/-m-i-d-d-l-e/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / LineDirection / MIDDLE MIDDLE MIDDLE","title":" m i d d l e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/-line-direction/-m-i-d-d-l-e/#middle","text":"MIDDLE","title":"MIDDLE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/-line-direction/-s-t-a-r-t/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailItemViewModel / LineDirection / START START START","title":" s t a r t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-item-view-model/-line-direction/-s-t-a-r-t/#start","text":"START","title":"START"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel ServiceDetailViewModel class ServiceDetailViewModel : RxViewModel Constructors Name Summary <init> ServiceDetailViewModel(context: Context, occupancyViewModel: OccupancyViewModel , serviceViewModelProvider: Provider< ServiceDetailItemViewModel >, serviceAlertViewModel: ServiceAlertViewModel , loadServices: LoadServices , getServiceTitleText: GetServiceTitleText , getServiceSubTitleText: GetServiceSubTitleText , getServiceTertiaryText: GetServiceTertiaryText , getRealtimeText: GetRealtimeText , errorLogger: ErrorLogger ) Properties Name Summary itemBinding val itemBinding: ItemBinding< ServiceDetailItemViewModel !> items val items: ObservableField< List < ServiceDetailItemViewModel >> occupancyViewModel val occupancyViewModel: OccupancyViewModel onItemClicked val onItemClicked: PublishRelay< ServiceStop !> secondaryText val secondaryText: ObservableField< String > secondaryTextColor val secondaryTextColor: ObservableInt serviceAlertViewModel val serviceAlertViewModel: ServiceAlertViewModel serviceColor val serviceColor: ObservableInt serviceNumber val serviceNumber: ObservableField< String > showOccupancyInfo val showOccupancyInfo: ObservableBoolean showWheelchairAccessible val showWheelchairAccessible: ObservableBoolean stationName val stationName: ObservableField< String > stop var stop: ScheduledStop ? tertiaryText val tertiaryText: ObservableField< String > timetableEntry var timetableEntry: TimetableEntry ? wheelchairAccessibleText val wheelchairAccessibleText: ObservableField< String > wheelchairIcon val wheelchairIcon: ObservableField<Drawable?> Functions Name Summary onCleared This method will be called when this ViewModel is no longer used and will be destroyed. fun onCleared(): Unit setup fun setup(_stop: ScheduledStop , _entry: TimetableEntry ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/#servicedetailviewmodel","text":"class ServiceDetailViewModel : RxViewModel","title":"ServiceDetailViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/#constructors","text":"Name Summary <init> ServiceDetailViewModel(context: Context, occupancyViewModel: OccupancyViewModel , serviceViewModelProvider: Provider< ServiceDetailItemViewModel >, serviceAlertViewModel: ServiceAlertViewModel , loadServices: LoadServices , getServiceTitleText: GetServiceTitleText , getServiceSubTitleText: GetServiceSubTitleText , getServiceTertiaryText: GetServiceTertiaryText , getRealtimeText: GetRealtimeText , errorLogger: ErrorLogger )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/#properties","text":"Name Summary itemBinding val itemBinding: ItemBinding< ServiceDetailItemViewModel !> items val items: ObservableField< List < ServiceDetailItemViewModel >> occupancyViewModel val occupancyViewModel: OccupancyViewModel onItemClicked val onItemClicked: PublishRelay< ServiceStop !> secondaryText val secondaryText: ObservableField< String > secondaryTextColor val secondaryTextColor: ObservableInt serviceAlertViewModel val serviceAlertViewModel: ServiceAlertViewModel serviceColor val serviceColor: ObservableInt serviceNumber val serviceNumber: ObservableField< String > showOccupancyInfo val showOccupancyInfo: ObservableBoolean showWheelchairAccessible val showWheelchairAccessible: ObservableBoolean stationName val stationName: ObservableField< String > stop var stop: ScheduledStop ? tertiaryText val tertiaryText: ObservableField< String > timetableEntry var timetableEntry: TimetableEntry ? wheelchairAccessibleText val wheelchairAccessibleText: ObservableField< String > wheelchairIcon val wheelchairIcon: ObservableField<Drawable?>","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/#functions","text":"Name Summary onCleared This method will be called when this ViewModel is no longer used and will be destroyed. fun onCleared(): Unit setup fun setup(_stop: ScheduledStop , _entry: TimetableEntry ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / <init> <init> ServiceDetailViewModel(context: Context, occupancyViewModel: OccupancyViewModel , serviceViewModelProvider: Provider< ServiceDetailItemViewModel >, serviceAlertViewModel: ServiceAlertViewModel , loadServices: LoadServices , getServiceTitleText: GetServiceTitleText , getServiceSubTitleText: GetServiceSubTitleText , getServiceTertiaryText: GetServiceTertiaryText , getRealtimeText: GetRealtimeText , errorLogger: ErrorLogger )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/-init-/#init","text":"ServiceDetailViewModel(context: Context, occupancyViewModel: OccupancyViewModel , serviceViewModelProvider: Provider< ServiceDetailItemViewModel >, serviceAlertViewModel: ServiceAlertViewModel , loadServices: LoadServices , getServiceTitleText: GetServiceTitleText , getServiceSubTitleText: GetServiceSubTitleText , getServiceTertiaryText: GetServiceTertiaryText , getRealtimeText: GetRealtimeText , errorLogger: ErrorLogger )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/item-binding/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / itemBinding itemBinding val itemBinding: ItemBinding< ServiceDetailItemViewModel !>","title":"Item binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/item-binding/#itembinding","text":"val itemBinding: ItemBinding< ServiceDetailItemViewModel !>","title":"itemBinding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/items/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / items items val items: ObservableField< List < ServiceDetailItemViewModel >>","title":"Items"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/items/#items","text":"val items: ObservableField< List < ServiceDetailItemViewModel >>","title":"items"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/occupancy-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / occupancyViewModel occupancyViewModel val occupancyViewModel: OccupancyViewModel","title":"Occupancy view model"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/occupancy-view-model/#occupancyviewmodel","text":"val occupancyViewModel: OccupancyViewModel","title":"occupancyViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/on-cleared/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / onCleared onCleared fun onCleared(): Unit This method will be called when this ViewModel is no longer used and will be destroyed.","title":"On cleared"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/on-cleared/#oncleared","text":"fun onCleared(): Unit This method will be called when this ViewModel is no longer used and will be destroyed.","title":"onCleared"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/on-item-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / onItemClicked onItemClicked val onItemClicked: PublishRelay< ServiceStop !>","title":"On item clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/on-item-clicked/#onitemclicked","text":"val onItemClicked: PublishRelay< ServiceStop !>","title":"onItemClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/secondary-text-color/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / secondaryTextColor secondaryTextColor val secondaryTextColor: ObservableInt","title":"Secondary text color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/secondary-text-color/#secondarytextcolor","text":"val secondaryTextColor: ObservableInt","title":"secondaryTextColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/secondary-text/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / secondaryText secondaryText val secondaryText: ObservableField< String >","title":"Secondary text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/secondary-text/#secondarytext","text":"val secondaryText: ObservableField< String >","title":"secondaryText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/service-alert-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / serviceAlertViewModel serviceAlertViewModel val serviceAlertViewModel: ServiceAlertViewModel","title":"Service alert view model"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/service-alert-view-model/#servicealertviewmodel","text":"val serviceAlertViewModel: ServiceAlertViewModel","title":"serviceAlertViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/service-color/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / serviceColor serviceColor val serviceColor: ObservableInt","title":"Service color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/service-color/#servicecolor","text":"val serviceColor: ObservableInt","title":"serviceColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/service-number/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / serviceNumber serviceNumber val serviceNumber: ObservableField< String >","title":"Service number"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/service-number/#servicenumber","text":"val serviceNumber: ObservableField< String >","title":"serviceNumber"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/setup/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / setup setup fun setup(_stop: ScheduledStop , _entry: TimetableEntry ): Unit","title":"Setup"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/setup/#setup","text":"fun setup(_stop: ScheduledStop , _entry: TimetableEntry ): Unit","title":"setup"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/show-occupancy-info/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / showOccupancyInfo showOccupancyInfo val showOccupancyInfo: ObservableBoolean","title":"Show occupancy info"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/show-occupancy-info/#showoccupancyinfo","text":"val showOccupancyInfo: ObservableBoolean","title":"showOccupancyInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/show-wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / showWheelchairAccessible showWheelchairAccessible val showWheelchairAccessible: ObservableBoolean","title":"Show wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/show-wheelchair-accessible/#showwheelchairaccessible","text":"val showWheelchairAccessible: ObservableBoolean","title":"showWheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/station-name/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / stationName stationName val stationName: ObservableField< String >","title":"Station name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/station-name/#stationname","text":"val stationName: ObservableField< String >","title":"stationName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/stop/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / stop stop var stop: ScheduledStop ?","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/stop/#stop","text":"var stop: ScheduledStop ?","title":"stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/tertiary-text/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / tertiaryText tertiaryText val tertiaryText: ObservableField< String >","title":"Tertiary text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/tertiary-text/#tertiarytext","text":"val tertiaryText: ObservableField< String >","title":"tertiaryText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/timetable-entry/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / timetableEntry timetableEntry var timetableEntry: TimetableEntry ?","title":"Timetable entry"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/timetable-entry/#timetableentry","text":"var timetableEntry: TimetableEntry ?","title":"timetableEntry"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/wheelchair-accessible-text/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / wheelchairAccessibleText wheelchairAccessibleText val wheelchairAccessibleText: ObservableField< String >","title":"Wheelchair accessible text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/wheelchair-accessible-text/#wheelchairaccessibletext","text":"val wheelchairAccessibleText: ObservableField< String >","title":"wheelchairAccessibleText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/wheelchair-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.servicedetail / ServiceDetailViewModel / wheelchairIcon wheelchairIcon val wheelchairIcon: ObservableField<Drawable?>","title":"Wheelchair icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.servicedetail/-service-detail-view-model/wheelchair-icon/#wheelchairicon","text":"val wheelchairIcon: ObservableField<Drawable?>","title":"wheelchairIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables Package com.skedgo.tripkit.ui.timetables Types Name Summary FetchAndLoadTimetable open class FetchAndLoadTimetable FetchService class FetchService FetchTimetable open class FetchTimetable GetA2BTime open class GetA2BTime GetDirectionText open class GetDirectionText GetFrequencyText open class GetFrequencyText GetOrdinaryTime open class GetOrdinaryTime GetRealtimeText open class GetRealtimeText GetServiceSubTitleText open class GetServiceSubTitleText GetServiceTertiaryText open class GetServiceTertiaryText GetServiceTitleText open class GetServiceTitleText GetTimeRangeText open class GetTimeRangeText GetWheelchairAccessible open class GetWheelchairAccessible JoinedCursor class JoinedCursor : AbstractCursor LoadServiceTask open class LoadServiceTask : Callable <Pair< MutableList < StopInfo !>!, MutableList <ServiceLineInfo!>!>!> LoadServiceTaskCursorCols TODO Should find an appropriate class name open class LoadServiceTaskCursorCols ServiceRepository interface ServiceRepository ServiceRepositoryImpl class ServiceRepositoryImpl : ServiceRepository ServiceStopsLoaderFactory open class ServiceStopsLoaderFactory ServiceViewModel abstract class ServiceViewModel : RxViewModel TimetableEntriesMapper class TimetableEntriesMapper TimetableFragment class TimetableFragment : AbstractTripKitFragment , OnClickListener TimetableViewModel class TimetableViewModel : RxViewModel Properties Name Summary ARG_STOP const val ARG_STOP: String ARG_TIMETABLE_ENTRY const val ARG_TIMETABLE_ENTRY: String Functions Name Summary getTimeLeftToDepartInterval fun TimetableEntry .getTimeLeftToDepartInterval(period: Long , timeUnit: TimeUnit ): Observable< Long > realTimeArrival fun realTimeArrival(service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Long realTimeDeparture fun realTimeDeparture(service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Long realTimeNotAvailable fun realTimeNotAvailable(service: TimetableEntry , vehicle: RealTimeVehicle ?): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/#package-comskedgotripkituitimetables","text":"","title":"Package com.skedgo.tripkit.ui.timetables"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/#types","text":"Name Summary FetchAndLoadTimetable open class FetchAndLoadTimetable FetchService class FetchService FetchTimetable open class FetchTimetable GetA2BTime open class GetA2BTime GetDirectionText open class GetDirectionText GetFrequencyText open class GetFrequencyText GetOrdinaryTime open class GetOrdinaryTime GetRealtimeText open class GetRealtimeText GetServiceSubTitleText open class GetServiceSubTitleText GetServiceTertiaryText open class GetServiceTertiaryText GetServiceTitleText open class GetServiceTitleText GetTimeRangeText open class GetTimeRangeText GetWheelchairAccessible open class GetWheelchairAccessible JoinedCursor class JoinedCursor : AbstractCursor LoadServiceTask open class LoadServiceTask : Callable <Pair< MutableList < StopInfo !>!, MutableList <ServiceLineInfo!>!>!> LoadServiceTaskCursorCols TODO Should find an appropriate class name open class LoadServiceTaskCursorCols ServiceRepository interface ServiceRepository ServiceRepositoryImpl class ServiceRepositoryImpl : ServiceRepository ServiceStopsLoaderFactory open class ServiceStopsLoaderFactory ServiceViewModel abstract class ServiceViewModel : RxViewModel TimetableEntriesMapper class TimetableEntriesMapper TimetableFragment class TimetableFragment : AbstractTripKitFragment , OnClickListener TimetableViewModel class TimetableViewModel : RxViewModel","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/#properties","text":"Name Summary ARG_STOP const val ARG_STOP: String ARG_TIMETABLE_ENTRY const val ARG_TIMETABLE_ENTRY: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/#functions","text":"Name Summary getTimeLeftToDepartInterval fun TimetableEntry .getTimeLeftToDepartInterval(period: Long , timeUnit: TimeUnit ): Observable< Long > realTimeArrival fun realTimeArrival(service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Long realTimeDeparture fun realTimeDeparture(service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Long realTimeNotAvailable fun realTimeNotAvailable(service: TimetableEntry , vehicle: RealTimeVehicle ?): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-a-r-g_-s-t-o-p/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ARG_STOP ARG_STOP const val ARG_STOP: String","title":" a r g  s t o p"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-a-r-g_-s-t-o-p/#arg_stop","text":"const val ARG_STOP: String","title":"ARG_STOP"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-a-r-g_-t-i-m-e-t-a-b-l-e_-e-n-t-r-y/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ARG_TIMETABLE_ENTRY ARG_TIMETABLE_ENTRY const val ARG_TIMETABLE_ENTRY: String","title":" a r g  t i m e t a b l e  e n t r y"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-a-r-g_-t-i-m-e-t-a-b-l-e_-e-n-t-r-y/#arg_timetable_entry","text":"const val ARG_TIMETABLE_ENTRY: String","title":"ARG_TIMETABLE_ENTRY"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/get-time-left-to-depart-interval/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / getTimeLeftToDepartInterval getTimeLeftToDepartInterval fun TimetableEntry .getTimeLeftToDepartInterval(period: Long , timeUnit: TimeUnit ): Observable< Long >","title":"Get time left to depart interval"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/get-time-left-to-depart-interval/#gettimelefttodepartinterval","text":"fun TimetableEntry .getTimeLeftToDepartInterval(period: Long , timeUnit: TimeUnit ): Observable< Long >","title":"getTimeLeftToDepartInterval"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/real-time-arrival/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / realTimeArrival realTimeArrival fun realTimeArrival(service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Long","title":"Real time arrival"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/real-time-arrival/#realtimearrival","text":"fun realTimeArrival(service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Long","title":"realTimeArrival"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/real-time-departure/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / realTimeDeparture realTimeDeparture fun realTimeDeparture(service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Long","title":"Real time departure"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/real-time-departure/#realtimedeparture","text":"fun realTimeDeparture(service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Long","title":"realTimeDeparture"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/real-time-not-available/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / realTimeNotAvailable realTimeNotAvailable fun realTimeNotAvailable(service: TimetableEntry , vehicle: RealTimeVehicle ?): Boolean","title":"Real time not available"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/real-time-not-available/#realtimenotavailable","text":"fun realTimeNotAvailable(service: TimetableEntry , vehicle: RealTimeVehicle ?): Boolean","title":"realTimeNotAvailable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-and-load-timetable/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / FetchAndLoadTimetable FetchAndLoadTimetable open class FetchAndLoadTimetable Constructors Name Summary <init> FetchAndLoadTimetable(converter: CursorToServiceConverter , parentStopDao: ParentStopDao , serviceAlertsDao: ServiceAlertsDao , serviceAlertsMapper: ServiceAlertMapper , context: Context, fetchTimetable: FetchTimetable ) Functions Name Summary execute open fun execute(embarkationStopCodes: List < String >, region: Region , startTimeInSecs: Long ): Single< Pair < List < TimetableEntry >, Optional < ScheduledStop >>>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-and-load-timetable/#fetchandloadtimetable","text":"open class FetchAndLoadTimetable","title":"FetchAndLoadTimetable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-and-load-timetable/#constructors","text":"Name Summary <init> FetchAndLoadTimetable(converter: CursorToServiceConverter , parentStopDao: ParentStopDao , serviceAlertsDao: ServiceAlertsDao , serviceAlertsMapper: ServiceAlertMapper , context: Context, fetchTimetable: FetchTimetable )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-and-load-timetable/#functions","text":"Name Summary execute open fun execute(embarkationStopCodes: List < String >, region: Region , startTimeInSecs: Long ): Single< Pair < List < TimetableEntry >, Optional < ScheduledStop >>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-and-load-timetable/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / FetchAndLoadTimetable / <init> <init> FetchAndLoadTimetable(converter: CursorToServiceConverter , parentStopDao: ParentStopDao , serviceAlertsDao: ServiceAlertsDao , serviceAlertsMapper: ServiceAlertMapper , context: Context, fetchTimetable: FetchTimetable )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-and-load-timetable/-init-/#init","text":"FetchAndLoadTimetable(converter: CursorToServiceConverter , parentStopDao: ParentStopDao , serviceAlertsDao: ServiceAlertsDao , serviceAlertsMapper: ServiceAlertMapper , context: Context, fetchTimetable: FetchTimetable )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-and-load-timetable/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / FetchAndLoadTimetable / execute execute open fun execute(embarkationStopCodes: List < String >, region: Region , startTimeInSecs: Long ): Single< Pair < List < TimetableEntry >, Optional < ScheduledStop >>>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-and-load-timetable/execute/#execute","text":"open fun execute(embarkationStopCodes: List < String >, region: Region , startTimeInSecs: Long ): Single< Pair < List < TimetableEntry >, Optional < ScheduledStop >>>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-service/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / FetchService FetchService class FetchService Constructors Name Summary <init> FetchService(context: Context, getWheelchairAccessible: GetWheelchairAccessible ) Functions Name Summary execute fun execute(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-service/#fetchservice","text":"class FetchService","title":"FetchService"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-service/#constructors","text":"Name Summary <init> FetchService(context: Context, getWheelchairAccessible: GetWheelchairAccessible )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-service/#functions","text":"Name Summary execute fun execute(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-service/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / FetchService / <init> <init> FetchService(context: Context, getWheelchairAccessible: GetWheelchairAccessible )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-service/-init-/#init","text":"FetchService(context: Context, getWheelchairAccessible: GetWheelchairAccessible )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-service/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / FetchService / execute execute fun execute(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-service/execute/#execute","text":"fun execute(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-timetable/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / FetchTimetable FetchTimetable open class FetchTimetable Constructors Name Summary <init> FetchTimetable(departuresRepository: DeparturesRepository , realtimeAlertRepository: RealtimeAlertRepository, parentStopDao: ParentStopDao , timetableEntriesMapper: TimetableEntriesMapper , serviceAlertMapper: ServiceAlertMapper , serviceAlertsDao: ServiceAlertsDao , context: Context) Functions Name Summary execute open fun execute(embarkationStopCodes: List < String >, region: Region , startTimeInSecs: Long ): Single< Pair < List < TimetableEntry >, Optional < ScheduledStop >>>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-timetable/#fetchtimetable","text":"open class FetchTimetable","title":"FetchTimetable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-timetable/#constructors","text":"Name Summary <init> FetchTimetable(departuresRepository: DeparturesRepository , realtimeAlertRepository: RealtimeAlertRepository, parentStopDao: ParentStopDao , timetableEntriesMapper: TimetableEntriesMapper , serviceAlertMapper: ServiceAlertMapper , serviceAlertsDao: ServiceAlertsDao , context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-timetable/#functions","text":"Name Summary execute open fun execute(embarkationStopCodes: List < String >, region: Region , startTimeInSecs: Long ): Single< Pair < List < TimetableEntry >, Optional < ScheduledStop >>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-timetable/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / FetchTimetable / <init> <init> FetchTimetable(departuresRepository: DeparturesRepository , realtimeAlertRepository: RealtimeAlertRepository, parentStopDao: ParentStopDao , timetableEntriesMapper: TimetableEntriesMapper , serviceAlertMapper: ServiceAlertMapper , serviceAlertsDao: ServiceAlertsDao , context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-timetable/-init-/#init","text":"FetchTimetable(departuresRepository: DeparturesRepository , realtimeAlertRepository: RealtimeAlertRepository, parentStopDao: ParentStopDao , timetableEntriesMapper: TimetableEntriesMapper , serviceAlertMapper: ServiceAlertMapper , serviceAlertsDao: ServiceAlertsDao , context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-timetable/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / FetchTimetable / execute execute open fun execute(embarkationStopCodes: List < String >, region: Region , startTimeInSecs: Long ): Single< Pair < List < TimetableEntry >, Optional < ScheduledStop >>>","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-fetch-timetable/execute/#execute","text":"open fun execute(embarkationStopCodes: List < String >, region: Region , startTimeInSecs: Long ): Single< Pair < List < TimetableEntry >, Optional < ScheduledStop >>>","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-a2-b-time/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetA2BTime GetA2BTime open class GetA2BTime Constructors Name Summary <init> GetA2BTime(context: Context, getTimeRangeText: GetTimeRangeText ) Functions Name Summary execute open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , startTimeInSecs: Long , endTimeInSecs: Long ): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-a2-b-time/#geta2btime","text":"open class GetA2BTime","title":"GetA2BTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-a2-b-time/#constructors","text":"Name Summary <init> GetA2BTime(context: Context, getTimeRangeText: GetTimeRangeText )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-a2-b-time/#functions","text":"Name Summary execute open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , startTimeInSecs: Long , endTimeInSecs: Long ): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-a2-b-time/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetA2BTime / <init> <init> GetA2BTime(context: Context, getTimeRangeText: GetTimeRangeText )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-a2-b-time/-init-/#init","text":"GetA2BTime(context: Context, getTimeRangeText: GetTimeRangeText )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-a2-b-time/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetA2BTime / execute execute open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , startTimeInSecs: Long , endTimeInSecs: Long ): String","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-a2-b-time/execute/#execute","text":"open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , startTimeInSecs: Long , endTimeInSecs: Long ): String","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-direction-text/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetDirectionText GetDirectionText open class GetDirectionText Constructors Name Summary <init> GetDirectionText() Functions Name Summary execute open fun execute(service: TimetableEntry ): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-direction-text/#getdirectiontext","text":"open class GetDirectionText","title":"GetDirectionText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-direction-text/#constructors","text":"Name Summary <init> GetDirectionText()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-direction-text/#functions","text":"Name Summary execute open fun execute(service: TimetableEntry ): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-direction-text/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetDirectionText / <init> <init> GetDirectionText()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-direction-text/-init-/#init","text":"GetDirectionText()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-direction-text/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetDirectionText / execute execute open fun execute(service: TimetableEntry ): String","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-direction-text/execute/#execute","text":"open fun execute(service: TimetableEntry ): String","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-frequency-text/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetFrequencyText GetFrequencyText open class GetFrequencyText Constructors Name Summary <init> GetFrequencyText(context: Context) Functions Name Summary execute open fun execute(service: TimetableEntry ): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-frequency-text/#getfrequencytext","text":"open class GetFrequencyText","title":"GetFrequencyText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-frequency-text/#constructors","text":"Name Summary <init> GetFrequencyText(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-frequency-text/#functions","text":"Name Summary execute open fun execute(service: TimetableEntry ): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-frequency-text/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetFrequencyText / <init> <init> GetFrequencyText(context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-frequency-text/-init-/#init","text":"GetFrequencyText(context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-frequency-text/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetFrequencyText / execute execute open fun execute(service: TimetableEntry ): String","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-frequency-text/execute/#execute","text":"open fun execute(service: TimetableEntry ): String","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-ordinary-time/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetOrdinaryTime GetOrdinaryTime open class GetOrdinaryTime Constructors Name Summary <init> GetOrdinaryTime(context: Context, printTime: PrintTime ) Functions Name Summary execute open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , vehicle: RealTimeVehicle ? = null): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-ordinary-time/#getordinarytime","text":"open class GetOrdinaryTime","title":"GetOrdinaryTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-ordinary-time/#constructors","text":"Name Summary <init> GetOrdinaryTime(context: Context, printTime: PrintTime )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-ordinary-time/#functions","text":"Name Summary execute open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , vehicle: RealTimeVehicle ? = null): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-ordinary-time/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetOrdinaryTime / <init> <init> GetOrdinaryTime(context: Context, printTime: PrintTime )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-ordinary-time/-init-/#init","text":"GetOrdinaryTime(context: Context, printTime: PrintTime )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-ordinary-time/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetOrdinaryTime / execute execute open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , vehicle: RealTimeVehicle ? = null): String","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-ordinary-time/execute/#execute","text":"open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , vehicle: RealTimeVehicle ? = null): String","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-realtime-text/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetRealtimeText GetRealtimeText open class GetRealtimeText Constructors Name Summary <init> GetRealtimeText(context: Context, printTime: PrintTime ) Functions Name Summary execute open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Pair < String , Int >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-realtime-text/#getrealtimetext","text":"open class GetRealtimeText","title":"GetRealtimeText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-realtime-text/#constructors","text":"Name Summary <init> GetRealtimeText(context: Context, printTime: PrintTime )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-realtime-text/#functions","text":"Name Summary execute open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Pair < String , Int >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-realtime-text/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetRealtimeText / <init> <init> GetRealtimeText(context: Context, printTime: PrintTime )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-realtime-text/-init-/#init","text":"GetRealtimeText(context: Context, printTime: PrintTime )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-realtime-text/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetRealtimeText / execute execute open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Pair < String , Int >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-realtime-text/execute/#execute","text":"open fun execute(dateTimeZone: DateTimeZone, service: TimetableEntry , vehicle: RealTimeVehicle ? = null): Pair < String , Int >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-sub-title-text/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetServiceSubTitleText GetServiceSubTitleText open class GetServiceSubTitleText Constructors Name Summary <init> GetServiceSubTitleText(getTimeRangeText: GetTimeRangeText , getDirectionText: GetDirectionText ) Functions Name Summary execute open fun execute(service: TimetableEntry , dateTimeZone: DateTimeZone): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-sub-title-text/#getservicesubtitletext","text":"open class GetServiceSubTitleText","title":"GetServiceSubTitleText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-sub-title-text/#constructors","text":"Name Summary <init> GetServiceSubTitleText(getTimeRangeText: GetTimeRangeText , getDirectionText: GetDirectionText )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-sub-title-text/#functions","text":"Name Summary execute open fun execute(service: TimetableEntry , dateTimeZone: DateTimeZone): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-sub-title-text/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetServiceSubTitleText / <init> <init> GetServiceSubTitleText(getTimeRangeText: GetTimeRangeText , getDirectionText: GetDirectionText )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-sub-title-text/-init-/#init","text":"GetServiceSubTitleText(getTimeRangeText: GetTimeRangeText , getDirectionText: GetDirectionText )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-sub-title-text/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetServiceSubTitleText / execute execute open fun execute(service: TimetableEntry , dateTimeZone: DateTimeZone): String","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-sub-title-text/execute/#execute","text":"open fun execute(service: TimetableEntry , dateTimeZone: DateTimeZone): String","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-tertiary-text/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetServiceTertiaryText GetServiceTertiaryText open class GetServiceTertiaryText Constructors Name Summary <init> GetServiceTertiaryText() Functions Name Summary execute open fun execute(service: TimetableEntry ): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-tertiary-text/#getservicetertiarytext","text":"open class GetServiceTertiaryText","title":"GetServiceTertiaryText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-tertiary-text/#constructors","text":"Name Summary <init> GetServiceTertiaryText()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-tertiary-text/#functions","text":"Name Summary execute open fun execute(service: TimetableEntry ): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-tertiary-text/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetServiceTertiaryText / <init> <init> GetServiceTertiaryText()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-tertiary-text/-init-/#init","text":"GetServiceTertiaryText()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-tertiary-text/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetServiceTertiaryText / execute execute open fun execute(service: TimetableEntry ): String","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-tertiary-text/execute/#execute","text":"open fun execute(service: TimetableEntry ): String","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-title-text/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetServiceTitleText GetServiceTitleText open class GetServiceTitleText Constructors Name Summary <init> GetServiceTitleText(getFrequencyText: GetFrequencyText , getA2BTime: GetA2BTime , getOrdinaryTime: GetOrdinaryTime ) Functions Name Summary execute open fun execute(service: TimetableEntry , dateTimeZone: DateTimeZone, vehicle: RealTimeVehicle ? = null): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-title-text/#getservicetitletext","text":"open class GetServiceTitleText","title":"GetServiceTitleText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-title-text/#constructors","text":"Name Summary <init> GetServiceTitleText(getFrequencyText: GetFrequencyText , getA2BTime: GetA2BTime , getOrdinaryTime: GetOrdinaryTime )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-title-text/#functions","text":"Name Summary execute open fun execute(service: TimetableEntry , dateTimeZone: DateTimeZone, vehicle: RealTimeVehicle ? = null): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-title-text/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetServiceTitleText / <init> <init> GetServiceTitleText(getFrequencyText: GetFrequencyText , getA2BTime: GetA2BTime , getOrdinaryTime: GetOrdinaryTime )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-title-text/-init-/#init","text":"GetServiceTitleText(getFrequencyText: GetFrequencyText , getA2BTime: GetA2BTime , getOrdinaryTime: GetOrdinaryTime )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-title-text/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetServiceTitleText / execute execute open fun execute(service: TimetableEntry , dateTimeZone: DateTimeZone, vehicle: RealTimeVehicle ? = null): String","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-service-title-text/execute/#execute","text":"open fun execute(service: TimetableEntry , dateTimeZone: DateTimeZone, vehicle: RealTimeVehicle ? = null): String","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-time-range-text/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetTimeRangeText GetTimeRangeText open class GetTimeRangeText Constructors Name Summary <init> GetTimeRangeText(printTime: PrintTime ) Functions Name Summary execute open fun execute(dateTimeZone: DateTimeZone, startTimeInSecs: Long , endTimeInSecs: Long ): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-time-range-text/#gettimerangetext","text":"open class GetTimeRangeText","title":"GetTimeRangeText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-time-range-text/#constructors","text":"Name Summary <init> GetTimeRangeText(printTime: PrintTime )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-time-range-text/#functions","text":"Name Summary execute open fun execute(dateTimeZone: DateTimeZone, startTimeInSecs: Long , endTimeInSecs: Long ): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-time-range-text/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetTimeRangeText / <init> <init> GetTimeRangeText(printTime: PrintTime )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-time-range-text/-init-/#init","text":"GetTimeRangeText(printTime: PrintTime )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-time-range-text/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetTimeRangeText / execute execute open fun execute(dateTimeZone: DateTimeZone, startTimeInSecs: Long , endTimeInSecs: Long ): String","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-time-range-text/execute/#execute","text":"open fun execute(dateTimeZone: DateTimeZone, startTimeInSecs: Long , endTimeInSecs: Long ): String","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetWheelchairAccessible GetWheelchairAccessible open class GetWheelchairAccessible Constructors Name Summary <init> GetWheelchairAccessible() Functions Name Summary invoke operator fun invoke(wheelchairAccessible: WheelchairAccessible ): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-wheelchair-accessible/#getwheelchairaccessible","text":"open class GetWheelchairAccessible","title":"GetWheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-wheelchair-accessible/#constructors","text":"Name Summary <init> GetWheelchairAccessible()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-wheelchair-accessible/#functions","text":"Name Summary invoke operator fun invoke(wheelchairAccessible: WheelchairAccessible ): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-wheelchair-accessible/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetWheelchairAccessible / <init> <init> GetWheelchairAccessible()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-wheelchair-accessible/-init-/#init","text":"GetWheelchairAccessible()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-wheelchair-accessible/invoke/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / GetWheelchairAccessible / invoke invoke operator fun invoke(wheelchairAccessible: WheelchairAccessible ): Int","title":"Invoke"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-get-wheelchair-accessible/invoke/#invoke","text":"operator fun invoke(wheelchairAccessible: WheelchairAccessible ): Int","title":"invoke"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor JoinedCursor class JoinedCursor : AbstractCursor Constructors Name Summary <init> JoinedCursor(leftCursor: Cursor, rightCursor: Cursor, leftJoinColumn: String , rightJoinColumn: String ) Properties Name Summary leftCursor val leftCursor: Cursor leftJoinColumn val leftJoinColumn: String mapIdToRightCursorPosition val mapIdToRightCursorPosition: Map < Long , Int > rightCursor val rightCursor: Cursor rightJoinColumn val rightJoinColumn: String Functions Name Summary close fun close(): Unit getColumnCount fun getColumnCount(): Int getColumnNames fun getColumnNames(): Array < String > getCount fun getCount(): Int getDouble fun getDouble(column: Int ): Double getFloat fun getFloat(column: Int ): Float getInt fun getInt(column: Int ): Int getLong fun getLong(column: Int ): Long getNotificationUri fun getNotificationUri(): Uri getShort fun getShort(column: Int ): Short getString fun getString(column: Int ): String ? getType fun getType(column: Int ): Int isNull fun isNull(column: Int ): Boolean onMove fun onMove(oldPosition: Int , newPosition: Int ): Boolean registerContentObserver fun registerContentObserver(observer: ContentObserver): Unit registerDataSetObserver fun registerDataSetObserver(observer: DataSetObserver?): Unit setNotificationUri fun setNotificationUri(cr: ContentResolver?, notifyUri: Uri?): Unit unregisterContentObserver fun unregisterContentObserver(observer: ContentObserver?): Unit unregisterDataSetObserver fun unregisterDataSetObserver(observer: DataSetObserver?): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/#joinedcursor","text":"class JoinedCursor : AbstractCursor","title":"JoinedCursor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/#constructors","text":"Name Summary <init> JoinedCursor(leftCursor: Cursor, rightCursor: Cursor, leftJoinColumn: String , rightJoinColumn: String )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/#properties","text":"Name Summary leftCursor val leftCursor: Cursor leftJoinColumn val leftJoinColumn: String mapIdToRightCursorPosition val mapIdToRightCursorPosition: Map < Long , Int > rightCursor val rightCursor: Cursor rightJoinColumn val rightJoinColumn: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/#functions","text":"Name Summary close fun close(): Unit getColumnCount fun getColumnCount(): Int getColumnNames fun getColumnNames(): Array < String > getCount fun getCount(): Int getDouble fun getDouble(column: Int ): Double getFloat fun getFloat(column: Int ): Float getInt fun getInt(column: Int ): Int getLong fun getLong(column: Int ): Long getNotificationUri fun getNotificationUri(): Uri getShort fun getShort(column: Int ): Short getString fun getString(column: Int ): String ? getType fun getType(column: Int ): Int isNull fun isNull(column: Int ): Boolean onMove fun onMove(oldPosition: Int , newPosition: Int ): Boolean registerContentObserver fun registerContentObserver(observer: ContentObserver): Unit registerDataSetObserver fun registerDataSetObserver(observer: DataSetObserver?): Unit setNotificationUri fun setNotificationUri(cr: ContentResolver?, notifyUri: Uri?): Unit unregisterContentObserver fun unregisterContentObserver(observer: ContentObserver?): Unit unregisterDataSetObserver fun unregisterDataSetObserver(observer: DataSetObserver?): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / <init> <init> JoinedCursor(leftCursor: Cursor, rightCursor: Cursor, leftJoinColumn: String , rightJoinColumn: String )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/-init-/#init","text":"JoinedCursor(leftCursor: Cursor, rightCursor: Cursor, leftJoinColumn: String , rightJoinColumn: String )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/close/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / close close fun close(): Unit","title":"Close"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/close/#close","text":"fun close(): Unit","title":"close"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-column-count/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / getColumnCount getColumnCount fun getColumnCount(): Int","title":"Get column count"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-column-count/#getcolumncount","text":"fun getColumnCount(): Int","title":"getColumnCount"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-column-names/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / getColumnNames getColumnNames fun getColumnNames(): Array < String >","title":"Get column names"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-column-names/#getcolumnnames","text":"fun getColumnNames(): Array < String >","title":"getColumnNames"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-count/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / getCount getCount fun getCount(): Int","title":"Get count"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-count/#getcount","text":"fun getCount(): Int","title":"getCount"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-double/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / getDouble getDouble fun getDouble(column: Int ): Double","title":"Get double"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-double/#getdouble","text":"fun getDouble(column: Int ): Double","title":"getDouble"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-float/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / getFloat getFloat fun getFloat(column: Int ): Float","title":"Get float"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-float/#getfloat","text":"fun getFloat(column: Int ): Float","title":"getFloat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-int/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / getInt getInt fun getInt(column: Int ): Int","title":"Get int"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-int/#getint","text":"fun getInt(column: Int ): Int","title":"getInt"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-long/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / getLong getLong fun getLong(column: Int ): Long","title":"Get long"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-long/#getlong","text":"fun getLong(column: Int ): Long","title":"getLong"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-notification-uri/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / getNotificationUri getNotificationUri fun getNotificationUri(): Uri","title":"Get notification uri"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-notification-uri/#getnotificationuri","text":"fun getNotificationUri(): Uri","title":"getNotificationUri"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-short/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / getShort getShort fun getShort(column: Int ): Short","title":"Get short"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-short/#getshort","text":"fun getShort(column: Int ): Short","title":"getShort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-string/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / getString getString fun getString(column: Int ): String ?","title":"Get string"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-string/#getstring","text":"fun getString(column: Int ): String ?","title":"getString"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-type/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / getType getType fun getType(column: Int ): Int","title":"Get type"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/get-type/#gettype","text":"fun getType(column: Int ): Int","title":"getType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/is-null/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / isNull isNull fun isNull(column: Int ): Boolean","title":"Is null"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/is-null/#isnull","text":"fun isNull(column: Int ): Boolean","title":"isNull"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/left-cursor/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / leftCursor leftCursor val leftCursor: Cursor","title":"Left cursor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/left-cursor/#leftcursor","text":"val leftCursor: Cursor","title":"leftCursor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/left-join-column/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / leftJoinColumn leftJoinColumn val leftJoinColumn: String","title":"Left join column"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/left-join-column/#leftjoincolumn","text":"val leftJoinColumn: String","title":"leftJoinColumn"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/map-id-to-right-cursor-position/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / mapIdToRightCursorPosition mapIdToRightCursorPosition val mapIdToRightCursorPosition: Map < Long , Int >","title":"Map id to right cursor position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/map-id-to-right-cursor-position/#mapidtorightcursorposition","text":"val mapIdToRightCursorPosition: Map < Long , Int >","title":"mapIdToRightCursorPosition"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/on-move/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / onMove onMove fun onMove(oldPosition: Int , newPosition: Int ): Boolean","title":"On move"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/on-move/#onmove","text":"fun onMove(oldPosition: Int , newPosition: Int ): Boolean","title":"onMove"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/register-content-observer/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / registerContentObserver registerContentObserver fun registerContentObserver(observer: ContentObserver): Unit","title":"Register content observer"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/register-content-observer/#registercontentobserver","text":"fun registerContentObserver(observer: ContentObserver): Unit","title":"registerContentObserver"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/register-data-set-observer/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / registerDataSetObserver registerDataSetObserver fun registerDataSetObserver(observer: DataSetObserver?): Unit","title":"Register data set observer"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/register-data-set-observer/#registerdatasetobserver","text":"fun registerDataSetObserver(observer: DataSetObserver?): Unit","title":"registerDataSetObserver"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/right-cursor/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / rightCursor rightCursor val rightCursor: Cursor","title":"Right cursor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/right-cursor/#rightcursor","text":"val rightCursor: Cursor","title":"rightCursor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/right-join-column/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / rightJoinColumn rightJoinColumn val rightJoinColumn: String","title":"Right join column"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/right-join-column/#rightjoincolumn","text":"val rightJoinColumn: String","title":"rightJoinColumn"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/set-notification-uri/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / setNotificationUri setNotificationUri fun setNotificationUri(cr: ContentResolver?, notifyUri: Uri?): Unit","title":"Set notification uri"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/set-notification-uri/#setnotificationuri","text":"fun setNotificationUri(cr: ContentResolver?, notifyUri: Uri?): Unit","title":"setNotificationUri"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/unregister-content-observer/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / unregisterContentObserver unregisterContentObserver fun unregisterContentObserver(observer: ContentObserver?): Unit","title":"Unregister content observer"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/unregister-content-observer/#unregistercontentobserver","text":"fun unregisterContentObserver(observer: ContentObserver?): Unit","title":"unregisterContentObserver"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/unregister-data-set-observer/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / JoinedCursor / unregisterDataSetObserver unregisterDataSetObserver fun unregisterDataSetObserver(observer: DataSetObserver?): Unit","title":"Unregister data set observer"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-joined-cursor/unregister-data-set-observer/#unregisterdatasetobserver","text":"fun unregisterDataSetObserver(observer: DataSetObserver?): Unit","title":"unregisterDataSetObserver"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTask LoadServiceTask open class LoadServiceTask : Callable <Pair< MutableList < StopInfo !>!, MutableList <ServiceLineInfo!>!>!> Constructors Name Summary <init> LoadServiceTask(stop: ScheduledStop !, cursor: Cursor!) Functions Name Summary call open fun call(): Pair< MutableList < StopInfo !>!, MutableList <ServiceLineInfo!>!>! getStopFor open fun getStopFor(code: String !): ScheduledStop !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task/#loadservicetask","text":"open class LoadServiceTask : Callable <Pair< MutableList < StopInfo !>!, MutableList <ServiceLineInfo!>!>!>","title":"LoadServiceTask"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task/#constructors","text":"Name Summary <init> LoadServiceTask(stop: ScheduledStop !, cursor: Cursor!)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task/#functions","text":"Name Summary call open fun call(): Pair< MutableList < StopInfo !>!, MutableList <ServiceLineInfo!>!>! getStopFor open fun getStopFor(code: String !): ScheduledStop !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTask / <init> <init> LoadServiceTask(stop: ScheduledStop !, cursor: Cursor!)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task/-init-/#init","text":"LoadServiceTask(stop: ScheduledStop !, cursor: Cursor!)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task/call/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTask / call call open fun call(): Pair< MutableList < StopInfo !>!, MutableList <ServiceLineInfo!>!>!","title":"Call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task/call/#call","text":"open fun call(): Pair< MutableList < StopInfo !>!, MutableList <ServiceLineInfo!>!>!","title":"call"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task/get-stop-for/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTask / getStopFor getStopFor open fun getStopFor(code: String !): ScheduledStop !","title":"Get stop for"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task/get-stop-for/#getstopfor","text":"open fun getStopFor(code: String !): ScheduledStop !","title":"getStopFor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols LoadServiceTaskCursorCols open class LoadServiceTaskCursorCols TODO Should find an appropriate class name Constructors Name Summary <init> TODO Should find an appropriate class name LoadServiceTaskCursorCols() Properties Name Summary address static var address: Int arrivalTime static var arrivalTime: Int bearing static var bearing: Int departureTime static var departureTime: Int id static var id: Int lat static var lat: Int lon static var lon: Int name static var name: Int realTimeStatus static var realTimeStatus: Int serviceColor static var serviceColor: Int stopCode static var stopCode: Int travelled static var travelled: Int waypoints static var waypoints: Int wheelchairAccessible static var wheelchairAccessible: Int Functions Name Summary init open static fun init(cursor: Cursor!): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/#loadservicetaskcursorcols","text":"open class LoadServiceTaskCursorCols TODO Should find an appropriate class name","title":"LoadServiceTaskCursorCols"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/#constructors","text":"Name Summary <init> TODO Should find an appropriate class name LoadServiceTaskCursorCols()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/#properties","text":"Name Summary address static var address: Int arrivalTime static var arrivalTime: Int bearing static var bearing: Int departureTime static var departureTime: Int id static var id: Int lat static var lat: Int lon static var lon: Int name static var name: Int realTimeStatus static var realTimeStatus: Int serviceColor static var serviceColor: Int stopCode static var stopCode: Int travelled static var travelled: Int waypoints static var waypoints: Int wheelchairAccessible static var wheelchairAccessible: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/#functions","text":"Name Summary init open static fun init(cursor: Cursor!): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / <init> <init> LoadServiceTaskCursorCols() TODO Should find an appropriate class name","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/-init-/#init","text":"LoadServiceTaskCursorCols() TODO Should find an appropriate class name","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/address/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / address address static var address: Int","title":"Address"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/address/#address","text":"static var address: Int","title":"address"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/arrival-time/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / arrivalTime arrivalTime static var arrivalTime: Int","title":"Arrival time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/arrival-time/#arrivaltime","text":"static var arrivalTime: Int","title":"arrivalTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/bearing/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / bearing bearing static var bearing: Int","title":"Bearing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/bearing/#bearing","text":"static var bearing: Int","title":"bearing"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/departure-time/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / departureTime departureTime static var departureTime: Int","title":"Departure time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/departure-time/#departuretime","text":"static var departureTime: Int","title":"departureTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/id/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / id id static var id: Int","title":"Id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/id/#id","text":"static var id: Int","title":"id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/init/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / init init open static fun init(cursor: Cursor!): Unit","title":"Init"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/init/#init","text":"open static fun init(cursor: Cursor!): Unit","title":"init"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/lat/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / lat lat static var lat: Int","title":"Lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/lat/#lat","text":"static var lat: Int","title":"lat"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/lon/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / lon lon static var lon: Int","title":"Lon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/lon/#lon","text":"static var lon: Int","title":"lon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/name/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / name name static var name: Int","title":"Name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/name/#name","text":"static var name: Int","title":"name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/real-time-status/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / realTimeStatus realTimeStatus static var realTimeStatus: Int","title":"Real time status"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/real-time-status/#realtimestatus","text":"static var realTimeStatus: Int","title":"realTimeStatus"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/service-color/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / serviceColor serviceColor static var serviceColor: Int","title":"Service color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/service-color/#servicecolor","text":"static var serviceColor: Int","title":"serviceColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/stop-code/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / stopCode stopCode static var stopCode: Int","title":"Stop code"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/stop-code/#stopcode","text":"static var stopCode: Int","title":"stopCode"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/travelled/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / travelled travelled static var travelled: Int","title":"Travelled"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/travelled/#travelled","text":"static var travelled: Int","title":"travelled"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/waypoints/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / waypoints waypoints static var waypoints: Int","title":"Waypoints"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/waypoints/#waypoints","text":"static var waypoints: Int","title":"waypoints"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/wheelchair-accessible/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / LoadServiceTaskCursorCols / wheelchairAccessible wheelchairAccessible static var wheelchairAccessible: Int","title":"Wheelchair accessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-load-service-task-cursor-cols/wheelchair-accessible/#wheelchairaccessible","text":"static var wheelchairAccessible: Int","title":"wheelchairAccessible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceRepository ServiceRepository interface ServiceRepository Functions Name Summary fetchServices abstract fun fetchServices(service: TimetableEntry , stop: ScheduledStop ): Completable loadServices abstract fun loadServices(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>> Inheritors Name Summary ServiceRepositoryImpl class ServiceRepositoryImpl : ServiceRepository","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository/#servicerepository","text":"interface ServiceRepository","title":"ServiceRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository/#functions","text":"Name Summary fetchServices abstract fun fetchServices(service: TimetableEntry , stop: ScheduledStop ): Completable loadServices abstract fun loadServices(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository/#inheritors","text":"Name Summary ServiceRepositoryImpl class ServiceRepositoryImpl : ServiceRepository","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository/fetch-services/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceRepository / fetchServices fetchServices abstract fun fetchServices(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"Fetch services"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository/fetch-services/#fetchservices","text":"abstract fun fetchServices(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"fetchServices"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository/load-services/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceRepository / loadServices loadServices abstract fun loadServices(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>>","title":"Load services"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository/load-services/#loadservices","text":"abstract fun loadServices(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>>","title":"loadServices"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository-impl/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceRepositoryImpl ServiceRepositoryImpl class ServiceRepositoryImpl : ServiceRepository Constructors Name Summary <init> ServiceRepositoryImpl(context: Context, fetchService: FetchService ) Functions Name Summary fetchServices fun fetchServices(service: TimetableEntry , stop: ScheduledStop ): Completable loadServices fun loadServices(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository-impl/#servicerepositoryimpl","text":"class ServiceRepositoryImpl : ServiceRepository","title":"ServiceRepositoryImpl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository-impl/#constructors","text":"Name Summary <init> ServiceRepositoryImpl(context: Context, fetchService: FetchService )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository-impl/#functions","text":"Name Summary fetchServices fun fetchServices(service: TimetableEntry , stop: ScheduledStop ): Completable loadServices fun loadServices(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository-impl/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceRepositoryImpl / <init> <init> ServiceRepositoryImpl(context: Context, fetchService: FetchService )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository-impl/-init-/#init","text":"ServiceRepositoryImpl(context: Context, fetchService: FetchService )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository-impl/fetch-services/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceRepositoryImpl / fetchServices fetchServices fun fetchServices(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"Fetch services"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository-impl/fetch-services/#fetchservices","text":"fun fetchServices(service: TimetableEntry , stop: ScheduledStop ): Completable","title":"fetchServices"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository-impl/load-services/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceRepositoryImpl / loadServices loadServices fun loadServices(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>>","title":"Load services"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-repository-impl/load-services/#loadservices","text":"fun loadServices(service: TimetableEntry , stop: ScheduledStop ): Single<Pair< List < StopInfo >, List <ServiceLineInfo>>>","title":"loadServices"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceStopsLoaderFactory ServiceStopsLoaderFactory open class ServiceStopsLoaderFactory Constructors Name Summary <init> ServiceStopsLoaderFactory() Properties Name Summary PROJECTION static val PROJECTION: Array < String !>! SELECTION segment_shapes.service_trip_id = ? AND (service_stops.julian_day = ? OR service_stops.julian_day = 0) static val SELECTION: String ! SORT_ORDER service_stops.arrival_time ASC, service_stops.departure_time ASC static val SORT_ORDER: String ! Functions Name Summary create open static fun create(context: Context!, serviceTripId: String !, timeInSeconds: Long ): CursorLoader!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/#servicestopsloaderfactory","text":"open class ServiceStopsLoaderFactory","title":"ServiceStopsLoaderFactory"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/#constructors","text":"Name Summary <init> ServiceStopsLoaderFactory()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/#properties","text":"Name Summary PROJECTION static val PROJECTION: Array < String !>! SELECTION segment_shapes.service_trip_id = ? AND (service_stops.julian_day = ? OR service_stops.julian_day = 0) static val SELECTION: String ! SORT_ORDER service_stops.arrival_time ASC, service_stops.departure_time ASC static val SORT_ORDER: String !","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/#functions","text":"Name Summary create open static fun create(context: Context!, serviceTripId: String !, timeInSeconds: Long ): CursorLoader!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceStopsLoaderFactory / <init> <init> ServiceStopsLoaderFactory()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/-init-/#init","text":"ServiceStopsLoaderFactory()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/-p-r-o-j-e-c-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceStopsLoaderFactory / PROJECTION PROJECTION static val PROJECTION: Array < String !>!","title":" p r o j e c t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/-p-r-o-j-e-c-t-i-o-n/#projection","text":"static val PROJECTION: Array < String !>!","title":"PROJECTION"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/-s-e-l-e-c-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceStopsLoaderFactory / SELECTION SELECTION static val SELECTION: String ! segment_shapes.service_trip_id = ? AND (service_stops.julian_day = ? OR service_stops.julian_day = 0)","title":" s e l e c t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/-s-e-l-e-c-t-i-o-n/#selection","text":"static val SELECTION: String ! segment_shapes.service_trip_id = ? AND (service_stops.julian_day = ? OR service_stops.julian_day = 0)","title":"SELECTION"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/-s-o-r-t_-o-r-d-e-r/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceStopsLoaderFactory / SORT_ORDER SORT_ORDER static val SORT_ORDER: String ! service_stops.arrival_time ASC, service_stops.departure_time ASC","title":" s o r t  o r d e r"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/-s-o-r-t_-o-r-d-e-r/#sort_order","text":"static val SORT_ORDER: String ! service_stops.arrival_time ASC, service_stops.departure_time ASC","title":"SORT_ORDER"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/create/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceStopsLoaderFactory / create create open static fun create(context: Context!, serviceTripId: String !, timeInSeconds: Long ): CursorLoader!","title":"Create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-stops-loader-factory/create/#create","text":"open static fun create(context: Context!, serviceTripId: String !, timeInSeconds: Long ): CursorLoader!","title":"create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel ServiceViewModel abstract class ServiceViewModel : RxViewModel Constructors Name Summary <init> ServiceViewModel() Properties Name Summary alpha abstract val alpha: ObservableFloat countDownTimeText abstract val countDownTimeText: ObservableField< String > countDownTimeTextBack abstract val countDownTimeTextBack: ObservableField<Drawable> dateTimeZone abstract var dateTimeZone: DateTimeZone modeInfo abstract val modeInfo: ObservableField< ModeInfo > occupancyViewModel abstract val occupancyViewModel: OccupancyViewModel onAlertsClick abstract val onAlertsClick: TapAction < ArrayList < RealtimeAlert >> onItemClick abstract val onItemClick: TapAction < TimetableEntry > secondaryText abstract val secondaryText: ObservableField< String > secondaryTextColor abstract val secondaryTextColor: ObservableInt service abstract var service: TimetableEntry serviceAlertViewModel abstract val serviceAlertViewModel: ServiceAlertViewModel serviceColor abstract val serviceColor: ObservableInt serviceNumber abstract val serviceNumber: ObservableField< String > showOccupancyInfo abstract val showOccupancyInfo: ObservableBoolean tertiaryText abstract val tertiaryText: ObservableField< String > wheelchairIcon abstract val wheelchairIcon: ObservableField<Drawable?> wheelchairTint abstract val wheelchairTint: ObservableField< Int > Functions Name Summary getRealTimeDeparture abstract fun getRealTimeDeparture(): Long setService abstract fun setService(_service: TimetableEntry , _dateTimeZone: DateTimeZone): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/#serviceviewmodel","text":"abstract class ServiceViewModel : RxViewModel","title":"ServiceViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/#constructors","text":"Name Summary <init> ServiceViewModel()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/#properties","text":"Name Summary alpha abstract val alpha: ObservableFloat countDownTimeText abstract val countDownTimeText: ObservableField< String > countDownTimeTextBack abstract val countDownTimeTextBack: ObservableField<Drawable> dateTimeZone abstract var dateTimeZone: DateTimeZone modeInfo abstract val modeInfo: ObservableField< ModeInfo > occupancyViewModel abstract val occupancyViewModel: OccupancyViewModel onAlertsClick abstract val onAlertsClick: TapAction < ArrayList < RealtimeAlert >> onItemClick abstract val onItemClick: TapAction < TimetableEntry > secondaryText abstract val secondaryText: ObservableField< String > secondaryTextColor abstract val secondaryTextColor: ObservableInt service abstract var service: TimetableEntry serviceAlertViewModel abstract val serviceAlertViewModel: ServiceAlertViewModel serviceColor abstract val serviceColor: ObservableInt serviceNumber abstract val serviceNumber: ObservableField< String > showOccupancyInfo abstract val showOccupancyInfo: ObservableBoolean tertiaryText abstract val tertiaryText: ObservableField< String > wheelchairIcon abstract val wheelchairIcon: ObservableField<Drawable?> wheelchairTint abstract val wheelchairTint: ObservableField< Int >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/#functions","text":"Name Summary getRealTimeDeparture abstract fun getRealTimeDeparture(): Long setService abstract fun setService(_service: TimetableEntry , _dateTimeZone: DateTimeZone): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / <init> <init> ServiceViewModel()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/-init-/#init","text":"ServiceViewModel()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/alpha/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / alpha alpha abstract val alpha: ObservableFloat","title":"Alpha"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/alpha/#alpha","text":"abstract val alpha: ObservableFloat","title":"alpha"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/count-down-time-text-back/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / countDownTimeTextBack countDownTimeTextBack abstract val countDownTimeTextBack: ObservableField<Drawable>","title":"Count down time text back"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/count-down-time-text-back/#countdowntimetextback","text":"abstract val countDownTimeTextBack: ObservableField<Drawable>","title":"countDownTimeTextBack"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/count-down-time-text/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / countDownTimeText countDownTimeText abstract val countDownTimeText: ObservableField< String >","title":"Count down time text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/count-down-time-text/#countdowntimetext","text":"abstract val countDownTimeText: ObservableField< String >","title":"countDownTimeText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/date-time-zone/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / dateTimeZone dateTimeZone abstract var dateTimeZone: DateTimeZone","title":"Date time zone"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/date-time-zone/#datetimezone","text":"abstract var dateTimeZone: DateTimeZone","title":"dateTimeZone"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/get-real-time-departure/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / getRealTimeDeparture getRealTimeDeparture abstract fun getRealTimeDeparture(): Long","title":"Get real time departure"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/get-real-time-departure/#getrealtimedeparture","text":"abstract fun getRealTimeDeparture(): Long","title":"getRealTimeDeparture"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/mode-info/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / modeInfo modeInfo abstract val modeInfo: ObservableField< ModeInfo >","title":"Mode info"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/mode-info/#modeinfo","text":"abstract val modeInfo: ObservableField< ModeInfo >","title":"modeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/occupancy-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / occupancyViewModel occupancyViewModel abstract val occupancyViewModel: OccupancyViewModel","title":"Occupancy view model"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/occupancy-view-model/#occupancyviewmodel","text":"abstract val occupancyViewModel: OccupancyViewModel","title":"occupancyViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/on-alerts-click/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / onAlertsClick onAlertsClick abstract val onAlertsClick: TapAction < ArrayList < RealtimeAlert >>","title":"On alerts click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/on-alerts-click/#onalertsclick","text":"abstract val onAlertsClick: TapAction < ArrayList < RealtimeAlert >>","title":"onAlertsClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/on-item-click/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / onItemClick onItemClick abstract val onItemClick: TapAction < TimetableEntry >","title":"On item click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/on-item-click/#onitemclick","text":"abstract val onItemClick: TapAction < TimetableEntry >","title":"onItemClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/secondary-text-color/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / secondaryTextColor secondaryTextColor abstract val secondaryTextColor: ObservableInt","title":"Secondary text color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/secondary-text-color/#secondarytextcolor","text":"abstract val secondaryTextColor: ObservableInt","title":"secondaryTextColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/secondary-text/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / secondaryText secondaryText abstract val secondaryText: ObservableField< String >","title":"Secondary text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/secondary-text/#secondarytext","text":"abstract val secondaryText: ObservableField< String >","title":"secondaryText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/service-alert-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / serviceAlertViewModel serviceAlertViewModel abstract val serviceAlertViewModel: ServiceAlertViewModel","title":"Service alert view model"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/service-alert-view-model/#servicealertviewmodel","text":"abstract val serviceAlertViewModel: ServiceAlertViewModel","title":"serviceAlertViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/service-color/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / serviceColor serviceColor abstract val serviceColor: ObservableInt","title":"Service color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/service-color/#servicecolor","text":"abstract val serviceColor: ObservableInt","title":"serviceColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/service-number/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / serviceNumber serviceNumber abstract val serviceNumber: ObservableField< String >","title":"Service number"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/service-number/#servicenumber","text":"abstract val serviceNumber: ObservableField< String >","title":"serviceNumber"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/service/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / service service abstract var service: TimetableEntry","title":"Service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/service/#service","text":"abstract var service: TimetableEntry","title":"service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/set-service/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / setService setService abstract fun setService(_service: TimetableEntry , _dateTimeZone: DateTimeZone): Unit","title":"Set service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/set-service/#setservice","text":"abstract fun setService(_service: TimetableEntry , _dateTimeZone: DateTimeZone): Unit","title":"setService"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/show-occupancy-info/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / showOccupancyInfo showOccupancyInfo abstract val showOccupancyInfo: ObservableBoolean","title":"Show occupancy info"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/show-occupancy-info/#showoccupancyinfo","text":"abstract val showOccupancyInfo: ObservableBoolean","title":"showOccupancyInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/tertiary-text/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / tertiaryText tertiaryText abstract val tertiaryText: ObservableField< String >","title":"Tertiary text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/tertiary-text/#tertiarytext","text":"abstract val tertiaryText: ObservableField< String >","title":"tertiaryText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/wheelchair-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / wheelchairIcon wheelchairIcon abstract val wheelchairIcon: ObservableField<Drawable?>","title":"Wheelchair icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/wheelchair-icon/#wheelchairicon","text":"abstract val wheelchairIcon: ObservableField<Drawable?>","title":"wheelchairIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/wheelchair-tint/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / ServiceViewModel / wheelchairTint wheelchairTint abstract val wheelchairTint: ObservableField< Int >","title":"Wheelchair tint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-service-view-model/wheelchair-tint/#wheelchairtint","text":"abstract val wheelchairTint: ObservableField< Int >","title":"wheelchairTint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-entries-mapper/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableEntriesMapper TimetableEntriesMapper class TimetableEntriesMapper Constructors Name Summary <init> TimetableEntriesMapper(getWheelchairAccessible: GetWheelchairAccessible , gson: Gson, realtimeAlertRepository: RealtimeAlertRepository) Functions Name Summary toContentValues fun toContentValues(services: List < TimetableEntry >): Array <ContentValues>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-entries-mapper/#timetableentriesmapper","text":"class TimetableEntriesMapper","title":"TimetableEntriesMapper"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-entries-mapper/#constructors","text":"Name Summary <init> TimetableEntriesMapper(getWheelchairAccessible: GetWheelchairAccessible , gson: Gson, realtimeAlertRepository: RealtimeAlertRepository)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-entries-mapper/#functions","text":"Name Summary toContentValues fun toContentValues(services: List < TimetableEntry >): Array <ContentValues>","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-entries-mapper/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableEntriesMapper / <init> <init> TimetableEntriesMapper(getWheelchairAccessible: GetWheelchairAccessible , gson: Gson, realtimeAlertRepository: RealtimeAlertRepository)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-entries-mapper/-init-/#init","text":"TimetableEntriesMapper(getWheelchairAccessible: GetWheelchairAccessible , gson: Gson, realtimeAlertRepository: RealtimeAlertRepository)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-entries-mapper/to-content-values/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableEntriesMapper / toContentValues toContentValues fun toContentValues(services: List < TimetableEntry >): Array <ContentValues>","title":"To content values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-entries-mapper/to-content-values/#tocontentvalues","text":"fun toContentValues(services: List < TimetableEntry >): Array <ContentValues>","title":"toContentValues"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment TimetableFragment class TimetableFragment : AbstractTripKitFragment , OnClickListener Types Name Summary Builder class Builder OnTimetableEntrySelectedListener This callback will be invoked when a specific timetable entry is clicked. interface OnTimetableEntrySelectedListener OnTripKitButtonClickListener When you provide the Timetable fragment with buttons, this callback will be called when one is clicked. interface OnTripKitButtonClickListener Constructors Name Summary <init> TimetableFragment() Properties Name Summary buttons var buttons: List < TripKitButton > stop var stop: ScheduledStop ? viewModel lateinit var viewModel: TimetableViewModel Functions Name Summary addOnTimetableEntrySelectedListener fun addOnTimetableEntrySelectedListener(callback: OnTimetableEntrySelectedListener): Unit fun addOnTimetableEntrySelectedListener(listener: ( TimetableEntry , ScheduledStop , Long ) -> Unit ): Unit onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit onAttach fun onAttach(context: Context): Unit onClick fun onClick(p0: View?): Unit onCreate fun onCreate(savedInstanceState: Bundle?): Unit onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? onDestroy fun onDestroy(): Unit onViewCreated fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit selectTime fun selectTime(): Unit setOnTripKitButtonClickListener fun setOnTripKitButtonClickListener(listener: OnTripKitButtonClickListener): Unit fun setOnTripKitButtonClickListener(listener: ( String , ScheduledStop ) -> Unit ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/#timetablefragment","text":"class TimetableFragment : AbstractTripKitFragment , OnClickListener","title":"TimetableFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/#types","text":"Name Summary Builder class Builder OnTimetableEntrySelectedListener This callback will be invoked when a specific timetable entry is clicked. interface OnTimetableEntrySelectedListener OnTripKitButtonClickListener When you provide the Timetable fragment with buttons, this callback will be called when one is clicked. interface OnTripKitButtonClickListener","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/#constructors","text":"Name Summary <init> TimetableFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/#properties","text":"Name Summary buttons var buttons: List < TripKitButton > stop var stop: ScheduledStop ? viewModel lateinit var viewModel: TimetableViewModel","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/#functions","text":"Name Summary addOnTimetableEntrySelectedListener fun addOnTimetableEntrySelectedListener(callback: OnTimetableEntrySelectedListener): Unit fun addOnTimetableEntrySelectedListener(listener: ( TimetableEntry , ScheduledStop , Long ) -> Unit ): Unit onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit onAttach fun onAttach(context: Context): Unit onClick fun onClick(p0: View?): Unit onCreate fun onCreate(savedInstanceState: Bundle?): Unit onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? onDestroy fun onDestroy(): Unit onViewCreated fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit selectTime fun selectTime(): Unit setOnTripKitButtonClickListener fun setOnTripKitButtonClickListener(listener: OnTripKitButtonClickListener): Unit fun setOnTripKitButtonClickListener(listener: ( String , ScheduledStop ) -> Unit ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / <init> <init> TimetableFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-init-/#init","text":"TimetableFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/add-on-timetable-entry-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / addOnTimetableEntrySelectedListener addOnTimetableEntrySelectedListener fun addOnTimetableEntrySelectedListener(callback: OnTimetableEntrySelectedListener): Unit fun addOnTimetableEntrySelectedListener(listener: ( TimetableEntry , ScheduledStop , Long ) -> Unit ): Unit","title":"Add on timetable entry selected listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/add-on-timetable-entry-selected-listener/#addontimetableentryselectedlistener","text":"fun addOnTimetableEntrySelectedListener(callback: OnTimetableEntrySelectedListener): Unit fun addOnTimetableEntrySelectedListener(listener: ( TimetableEntry , ScheduledStop , Long ) -> Unit ): Unit","title":"addOnTimetableEntrySelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/buttons/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / buttons buttons protected var buttons: List < TripKitButton >","title":"Buttons"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/buttons/#buttons","text":"protected var buttons: List < TripKitButton >","title":"buttons"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-activity-created/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / onActivityCreated onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit","title":"On activity created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-activity-created/#onactivitycreated","text":"fun onActivityCreated(savedInstanceState: Bundle?): Unit","title":"onActivityCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-attach/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / onAttach onAttach fun onAttach(context: Context): Unit","title":"On attach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-attach/#onattach","text":"fun onAttach(context: Context): Unit","title":"onAttach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-click/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / onClick onClick fun onClick(p0: View?): Unit","title":"On click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-click/#onclick","text":"fun onClick(p0: View?): Unit","title":"onClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-create-view/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / onCreateView onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","title":"On create view"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-create-view/#oncreateview","text":"fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","title":"onCreateView"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / onCreate onCreate fun onCreate(savedInstanceState: Bundle?): Unit","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-create/#oncreate","text":"fun onCreate(savedInstanceState: Bundle?): Unit","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-destroy/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / onDestroy onDestroy fun onDestroy(): Unit","title":"On destroy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-destroy/#ondestroy","text":"fun onDestroy(): Unit","title":"onDestroy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-view-created/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / onViewCreated onViewCreated fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"On view created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/on-view-created/#onviewcreated","text":"fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"onViewCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/select-time/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / selectTime selectTime fun selectTime(): Unit","title":"Select time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/select-time/#selecttime","text":"fun selectTime(): Unit","title":"selectTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/set-on-trip-kit-button-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / setOnTripKitButtonClickListener setOnTripKitButtonClickListener fun setOnTripKitButtonClickListener(listener: OnTripKitButtonClickListener): Unit fun setOnTripKitButtonClickListener(listener: ( String , ScheduledStop ) -> Unit ): Unit","title":"Set on trip kit button click listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/set-on-trip-kit-button-click-listener/#setontripkitbuttonclicklistener","text":"fun setOnTripKitButtonClickListener(listener: OnTripKitButtonClickListener): Unit fun setOnTripKitButtonClickListener(listener: ( String , ScheduledStop ) -> Unit ): Unit","title":"setOnTripKitButtonClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/stop/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / stop stop var stop: ScheduledStop ?","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/stop/#stop","text":"var stop: ScheduledStop ?","title":"stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / viewModel viewModel lateinit var viewModel: TimetableViewModel","title":"View model"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/view-model/#viewmodel","text":"lateinit var viewModel: TimetableViewModel","title":"viewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / Builder Builder class Builder Constructors Name Summary <init> Builder() Functions Name Summary build fun build(): TimetableFragment withButton fun withButton(id: String , layoutResourceId: Int ): Builder withStop fun withStop(stop: ScheduledStop ?): Builder","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/#builder","text":"class Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/#functions","text":"Name Summary build fun build(): TimetableFragment withButton fun withButton(id: String , layoutResourceId: Int ): Builder withStop fun withStop(stop: ScheduledStop ?): Builder","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / Builder / <init> <init> Builder()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / Builder / build build fun build(): TimetableFragment","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/build/#build","text":"fun build(): TimetableFragment","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/with-button/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / Builder / withButton withButton fun withButton(id: String , layoutResourceId: Int ): Builder","title":"With button"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/with-button/#withbutton","text":"fun withButton(id: String , layoutResourceId: Int ): Builder","title":"withButton"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/with-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / Builder / withStop withStop fun withStop(stop: ScheduledStop ?): Builder","title":"With stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-builder/with-stop/#withstop","text":"fun withStop(stop: ScheduledStop ?): Builder","title":"withStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-on-timetable-entry-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / OnTimetableEntrySelectedListener OnTimetableEntrySelectedListener interface OnTimetableEntrySelectedListener This callback will be invoked when a specific timetable entry is clicked. Functions Name Summary onTimetableEntrySelected abstract fun onTimetableEntrySelected(service: TimetableEntry , stop: ScheduledStop , minStartTime: Long ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-on-timetable-entry-selected-listener/#ontimetableentryselectedlistener","text":"interface OnTimetableEntrySelectedListener This callback will be invoked when a specific timetable entry is clicked.","title":"OnTimetableEntrySelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-on-timetable-entry-selected-listener/#functions","text":"Name Summary onTimetableEntrySelected abstract fun onTimetableEntrySelected(service: TimetableEntry , stop: ScheduledStop , minStartTime: Long ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-on-timetable-entry-selected-listener/on-timetable-entry-selected/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / OnTimetableEntrySelectedListener / onTimetableEntrySelected onTimetableEntrySelected abstract fun onTimetableEntrySelected(service: TimetableEntry , stop: ScheduledStop , minStartTime: Long ): Unit","title":"On timetable entry selected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-on-timetable-entry-selected-listener/on-timetable-entry-selected/#ontimetableentryselected","text":"abstract fun onTimetableEntrySelected(service: TimetableEntry , stop: ScheduledStop , minStartTime: Long ): Unit","title":"onTimetableEntrySelected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-on-trip-kit-button-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / OnTripKitButtonClickListener OnTripKitButtonClickListener interface OnTripKitButtonClickListener When you provide the Timetable fragment with buttons, this callback will be called when one is clicked. Functions Name Summary onTripButtonClicked abstract fun onTripButtonClicked(id: String , stop: ScheduledStop ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-on-trip-kit-button-click-listener/#ontripkitbuttonclicklistener","text":"interface OnTripKitButtonClickListener When you provide the Timetable fragment with buttons, this callback will be called when one is clicked.","title":"OnTripKitButtonClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-on-trip-kit-button-click-listener/#functions","text":"Name Summary onTripButtonClicked abstract fun onTripButtonClicked(id: String , stop: ScheduledStop ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-on-trip-kit-button-click-listener/on-trip-button-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableFragment / OnTripKitButtonClickListener / onTripButtonClicked onTripButtonClicked abstract fun onTripButtonClicked(id: String , stop: ScheduledStop ): Unit","title":"On trip button clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-fragment/-on-trip-kit-button-click-listener/on-trip-button-clicked/#ontripbuttonclicked","text":"abstract fun onTripButtonClicked(id: String , stop: ScheduledStop ): Unit","title":"onTripButtonClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel TimetableViewModel class TimetableViewModel : RxViewModel Constructors Name Summary <init> TimetableViewModel(realTimeChoreographer: RealTimeChoreographer , fetchAndLoadTimetable: FetchAndLoadTimetable , serviceViewModelProvider: Provider< ServiceViewModel >, regionService: RegionService , getNow: GetNow , resources: Resources) Properties Name Summary downloadTimetable val downloadTimetable: PublishRelay< Long > filter val filter: BehaviorRelay< String > itemBinding val itemBinding: ItemBinding< ServiceViewModel !> minStartTime val minStartTime: Observable< Long !>! onAlertClicks val onAlertClicks: Observable< ArrayList < RealtimeAlert >> onDateChanged val onDateChanged: PublishRelay< Long > onServiceClick val onServiceClick: Observable< Triple < TimetableEntry , ScheduledStop , Long !>!>! scrollToNow val scrollToNow: PublishRelay< Int > serviceItemBinding val serviceItemBinding: ItemBinding< TimetableHeaderLineItem !> serviceNumbers val serviceNumbers: ObservableField< List < TimetableHeaderLineItem >> services val services: ObservableField< List < ServiceViewModel >> showError val showError: PublishRelay< String > showLoading val showLoading: ObservableBoolean stationName val stationName: ObservableField< String > stationType val stationType: ObservableField< String > stop var stop: BehaviorRelay< ScheduledStop > Functions Name Summary downloadMoreTimetableAsync fun downloadMoreTimetableAsync(): Unit getFirstNowPosition fun getFirstNowPosition(): Int onCleared This method will be called when this ViewModel is no longer used and will be destroyed. fun onCleared(): Unit setText fun setText(): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/#timetableviewmodel","text":"class TimetableViewModel : RxViewModel","title":"TimetableViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/#constructors","text":"Name Summary <init> TimetableViewModel(realTimeChoreographer: RealTimeChoreographer , fetchAndLoadTimetable: FetchAndLoadTimetable , serviceViewModelProvider: Provider< ServiceViewModel >, regionService: RegionService , getNow: GetNow , resources: Resources)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/#properties","text":"Name Summary downloadTimetable val downloadTimetable: PublishRelay< Long > filter val filter: BehaviorRelay< String > itemBinding val itemBinding: ItemBinding< ServiceViewModel !> minStartTime val minStartTime: Observable< Long !>! onAlertClicks val onAlertClicks: Observable< ArrayList < RealtimeAlert >> onDateChanged val onDateChanged: PublishRelay< Long > onServiceClick val onServiceClick: Observable< Triple < TimetableEntry , ScheduledStop , Long !>!>! scrollToNow val scrollToNow: PublishRelay< Int > serviceItemBinding val serviceItemBinding: ItemBinding< TimetableHeaderLineItem !> serviceNumbers val serviceNumbers: ObservableField< List < TimetableHeaderLineItem >> services val services: ObservableField< List < ServiceViewModel >> showError val showError: PublishRelay< String > showLoading val showLoading: ObservableBoolean stationName val stationName: ObservableField< String > stationType val stationType: ObservableField< String > stop var stop: BehaviorRelay< ScheduledStop >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/#functions","text":"Name Summary downloadMoreTimetableAsync fun downloadMoreTimetableAsync(): Unit getFirstNowPosition fun getFirstNowPosition(): Int onCleared This method will be called when this ViewModel is no longer used and will be destroyed. fun onCleared(): Unit setText fun setText(): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / <init> <init> TimetableViewModel(realTimeChoreographer: RealTimeChoreographer , fetchAndLoadTimetable: FetchAndLoadTimetable , serviceViewModelProvider: Provider< ServiceViewModel >, regionService: RegionService , getNow: GetNow , resources: Resources)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/-init-/#init","text":"TimetableViewModel(realTimeChoreographer: RealTimeChoreographer , fetchAndLoadTimetable: FetchAndLoadTimetable , serviceViewModelProvider: Provider< ServiceViewModel >, regionService: RegionService , getNow: GetNow , resources: Resources)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/download-more-timetable-async/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / downloadMoreTimetableAsync downloadMoreTimetableAsync fun downloadMoreTimetableAsync(): Unit","title":"Download more timetable async"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/download-more-timetable-async/#downloadmoretimetableasync","text":"fun downloadMoreTimetableAsync(): Unit","title":"downloadMoreTimetableAsync"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/download-timetable/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / downloadTimetable downloadTimetable val downloadTimetable: PublishRelay< Long >","title":"Download timetable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/download-timetable/#downloadtimetable","text":"val downloadTimetable: PublishRelay< Long >","title":"downloadTimetable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/filter/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / filter filter val filter: BehaviorRelay< String >","title":"Filter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/filter/#filter","text":"val filter: BehaviorRelay< String >","title":"filter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/get-first-now-position/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / getFirstNowPosition getFirstNowPosition fun getFirstNowPosition(): Int","title":"Get first now position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/get-first-now-position/#getfirstnowposition","text":"fun getFirstNowPosition(): Int","title":"getFirstNowPosition"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/item-binding/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / itemBinding itemBinding val itemBinding: ItemBinding< ServiceViewModel !>","title":"Item binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/item-binding/#itembinding","text":"val itemBinding: ItemBinding< ServiceViewModel !>","title":"itemBinding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/min-start-time/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / minStartTime minStartTime val minStartTime: Observable< Long !>!","title":"Min start time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/min-start-time/#minstarttime","text":"val minStartTime: Observable< Long !>!","title":"minStartTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/on-alert-clicks/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / onAlertClicks onAlertClicks val onAlertClicks: Observable< ArrayList < RealtimeAlert >>","title":"On alert clicks"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/on-alert-clicks/#onalertclicks","text":"val onAlertClicks: Observable< ArrayList < RealtimeAlert >>","title":"onAlertClicks"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/on-cleared/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / onCleared onCleared fun onCleared(): Unit This method will be called when this ViewModel is no longer used and will be destroyed.","title":"On cleared"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/on-cleared/#oncleared","text":"fun onCleared(): Unit This method will be called when this ViewModel is no longer used and will be destroyed.","title":"onCleared"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/on-date-changed/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / onDateChanged onDateChanged val onDateChanged: PublishRelay< Long >","title":"On date changed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/on-date-changed/#ondatechanged","text":"val onDateChanged: PublishRelay< Long >","title":"onDateChanged"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/on-service-click/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / onServiceClick onServiceClick val onServiceClick: Observable< Triple < TimetableEntry , ScheduledStop , Long !>!>!","title":"On service click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/on-service-click/#onserviceclick","text":"val onServiceClick: Observable< Triple < TimetableEntry , ScheduledStop , Long !>!>!","title":"onServiceClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/scroll-to-now/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / scrollToNow scrollToNow val scrollToNow: PublishRelay< Int >","title":"Scroll to now"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/scroll-to-now/#scrolltonow","text":"val scrollToNow: PublishRelay< Int >","title":"scrollToNow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/service-item-binding/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / serviceItemBinding serviceItemBinding val serviceItemBinding: ItemBinding< TimetableHeaderLineItem !>","title":"Service item binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/service-item-binding/#serviceitembinding","text":"val serviceItemBinding: ItemBinding< TimetableHeaderLineItem !>","title":"serviceItemBinding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/service-numbers/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / serviceNumbers serviceNumbers val serviceNumbers: ObservableField< List < TimetableHeaderLineItem >>","title":"Service numbers"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/service-numbers/#servicenumbers","text":"val serviceNumbers: ObservableField< List < TimetableHeaderLineItem >>","title":"serviceNumbers"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/services/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / services services val services: ObservableField< List < ServiceViewModel >>","title":"Services"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/services/#services","text":"val services: ObservableField< List < ServiceViewModel >>","title":"services"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/set-text/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / setText setText fun setText(): Unit","title":"Set text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/set-text/#settext","text":"fun setText(): Unit","title":"setText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/show-error/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / showError showError val showError: PublishRelay< String >","title":"Show error"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/show-error/#showerror","text":"val showError: PublishRelay< String >","title":"showError"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/show-loading/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / showLoading showLoading val showLoading: ObservableBoolean","title":"Show loading"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/show-loading/#showloading","text":"val showLoading: ObservableBoolean","title":"showLoading"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/station-name/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / stationName stationName val stationName: ObservableField< String >","title":"Station name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/station-name/#stationname","text":"val stationName: ObservableField< String >","title":"stationName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/station-type/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / stationType stationType val stationType: ObservableField< String >","title":"Station type"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/station-type/#stationtype","text":"val stationType: ObservableField< String >","title":"stationType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/stop/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables / TimetableViewModel / stop stop var stop: BehaviorRelay< ScheduledStop >","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables/-timetable-view-model/stop/#stop","text":"var stop: BehaviorRelay< ScheduledStop >","title":"stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data Package com.skedgo.tripkit.ui.timetables.data Types Name Summary DepartureRequestBody interface DepartureRequestBody DeparturesApi interface DeparturesApi DeparturesRepositoryImpl class DeparturesRepositoryImpl : DeparturesRepository Functions Name Summary postProcess fun DeparturesResponse .postProcess(embarkationStops: List < String >, disembarkationStops: List < String >?): DeparturesResponse","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/#package-comskedgotripkituitimetablesdata","text":"","title":"Package com.skedgo.tripkit.ui.timetables.data"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/#types","text":"Name Summary DepartureRequestBody interface DepartureRequestBody DeparturesApi interface DeparturesApi DeparturesRepositoryImpl class DeparturesRepositoryImpl : DeparturesRepository","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/#functions","text":"Name Summary postProcess fun DeparturesResponse .postProcess(embarkationStops: List < String >, disembarkationStops: List < String >?): DeparturesResponse","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/post-process/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data / postProcess postProcess fun DeparturesResponse .postProcess(embarkationStops: List < String >, disembarkationStops: List < String >?): DeparturesResponse","title":"Post process"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/post-process/#postprocess","text":"fun DeparturesResponse .postProcess(embarkationStops: List < String >, disembarkationStops: List < String >?): DeparturesResponse","title":"postProcess"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departure-request-body/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data / DepartureRequestBody DepartureRequestBody @Immutable @TypeAdapters interface DepartureRequestBody Functions Name Summary disembarkationStops abstract fun disembarkationStops(): List < String >? embarkationStops abstract fun embarkationStops(): List < String > regionName abstract fun regionName(): String timeInSecs abstract fun timeInSecs(): Long","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departure-request-body/#departurerequestbody","text":"@Immutable @TypeAdapters interface DepartureRequestBody","title":"DepartureRequestBody"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departure-request-body/#functions","text":"Name Summary disembarkationStops abstract fun disembarkationStops(): List < String >? embarkationStops abstract fun embarkationStops(): List < String > regionName abstract fun regionName(): String timeInSecs abstract fun timeInSecs(): Long","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departure-request-body/disembarkation-stops/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data / DepartureRequestBody / disembarkationStops disembarkationStops abstract fun disembarkationStops(): List < String >?","title":"Disembarkation stops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departure-request-body/disembarkation-stops/#disembarkationstops","text":"abstract fun disembarkationStops(): List < String >?","title":"disembarkationStops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departure-request-body/embarkation-stops/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data / DepartureRequestBody / embarkationStops embarkationStops abstract fun embarkationStops(): List < String >","title":"Embarkation stops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departure-request-body/embarkation-stops/#embarkationstops","text":"abstract fun embarkationStops(): List < String >","title":"embarkationStops"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departure-request-body/region-name/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data / DepartureRequestBody / regionName regionName @SerializedName(\"region\") abstract fun regionName(): String","title":"Region name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departure-request-body/region-name/#regionname","text":"@SerializedName(\"region\") abstract fun regionName(): String","title":"regionName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departure-request-body/time-in-secs/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data / DepartureRequestBody / timeInSecs timeInSecs @SerializedName(\"timeStamp\") abstract fun timeInSecs(): Long","title":"Time in secs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departure-request-body/time-in-secs/#timeinsecs","text":"@SerializedName(\"timeStamp\") abstract fun timeInSecs(): Long","title":"timeInSecs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-api/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data / DeparturesApi DeparturesApi interface DeparturesApi Functions Name Summary request abstract fun request(url: String , departureRequestBody: DepartureRequestBody ): Single< DeparturesResponse >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-api/#departuresapi","text":"interface DeparturesApi","title":"DeparturesApi"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-api/#functions","text":"Name Summary request abstract fun request(url: String , departureRequestBody: DepartureRequestBody ): Single< DeparturesResponse >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-api/request/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data / DeparturesApi / request request @POST abstract fun request(@Url url: String , @Body departureRequestBody: DepartureRequestBody ): Single< DeparturesResponse >","title":"Request"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-api/request/#request","text":"@POST abstract fun request(@Url url: String , @Body departureRequestBody: DepartureRequestBody ): Single< DeparturesResponse >","title":"request"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-repository-impl/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data / DeparturesRepositoryImpl DeparturesRepositoryImpl class DeparturesRepositoryImpl : DeparturesRepository Constructors Name Summary <init> DeparturesRepositoryImpl(departuresApi: DeparturesApi , regionService: RegionService ) Functions Name Summary getTimetableEntries fun getTimetableEntries(region: String , embarkationStopCodes: List < String >, disembarkationStopCodes: List < String >?, timeInSecs: Long ): Single< DeparturesResponse >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-repository-impl/#departuresrepositoryimpl","text":"class DeparturesRepositoryImpl : DeparturesRepository","title":"DeparturesRepositoryImpl"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-repository-impl/#constructors","text":"Name Summary <init> DeparturesRepositoryImpl(departuresApi: DeparturesApi , regionService: RegionService )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-repository-impl/#functions","text":"Name Summary getTimetableEntries fun getTimetableEntries(region: String , embarkationStopCodes: List < String >, disembarkationStopCodes: List < String >?, timeInSecs: Long ): Single< DeparturesResponse >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-repository-impl/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data / DeparturesRepositoryImpl / <init> <init> DeparturesRepositoryImpl(departuresApi: DeparturesApi , regionService: RegionService )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-repository-impl/-init-/#init","text":"DeparturesRepositoryImpl(departuresApi: DeparturesApi , regionService: RegionService )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-repository-impl/get-timetable-entries/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.data / DeparturesRepositoryImpl / getTimetableEntries getTimetableEntries fun getTimetableEntries(region: String , embarkationStopCodes: List < String >, disembarkationStopCodes: List < String >?, timeInSecs: Long ): Single< DeparturesResponse >","title":"Get timetable entries"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.data/-departures-repository-impl/get-timetable-entries/#gettimetableentries","text":"fun getTimetableEntries(region: String , embarkationStopCodes: List < String >, disembarkationStopCodes: List < String >?, timeInSecs: Long ): Single< DeparturesResponse >","title":"getTimetableEntries"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain Package com.skedgo.tripkit.ui.timetables.domain Types Name Summary DeparturesRepository interface DeparturesRepository TimetableLoaderFactory class TimetableLoaderFactory TimetableQueryParams data class TimetableQueryParams","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/#package-comskedgotripkituitimetablesdomain","text":"","title":"Package com.skedgo.tripkit.ui.timetables.domain"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/#types","text":"Name Summary DeparturesRepository interface DeparturesRepository TimetableLoaderFactory class TimetableLoaderFactory TimetableQueryParams data class TimetableQueryParams","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-departures-repository/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / DeparturesRepository DeparturesRepository interface DeparturesRepository Functions Name Summary getTimetableEntries abstract fun getTimetableEntries(region: String , embarkationStopCodes: List < String >, disembarkationStopCodes: List < String >?, timeInSecs: Long ): Single< DeparturesResponse > Inheritors Name Summary DeparturesRepositoryImpl class DeparturesRepositoryImpl : DeparturesRepository","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-departures-repository/#departuresrepository","text":"interface DeparturesRepository","title":"DeparturesRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-departures-repository/#functions","text":"Name Summary getTimetableEntries abstract fun getTimetableEntries(region: String , embarkationStopCodes: List < String >, disembarkationStopCodes: List < String >?, timeInSecs: Long ): Single< DeparturesResponse >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-departures-repository/#inheritors","text":"Name Summary DeparturesRepositoryImpl class DeparturesRepositoryImpl : DeparturesRepository","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-departures-repository/get-timetable-entries/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / DeparturesRepository / getTimetableEntries getTimetableEntries abstract fun getTimetableEntries(region: String , embarkationStopCodes: List < String >, disembarkationStopCodes: List < String >?, timeInSecs: Long ): Single< DeparturesResponse >","title":"Get timetable entries"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-departures-repository/get-timetable-entries/#gettimetableentries","text":"abstract fun getTimetableEntries(region: String , embarkationStopCodes: List < String >, disembarkationStopCodes: List < String >?, timeInSecs: Long ): Single< DeparturesResponse >","title":"getTimetableEntries"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / TimetableLoaderFactory TimetableLoaderFactory class TimetableLoaderFactory Constructors Name Summary <init> TimetableLoaderFactory() Functions Name Summary createForSegment Creates a loader which is used to load A2B timetable from database. fun createForSegment(context: Context, pairIdentifier: String , sinceSecs: Long ): CursorLoader Companion Object Functions Name Summary buildQueryParams fun buildQueryParams(stopCodes: List < String >, sinceSecs: Long ): TimetableQueryParams fun buildQueryParams(stop: ScheduledStop , filter: String ?, sinceSecs: Long ): TimetableQueryParams createForStop fun createForStop(appContext: Context, stop: ScheduledStop , filter: String ?, sinceSecs: Long ): Loader<Cursor>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/#timetableloaderfactory","text":"class TimetableLoaderFactory","title":"TimetableLoaderFactory"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/#constructors","text":"Name Summary <init> TimetableLoaderFactory()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/#functions","text":"Name Summary createForSegment Creates a loader which is used to load A2B timetable from database. fun createForSegment(context: Context, pairIdentifier: String , sinceSecs: Long ): CursorLoader","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/#companion-object-functions","text":"Name Summary buildQueryParams fun buildQueryParams(stopCodes: List < String >, sinceSecs: Long ): TimetableQueryParams fun buildQueryParams(stop: ScheduledStop , filter: String ?, sinceSecs: Long ): TimetableQueryParams createForStop fun createForStop(appContext: Context, stop: ScheduledStop , filter: String ?, sinceSecs: Long ): Loader<Cursor>","title":"Companion Object Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / TimetableLoaderFactory / <init> <init> TimetableLoaderFactory()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/-init-/#init","text":"TimetableLoaderFactory()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/build-query-params/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / TimetableLoaderFactory / buildQueryParams buildQueryParams fun buildQueryParams(stopCodes: List < String >, sinceSecs: Long ): TimetableQueryParams fun buildQueryParams(stop: ScheduledStop , filter: String ?, sinceSecs: Long ): TimetableQueryParams","title":"Build query params"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/build-query-params/#buildqueryparams","text":"fun buildQueryParams(stopCodes: List < String >, sinceSecs: Long ): TimetableQueryParams fun buildQueryParams(stop: ScheduledStop , filter: String ?, sinceSecs: Long ): TimetableQueryParams","title":"buildQueryParams"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/create-for-segment/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / TimetableLoaderFactory / createForSegment createForSegment fun createForSegment(context: Context, pairIdentifier: String , sinceSecs: Long ): CursorLoader Creates a loader which is used to load A2B timetable from database. Parameters segment - Should be a public transport segment (aka scheduled segment)","title":"Create for segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/create-for-segment/#createforsegment","text":"fun createForSegment(context: Context, pairIdentifier: String , sinceSecs: Long ): CursorLoader Creates a loader which is used to load A2B timetable from database.","title":"createForSegment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/create-for-segment/#parameters","text":"segment - Should be a public transport segment (aka scheduled segment)","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/create-for-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / TimetableLoaderFactory / createForStop createForStop fun createForStop(appContext: Context, stop: ScheduledStop , filter: String ?, sinceSecs: Long ): Loader<Cursor>","title":"Create for stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-loader-factory/create-for-stop/#createforstop","text":"fun createForStop(appContext: Context, stop: ScheduledStop , filter: String ?, sinceSecs: Long ): Loader<Cursor>","title":"createForStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / TimetableQueryParams TimetableQueryParams data class TimetableQueryParams Constructors Name Summary <init> TimetableQueryParams(selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?) Properties Name Summary selection val selection: String ? selectionArgs val selectionArgs: Array < String >? sortOrder val sortOrder: String ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/#timetablequeryparams","text":"data class TimetableQueryParams","title":"TimetableQueryParams"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/#constructors","text":"Name Summary <init> TimetableQueryParams(selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/#properties","text":"Name Summary selection val selection: String ? selectionArgs val selectionArgs: Array < String >? sortOrder val sortOrder: String ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / TimetableQueryParams / <init> <init> TimetableQueryParams(selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/-init-/#init","text":"TimetableQueryParams(selection: String ?, selectionArgs: Array < String >?, sortOrder: String ?)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/selection-args/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / TimetableQueryParams / selectionArgs selectionArgs val selectionArgs: Array < String >?","title":"Selection args"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/selection-args/#selectionargs","text":"val selectionArgs: Array < String >?","title":"selectionArgs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/selection/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / TimetableQueryParams / selection selection val selection: String ?","title":"Selection"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/selection/#selection","text":"val selection: String ?","title":"selection"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/sort-order/","text":"tripkit-android / com.skedgo.tripkit.ui.timetables.domain / TimetableQueryParams / sortOrder sortOrder val sortOrder: String ?","title":"Sort order"},{"location":"tripkit-android/com.skedgo.tripkit.ui.timetables.domain/-timetable-query-params/sort-order/#sortorder","text":"val sortOrder: String ?","title":"sortOrder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/","text":"tripkit-android / com.skedgo.tripkit.ui.trip Package com.skedgo.tripkit.ui.trip Types Name Summary ArriveBy data class ArriveBy : RoutingTime LeaveAfter data class LeaveAfter : RoutingTime Now object Now : RoutingTime RoutingTime sealed class RoutingTime Functions Name Summary toRoutingTime fun TimeTag .toRoutingTime(tz: DateTimeZone): RoutingTime toTimeTag fun RoutingTime .toTimeTag(): TimeTag","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/#package-comskedgotripkituitrip","text":"","title":"Package com.skedgo.tripkit.ui.trip"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/#types","text":"Name Summary ArriveBy data class ArriveBy : RoutingTime LeaveAfter data class LeaveAfter : RoutingTime Now object Now : RoutingTime RoutingTime sealed class RoutingTime","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/#functions","text":"Name Summary toRoutingTime fun TimeTag .toRoutingTime(tz: DateTimeZone): RoutingTime toTimeTag fun RoutingTime .toTimeTag(): TimeTag","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-now/","text":"tripkit-android / com.skedgo.tripkit.ui.trip / Now Now object Now : RoutingTime Extension Functions Name Summary toTimeTag fun RoutingTime .toTimeTag(): TimeTag","title":" now"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-now/#now","text":"object Now : RoutingTime","title":"Now"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-now/#extension-functions","text":"Name Summary toTimeTag fun RoutingTime .toTimeTag(): TimeTag","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-routing-time/","text":"tripkit-android / com.skedgo.tripkit.ui.trip / RoutingTime RoutingTime sealed class RoutingTime Extension Functions Name Summary toTimeTag fun RoutingTime .toTimeTag(): TimeTag Inheritors Name Summary ArriveBy data class ArriveBy : RoutingTime LeaveAfter data class LeaveAfter : RoutingTime Now object Now : RoutingTime","title":" routing time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-routing-time/#routingtime","text":"sealed class RoutingTime","title":"RoutingTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-routing-time/#extension-functions","text":"Name Summary toTimeTag fun RoutingTime .toTimeTag(): TimeTag","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-routing-time/#inheritors","text":"Name Summary ArriveBy data class ArriveBy : RoutingTime LeaveAfter data class LeaveAfter : RoutingTime Now object Now : RoutingTime","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/to-routing-time/","text":"tripkit-android / com.skedgo.tripkit.ui.trip / toRoutingTime toRoutingTime fun TimeTag .toRoutingTime(tz: DateTimeZone): RoutingTime","title":"To routing time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/to-routing-time/#toroutingtime","text":"fun TimeTag .toRoutingTime(tz: DateTimeZone): RoutingTime","title":"toRoutingTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/to-time-tag/","text":"tripkit-android / com.skedgo.tripkit.ui.trip / toTimeTag toTimeTag fun RoutingTime .toTimeTag(): TimeTag","title":"To time tag"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/to-time-tag/#totimetag","text":"fun RoutingTime .toTimeTag(): TimeTag","title":"toTimeTag"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-arrive-by/","text":"tripkit-android / com.skedgo.tripkit.ui.trip / ArriveBy ArriveBy data class ArriveBy : RoutingTime Constructors Name Summary <init> ArriveBy(time: DateTime) Properties Name Summary time val time: DateTime Extension Functions Name Summary toTimeTag fun RoutingTime .toTimeTag(): TimeTag","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-arrive-by/#arriveby","text":"data class ArriveBy : RoutingTime","title":"ArriveBy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-arrive-by/#constructors","text":"Name Summary <init> ArriveBy(time: DateTime)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-arrive-by/#properties","text":"Name Summary time val time: DateTime","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-arrive-by/#extension-functions","text":"Name Summary toTimeTag fun RoutingTime .toTimeTag(): TimeTag","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-arrive-by/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.trip / ArriveBy / <init> <init> ArriveBy(time: DateTime)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-arrive-by/-init-/#init","text":"ArriveBy(time: DateTime)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-arrive-by/time/","text":"tripkit-android / com.skedgo.tripkit.ui.trip / ArriveBy / time time val time: DateTime","title":"Time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-arrive-by/time/#time","text":"val time: DateTime","title":"time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-leave-after/","text":"tripkit-android / com.skedgo.tripkit.ui.trip / LeaveAfter LeaveAfter data class LeaveAfter : RoutingTime Constructors Name Summary <init> LeaveAfter(time: DateTime) Properties Name Summary time val time: DateTime Extension Functions Name Summary toTimeTag fun RoutingTime .toTimeTag(): TimeTag","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-leave-after/#leaveafter","text":"data class LeaveAfter : RoutingTime","title":"LeaveAfter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-leave-after/#constructors","text":"Name Summary <init> LeaveAfter(time: DateTime)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-leave-after/#properties","text":"Name Summary time val time: DateTime","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-leave-after/#extension-functions","text":"Name Summary toTimeTag fun RoutingTime .toTimeTag(): TimeTag","title":"Extension Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-leave-after/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.trip / LeaveAfter / <init> <init> LeaveAfter(time: DateTime)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-leave-after/-init-/#init","text":"LeaveAfter(time: DateTime)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-leave-after/time/","text":"tripkit-android / com.skedgo.tripkit.ui.trip / LeaveAfter / time time val time: DateTime","title":"Time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip/-leave-after/time/#time","text":"val time: DateTime","title":"time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel Package com.skedgo.tripkit.ui.trip.details.viewmodel Types Name Summary GetColorForOccupancy object GetColorForOccupancy GetDrawableForOccupancy object GetDrawableForOccupancy GetTextForOccupancy object GetTextForOccupancy ITimePickerViewModel interface ITimePickerViewModel OccupancyViewModel open class OccupancyViewModel ServiceAlertViewModel open class ServiceAlertViewModel TrainOccupancyItemViewModel class TrainOccupancyItemViewModel Extensions for External Classes Name Summary kotlin.collections.List Functions Name Summary getAverageOccupancy fun RealTimeVehicle .getAverageOccupancy(): Occupancy ? getOccupancy fun VehicleComponent .getOccupancy(): Occupancy ? hasSingleVehicleOccupancy fun RealTimeVehicle .hasSingleVehicleOccupancy(): Boolean hasVehiclesOccupancy fun RealTimeVehicle .hasVehiclesOccupancy(): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/#package-comskedgotripkituitripdetailsviewmodel","text":"","title":"Package com.skedgo.tripkit.ui.trip.details.viewmodel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/#types","text":"Name Summary GetColorForOccupancy object GetColorForOccupancy GetDrawableForOccupancy object GetDrawableForOccupancy GetTextForOccupancy object GetTextForOccupancy ITimePickerViewModel interface ITimePickerViewModel OccupancyViewModel open class OccupancyViewModel ServiceAlertViewModel open class ServiceAlertViewModel TrainOccupancyItemViewModel class TrainOccupancyItemViewModel","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/#extensions-for-external-classes","text":"Name Summary kotlin.collections.List","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/#functions","text":"Name Summary getAverageOccupancy fun RealTimeVehicle .getAverageOccupancy(): Occupancy ? getOccupancy fun VehicleComponent .getOccupancy(): Occupancy ? hasSingleVehicleOccupancy fun RealTimeVehicle .hasSingleVehicleOccupancy(): Boolean hasVehiclesOccupancy fun RealTimeVehicle .hasVehiclesOccupancy(): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/get-average-occupancy/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / getAverageOccupancy getAverageOccupancy fun RealTimeVehicle .getAverageOccupancy(): Occupancy ?","title":"Get average occupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/get-average-occupancy/#getaverageoccupancy","text":"fun RealTimeVehicle .getAverageOccupancy(): Occupancy ?","title":"getAverageOccupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/get-occupancy/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / getOccupancy getOccupancy fun VehicleComponent .getOccupancy(): Occupancy ?","title":"Get occupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/get-occupancy/#getoccupancy","text":"fun VehicleComponent .getOccupancy(): Occupancy ?","title":"getOccupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/has-single-vehicle-occupancy/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / hasSingleVehicleOccupancy hasSingleVehicleOccupancy fun RealTimeVehicle .hasSingleVehicleOccupancy(): Boolean","title":"Has single vehicle occupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/has-single-vehicle-occupancy/#hassinglevehicleoccupancy","text":"fun RealTimeVehicle .hasSingleVehicleOccupancy(): Boolean","title":"hasSingleVehicleOccupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/has-vehicles-occupancy/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / hasVehiclesOccupancy hasVehiclesOccupancy fun RealTimeVehicle .hasVehiclesOccupancy(): Boolean","title":"Has vehicles occupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/has-vehicles-occupancy/#hasvehiclesoccupancy","text":"fun RealTimeVehicle .hasVehiclesOccupancy(): Boolean","title":"hasVehiclesOccupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-color-for-occupancy/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / GetColorForOccupancy GetColorForOccupancy object GetColorForOccupancy Functions Name Summary execute fun execute(occupancy: Occupancy ?): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-color-for-occupancy/#getcolorforoccupancy","text":"object GetColorForOccupancy","title":"GetColorForOccupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-color-for-occupancy/#functions","text":"Name Summary execute fun execute(occupancy: Occupancy ?): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-color-for-occupancy/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / GetColorForOccupancy / execute execute @ColorRes fun execute(occupancy: Occupancy ?): Int","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-color-for-occupancy/execute/#execute","text":"@ColorRes fun execute(occupancy: Occupancy ?): Int","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-drawable-for-occupancy/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / GetDrawableForOccupancy GetDrawableForOccupancy object GetDrawableForOccupancy Functions Name Summary execute fun execute(occupancy: Occupancy ?): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-drawable-for-occupancy/#getdrawableforoccupancy","text":"object GetDrawableForOccupancy","title":"GetDrawableForOccupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-drawable-for-occupancy/#functions","text":"Name Summary execute fun execute(occupancy: Occupancy ?): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-drawable-for-occupancy/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / GetDrawableForOccupancy / execute execute @DrawableRes fun execute(occupancy: Occupancy ?): Int","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-drawable-for-occupancy/execute/#execute","text":"@DrawableRes fun execute(occupancy: Occupancy ?): Int","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-text-for-occupancy/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / GetTextForOccupancy GetTextForOccupancy object GetTextForOccupancy Functions Name Summary execute fun execute(occupancy: Occupancy ?): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-text-for-occupancy/#gettextforoccupancy","text":"object GetTextForOccupancy","title":"GetTextForOccupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-text-for-occupancy/#functions","text":"Name Summary execute fun execute(occupancy: Occupancy ?): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-text-for-occupancy/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / GetTextForOccupancy / execute execute @StringRes fun execute(occupancy: Occupancy ?): Int","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-get-text-for-occupancy/execute/#execute","text":"@StringRes fun execute(occupancy: Occupancy ?): Int","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ITimePickerViewModel ITimePickerViewModel interface ITimePickerViewModel Functions Name Summary dates abstract fun dates(): ObservableField< MutableList < String !>!>! done abstract fun done(): TimeTag ! getHour abstract fun getHour(): Int getMinute abstract fun getMinute(): Int handleArguments abstract fun handleArguments(args: Bundle!): Unit isLeaveAfter abstract fun isLeaveAfter(): ObservableBoolean! leaveNow abstract fun leaveNow(): TimeTag ! selectedPosition abstract fun selectedPosition(): ObservableInt! updateTime abstract fun updateTime(hour: Int , minute: Int ): Unit Inheritors Name Summary InterCityTimePickerViewModel open class InterCityTimePickerViewModel : ITimePickerViewModel","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/#itimepickerviewmodel","text":"interface ITimePickerViewModel","title":"ITimePickerViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/#functions","text":"Name Summary dates abstract fun dates(): ObservableField< MutableList < String !>!>! done abstract fun done(): TimeTag ! getHour abstract fun getHour(): Int getMinute abstract fun getMinute(): Int handleArguments abstract fun handleArguments(args: Bundle!): Unit isLeaveAfter abstract fun isLeaveAfter(): ObservableBoolean! leaveNow abstract fun leaveNow(): TimeTag ! selectedPosition abstract fun selectedPosition(): ObservableInt! updateTime abstract fun updateTime(hour: Int , minute: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/#inheritors","text":"Name Summary InterCityTimePickerViewModel open class InterCityTimePickerViewModel : ITimePickerViewModel","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/dates/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ITimePickerViewModel / dates dates abstract fun dates(): ObservableField< MutableList < String !>!>!","title":"Dates"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/dates/#dates","text":"abstract fun dates(): ObservableField< MutableList < String !>!>!","title":"dates"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/done/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ITimePickerViewModel / done done abstract fun done(): TimeTag !","title":"Done"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/done/#done","text":"abstract fun done(): TimeTag !","title":"done"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/get-hour/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ITimePickerViewModel / getHour getHour abstract fun getHour(): Int","title":"Get hour"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/get-hour/#gethour","text":"abstract fun getHour(): Int","title":"getHour"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/get-minute/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ITimePickerViewModel / getMinute getMinute abstract fun getMinute(): Int","title":"Get minute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/get-minute/#getminute","text":"abstract fun getMinute(): Int","title":"getMinute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/handle-arguments/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ITimePickerViewModel / handleArguments handleArguments abstract fun handleArguments(args: Bundle!): Unit","title":"Handle arguments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/handle-arguments/#handlearguments","text":"abstract fun handleArguments(args: Bundle!): Unit","title":"handleArguments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/is-leave-after/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ITimePickerViewModel / isLeaveAfter isLeaveAfter abstract fun isLeaveAfter(): ObservableBoolean!","title":"Is leave after"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/is-leave-after/#isleaveafter","text":"abstract fun isLeaveAfter(): ObservableBoolean!","title":"isLeaveAfter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/leave-now/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ITimePickerViewModel / leaveNow leaveNow abstract fun leaveNow(): TimeTag !","title":"Leave now"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/leave-now/#leavenow","text":"abstract fun leaveNow(): TimeTag !","title":"leaveNow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/selected-position/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ITimePickerViewModel / selectedPosition selectedPosition abstract fun selectedPosition(): ObservableInt!","title":"Selected position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/selected-position/#selectedposition","text":"abstract fun selectedPosition(): ObservableInt!","title":"selectedPosition"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/update-time/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ITimePickerViewModel / updateTime updateTime abstract fun updateTime(hour: Int , minute: Int ): Unit","title":"Update time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-i-time-picker-view-model/update-time/#updatetime","text":"abstract fun updateTime(hour: Int , minute: Int ): Unit","title":"updateTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / OccupancyViewModel OccupancyViewModel open class OccupancyViewModel Constructors Name Summary <init> OccupancyViewModel(context: Context) Properties Name Summary background val background: ObservableField<Drawable?> drawableLeft val drawableLeft: ObservableField<Drawable> hasOccupancyInformation val hasOccupancyInformation: ObservableBoolean hasOccupancySingleInformation val hasOccupancySingleInformation: ObservableBoolean itemBinding val itemBinding: ItemBinding< TrainOccupancyItemViewModel !> items val items: ObservableList< TrainOccupancyItemViewModel > occupancyText val occupancyText: ObservableField< String > Functions Name Summary hasInformation fun hasInformation(): Boolean setOccupancy open fun setOccupancy(vehicle: RealTimeVehicle , showAverage: Boolean ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/#occupancyviewmodel","text":"open class OccupancyViewModel","title":"OccupancyViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/#constructors","text":"Name Summary <init> OccupancyViewModel(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/#properties","text":"Name Summary background val background: ObservableField<Drawable?> drawableLeft val drawableLeft: ObservableField<Drawable> hasOccupancyInformation val hasOccupancyInformation: ObservableBoolean hasOccupancySingleInformation val hasOccupancySingleInformation: ObservableBoolean itemBinding val itemBinding: ItemBinding< TrainOccupancyItemViewModel !> items val items: ObservableList< TrainOccupancyItemViewModel > occupancyText val occupancyText: ObservableField< String >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/#functions","text":"Name Summary hasInformation fun hasInformation(): Boolean setOccupancy open fun setOccupancy(vehicle: RealTimeVehicle , showAverage: Boolean ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / OccupancyViewModel / <init> <init> OccupancyViewModel(context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/-init-/#init","text":"OccupancyViewModel(context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/background/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / OccupancyViewModel / background background val background: ObservableField<Drawable?>","title":"Background"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/background/#background","text":"val background: ObservableField<Drawable?>","title":"background"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/drawable-left/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / OccupancyViewModel / drawableLeft drawableLeft val drawableLeft: ObservableField<Drawable>","title":"Drawable left"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/drawable-left/#drawableleft","text":"val drawableLeft: ObservableField<Drawable>","title":"drawableLeft"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/has-information/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / OccupancyViewModel / hasInformation hasInformation fun hasInformation(): Boolean","title":"Has information"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/has-information/#hasinformation","text":"fun hasInformation(): Boolean","title":"hasInformation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/has-occupancy-information/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / OccupancyViewModel / hasOccupancyInformation hasOccupancyInformation val hasOccupancyInformation: ObservableBoolean","title":"Has occupancy information"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/has-occupancy-information/#hasoccupancyinformation","text":"val hasOccupancyInformation: ObservableBoolean","title":"hasOccupancyInformation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/has-occupancy-single-information/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / OccupancyViewModel / hasOccupancySingleInformation hasOccupancySingleInformation val hasOccupancySingleInformation: ObservableBoolean","title":"Has occupancy single information"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/has-occupancy-single-information/#hasoccupancysingleinformation","text":"val hasOccupancySingleInformation: ObservableBoolean","title":"hasOccupancySingleInformation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/item-binding/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / OccupancyViewModel / itemBinding itemBinding val itemBinding: ItemBinding< TrainOccupancyItemViewModel !>","title":"Item binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/item-binding/#itembinding","text":"val itemBinding: ItemBinding< TrainOccupancyItemViewModel !>","title":"itemBinding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/items/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / OccupancyViewModel / items items val items: ObservableList< TrainOccupancyItemViewModel >","title":"Items"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/items/#items","text":"val items: ObservableList< TrainOccupancyItemViewModel >","title":"items"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/occupancy-text/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / OccupancyViewModel / occupancyText occupancyText val occupancyText: ObservableField< String >","title":"Occupancy text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/occupancy-text/#occupancytext","text":"val occupancyText: ObservableField< String >","title":"occupancyText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/set-occupancy/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / OccupancyViewModel / setOccupancy setOccupancy open fun setOccupancy(vehicle: RealTimeVehicle , showAverage: Boolean ): Unit","title":"Set occupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-occupancy-view-model/set-occupancy/#setoccupancy","text":"open fun setOccupancy(vehicle: RealTimeVehicle , showAverage: Boolean ): Unit","title":"setOccupancy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ServiceAlertViewModel ServiceAlertViewModel open class ServiceAlertViewModel Constructors Name Summary <init> ServiceAlertViewModel(context: Context) Properties Name Summary alertIcon val alertIcon: ObservableField<Drawable?> hasAlerts val hasAlerts: ObservableBoolean showAlertsObservable open val showAlertsObservable: Observable< Unit > title val title: ObservableField< String > Functions Name Summary onShow fun onShow(): Unit setAlerts open fun setAlerts(alerts: List < RealtimeAlert >?): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/#servicealertviewmodel","text":"open class ServiceAlertViewModel","title":"ServiceAlertViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/#constructors","text":"Name Summary <init> ServiceAlertViewModel(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/#properties","text":"Name Summary alertIcon val alertIcon: ObservableField<Drawable?> hasAlerts val hasAlerts: ObservableBoolean showAlertsObservable open val showAlertsObservable: Observable< Unit > title val title: ObservableField< String >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/#functions","text":"Name Summary onShow fun onShow(): Unit setAlerts open fun setAlerts(alerts: List < RealtimeAlert >?): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ServiceAlertViewModel / <init> <init> ServiceAlertViewModel(context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/-init-/#init","text":"ServiceAlertViewModel(context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/alert-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ServiceAlertViewModel / alertIcon alertIcon val alertIcon: ObservableField<Drawable?>","title":"Alert icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/alert-icon/#alerticon","text":"val alertIcon: ObservableField<Drawable?>","title":"alertIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/has-alerts/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ServiceAlertViewModel / hasAlerts hasAlerts val hasAlerts: ObservableBoolean","title":"Has alerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/has-alerts/#hasalerts","text":"val hasAlerts: ObservableBoolean","title":"hasAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/on-show/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ServiceAlertViewModel / onShow onShow fun onShow(): Unit","title":"On show"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/on-show/#onshow","text":"fun onShow(): Unit","title":"onShow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/set-alerts/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ServiceAlertViewModel / setAlerts setAlerts open fun setAlerts(alerts: List < RealtimeAlert >?): Unit","title":"Set alerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/set-alerts/#setalerts","text":"open fun setAlerts(alerts: List < RealtimeAlert >?): Unit","title":"setAlerts"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/show-alerts-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ServiceAlertViewModel / showAlertsObservable showAlertsObservable open val showAlertsObservable: Observable< Unit >","title":"Show alerts observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/show-alerts-observable/#showalertsobservable","text":"open val showAlertsObservable: Observable< Unit >","title":"showAlertsObservable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/title/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / ServiceAlertViewModel / title title val title: ObservableField< String >","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-service-alert-view-model/title/#title","text":"val title: ObservableField< String >","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-train-occupancy-item-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / TrainOccupancyItemViewModel TrainOccupancyItemViewModel class TrainOccupancyItemViewModel Constructors Name Summary <init> TrainOccupancyItemViewModel(imageTintColor: Int , imageDrawable: Drawable?) Properties Name Summary imageDrawable val imageDrawable: Drawable? imageTintColor val imageTintColor: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-train-occupancy-item-view-model/#trainoccupancyitemviewmodel","text":"class TrainOccupancyItemViewModel","title":"TrainOccupancyItemViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-train-occupancy-item-view-model/#constructors","text":"Name Summary <init> TrainOccupancyItemViewModel(imageTintColor: Int , imageDrawable: Drawable?)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-train-occupancy-item-view-model/#properties","text":"Name Summary imageDrawable val imageDrawable: Drawable? imageTintColor val imageTintColor: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-train-occupancy-item-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / TrainOccupancyItemViewModel / <init> <init> TrainOccupancyItemViewModel(imageTintColor: Int , imageDrawable: Drawable?)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-train-occupancy-item-view-model/-init-/#init","text":"TrainOccupancyItemViewModel(imageTintColor: Int , imageDrawable: Drawable?)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-train-occupancy-item-view-model/image-drawable/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / TrainOccupancyItemViewModel / imageDrawable imageDrawable val imageDrawable: Drawable?","title":"Image drawable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-train-occupancy-item-view-model/image-drawable/#imagedrawable","text":"val imageDrawable: Drawable?","title":"imageDrawable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-train-occupancy-item-view-model/image-tint-color/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / TrainOccupancyItemViewModel / imageTintColor imageTintColor val imageTintColor: Int","title":"Image tint color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/-train-occupancy-item-view-model/image-tint-color/#imagetintcolor","text":"val imageTintColor: Int","title":"imageTintColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/kotlin.collections.-list/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / kotlin.collections.List Extensions for kotlin.collections.List Name Summary getMostSevereAlert fun List < RealtimeAlert >?.getMostSevereAlert(): RealtimeAlert ?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/kotlin.collections.-list/#extensions-for-kotlincollectionslist","text":"Name Summary getMostSevereAlert fun List < RealtimeAlert >?.getMostSevereAlert(): RealtimeAlert ?","title":"Extensions for kotlin.collections.List"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/kotlin.collections.-list/get-most-severe-alert/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.details.viewmodel / kotlin.collections.List / getMostSevereAlert getMostSevereAlert fun List < RealtimeAlert >?.getMostSevereAlert(): RealtimeAlert ?","title":"Get most severe alert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.details.viewmodel/kotlin.collections.-list/get-most-severe-alert/#getmostseverealert","text":"fun List < RealtimeAlert >?.getMostSevereAlert(): RealtimeAlert ?","title":"getMostSevereAlert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options Package com.skedgo.tripkit.ui.trip.options Types Name Summary InterCityTimePickerViewModel open class InterCityTimePickerViewModel : ITimePickerViewModel RoutingTimeViewModelMapper open class RoutingTimeViewModelMapper SelectionType enum class SelectionType","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/#package-comskedgotripkituitripoptions","text":"","title":"Package com.skedgo.tripkit.ui.trip.options"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/#types","text":"Name Summary InterCityTimePickerViewModel open class InterCityTimePickerViewModel : ITimePickerViewModel RoutingTimeViewModelMapper open class RoutingTimeViewModelMapper SelectionType enum class SelectionType","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel InterCityTimePickerViewModel open class InterCityTimePickerViewModel : ITimePickerViewModel Constructors Name Summary <init> InterCityTimePickerViewModel(context: Context, bus: Bus, getNow: GetNow , defaultTimezone: String !) Properties Name Summary ARG_ARRIVAL_TIMEZONE static val ARG_ARRIVAL_TIMEZONE: String ARG_DEPARTURE_TIMEZONE static val ARG_DEPARTURE_TIMEZONE: String ARG_TIME_IN_MILLIS static val ARG_TIME_IN_MILLIS: String ARG_TIME_TYPE static val ARG_TIME_TYPE: String Functions Name Summary dates open fun dates(): ObservableField< MutableList < String !>!>! done open fun done(): TimeTag ! getHour open fun getHour(): Int getMinute open fun getMinute(): Int handleArguments open fun handleArguments(args: Bundle!): Unit isLeaveAfter open fun isLeaveAfter(): ObservableBoolean! leaveNow open fun leaveNow(): TimeTag ! selectedPosition open fun selectedPosition(): ObservableInt! updateTime open fun updateTime(hour: Int , minute: Int ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/#intercitytimepickerviewmodel","text":"open class InterCityTimePickerViewModel : ITimePickerViewModel","title":"InterCityTimePickerViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/#constructors","text":"Name Summary <init> InterCityTimePickerViewModel(context: Context, bus: Bus, getNow: GetNow , defaultTimezone: String !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/#properties","text":"Name Summary ARG_ARRIVAL_TIMEZONE static val ARG_ARRIVAL_TIMEZONE: String ARG_DEPARTURE_TIMEZONE static val ARG_DEPARTURE_TIMEZONE: String ARG_TIME_IN_MILLIS static val ARG_TIME_IN_MILLIS: String ARG_TIME_TYPE static val ARG_TIME_TYPE: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/#functions","text":"Name Summary dates open fun dates(): ObservableField< MutableList < String !>!>! done open fun done(): TimeTag ! getHour open fun getHour(): Int getMinute open fun getMinute(): Int handleArguments open fun handleArguments(args: Bundle!): Unit isLeaveAfter open fun isLeaveAfter(): ObservableBoolean! leaveNow open fun leaveNow(): TimeTag ! selectedPosition open fun selectedPosition(): ObservableInt! updateTime open fun updateTime(hour: Int , minute: Int ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/-a-r-g_-a-r-r-i-v-a-l_-t-i-m-e-z-o-n-e/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / ARG_ARRIVAL_TIMEZONE ARG_ARRIVAL_TIMEZONE static val ARG_ARRIVAL_TIMEZONE: String","title":" a r g  a r r i v a l  t i m e z o n e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/-a-r-g_-a-r-r-i-v-a-l_-t-i-m-e-z-o-n-e/#arg_arrival_timezone","text":"static val ARG_ARRIVAL_TIMEZONE: String","title":"ARG_ARRIVAL_TIMEZONE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/-a-r-g_-d-e-p-a-r-t-u-r-e_-t-i-m-e-z-o-n-e/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / ARG_DEPARTURE_TIMEZONE ARG_DEPARTURE_TIMEZONE static val ARG_DEPARTURE_TIMEZONE: String","title":" a r g  d e p a r t u r e  t i m e z o n e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/-a-r-g_-d-e-p-a-r-t-u-r-e_-t-i-m-e-z-o-n-e/#arg_departure_timezone","text":"static val ARG_DEPARTURE_TIMEZONE: String","title":"ARG_DEPARTURE_TIMEZONE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/-a-r-g_-t-i-m-e_-i-n_-m-i-l-l-i-s/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / ARG_TIME_IN_MILLIS ARG_TIME_IN_MILLIS static val ARG_TIME_IN_MILLIS: String","title":" a r g  t i m e  i n  m i l l i s"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/-a-r-g_-t-i-m-e_-i-n_-m-i-l-l-i-s/#arg_time_in_millis","text":"static val ARG_TIME_IN_MILLIS: String","title":"ARG_TIME_IN_MILLIS"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/-a-r-g_-t-i-m-e_-t-y-p-e/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / ARG_TIME_TYPE ARG_TIME_TYPE static val ARG_TIME_TYPE: String","title":" a r g  t i m e  t y p e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/-a-r-g_-t-i-m-e_-t-y-p-e/#arg_time_type","text":"static val ARG_TIME_TYPE: String","title":"ARG_TIME_TYPE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / <init> <init> InterCityTimePickerViewModel(@NonNull context: Context, @NonNull bus: Bus, @NonNull getNow: GetNow , defaultTimezone: String !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/-init-/#init","text":"InterCityTimePickerViewModel(@NonNull context: Context, @NonNull bus: Bus, @NonNull getNow: GetNow , defaultTimezone: String !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/dates/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / dates dates open fun dates(): ObservableField< MutableList < String !>!>!","title":"Dates"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/dates/#dates","text":"open fun dates(): ObservableField< MutableList < String !>!>!","title":"dates"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/done/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / done done open fun done(): TimeTag !","title":"Done"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/done/#done","text":"open fun done(): TimeTag !","title":"done"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/get-hour/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / getHour getHour open fun getHour(): Int","title":"Get hour"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/get-hour/#gethour","text":"open fun getHour(): Int","title":"getHour"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/get-minute/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / getMinute getMinute open fun getMinute(): Int","title":"Get minute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/get-minute/#getminute","text":"open fun getMinute(): Int","title":"getMinute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/handle-arguments/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / handleArguments handleArguments open fun handleArguments(args: Bundle!): Unit","title":"Handle arguments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/handle-arguments/#handlearguments","text":"open fun handleArguments(args: Bundle!): Unit","title":"handleArguments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/is-leave-after/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / isLeaveAfter isLeaveAfter open fun isLeaveAfter(): ObservableBoolean!","title":"Is leave after"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/is-leave-after/#isleaveafter","text":"open fun isLeaveAfter(): ObservableBoolean!","title":"isLeaveAfter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/leave-now/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / leaveNow leaveNow open fun leaveNow(): TimeTag !","title":"Leave now"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/leave-now/#leavenow","text":"open fun leaveNow(): TimeTag !","title":"leaveNow"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/selected-position/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / selectedPosition selectedPosition open fun selectedPosition(): ObservableInt!","title":"Selected position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/selected-position/#selectedposition","text":"open fun selectedPosition(): ObservableInt!","title":"selectedPosition"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/update-time/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / InterCityTimePickerViewModel / updateTime updateTime open fun updateTime(hour: Int , minute: Int ): Unit","title":"Update time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-inter-city-time-picker-view-model/update-time/#updatetime","text":"open fun updateTime(hour: Int , minute: Int ): Unit","title":"updateTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-routing-time-view-model-mapper/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / RoutingTimeViewModelMapper RoutingTimeViewModelMapper open class RoutingTimeViewModelMapper Functions Name Summary toText open fun toText(routingTime: RoutingTime ): Single< String >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-routing-time-view-model-mapper/#routingtimeviewmodelmapper","text":"open class RoutingTimeViewModelMapper","title":"RoutingTimeViewModelMapper"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-routing-time-view-model-mapper/#functions","text":"Name Summary toText open fun toText(routingTime: RoutingTime ): Single< String >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-routing-time-view-model-mapper/to-text/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / RoutingTimeViewModelMapper / toText toText open fun toText(routingTime: RoutingTime ): Single< String >","title":"To text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-routing-time-view-model-mapper/to-text/#totext","text":"open fun toText(routingTime: RoutingTime ): Single< String >","title":"toText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-selection-type/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / SelectionType SelectionType enum class SelectionType Enum Values Name Summary ARRIVAL DEPARTURE","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-selection-type/#selectiontype","text":"enum class SelectionType","title":"SelectionType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-selection-type/#enum-values","text":"Name Summary ARRIVAL DEPARTURE","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-selection-type/-a-r-r-i-v-a-l/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / SelectionType / ARRIVAL ARRIVAL ARRIVAL","title":" a r r i v a l"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-selection-type/-a-r-r-i-v-a-l/#arrival","text":"ARRIVAL","title":"ARRIVAL"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-selection-type/-d-e-p-a-r-t-u-r-e/","text":"tripkit-android / com.skedgo.tripkit.ui.trip.options / SelectionType / DEPARTURE DEPARTURE DEPARTURE","title":" d e p a r t u r e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.trip.options/-selection-type/-d-e-p-a-r-t-u-r-e/#departure","text":"DEPARTURE","title":"DEPARTURE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult Package com.skedgo.tripkit.ui.tripresult Types Name Summary GetAlternativeTripForAlternativeService open class GetAlternativeTripForAlternativeService IsLocationPermissionGranted open class IsLocationPermissionGranted MapCameraUpdate A view model for GoogleMap to know when it should GoogleMap.moveCamera or GoogleMap.animateCamera sealed class MapCameraUpdate TripGroupsPagerAdapter open class TripGroupsPagerAdapter : FragmentStatePagerAdapter TripResultMapFragment open class TripResultMapFragment : LocationEnhancedMapFragment TripResultPagerFragment open class TripResultPagerFragment : RxFragment , OnPageChangeListener, OnTripKitButtonClickListener TripResultPagerViewModel class TripResultPagerViewModel : RxViewModel TripSegmentItemViewModel class TripSegmentItemViewModel : RxViewModel TripSegmentListFragment class TripSegmentListFragment : RxFragment , OnClickListener TripSegmentsViewModel class TripSegmentsViewModel : RxViewModel UpdateTripForRealtime open class UpdateTripForRealtime WaypointTask https://redmine.buzzhives.com/projects/buzzhives/wiki/Routing_API#Trips-from-waypoint open class WaypointTask : SingleOnSubscribe< MutableList < TripGroup !>!> WayPointTaskParam sealed class WayPointTaskParam Extensions for External Classes Name Summary com.google.android.gms.maps.model.LatLngBounds kotlin.collections.List Properties Name Summary CameraUpdatePadding const val CameraUpdatePadding: Int KEY_TRIP_GROUP_ID const val KEY_TRIP_GROUP_ID: String OneKilometers const val OneKilometers: Double ZoomOnSingleLocation const val ZoomOnSingleLocation: Float ZoomToCoverFirstOneKilometers const val ZoomToCoverFirstOneKilometers: Float","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/#package-comskedgotripkituitripresult","text":"","title":"Package com.skedgo.tripkit.ui.tripresult"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/#types","text":"Name Summary GetAlternativeTripForAlternativeService open class GetAlternativeTripForAlternativeService IsLocationPermissionGranted open class IsLocationPermissionGranted MapCameraUpdate A view model for GoogleMap to know when it should GoogleMap.moveCamera or GoogleMap.animateCamera sealed class MapCameraUpdate TripGroupsPagerAdapter open class TripGroupsPagerAdapter : FragmentStatePagerAdapter TripResultMapFragment open class TripResultMapFragment : LocationEnhancedMapFragment TripResultPagerFragment open class TripResultPagerFragment : RxFragment , OnPageChangeListener, OnTripKitButtonClickListener TripResultPagerViewModel class TripResultPagerViewModel : RxViewModel TripSegmentItemViewModel class TripSegmentItemViewModel : RxViewModel TripSegmentListFragment class TripSegmentListFragment : RxFragment , OnClickListener TripSegmentsViewModel class TripSegmentsViewModel : RxViewModel UpdateTripForRealtime open class UpdateTripForRealtime WaypointTask https://redmine.buzzhives.com/projects/buzzhives/wiki/Routing_API#Trips-from-waypoint open class WaypointTask : SingleOnSubscribe< MutableList < TripGroup !>!> WayPointTaskParam sealed class WayPointTaskParam","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/#extensions-for-external-classes","text":"Name Summary com.google.android.gms.maps.model.LatLngBounds kotlin.collections.List","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/#properties","text":"Name Summary CameraUpdatePadding const val CameraUpdatePadding: Int KEY_TRIP_GROUP_ID const val KEY_TRIP_GROUP_ID: String OneKilometers const val OneKilometers: Double ZoomOnSingleLocation const val ZoomOnSingleLocation: Float ZoomToCoverFirstOneKilometers const val ZoomToCoverFirstOneKilometers: Float","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-camera-update-padding/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / CameraUpdatePadding CameraUpdatePadding const val CameraUpdatePadding: Int","title":" camera update padding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-camera-update-padding/#cameraupdatepadding","text":"const val CameraUpdatePadding: Int","title":"CameraUpdatePadding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-k-e-y_-t-r-i-p_-g-r-o-u-p_-i-d/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / KEY_TRIP_GROUP_ID KEY_TRIP_GROUP_ID const val KEY_TRIP_GROUP_ID: String","title":" k e y  t r i p  g r o u p  i d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-k-e-y_-t-r-i-p_-g-r-o-u-p_-i-d/#key_trip_group_id","text":"const val KEY_TRIP_GROUP_ID: String","title":"KEY_TRIP_GROUP_ID"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-one-kilometers/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / OneKilometers OneKilometers const val OneKilometers: Double","title":" one kilometers"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-one-kilometers/#onekilometers","text":"const val OneKilometers: Double","title":"OneKilometers"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-zoom-on-single-location/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / ZoomOnSingleLocation ZoomOnSingleLocation const val ZoomOnSingleLocation: Float","title":" zoom on single location"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-zoom-on-single-location/#zoomonsinglelocation","text":"const val ZoomOnSingleLocation: Float","title":"ZoomOnSingleLocation"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-zoom-to-cover-first-one-kilometers/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / ZoomToCoverFirstOneKilometers ZoomToCoverFirstOneKilometers const val ZoomToCoverFirstOneKilometers: Float","title":" zoom to cover first one kilometers"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-zoom-to-cover-first-one-kilometers/#zoomtocoverfirstonekilometers","text":"const val ZoomToCoverFirstOneKilometers: Float","title":"ZoomToCoverFirstOneKilometers"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / GetAlternativeTripForAlternativeService GetAlternativeTripForAlternativeService open class GetAlternativeTripForAlternativeService Constructors Name Summary <init> GetAlternativeTripForAlternativeService(context: Context, tripGroupRepository: TripGroupRepository, regionService: RegionService , configRepository: ConfigRepository ) Properties Name Summary configRepository val configRepository: ConfigRepository context val context: Context regionService val regionService: RegionService tripGroupRepository val tripGroupRepository: TripGroupRepository Functions Name Summary execute open fun execute(trip: Trip , tripSegmentId: Long , selectedService: TimetableEntry ): Single< TripGroup >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/#getalternativetripforalternativeservice","text":"open class GetAlternativeTripForAlternativeService","title":"GetAlternativeTripForAlternativeService"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/#constructors","text":"Name Summary <init> GetAlternativeTripForAlternativeService(context: Context, tripGroupRepository: TripGroupRepository, regionService: RegionService , configRepository: ConfigRepository )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/#properties","text":"Name Summary configRepository val configRepository: ConfigRepository context val context: Context regionService val regionService: RegionService tripGroupRepository val tripGroupRepository: TripGroupRepository","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/#functions","text":"Name Summary execute open fun execute(trip: Trip , tripSegmentId: Long , selectedService: TimetableEntry ): Single< TripGroup >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / GetAlternativeTripForAlternativeService / <init> <init> GetAlternativeTripForAlternativeService(context: Context, tripGroupRepository: TripGroupRepository, regionService: RegionService , configRepository: ConfigRepository )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/-init-/#init","text":"GetAlternativeTripForAlternativeService(context: Context, tripGroupRepository: TripGroupRepository, regionService: RegionService , configRepository: ConfigRepository )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/config-repository/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / GetAlternativeTripForAlternativeService / configRepository configRepository val configRepository: ConfigRepository","title":"Config repository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/config-repository/#configrepository","text":"val configRepository: ConfigRepository","title":"configRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/context/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / GetAlternativeTripForAlternativeService / context context val context: Context","title":"Context"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/context/#context","text":"val context: Context","title":"context"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / GetAlternativeTripForAlternativeService / execute execute open fun execute(trip: Trip , tripSegmentId: Long , selectedService: TimetableEntry ): Single< TripGroup >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/execute/#execute","text":"open fun execute(trip: Trip , tripSegmentId: Long , selectedService: TimetableEntry ): Single< TripGroup >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/region-service/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / GetAlternativeTripForAlternativeService / regionService regionService val regionService: RegionService","title":"Region service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/region-service/#regionservice","text":"val regionService: RegionService","title":"regionService"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/trip-group-repository/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / GetAlternativeTripForAlternativeService / tripGroupRepository tripGroupRepository val tripGroupRepository: TripGroupRepository","title":"Trip group repository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-get-alternative-trip-for-alternative-service/trip-group-repository/#tripgrouprepository","text":"val tripGroupRepository: TripGroupRepository","title":"tripGroupRepository"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-is-location-permission-granted/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / IsLocationPermissionGranted IsLocationPermissionGranted open class IsLocationPermissionGranted Constructors Name Summary <init> IsLocationPermissionGranted(context: Context) Properties Name Summary context val context: Context Functions Name Summary invoke Checks if given permission is granted or not. If it's granted, the returned signal will emit true & complete. Otherwise, waits until the permission is granted later. Once it's granted, it will emit true but never complete. open operator fun invoke(): Observable< Boolean >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-is-location-permission-granted/#islocationpermissiongranted","text":"open class IsLocationPermissionGranted","title":"IsLocationPermissionGranted"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-is-location-permission-granted/#constructors","text":"Name Summary <init> IsLocationPermissionGranted(context: Context)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-is-location-permission-granted/#properties","text":"Name Summary context val context: Context","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-is-location-permission-granted/#functions","text":"Name Summary invoke Checks if given permission is granted or not. If it's granted, the returned signal will emit true & complete. Otherwise, waits until the permission is granted later. Once it's granted, it will emit true but never complete. open operator fun invoke(): Observable< Boolean >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-is-location-permission-granted/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / IsLocationPermissionGranted / <init> <init> IsLocationPermissionGranted(context: Context)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-is-location-permission-granted/-init-/#init","text":"IsLocationPermissionGranted(context: Context)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-is-location-permission-granted/context/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / IsLocationPermissionGranted / context context val context: Context","title":"Context"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-is-location-permission-granted/context/#context","text":"val context: Context","title":"context"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-is-location-permission-granted/invoke/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / IsLocationPermissionGranted / invoke invoke open operator fun invoke(): Observable< Boolean > Checks if given permission is granted or not. If it's granted, the returned signal will emit true & complete. Otherwise, waits until the permission is granted later. Once it's granted, it will emit true but never complete.","title":"Invoke"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-is-location-permission-granted/invoke/#invoke","text":"open operator fun invoke(): Observable< Boolean > Checks if given permission is granted or not. If it's granted, the returned signal will emit true & complete. Otherwise, waits until the permission is granted later. Once it's granted, it will emit true but never complete.","title":"invoke"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / MapCameraUpdate MapCameraUpdate sealed class MapCameraUpdate A view model for GoogleMap to know when it should GoogleMap.moveCamera or GoogleMap.animateCamera Types Name Summary Anim class Anim : MapCameraUpdate Move class Move : MapCameraUpdate","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/#mapcameraupdate","text":"sealed class MapCameraUpdate A view model for GoogleMap to know when it should GoogleMap.moveCamera or GoogleMap.animateCamera","title":"MapCameraUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/#types","text":"Name Summary Anim class Anim : MapCameraUpdate Move class Move : MapCameraUpdate","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-anim/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / MapCameraUpdate / Anim Anim class Anim : MapCameraUpdate Constructors Name Summary <init> Anim(value: CameraUpdate) Properties Name Summary value val value: CameraUpdate","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-anim/#anim","text":"class Anim : MapCameraUpdate","title":"Anim"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-anim/#constructors","text":"Name Summary <init> Anim(value: CameraUpdate)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-anim/#properties","text":"Name Summary value val value: CameraUpdate","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-anim/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / MapCameraUpdate / Anim / <init> <init> Anim(value: CameraUpdate)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-anim/-init-/#init","text":"Anim(value: CameraUpdate)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-anim/value/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / MapCameraUpdate / Anim / value value val value: CameraUpdate","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-anim/value/#value","text":"val value: CameraUpdate","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-move/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / MapCameraUpdate / Move Move class Move : MapCameraUpdate Constructors Name Summary <init> Move(value: CameraUpdate) Properties Name Summary value val value: CameraUpdate","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-move/#move","text":"class Move : MapCameraUpdate","title":"Move"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-move/#constructors","text":"Name Summary <init> Move(value: CameraUpdate)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-move/#properties","text":"Name Summary value val value: CameraUpdate","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-move/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / MapCameraUpdate / Move / <init> <init> Move(value: CameraUpdate)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-move/-init-/#init","text":"Move(value: CameraUpdate)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-move/value/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / MapCameraUpdate / Move / value value val value: CameraUpdate","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-map-camera-update/-move/value/#value","text":"val value: CameraUpdate","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripGroupsPagerAdapter TripGroupsPagerAdapter open class TripGroupsPagerAdapter : FragmentStatePagerAdapter Constructors Name Summary <init> TripGroupsPagerAdapter(fragmentManager: FragmentManager!) Properties Name Summary listener var listener: OnTripKitButtonClickListener! Functions Name Summary getCount open fun getCount(): Int getItem open fun getItem(position: Int ): Fragment getTripGroups open fun getTripGroups(): MutableList < TripGroup !>! setButtons open fun setButtons(buttons: MutableList < TripKitButton !>!): Unit setTripGroups open fun setTripGroups(tripGroups: MutableList < TripGroup !>!): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/#tripgroupspageradapter","text":"open class TripGroupsPagerAdapter : FragmentStatePagerAdapter","title":"TripGroupsPagerAdapter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/#constructors","text":"Name Summary <init> TripGroupsPagerAdapter(fragmentManager: FragmentManager!)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/#properties","text":"Name Summary listener var listener: OnTripKitButtonClickListener!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/#functions","text":"Name Summary getCount open fun getCount(): Int getItem open fun getItem(position: Int ): Fragment getTripGroups open fun getTripGroups(): MutableList < TripGroup !>! setButtons open fun setButtons(buttons: MutableList < TripKitButton !>!): Unit setTripGroups open fun setTripGroups(tripGroups: MutableList < TripGroup !>!): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripGroupsPagerAdapter / <init> <init> TripGroupsPagerAdapter(fragmentManager: FragmentManager!)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/-init-/#init","text":"TripGroupsPagerAdapter(fragmentManager: FragmentManager!)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/get-count/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripGroupsPagerAdapter / getCount getCount open fun getCount(): Int","title":"Get count"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/get-count/#getcount","text":"open fun getCount(): Int","title":"getCount"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/get-item/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripGroupsPagerAdapter / getItem getItem open fun getItem(position: Int ): Fragment","title":"Get item"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/get-item/#getitem","text":"open fun getItem(position: Int ): Fragment","title":"getItem"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/get-trip-groups/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripGroupsPagerAdapter / getTripGroups getTripGroups open fun getTripGroups(): MutableList < TripGroup !>!","title":"Get trip groups"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/get-trip-groups/#gettripgroups","text":"open fun getTripGroups(): MutableList < TripGroup !>!","title":"getTripGroups"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/listener/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripGroupsPagerAdapter / listener listener var listener: OnTripKitButtonClickListener!","title":"Listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/listener/#listener","text":"var listener: OnTripKitButtonClickListener!","title":"listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/set-buttons/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripGroupsPagerAdapter / setButtons setButtons open fun setButtons(buttons: MutableList < TripKitButton !>!): Unit","title":"Set buttons"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/set-buttons/#setbuttons","text":"open fun setButtons(buttons: MutableList < TripKitButton !>!): Unit","title":"setButtons"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/set-trip-groups/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripGroupsPagerAdapter / setTripGroups setTripGroups open fun setTripGroups(tripGroups: MutableList < TripGroup !>!): Unit","title":"Set trip groups"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-groups-pager-adapter/set-trip-groups/#settripgroups","text":"open fun setTripGroups(tripGroups: MutableList < TripGroup !>!): Unit","title":"setTripGroups"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment TripResultMapFragment open class TripResultMapFragment : LocationEnhancedMapFragment Types Name Summary Builder open class Builder Constructors Name Summary <init> TripResultMapFragment() Properties Name Summary ARG_TRIP_GROUP_ID static var ARG_TRIP_GROUP_ID: String ! Functions Name Summary onAttach open fun onAttach(context: Context): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onStart open fun onStart(): Unit onStop open fun onStop(): Unit onViewCreated open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit setTripGroupId open fun setTripGroupId(tripGroupId: String !): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/#tripresultmapfragment","text":"open class TripResultMapFragment : LocationEnhancedMapFragment","title":"TripResultMapFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/#types","text":"Name Summary Builder open class Builder","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/#constructors","text":"Name Summary <init> TripResultMapFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/#properties","text":"Name Summary ARG_TRIP_GROUP_ID static var ARG_TRIP_GROUP_ID: String !","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/#functions","text":"Name Summary onAttach open fun onAttach(context: Context): Unit onCreate open fun onCreate(savedInstanceState: Bundle?): Unit onStart open fun onStart(): Unit onStop open fun onStop(): Unit onViewCreated open fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit setTripGroupId open fun setTripGroupId(tripGroupId: String !): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-a-r-g_-t-r-i-p_-g-r-o-u-p_-i-d/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / ARG_TRIP_GROUP_ID ARG_TRIP_GROUP_ID static var ARG_TRIP_GROUP_ID: String !","title":" a r g  t r i p  g r o u p  i d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-a-r-g_-t-r-i-p_-g-r-o-u-p_-i-d/#arg_trip_group_id","text":"static var ARG_TRIP_GROUP_ID: String !","title":"ARG_TRIP_GROUP_ID"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / <init> <init> TripResultMapFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-init-/#init","text":"TripResultMapFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/on-attach/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / onAttach onAttach open fun onAttach(context: Context): Unit","title":"On attach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/on-attach/#onattach","text":"open fun onAttach(context: Context): Unit","title":"onAttach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / onCreate onCreate open fun onCreate(savedInstanceState: Bundle?): Unit","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/on-create/#oncreate","text":"open fun onCreate(savedInstanceState: Bundle?): Unit","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/on-start/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / onStart onStart open fun onStart(): Unit","title":"On start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/on-start/#onstart","text":"open fun onStart(): Unit","title":"onStart"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/on-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / onStop onStop open fun onStop(): Unit","title":"On stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/on-stop/#onstop","text":"open fun onStop(): Unit","title":"onStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/on-view-created/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / onViewCreated onViewCreated open fun onViewCreated(view: View, @Nullable savedInstanceState: Bundle?): Unit","title":"On view created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/on-view-created/#onviewcreated","text":"open fun onViewCreated(view: View, @Nullable savedInstanceState: Bundle?): Unit","title":"onViewCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/set-trip-group-id/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / setTripGroupId setTripGroupId open fun setTripGroupId(tripGroupId: String !): Unit","title":"Set trip group id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/set-trip-group-id/#settripgroupid","text":"open fun setTripGroupId(tripGroupId: String !): Unit","title":"setTripGroupId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / Builder Builder open class Builder Constructors Name Summary <init> Builder() Functions Name Summary build open fun build(): TripResultMapFragment ! withTripGroupId open fun withTripGroupId(tripGroupId: String !): Builder!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-builder/#builder","text":"open class Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-builder/#functions","text":"Name Summary build open fun build(): TripResultMapFragment ! withTripGroupId open fun withTripGroupId(tripGroupId: String !): Builder!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-builder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / Builder / <init> <init> Builder()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / Builder / build build open fun build(): TripResultMapFragment !","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-builder/build/#build","text":"open fun build(): TripResultMapFragment !","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-builder/with-trip-group-id/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultMapFragment / Builder / withTripGroupId withTripGroupId open fun withTripGroupId(tripGroupId: String !): Builder!","title":"With trip group id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-map-fragment/-builder/with-trip-group-id/#withtripgroupid","text":"open fun withTripGroupId(tripGroupId: String !): Builder!","title":"withTripGroupId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment TripResultPagerFragment open class TripResultPagerFragment : RxFragment , OnPageChangeListener, OnTripKitButtonClickListener Types Name Summary Builder open class Builder OnTripKitButtonClickListener interface OnTripKitButtonClickListener Constructors Name Summary <init> TripResultPagerFragment() Functions Name Summary getCurrentFragment open fun getCurrentFragment(): Fragment! onActivityCreated open fun onActivityCreated(savedInstanceState: Bundle?): Unit onAttach open fun onAttach(context: Context): Unit onCreateView open fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? onPageScrolled open fun onPageScrolled(position: Int , positionOffset: Float , positionOffsetPixels: Int ): Unit onPageScrollStateChanged open fun onPageScrollStateChanged(state: Int ): Unit onPageSelected open fun onPageSelected(position: Int ): Unit onPause open fun onPause(): Unit onResume open fun onResume(): Unit onSaveInstanceState open fun onSaveInstanceState(outState: Bundle): Unit onStart open fun onStart(): Unit onStop open fun onStop(): Unit setArgs open fun setArgs(args: PagerFragmentArguments): Unit setButtons open fun setButtons(buttons: MutableList < TripKitButton !>!): Unit setMapFragment open fun setMapFragment(fragment: TripResultMapFragment !): Unit setOnTripKitButtonClickListener open fun setOnTripKitButtonClickListener(listener: OnTripKitButtonClickListener!): Unit tripKitButtonClicked open fun tripKitButtonClicked(id: String , tripGroup: TripGroup ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/#tripresultpagerfragment","text":"open class TripResultPagerFragment : RxFragment , OnPageChangeListener, OnTripKitButtonClickListener","title":"TripResultPagerFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/#types","text":"Name Summary Builder open class Builder OnTripKitButtonClickListener interface OnTripKitButtonClickListener","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/#constructors","text":"Name Summary <init> TripResultPagerFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/#functions","text":"Name Summary getCurrentFragment open fun getCurrentFragment(): Fragment! onActivityCreated open fun onActivityCreated(savedInstanceState: Bundle?): Unit onAttach open fun onAttach(context: Context): Unit onCreateView open fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? onPageScrolled open fun onPageScrolled(position: Int , positionOffset: Float , positionOffsetPixels: Int ): Unit onPageScrollStateChanged open fun onPageScrollStateChanged(state: Int ): Unit onPageSelected open fun onPageSelected(position: Int ): Unit onPause open fun onPause(): Unit onResume open fun onResume(): Unit onSaveInstanceState open fun onSaveInstanceState(outState: Bundle): Unit onStart open fun onStart(): Unit onStop open fun onStop(): Unit setArgs open fun setArgs(args: PagerFragmentArguments): Unit setButtons open fun setButtons(buttons: MutableList < TripKitButton !>!): Unit setMapFragment open fun setMapFragment(fragment: TripResultMapFragment !): Unit setOnTripKitButtonClickListener open fun setOnTripKitButtonClickListener(listener: OnTripKitButtonClickListener!): Unit tripKitButtonClicked open fun tripKitButtonClicked(id: String , tripGroup: TripGroup ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / <init> <init> TripResultPagerFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-init-/#init","text":"TripResultPagerFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/get-current-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / getCurrentFragment getCurrentFragment open fun getCurrentFragment(): Fragment!","title":"Get current fragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/get-current-fragment/#getcurrentfragment","text":"open fun getCurrentFragment(): Fragment!","title":"getCurrentFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-activity-created/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / onActivityCreated onActivityCreated open fun onActivityCreated(@Nullable savedInstanceState: Bundle?): Unit","title":"On activity created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-activity-created/#onactivitycreated","text":"open fun onActivityCreated(@Nullable savedInstanceState: Bundle?): Unit","title":"onActivityCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-attach/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / onAttach onAttach open fun onAttach(context: Context): Unit","title":"On attach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-attach/#onattach","text":"open fun onAttach(context: Context): Unit","title":"onAttach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-create-view/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / onCreateView onCreateView @Nullable open fun onCreateView(inflater: LayoutInflater, @Nullable container: ViewGroup?, @Nullable savedInstanceState: Bundle?): View?","title":"On create view"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-create-view/#oncreateview","text":"@Nullable open fun onCreateView(inflater: LayoutInflater, @Nullable container: ViewGroup?, @Nullable savedInstanceState: Bundle?): View?","title":"onCreateView"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-page-scroll-state-changed/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / onPageScrollStateChanged onPageScrollStateChanged open fun onPageScrollStateChanged(state: Int ): Unit","title":"On page scroll state changed"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-page-scroll-state-changed/#onpagescrollstatechanged","text":"open fun onPageScrollStateChanged(state: Int ): Unit","title":"onPageScrollStateChanged"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-page-scrolled/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / onPageScrolled onPageScrolled open fun onPageScrolled(position: Int , positionOffset: Float , positionOffsetPixels: Int ): Unit","title":"On page scrolled"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-page-scrolled/#onpagescrolled","text":"open fun onPageScrolled(position: Int , positionOffset: Float , positionOffsetPixels: Int ): Unit","title":"onPageScrolled"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-page-selected/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / onPageSelected onPageSelected open fun onPageSelected(position: Int ): Unit","title":"On page selected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-page-selected/#onpageselected","text":"open fun onPageSelected(position: Int ): Unit","title":"onPageSelected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-pause/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / onPause onPause open fun onPause(): Unit","title":"On pause"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-pause/#onpause","text":"open fun onPause(): Unit","title":"onPause"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-resume/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / onResume onResume open fun onResume(): Unit","title":"On resume"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-resume/#onresume","text":"open fun onResume(): Unit","title":"onResume"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-save-instance-state/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / onSaveInstanceState onSaveInstanceState open fun onSaveInstanceState(@NonNull outState: Bundle): Unit","title":"On save instance state"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-save-instance-state/#onsaveinstancestate","text":"open fun onSaveInstanceState(@NonNull outState: Bundle): Unit","title":"onSaveInstanceState"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-start/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / onStart onStart open fun onStart(): Unit","title":"On start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-start/#onstart","text":"open fun onStart(): Unit","title":"onStart"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / onStop onStop open fun onStop(): Unit","title":"On stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/on-stop/#onstop","text":"open fun onStop(): Unit","title":"onStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/set-args/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / setArgs setArgs open fun setArgs(@NonNull args: PagerFragmentArguments): Unit","title":"Set args"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/set-args/#setargs","text":"open fun setArgs(@NonNull args: PagerFragmentArguments): Unit","title":"setArgs"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/set-buttons/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / setButtons setButtons open fun setButtons(buttons: MutableList < TripKitButton !>!): Unit","title":"Set buttons"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/set-buttons/#setbuttons","text":"open fun setButtons(buttons: MutableList < TripKitButton !>!): Unit","title":"setButtons"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/set-map-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / setMapFragment setMapFragment open fun setMapFragment(fragment: TripResultMapFragment !): Unit","title":"Set map fragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/set-map-fragment/#setmapfragment","text":"open fun setMapFragment(fragment: TripResultMapFragment !): Unit","title":"setMapFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/set-on-trip-kit-button-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / setOnTripKitButtonClickListener setOnTripKitButtonClickListener open fun setOnTripKitButtonClickListener(listener: OnTripKitButtonClickListener!): Unit","title":"Set on trip kit button click listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/set-on-trip-kit-button-click-listener/#setontripkitbuttonclicklistener","text":"open fun setOnTripKitButtonClickListener(listener: OnTripKitButtonClickListener!): Unit","title":"setOnTripKitButtonClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/trip-kit-button-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / tripKitButtonClicked tripKitButtonClicked open fun tripKitButtonClicked(@NotNull id: String , @NotNull tripGroup: TripGroup ): Unit","title":"Trip kit button clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/trip-kit-button-clicked/#tripkitbuttonclicked","text":"open fun tripKitButtonClicked(@NotNull id: String , @NotNull tripGroup: TripGroup ): Unit","title":"tripKitButtonClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / Builder Builder open class Builder Constructors Name Summary <init> Builder() Functions Name Summary build open fun build(): TripResultPagerFragment ! withArriveBy open fun withArriveBy(arriveBy: Long !): Builder! withMapFragment open fun withMapFragment(mapFragment: TripResultMapFragment !): Builder! withRequestId open fun withRequestId(requestId: String !): Builder! withSortOrder open fun withSortOrder(sortOrder: Int !): Builder! withTripButton open fun withTripButton(id: String !, layoutResourceId: Int ): Builder! withTripGroupId open fun withTripGroupId(tripGroupId: String !): Builder! withViewTrip open fun withViewTrip(trip: ViewTrip!): Builder!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/#builder","text":"open class Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/#functions","text":"Name Summary build open fun build(): TripResultPagerFragment ! withArriveBy open fun withArriveBy(arriveBy: Long !): Builder! withMapFragment open fun withMapFragment(mapFragment: TripResultMapFragment !): Builder! withRequestId open fun withRequestId(requestId: String !): Builder! withSortOrder open fun withSortOrder(sortOrder: Int !): Builder! withTripButton open fun withTripButton(id: String !, layoutResourceId: Int ): Builder! withTripGroupId open fun withTripGroupId(tripGroupId: String !): Builder! withViewTrip open fun withViewTrip(trip: ViewTrip!): Builder!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / Builder / <init> <init> Builder()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / Builder / build build open fun build(): TripResultPagerFragment !","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/build/#build","text":"open fun build(): TripResultPagerFragment !","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-arrive-by/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / Builder / withArriveBy withArriveBy open fun withArriveBy(arriveBy: Long !): Builder!","title":"With arrive by"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-arrive-by/#witharriveby","text":"open fun withArriveBy(arriveBy: Long !): Builder!","title":"withArriveBy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-map-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / Builder / withMapFragment withMapFragment open fun withMapFragment(mapFragment: TripResultMapFragment !): Builder!","title":"With map fragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-map-fragment/#withmapfragment","text":"open fun withMapFragment(mapFragment: TripResultMapFragment !): Builder!","title":"withMapFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-request-id/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / Builder / withRequestId withRequestId open fun withRequestId(requestId: String !): Builder!","title":"With request id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-request-id/#withrequestid","text":"open fun withRequestId(requestId: String !): Builder!","title":"withRequestId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-sort-order/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / Builder / withSortOrder withSortOrder open fun withSortOrder(sortOrder: Int !): Builder!","title":"With sort order"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-sort-order/#withsortorder","text":"open fun withSortOrder(sortOrder: Int !): Builder!","title":"withSortOrder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-trip-button/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / Builder / withTripButton withTripButton open fun withTripButton(id: String !, layoutResourceId: Int ): Builder!","title":"With trip button"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-trip-button/#withtripbutton","text":"open fun withTripButton(id: String !, layoutResourceId: Int ): Builder!","title":"withTripButton"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-trip-group-id/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / Builder / withTripGroupId withTripGroupId open fun withTripGroupId(tripGroupId: String !): Builder!","title":"With trip group id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-trip-group-id/#withtripgroupid","text":"open fun withTripGroupId(tripGroupId: String !): Builder!","title":"withTripGroupId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-view-trip/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / Builder / withViewTrip withViewTrip open fun withViewTrip(trip: ViewTrip!): Builder!","title":"With view trip"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-builder/with-view-trip/#withviewtrip","text":"open fun withViewTrip(trip: ViewTrip!): Builder!","title":"withViewTrip"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-on-trip-kit-button-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / OnTripKitButtonClickListener OnTripKitButtonClickListener interface OnTripKitButtonClickListener Functions Name Summary onTripKitButtonClicked abstract fun onTripKitButtonClicked(id: String !, tripGroup: TripGroup !): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-on-trip-kit-button-click-listener/#ontripkitbuttonclicklistener","text":"interface OnTripKitButtonClickListener","title":"OnTripKitButtonClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-on-trip-kit-button-click-listener/#functions","text":"Name Summary onTripKitButtonClicked abstract fun onTripKitButtonClicked(id: String !, tripGroup: TripGroup !): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-on-trip-kit-button-click-listener/on-trip-kit-button-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerFragment / OnTripKitButtonClickListener / onTripKitButtonClicked onTripKitButtonClicked abstract fun onTripKitButtonClicked(id: String !, tripGroup: TripGroup !): Unit","title":"On trip kit button clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-fragment/-on-trip-kit-button-click-listener/on-trip-kit-button-clicked/#ontripkitbuttonclicked","text":"abstract fun onTripKitButtonClicked(id: String !, tripGroup: TripGroup !): Unit","title":"onTripKitButtonClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel TripResultPagerViewModel class TripResultPagerViewModel : RxViewModel Properties Name Summary currentPage val currentPage: ObservableInt fetchingRealtimeStatus val fetchingRealtimeStatus: ObservableBoolean selectedTripGroup val selectedTripGroup: Observable< TripGroup > tripGroupsBinding val tripGroupsBinding: ObservableField< List < TripGroup >> tripSource val tripSource: BehaviorRelay<TripSource!> Functions Name Summary getSortedTripGroups fun getSortedTripGroups(args: PagerFragmentArguments): Observable< Unit > loadFetchingRealtimeStatus fun loadFetchingRealtimeStatus(): Observable< Boolean > observeInitialPage fun observeInitialPage(): Observable< Unit > observeTripGroups fun observeTripGroups(): Observable< Unit > onCreate fun onCreate(savedInstanceState: Bundle?): Unit onSavedInstanceState fun onSavedInstanceState(outState: Bundle): Unit onStart fun onStart(): Unit onStop fun onStop(): Unit setInitialSelectedTripGroupId fun setInitialSelectedTripGroupId(tripGroupId: String ): Unit trackViewingTrip fun trackViewingTrip(): Observable< Unit > updateSelectedTripGroup fun updateSelectedTripGroup(): Observable< Unit >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/#tripresultpagerviewmodel","text":"class TripResultPagerViewModel : RxViewModel","title":"TripResultPagerViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/#properties","text":"Name Summary currentPage val currentPage: ObservableInt fetchingRealtimeStatus val fetchingRealtimeStatus: ObservableBoolean selectedTripGroup val selectedTripGroup: Observable< TripGroup > tripGroupsBinding val tripGroupsBinding: ObservableField< List < TripGroup >> tripSource val tripSource: BehaviorRelay<TripSource!>","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/#functions","text":"Name Summary getSortedTripGroups fun getSortedTripGroups(args: PagerFragmentArguments): Observable< Unit > loadFetchingRealtimeStatus fun loadFetchingRealtimeStatus(): Observable< Boolean > observeInitialPage fun observeInitialPage(): Observable< Unit > observeTripGroups fun observeTripGroups(): Observable< Unit > onCreate fun onCreate(savedInstanceState: Bundle?): Unit onSavedInstanceState fun onSavedInstanceState(outState: Bundle): Unit onStart fun onStart(): Unit onStop fun onStop(): Unit setInitialSelectedTripGroupId fun setInitialSelectedTripGroupId(tripGroupId: String ): Unit trackViewingTrip fun trackViewingTrip(): Observable< Unit > updateSelectedTripGroup fun updateSelectedTripGroup(): Observable< Unit >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/current-page/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / currentPage currentPage val currentPage: ObservableInt","title":"Current page"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/current-page/#currentpage","text":"val currentPage: ObservableInt","title":"currentPage"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/fetching-realtime-status/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / fetchingRealtimeStatus fetchingRealtimeStatus val fetchingRealtimeStatus: ObservableBoolean","title":"Fetching realtime status"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/fetching-realtime-status/#fetchingrealtimestatus","text":"val fetchingRealtimeStatus: ObservableBoolean","title":"fetchingRealtimeStatus"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/get-sorted-trip-groups/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / getSortedTripGroups getSortedTripGroups fun getSortedTripGroups(args: PagerFragmentArguments): Observable< Unit >","title":"Get sorted trip groups"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/get-sorted-trip-groups/#getsortedtripgroups","text":"fun getSortedTripGroups(args: PagerFragmentArguments): Observable< Unit >","title":"getSortedTripGroups"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/load-fetching-realtime-status/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / loadFetchingRealtimeStatus loadFetchingRealtimeStatus fun loadFetchingRealtimeStatus(): Observable< Boolean >","title":"Load fetching realtime status"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/load-fetching-realtime-status/#loadfetchingrealtimestatus","text":"fun loadFetchingRealtimeStatus(): Observable< Boolean >","title":"loadFetchingRealtimeStatus"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/observe-initial-page/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / observeInitialPage observeInitialPage fun observeInitialPage(): Observable< Unit >","title":"Observe initial page"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/observe-initial-page/#observeinitialpage","text":"fun observeInitialPage(): Observable< Unit >","title":"observeInitialPage"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/observe-trip-groups/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / observeTripGroups observeTripGroups fun observeTripGroups(): Observable< Unit >","title":"Observe trip groups"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/observe-trip-groups/#observetripgroups","text":"fun observeTripGroups(): Observable< Unit >","title":"observeTripGroups"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / onCreate onCreate fun onCreate(savedInstanceState: Bundle?): Unit","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/on-create/#oncreate","text":"fun onCreate(savedInstanceState: Bundle?): Unit","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/on-saved-instance-state/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / onSavedInstanceState onSavedInstanceState fun onSavedInstanceState(outState: Bundle): Unit","title":"On saved instance state"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/on-saved-instance-state/#onsavedinstancestate","text":"fun onSavedInstanceState(outState: Bundle): Unit","title":"onSavedInstanceState"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/on-start/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / onStart onStart fun onStart(): Unit","title":"On start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/on-start/#onstart","text":"fun onStart(): Unit","title":"onStart"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/on-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / onStop onStop fun onStop(): Unit","title":"On stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/on-stop/#onstop","text":"fun onStop(): Unit","title":"onStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/selected-trip-group/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / selectedTripGroup selectedTripGroup val selectedTripGroup: Observable< TripGroup >","title":"Selected trip group"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/selected-trip-group/#selectedtripgroup","text":"val selectedTripGroup: Observable< TripGroup >","title":"selectedTripGroup"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/set-initial-selected-trip-group-id/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / setInitialSelectedTripGroupId setInitialSelectedTripGroupId fun setInitialSelectedTripGroupId(tripGroupId: String ): Unit","title":"Set initial selected trip group id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/set-initial-selected-trip-group-id/#setinitialselectedtripgroupid","text":"fun setInitialSelectedTripGroupId(tripGroupId: String ): Unit","title":"setInitialSelectedTripGroupId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/track-viewing-trip/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / trackViewingTrip trackViewingTrip fun trackViewingTrip(): Observable< Unit >","title":"Track viewing trip"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/track-viewing-trip/#trackviewingtrip","text":"fun trackViewingTrip(): Observable< Unit >","title":"trackViewingTrip"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/trip-groups-binding/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / tripGroupsBinding tripGroupsBinding val tripGroupsBinding: ObservableField< List < TripGroup >>","title":"Trip groups binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/trip-groups-binding/#tripgroupsbinding","text":"val tripGroupsBinding: ObservableField< List < TripGroup >>","title":"tripGroupsBinding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/trip-source/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / tripSource tripSource val tripSource: BehaviorRelay<TripSource!>","title":"Trip source"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/trip-source/#tripsource","text":"val tripSource: BehaviorRelay<TripSource!>","title":"tripSource"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/update-selected-trip-group/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripResultPagerViewModel / updateSelectedTripGroup updateSelectedTripGroup fun updateSelectedTripGroup(): Observable< Unit >","title":"Update selected trip group"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-result-pager-view-model/update-selected-trip-group/#updateselectedtripgroup","text":"fun updateSelectedTripGroup(): Observable< Unit >","title":"updateSelectedTripGroup"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel TripSegmentItemViewModel class TripSegmentItemViewModel : RxViewModel Types Name Summary SegmentViewType enum class SegmentViewType Properties Name Summary backgroundCircleTint val backgroundCircleTint: ObservableField< Int > bottomLineTint val bottomLineTint: ObservableField< Int > description val description: ObservableField< String > endTime val endTime: ObservableField< String > icon val icon: ObservableField<Drawable> showBackgroundCircle val showBackgroundCircle: ObservableBoolean showBottomLine val showBottomLine: ObservableBoolean showDescription val showDescription: ObservableBoolean showEndTime val showEndTime: ObservableBoolean showStartTime val showStartTime: ObservableBoolean showTopLine val showTopLine: ObservableBoolean startTime val startTime: ObservableField< String > title val title: ObservableField< String > topLineTint val topLineTint: ObservableField< Int > tripSegment var tripSegment: TripSegment ? Functions Name Summary setupSegment fun setupSegment(viewType: SegmentViewType, title: String , description: String ? = null, startTime: String ? = null, endTime: String ? = null, lineColor: Int = Color.TRANSPARENT, topConnectionColor: Int = lineColor, bottomConnectionColor: Int = lineColor): Unit showSegmentIcon fun showSegmentIcon(segment: TripSegment , tintWhite: Boolean ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/#tripsegmentitemviewmodel","text":"class TripSegmentItemViewModel : RxViewModel","title":"TripSegmentItemViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/#types","text":"Name Summary SegmentViewType enum class SegmentViewType","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/#properties","text":"Name Summary backgroundCircleTint val backgroundCircleTint: ObservableField< Int > bottomLineTint val bottomLineTint: ObservableField< Int > description val description: ObservableField< String > endTime val endTime: ObservableField< String > icon val icon: ObservableField<Drawable> showBackgroundCircle val showBackgroundCircle: ObservableBoolean showBottomLine val showBottomLine: ObservableBoolean showDescription val showDescription: ObservableBoolean showEndTime val showEndTime: ObservableBoolean showStartTime val showStartTime: ObservableBoolean showTopLine val showTopLine: ObservableBoolean startTime val startTime: ObservableField< String > title val title: ObservableField< String > topLineTint val topLineTint: ObservableField< Int > tripSegment var tripSegment: TripSegment ?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/#functions","text":"Name Summary setupSegment fun setupSegment(viewType: SegmentViewType, title: String , description: String ? = null, startTime: String ? = null, endTime: String ? = null, lineColor: Int = Color.TRANSPARENT, topConnectionColor: Int = lineColor, bottomConnectionColor: Int = lineColor): Unit showSegmentIcon fun showSegmentIcon(segment: TripSegment , tintWhite: Boolean ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/background-circle-tint/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / backgroundCircleTint backgroundCircleTint val backgroundCircleTint: ObservableField< Int >","title":"Background circle tint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/background-circle-tint/#backgroundcircletint","text":"val backgroundCircleTint: ObservableField< Int >","title":"backgroundCircleTint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/bottom-line-tint/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / bottomLineTint bottomLineTint val bottomLineTint: ObservableField< Int >","title":"Bottom line tint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/bottom-line-tint/#bottomlinetint","text":"val bottomLineTint: ObservableField< Int >","title":"bottomLineTint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/description/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / description description val description: ObservableField< String >","title":"Description"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/description/#description","text":"val description: ObservableField< String >","title":"description"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/end-time/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / endTime endTime val endTime: ObservableField< String >","title":"End time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/end-time/#endtime","text":"val endTime: ObservableField< String >","title":"endTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/icon/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / icon icon val icon: ObservableField<Drawable>","title":"Icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/icon/#icon","text":"val icon: ObservableField<Drawable>","title":"icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/setup-segment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / setupSegment setupSegment fun setupSegment(viewType: SegmentViewType, title: String , description: String ? = null, startTime: String ? = null, endTime: String ? = null, lineColor: Int = Color.TRANSPARENT, topConnectionColor: Int = lineColor, bottomConnectionColor: Int = lineColor): Unit","title":"Setup segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/setup-segment/#setupsegment","text":"fun setupSegment(viewType: SegmentViewType, title: String , description: String ? = null, startTime: String ? = null, endTime: String ? = null, lineColor: Int = Color.TRANSPARENT, topConnectionColor: Int = lineColor, bottomConnectionColor: Int = lineColor): Unit","title":"setupSegment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-background-circle/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / showBackgroundCircle showBackgroundCircle val showBackgroundCircle: ObservableBoolean","title":"Show background circle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-background-circle/#showbackgroundcircle","text":"val showBackgroundCircle: ObservableBoolean","title":"showBackgroundCircle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-bottom-line/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / showBottomLine showBottomLine val showBottomLine: ObservableBoolean","title":"Show bottom line"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-bottom-line/#showbottomline","text":"val showBottomLine: ObservableBoolean","title":"showBottomLine"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-description/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / showDescription showDescription val showDescription: ObservableBoolean","title":"Show description"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-description/#showdescription","text":"val showDescription: ObservableBoolean","title":"showDescription"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-end-time/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / showEndTime showEndTime val showEndTime: ObservableBoolean","title":"Show end time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-end-time/#showendtime","text":"val showEndTime: ObservableBoolean","title":"showEndTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-segment-icon/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / showSegmentIcon showSegmentIcon protected fun showSegmentIcon(segment: TripSegment , tintWhite: Boolean ): Unit","title":"Show segment icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-segment-icon/#showsegmenticon","text":"protected fun showSegmentIcon(segment: TripSegment , tintWhite: Boolean ): Unit","title":"showSegmentIcon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-start-time/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / showStartTime showStartTime val showStartTime: ObservableBoolean","title":"Show start time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-start-time/#showstarttime","text":"val showStartTime: ObservableBoolean","title":"showStartTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-top-line/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / showTopLine showTopLine val showTopLine: ObservableBoolean","title":"Show top line"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/show-top-line/#showtopline","text":"val showTopLine: ObservableBoolean","title":"showTopLine"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/start-time/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / startTime startTime val startTime: ObservableField< String >","title":"Start time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/start-time/#starttime","text":"val startTime: ObservableField< String >","title":"startTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/title/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / title title val title: ObservableField< String >","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/title/#title","text":"val title: ObservableField< String >","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/top-line-tint/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / topLineTint topLineTint val topLineTint: ObservableField< Int >","title":"Top line tint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/top-line-tint/#toplinetint","text":"val topLineTint: ObservableField< Int >","title":"topLineTint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/trip-segment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / tripSegment tripSegment var tripSegment: TripSegment ?","title":"Trip segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/trip-segment/#tripsegment","text":"var tripSegment: TripSegment ?","title":"tripSegment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/-segment-view-type/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / SegmentViewType SegmentViewType enum class SegmentViewType Enum Values Name Summary TERMINAL STATIONARY STATIONARY_BRIDGE MOVING","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/-segment-view-type/#segmentviewtype","text":"enum class SegmentViewType","title":"SegmentViewType"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/-segment-view-type/#enum-values","text":"Name Summary TERMINAL STATIONARY STATIONARY_BRIDGE MOVING","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/-segment-view-type/-m-o-v-i-n-g/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / SegmentViewType / MOVING MOVING MOVING","title":" m o v i n g"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/-segment-view-type/-m-o-v-i-n-g/#moving","text":"MOVING","title":"MOVING"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/-segment-view-type/-s-t-a-t-i-o-n-a-r-y/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / SegmentViewType / STATIONARY STATIONARY STATIONARY","title":" s t a t i o n a r y"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/-segment-view-type/-s-t-a-t-i-o-n-a-r-y/#stationary","text":"STATIONARY","title":"STATIONARY"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/-segment-view-type/-s-t-a-t-i-o-n-a-r-y_-b-r-i-d-g-e/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / SegmentViewType / STATIONARY_BRIDGE STATIONARY_BRIDGE STATIONARY_BRIDGE","title":" s t a t i o n a r y  b r i d g e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/-segment-view-type/-s-t-a-t-i-o-n-a-r-y_-b-r-i-d-g-e/#stationary_bridge","text":"STATIONARY_BRIDGE","title":"STATIONARY_BRIDGE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/-segment-view-type/-t-e-r-m-i-n-a-l/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentItemViewModel / SegmentViewType / TERMINAL TERMINAL TERMINAL","title":" t e r m i n a l"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-item-view-model/-segment-view-type/-t-e-r-m-i-n-a-l/#terminal","text":"TERMINAL","title":"TERMINAL"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment TripSegmentListFragment class TripSegmentListFragment : RxFragment , OnClickListener Types Name Summary Builder class Builder OnTripKitButtonClickListener interface OnTripKitButtonClickListener Constructors Name Summary <init> TripSegmentListFragment() Properties Name Summary binding lateinit var binding: <ERROR CLASS> buttons var buttons: List < TripKitButton > errorLogger lateinit var errorLogger: ErrorLogger viewModel lateinit var viewModel: TripSegmentsViewModel Functions Name Summary onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit onActivityResult fun onActivityResult(requestCode: Int , resultCode: Int , data: Intent?): Unit onAttach fun onAttach(context: Context): Unit onClick fun onClick(p0: View?): Unit onCreate fun onCreate(savedInstanceState: Bundle?): Unit onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? onStart fun onStart(): Unit onStop fun onStop(): Unit setOnTripKitButtonClickListener fun setOnTripKitButtonClickListener(callback: OnTripKitButtonClickListener): Unit fun setOnTripKitButtonClickListener(callback: ( String , TripGroup ) -> Unit ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/#tripsegmentlistfragment","text":"class TripSegmentListFragment : RxFragment , OnClickListener","title":"TripSegmentListFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/#types","text":"Name Summary Builder class Builder OnTripKitButtonClickListener interface OnTripKitButtonClickListener","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/#constructors","text":"Name Summary <init> TripSegmentListFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/#properties","text":"Name Summary binding lateinit var binding: <ERROR CLASS> buttons var buttons: List < TripKitButton > errorLogger lateinit var errorLogger: ErrorLogger viewModel lateinit var viewModel: TripSegmentsViewModel","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/#functions","text":"Name Summary onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit onActivityResult fun onActivityResult(requestCode: Int , resultCode: Int , data: Intent?): Unit onAttach fun onAttach(context: Context): Unit onClick fun onClick(p0: View?): Unit onCreate fun onCreate(savedInstanceState: Bundle?): Unit onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? onStart fun onStart(): Unit onStop fun onStop(): Unit setOnTripKitButtonClickListener fun setOnTripKitButtonClickListener(callback: OnTripKitButtonClickListener): Unit fun setOnTripKitButtonClickListener(callback: ( String , TripGroup ) -> Unit ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / <init> <init> TripSegmentListFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-init-/#init","text":"TripSegmentListFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/binding/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / binding binding lateinit var binding: <ERROR CLASS>","title":"Binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/binding/#binding","text":"lateinit var binding: <ERROR CLASS>","title":"binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/buttons/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / buttons buttons var buttons: List < TripKitButton >","title":"Buttons"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/buttons/#buttons","text":"var buttons: List < TripKitButton >","title":"buttons"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/error-logger/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / errorLogger errorLogger lateinit var errorLogger: ErrorLogger","title":"Error logger"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/error-logger/#errorlogger","text":"lateinit var errorLogger: ErrorLogger","title":"errorLogger"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-activity-created/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / onActivityCreated onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit","title":"On activity created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-activity-created/#onactivitycreated","text":"fun onActivityCreated(savedInstanceState: Bundle?): Unit","title":"onActivityCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-activity-result/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / onActivityResult onActivityResult fun onActivityResult(requestCode: Int , resultCode: Int , data: Intent?): Unit","title":"On activity result"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-activity-result/#onactivityresult","text":"fun onActivityResult(requestCode: Int , resultCode: Int , data: Intent?): Unit","title":"onActivityResult"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-attach/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / onAttach onAttach fun onAttach(context: Context): Unit","title":"On attach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-attach/#onattach","text":"fun onAttach(context: Context): Unit","title":"onAttach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-click/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / onClick onClick fun onClick(p0: View?): Unit","title":"On click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-click/#onclick","text":"fun onClick(p0: View?): Unit","title":"onClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-create-view/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / onCreateView onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","title":"On create view"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-create-view/#oncreateview","text":"fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","title":"onCreateView"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-create/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / onCreate onCreate fun onCreate(savedInstanceState: Bundle?): Unit","title":"On create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-create/#oncreate","text":"fun onCreate(savedInstanceState: Bundle?): Unit","title":"onCreate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-start/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / onStart onStart fun onStart(): Unit","title":"On start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-start/#onstart","text":"fun onStart(): Unit","title":"onStart"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / onStop onStop fun onStop(): Unit","title":"On stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/on-stop/#onstop","text":"fun onStop(): Unit","title":"onStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/set-on-trip-kit-button-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / setOnTripKitButtonClickListener setOnTripKitButtonClickListener fun setOnTripKitButtonClickListener(callback: OnTripKitButtonClickListener): Unit fun setOnTripKitButtonClickListener(callback: ( String , TripGroup ) -> Unit ): Unit","title":"Set on trip kit button click listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/set-on-trip-kit-button-click-listener/#setontripkitbuttonclicklistener","text":"fun setOnTripKitButtonClickListener(callback: OnTripKitButtonClickListener): Unit fun setOnTripKitButtonClickListener(callback: ( String , TripGroup ) -> Unit ): Unit","title":"setOnTripKitButtonClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / viewModel viewModel lateinit var viewModel: TripSegmentsViewModel","title":"View model"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/view-model/#viewmodel","text":"lateinit var viewModel: TripSegmentsViewModel","title":"viewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / Builder Builder class Builder Constructors Name Summary <init> Builder() Functions Name Summary build fun build(): TripSegmentListFragment withButtons fun withButtons(buttons: List < TripKitButton >): Builder withTripGroupId fun withTripGroupId(tripGroupId: String ): Builder","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/#builder","text":"class Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/#functions","text":"Name Summary build fun build(): TripSegmentListFragment withButtons fun withButtons(buttons: List < TripKitButton >): Builder withTripGroupId fun withTripGroupId(tripGroupId: String ): Builder","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / Builder / <init> <init> Builder()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / Builder / build build fun build(): TripSegmentListFragment","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/build/#build","text":"fun build(): TripSegmentListFragment","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/with-buttons/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / Builder / withButtons withButtons fun withButtons(buttons: List < TripKitButton >): Builder","title":"With buttons"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/with-buttons/#withbuttons","text":"fun withButtons(buttons: List < TripKitButton >): Builder","title":"withButtons"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/with-trip-group-id/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / Builder / withTripGroupId withTripGroupId fun withTripGroupId(tripGroupId: String ): Builder","title":"With trip group id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-builder/with-trip-group-id/#withtripgroupid","text":"fun withTripGroupId(tripGroupId: String ): Builder","title":"withTripGroupId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-on-trip-kit-button-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / OnTripKitButtonClickListener OnTripKitButtonClickListener interface OnTripKitButtonClickListener Functions Name Summary tripKitButtonClicked abstract fun tripKitButtonClicked(id: String , tripGroup: TripGroup ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-on-trip-kit-button-click-listener/#ontripkitbuttonclicklistener","text":"interface OnTripKitButtonClickListener","title":"OnTripKitButtonClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-on-trip-kit-button-click-listener/#functions","text":"Name Summary tripKitButtonClicked abstract fun tripKitButtonClicked(id: String , tripGroup: TripGroup ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-on-trip-kit-button-click-listener/trip-kit-button-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentListFragment / OnTripKitButtonClickListener / tripKitButtonClicked tripKitButtonClicked abstract fun tripKitButtonClicked(id: String , tripGroup: TripGroup ): Unit","title":"Trip kit button clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segment-list-fragment/-on-trip-kit-button-click-listener/trip-kit-button-clicked/#tripkitbuttonclicked","text":"abstract fun tripKitButtonClicked(id: String , tripGroup: TripGroup ): Unit","title":"tripKitButtonClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel TripSegmentsViewModel class TripSegmentsViewModel : RxViewModel Properties Name Summary arriveAtTitle var arriveAtTitle: ObservableField< String > durationTitle var durationTitle: ObservableField< String > itemBinding val itemBinding: ItemBinding< Any !> itemViewModels val itemViewModels: ObservableField< MutableList < Any !>!> segmentViewModels val segmentViewModels: MutableList < TripSegmentItemViewModel > timeZoneId val timeZoneId: String tripGroup var tripGroup: TripGroup tripGroupObservable val tripGroupObservable: Observable< TripGroup > Functions Name Summary findSegmentPosition fun findSegmentPosition(tripSegment: TripSegment ): Int loadTripGroup fun loadTripGroup(tripGroupId: String , savedInstanceState: Bundle?): Unit onCleared This method will be called when this ViewModel is no longer used and will be destroyed. fun onCleared(): Unit onStart fun onStart(): Unit onStop fun onStop(): Unit setInternalBus fun setInternalBus(bus: Bus): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/#tripsegmentsviewmodel","text":"class TripSegmentsViewModel : RxViewModel","title":"TripSegmentsViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/#properties","text":"Name Summary arriveAtTitle var arriveAtTitle: ObservableField< String > durationTitle var durationTitle: ObservableField< String > itemBinding val itemBinding: ItemBinding< Any !> itemViewModels val itemViewModels: ObservableField< MutableList < Any !>!> segmentViewModels val segmentViewModels: MutableList < TripSegmentItemViewModel > timeZoneId val timeZoneId: String tripGroup var tripGroup: TripGroup tripGroupObservable val tripGroupObservable: Observable< TripGroup >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/#functions","text":"Name Summary findSegmentPosition fun findSegmentPosition(tripSegment: TripSegment ): Int loadTripGroup fun loadTripGroup(tripGroupId: String , savedInstanceState: Bundle?): Unit onCleared This method will be called when this ViewModel is no longer used and will be destroyed. fun onCleared(): Unit onStart fun onStart(): Unit onStop fun onStop(): Unit setInternalBus fun setInternalBus(bus: Bus): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/arrive-at-title/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / arriveAtTitle arriveAtTitle var arriveAtTitle: ObservableField< String >","title":"Arrive at title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/arrive-at-title/#arriveattitle","text":"var arriveAtTitle: ObservableField< String >","title":"arriveAtTitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/duration-title/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / durationTitle durationTitle var durationTitle: ObservableField< String >","title":"Duration title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/duration-title/#durationtitle","text":"var durationTitle: ObservableField< String >","title":"durationTitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/find-segment-position/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / findSegmentPosition findSegmentPosition fun findSegmentPosition(tripSegment: TripSegment ): Int","title":"Find segment position"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/find-segment-position/#findsegmentposition","text":"fun findSegmentPosition(tripSegment: TripSegment ): Int","title":"findSegmentPosition"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/item-binding/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / itemBinding itemBinding val itemBinding: ItemBinding< Any !>","title":"Item binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/item-binding/#itembinding","text":"val itemBinding: ItemBinding< Any !>","title":"itemBinding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/item-view-models/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / itemViewModels itemViewModels val itemViewModels: ObservableField< MutableList < Any !>!>","title":"Item view models"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/item-view-models/#itemviewmodels","text":"val itemViewModels: ObservableField< MutableList < Any !>!>","title":"itemViewModels"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/load-trip-group/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / loadTripGroup loadTripGroup fun loadTripGroup(tripGroupId: String , savedInstanceState: Bundle?): Unit","title":"Load trip group"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/load-trip-group/#loadtripgroup","text":"fun loadTripGroup(tripGroupId: String , savedInstanceState: Bundle?): Unit","title":"loadTripGroup"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/on-cleared/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / onCleared onCleared fun onCleared(): Unit This method will be called when this ViewModel is no longer used and will be destroyed.","title":"On cleared"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/on-cleared/#oncleared","text":"fun onCleared(): Unit This method will be called when this ViewModel is no longer used and will be destroyed.","title":"onCleared"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/on-start/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / onStart onStart fun onStart(): Unit","title":"On start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/on-start/#onstart","text":"fun onStart(): Unit","title":"onStart"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/on-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / onStop onStop fun onStop(): Unit","title":"On stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/on-stop/#onstop","text":"fun onStop(): Unit","title":"onStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/segment-view-models/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / segmentViewModels segmentViewModels val segmentViewModels: MutableList < TripSegmentItemViewModel >","title":"Segment view models"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/segment-view-models/#segmentviewmodels","text":"val segmentViewModels: MutableList < TripSegmentItemViewModel >","title":"segmentViewModels"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/set-internal-bus/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / setInternalBus setInternalBus fun setInternalBus(bus: Bus): Unit","title":"Set internal bus"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/set-internal-bus/#setinternalbus","text":"fun setInternalBus(bus: Bus): Unit","title":"setInternalBus"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/time-zone-id/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / timeZoneId timeZoneId val timeZoneId: String","title":"Time zone id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/time-zone-id/#timezoneid","text":"val timeZoneId: String","title":"timeZoneId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/trip-group-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / tripGroupObservable tripGroupObservable val tripGroupObservable: Observable< TripGroup >","title":"Trip group observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/trip-group-observable/#tripgroupobservable","text":"val tripGroupObservable: Observable< TripGroup >","title":"tripGroupObservable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/trip-group/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / TripSegmentsViewModel / tripGroup tripGroup var tripGroup: TripGroup","title":"Trip group"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-trip-segments-view-model/trip-group/#tripgroup","text":"var tripGroup: TripGroup","title":"tripGroup"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-update-trip-for-realtime/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / UpdateTripForRealtime UpdateTripForRealtime open class UpdateTripForRealtime Functions Name Summary start fun start(getTripGroup: Observable< TripGroup >): Unit startForBooking fun startForBooking(getTripGroup: Observable< TripGroup >): Unit stop fun stop(): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-update-trip-for-realtime/#updatetripforrealtime","text":"open class UpdateTripForRealtime","title":"UpdateTripForRealtime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-update-trip-for-realtime/#functions","text":"Name Summary start fun start(getTripGroup: Observable< TripGroup >): Unit startForBooking fun startForBooking(getTripGroup: Observable< TripGroup >): Unit stop fun stop(): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-update-trip-for-realtime/start-for-booking/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / UpdateTripForRealtime / startForBooking startForBooking fun startForBooking(getTripGroup: Observable< TripGroup >): Unit","title":"Start for booking"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-update-trip-for-realtime/start-for-booking/#startforbooking","text":"fun startForBooking(getTripGroup: Observable< TripGroup >): Unit","title":"startForBooking"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-update-trip-for-realtime/start/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / UpdateTripForRealtime / start start fun start(getTripGroup: Observable< TripGroup >): Unit","title":"Start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-update-trip-for-realtime/start/#start","text":"fun start(getTripGroup: Observable< TripGroup >): Unit","title":"start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-update-trip-for-realtime/stop/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / UpdateTripForRealtime / stop stop fun stop(): Unit","title":"Stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-update-trip-for-realtime/stop/#stop","text":"fun stop(): Unit","title":"stop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam WayPointTaskParam sealed class WayPointTaskParam Types Name Summary ForChangingService class ForChangingService : WayPointTaskParam ForChangingStop class ForChangingStop : WayPointTaskParam Properties Name Summary region val region: Region","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/#waypointtaskparam","text":"sealed class WayPointTaskParam","title":"WayPointTaskParam"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/#types","text":"Name Summary ForChangingService class ForChangingService : WayPointTaskParam ForChangingStop class ForChangingStop : WayPointTaskParam","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/#properties","text":"Name Summary region val region: Region","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/region/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / region region val region: Region","title":"Region"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/region/#region","text":"val region: Region","title":"region"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / ForChangingService ForChangingService class ForChangingService : WayPointTaskParam Constructors Name Summary <init> ForChangingService(region: Region , segments: ArrayList < TripSegment >, prototypeSegment: TripSegment , service: TimetableEntry ) Properties Name Summary prototypeSegment val prototypeSegment: TripSegment segments val segments: ArrayList < TripSegment > service val service: TimetableEntry","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/#forchangingservice","text":"class ForChangingService : WayPointTaskParam","title":"ForChangingService"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/#constructors","text":"Name Summary <init> ForChangingService(region: Region , segments: ArrayList < TripSegment >, prototypeSegment: TripSegment , service: TimetableEntry )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/#properties","text":"Name Summary prototypeSegment val prototypeSegment: TripSegment segments val segments: ArrayList < TripSegment > service val service: TimetableEntry","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / ForChangingService / <init> <init> ForChangingService(region: Region , segments: ArrayList < TripSegment >, prototypeSegment: TripSegment , service: TimetableEntry )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/-init-/#init","text":"ForChangingService(region: Region , segments: ArrayList < TripSegment >, prototypeSegment: TripSegment , service: TimetableEntry )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/prototype-segment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / ForChangingService / prototypeSegment prototypeSegment val prototypeSegment: TripSegment","title":"Prototype segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/prototype-segment/#prototypesegment","text":"val prototypeSegment: TripSegment","title":"prototypeSegment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/segments/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / ForChangingService / segments segments val segments: ArrayList < TripSegment >","title":"Segments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/segments/#segments","text":"val segments: ArrayList < TripSegment >","title":"segments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/service/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / ForChangingService / service service val service: TimetableEntry","title":"Service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-service/service/#service","text":"val service: TimetableEntry","title":"service"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / ForChangingStop ForChangingStop class ForChangingStop : WayPointTaskParam Constructors Name Summary <init> ForChangingStop(region: Region , segments: ArrayList < TripSegment >, prototypeSegment: TripSegment , waypoint: Location , isGetOn: Boolean ) Properties Name Summary isGetOn val isGetOn: Boolean prototypeSegment val prototypeSegment: TripSegment segments val segments: ArrayList < TripSegment > waypoint val waypoint: Location","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/#forchangingstop","text":"class ForChangingStop : WayPointTaskParam","title":"ForChangingStop"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/#constructors","text":"Name Summary <init> ForChangingStop(region: Region , segments: ArrayList < TripSegment >, prototypeSegment: TripSegment , waypoint: Location , isGetOn: Boolean )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/#properties","text":"Name Summary isGetOn val isGetOn: Boolean prototypeSegment val prototypeSegment: TripSegment segments val segments: ArrayList < TripSegment > waypoint val waypoint: Location","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / ForChangingStop / <init> <init> ForChangingStop(region: Region , segments: ArrayList < TripSegment >, prototypeSegment: TripSegment , waypoint: Location , isGetOn: Boolean )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/-init-/#init","text":"ForChangingStop(region: Region , segments: ArrayList < TripSegment >, prototypeSegment: TripSegment , waypoint: Location , isGetOn: Boolean )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/is-get-on/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / ForChangingStop / isGetOn isGetOn val isGetOn: Boolean","title":"Is get on"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/is-get-on/#isgeton","text":"val isGetOn: Boolean","title":"isGetOn"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/prototype-segment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / ForChangingStop / prototypeSegment prototypeSegment val prototypeSegment: TripSegment","title":"Prototype segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/prototype-segment/#prototypesegment","text":"val prototypeSegment: TripSegment","title":"prototypeSegment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/segments/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / ForChangingStop / segments segments val segments: ArrayList < TripSegment >","title":"Segments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/segments/#segments","text":"val segments: ArrayList < TripSegment >","title":"segments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/waypoint/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WayPointTaskParam / ForChangingStop / waypoint waypoint val waypoint: Location","title":"Waypoint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-way-point-task-param/-for-changing-stop/waypoint/#waypoint","text":"val waypoint: Location","title":"waypoint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask WaypointTask open class WaypointTask : SingleOnSubscribe< MutableList < TripGroup !>!> https://redmine.buzzhives.com/projects/buzzhives/wiki/Routing_API#Trips-from-waypoint Constructors Name Summary <init> WaypointTask(context: Context, configCreator: ConfigRepository , param: WayPointTaskParam !) Properties Name Summary FORMAT_COORDINATES static val FORMAT_COORDINATES: String KEY_CONFIG static val KEY_CONFIG: String KEY_END static val KEY_END: String KEY_END_TIME static val KEY_END_TIME: String KEY_MODES static val KEY_MODES: String KEY_OPERATOR static val KEY_OPERATOR: String KEY_REGION static val KEY_REGION: String KEY_SEGMENTS static val KEY_SEGMENTS: String KEY_SERVICE_TRIP_ID static val KEY_SERVICE_TRIP_ID: String KEY_START static val KEY_START: String KEY_START_TIME static val KEY_START_TIME: String Functions Name Summary subscribe open fun subscribe(singleSubscriber: SingleEmitter< MutableList < TripGroup !>!>): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/#waypointtask","text":"open class WaypointTask : SingleOnSubscribe< MutableList < TripGroup !>!> https://redmine.buzzhives.com/projects/buzzhives/wiki/Routing_API#Trips-from-waypoint","title":"WaypointTask"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/#constructors","text":"Name Summary <init> WaypointTask(context: Context, configCreator: ConfigRepository , param: WayPointTaskParam !)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/#properties","text":"Name Summary FORMAT_COORDINATES static val FORMAT_COORDINATES: String KEY_CONFIG static val KEY_CONFIG: String KEY_END static val KEY_END: String KEY_END_TIME static val KEY_END_TIME: String KEY_MODES static val KEY_MODES: String KEY_OPERATOR static val KEY_OPERATOR: String KEY_REGION static val KEY_REGION: String KEY_SEGMENTS static val KEY_SEGMENTS: String KEY_SERVICE_TRIP_ID static val KEY_SERVICE_TRIP_ID: String KEY_START static val KEY_START: String KEY_START_TIME static val KEY_START_TIME: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/#functions","text":"Name Summary subscribe open fun subscribe(singleSubscriber: SingleEmitter< MutableList < TripGroup !>!>): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-f-o-r-m-a-t_-c-o-o-r-d-i-n-a-t-e-s/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / FORMAT_COORDINATES FORMAT_COORDINATES static val FORMAT_COORDINATES: String","title":" f o r m a t  c o o r d i n a t e s"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-f-o-r-m-a-t_-c-o-o-r-d-i-n-a-t-e-s/#format_coordinates","text":"static val FORMAT_COORDINATES: String","title":"FORMAT_COORDINATES"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / <init> <init> WaypointTask(@NonNull context: Context, @NonNull configCreator: ConfigRepository , param: WayPointTaskParam !)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-init-/#init","text":"WaypointTask(@NonNull context: Context, @NonNull configCreator: ConfigRepository , param: WayPointTaskParam !)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-c-o-n-f-i-g/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / KEY_CONFIG KEY_CONFIG static val KEY_CONFIG: String","title":" k e y  c o n f i g"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-c-o-n-f-i-g/#key_config","text":"static val KEY_CONFIG: String","title":"KEY_CONFIG"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-e-n-d/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / KEY_END KEY_END static val KEY_END: String","title":" k e y  e n d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-e-n-d/#key_end","text":"static val KEY_END: String","title":"KEY_END"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-e-n-d_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / KEY_END_TIME KEY_END_TIME static val KEY_END_TIME: String","title":" k e y  e n d  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-e-n-d_-t-i-m-e/#key_end_time","text":"static val KEY_END_TIME: String","title":"KEY_END_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-m-o-d-e-s/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / KEY_MODES KEY_MODES static val KEY_MODES: String","title":" k e y  m o d e s"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-m-o-d-e-s/#key_modes","text":"static val KEY_MODES: String","title":"KEY_MODES"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-o-p-e-r-a-t-o-r/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / KEY_OPERATOR KEY_OPERATOR static val KEY_OPERATOR: String","title":" k e y  o p e r a t o r"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-o-p-e-r-a-t-o-r/#key_operator","text":"static val KEY_OPERATOR: String","title":"KEY_OPERATOR"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-r-e-g-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / KEY_REGION KEY_REGION static val KEY_REGION: String","title":" k e y  r e g i o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-r-e-g-i-o-n/#key_region","text":"static val KEY_REGION: String","title":"KEY_REGION"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-s-e-g-m-e-n-t-s/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / KEY_SEGMENTS KEY_SEGMENTS static val KEY_SEGMENTS: String","title":" k e y  s e g m e n t s"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-s-e-g-m-e-n-t-s/#key_segments","text":"static val KEY_SEGMENTS: String","title":"KEY_SEGMENTS"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-s-e-r-v-i-c-e_-t-r-i-p_-i-d/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / KEY_SERVICE_TRIP_ID KEY_SERVICE_TRIP_ID static val KEY_SERVICE_TRIP_ID: String","title":" k e y  s e r v i c e  t r i p  i d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-s-e-r-v-i-c-e_-t-r-i-p_-i-d/#key_service_trip_id","text":"static val KEY_SERVICE_TRIP_ID: String","title":"KEY_SERVICE_TRIP_ID"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-s-t-a-r-t/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / KEY_START KEY_START static val KEY_START: String","title":" k e y  s t a r t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-s-t-a-r-t/#key_start","text":"static val KEY_START: String","title":"KEY_START"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-s-t-a-r-t_-t-i-m-e/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / KEY_START_TIME KEY_START_TIME static val KEY_START_TIME: String","title":" k e y  s t a r t  t i m e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/-k-e-y_-s-t-a-r-t_-t-i-m-e/#key_start_time","text":"static val KEY_START_TIME: String","title":"KEY_START_TIME"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/subscribe/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / WaypointTask / subscribe subscribe open fun subscribe(singleSubscriber: SingleEmitter< MutableList < TripGroup !>!>): Unit","title":"Subscribe"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/-waypoint-task/subscribe/#subscribe","text":"open fun subscribe(singleSubscriber: SingleEmitter< MutableList < TripGroup !>!>): Unit","title":"subscribe"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/com.google.android.gms.maps.model.-lat-lng-bounds/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / com.google.android.gms.maps.model.LatLngBounds Extensions for com.google.android.gms.maps.model.LatLngBounds Name Summary toCameraUpdate fun LatLngBounds.toCameraUpdate(padding: Int ): CameraUpdate","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/com.google.android.gms.maps.model.-lat-lng-bounds/#extensions-for-comgoogleandroidgmsmapsmodellatlngbounds","text":"Name Summary toCameraUpdate fun LatLngBounds.toCameraUpdate(padding: Int ): CameraUpdate","title":"Extensions for com.google.android.gms.maps.model.LatLngBounds"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/com.google.android.gms.maps.model.-lat-lng-bounds/to-camera-update/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / com.google.android.gms.maps.model.LatLngBounds / toCameraUpdate toCameraUpdate fun LatLngBounds.toCameraUpdate(padding: Int ): CameraUpdate","title":"To camera update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/com.google.android.gms.maps.model.-lat-lng-bounds/to-camera-update/#tocameraupdate","text":"fun LatLngBounds.toCameraUpdate(padding: Int ): CameraUpdate","title":"toCameraUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/kotlin.collections.-list/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / kotlin.collections.List Extensions for kotlin.collections.List Name Summary toCameraUpdate fun List < GeoPoint >.toCameraUpdate(): CameraUpdate","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/kotlin.collections.-list/#extensions-for-kotlincollectionslist","text":"Name Summary toCameraUpdate fun List < GeoPoint >.toCameraUpdate(): CameraUpdate","title":"Extensions for kotlin.collections.List"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/kotlin.collections.-list/to-camera-update/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresult / kotlin.collections.List / toCameraUpdate toCameraUpdate fun List < GeoPoint >.toCameraUpdate(): CameraUpdate","title":"To camera update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresult/kotlin.collections.-list/to-camera-update/#tocameraupdate","text":"fun List < GeoPoint >.toCameraUpdate(): CameraUpdate","title":"toCameraUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults Package com.skedgo.tripkit.ui.tripresults Types Name Summary ApplyTintStrategy object ApplyTintStrategy : TransportTintStrategy GetTransportIconTintStrategy open class GetTransportIconTintStrategy GetTransportModePreferencesByRegion open class GetTransportModePreferencesByRegion GroupDiffCallback object GroupDiffCallback : Callback< TripResultViewModel > NoTintStrategy object NoTintStrategy : TransportTintStrategy SortOrders class SortOrders TransportTintStrategy interface TransportTintStrategy TripGroupClassifier class TripGroupClassifier TripGroupsSorter open class TripGroupsSorter TripResultListFragment class TripResultListFragment : AbstractTripKitFragment TripResultListViewModel class TripResultListViewModel : RxViewModel TripResultTransportItemViewModel class TripResultTransportItemViewModel : RxViewModel TripResultViewModel class TripResultViewModel : RxViewModel TripSegmentHelper open class TripSegmentHelper TripSegmentViewModel class TripSegmentViewModel : RxViewModel Properties Name Summary ARG_QUERY const val ARG_QUERY: String ARG_TRANSIT_MODE_FILTER const val ARG_TRANSIT_MODE_FILTER: String ARG_TRANSPORT_MODE_FILTER const val ARG_TRANSPORT_MODE_FILTER: String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/#package-comskedgotripkituitripresults","text":"","title":"Package com.skedgo.tripkit.ui.tripresults"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/#types","text":"Name Summary ApplyTintStrategy object ApplyTintStrategy : TransportTintStrategy GetTransportIconTintStrategy open class GetTransportIconTintStrategy GetTransportModePreferencesByRegion open class GetTransportModePreferencesByRegion GroupDiffCallback object GroupDiffCallback : Callback< TripResultViewModel > NoTintStrategy object NoTintStrategy : TransportTintStrategy SortOrders class SortOrders TransportTintStrategy interface TransportTintStrategy TripGroupClassifier class TripGroupClassifier TripGroupsSorter open class TripGroupsSorter TripResultListFragment class TripResultListFragment : AbstractTripKitFragment TripResultListViewModel class TripResultListViewModel : RxViewModel TripResultTransportItemViewModel class TripResultTransportItemViewModel : RxViewModel TripResultViewModel class TripResultViewModel : RxViewModel TripSegmentHelper open class TripSegmentHelper TripSegmentViewModel class TripSegmentViewModel : RxViewModel","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/#properties","text":"Name Summary ARG_QUERY const val ARG_QUERY: String ARG_TRANSIT_MODE_FILTER const val ARG_TRANSIT_MODE_FILTER: String ARG_TRANSPORT_MODE_FILTER const val ARG_TRANSPORT_MODE_FILTER: String","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-a-r-g_-q-u-e-r-y/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / ARG_QUERY ARG_QUERY const val ARG_QUERY: String","title":" a r g  q u e r y"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-a-r-g_-q-u-e-r-y/#arg_query","text":"const val ARG_QUERY: String","title":"ARG_QUERY"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-a-r-g_-t-r-a-n-s-i-t_-m-o-d-e_-f-i-l-t-e-r/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / ARG_TRANSIT_MODE_FILTER ARG_TRANSIT_MODE_FILTER const val ARG_TRANSIT_MODE_FILTER: String","title":" a r g  t r a n s i t  m o d e  f i l t e r"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-a-r-g_-t-r-a-n-s-i-t_-m-o-d-e_-f-i-l-t-e-r/#arg_transit_mode_filter","text":"const val ARG_TRANSIT_MODE_FILTER: String","title":"ARG_TRANSIT_MODE_FILTER"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-a-r-g_-t-r-a-n-s-p-o-r-t_-m-o-d-e_-f-i-l-t-e-r/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / ARG_TRANSPORT_MODE_FILTER ARG_TRANSPORT_MODE_FILTER const val ARG_TRANSPORT_MODE_FILTER: String","title":" a r g  t r a n s p o r t  m o d e  f i l t e r"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-a-r-g_-t-r-a-n-s-p-o-r-t_-m-o-d-e_-f-i-l-t-e-r/#arg_transport_mode_filter","text":"const val ARG_TRANSPORT_MODE_FILTER: String","title":"ARG_TRANSPORT_MODE_FILTER"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-apply-tint-strategy/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / ApplyTintStrategy ApplyTintStrategy object ApplyTintStrategy : TransportTintStrategy Functions Name Summary apply fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-apply-tint-strategy/#applytintstrategy","text":"object ApplyTintStrategy : TransportTintStrategy","title":"ApplyTintStrategy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-apply-tint-strategy/#functions","text":"Name Summary apply fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-apply-tint-strategy/apply/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / ApplyTintStrategy / apply apply fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable","title":"Apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-apply-tint-strategy/apply/#apply","text":"fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable","title":"apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-icon-tint-strategy/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / GetTransportIconTintStrategy GetTransportIconTintStrategy open class GetTransportIconTintStrategy Constructors Name Summary <init> GetTransportIconTintStrategy(resources: Resources) Functions Name Summary invoke open operator fun invoke(): Single< TransportTintStrategy >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-icon-tint-strategy/#gettransporticontintstrategy","text":"open class GetTransportIconTintStrategy","title":"GetTransportIconTintStrategy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-icon-tint-strategy/#constructors","text":"Name Summary <init> GetTransportIconTintStrategy(resources: Resources)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-icon-tint-strategy/#functions","text":"Name Summary invoke open operator fun invoke(): Single< TransportTintStrategy >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-icon-tint-strategy/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / GetTransportIconTintStrategy / <init> <init> GetTransportIconTintStrategy(resources: Resources)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-icon-tint-strategy/-init-/#init","text":"GetTransportIconTintStrategy(resources: Resources)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-icon-tint-strategy/invoke/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / GetTransportIconTintStrategy / invoke invoke open operator fun invoke(): Single< TransportTintStrategy >","title":"Invoke"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-icon-tint-strategy/invoke/#invoke","text":"open operator fun invoke(): Single< TransportTintStrategy >","title":"invoke"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-mode-preferences-by-region/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / GetTransportModePreferencesByRegion GetTransportModePreferencesByRegion open class GetTransportModePreferencesByRegion Functions Name Summary execute open fun execute(region: Region ): Observable< TransportModePreference >","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-mode-preferences-by-region/#gettransportmodepreferencesbyregion","text":"open class GetTransportModePreferencesByRegion","title":"GetTransportModePreferencesByRegion"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-mode-preferences-by-region/#functions","text":"Name Summary execute open fun execute(region: Region ): Observable< TransportModePreference >","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-mode-preferences-by-region/execute/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / GetTransportModePreferencesByRegion / execute execute open fun execute(region: Region ): Observable< TransportModePreference >","title":"Execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-get-transport-mode-preferences-by-region/execute/#execute","text":"open fun execute(region: Region ): Observable< TransportModePreference >","title":"execute"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-group-diff-callback/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / GroupDiffCallback GroupDiffCallback object GroupDiffCallback : Callback< TripResultViewModel > Functions Name Summary areContentsTheSame fun areContentsTheSame(lhs: TripResultViewModel ?, rhs: TripResultViewModel ?): Boolean areItemsTheSame fun areItemsTheSame(lhs: TripResultViewModel ?, rhs: TripResultViewModel ?): Boolean","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-group-diff-callback/#groupdiffcallback","text":"object GroupDiffCallback : Callback< TripResultViewModel >","title":"GroupDiffCallback"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-group-diff-callback/#functions","text":"Name Summary areContentsTheSame fun areContentsTheSame(lhs: TripResultViewModel ?, rhs: TripResultViewModel ?): Boolean areItemsTheSame fun areItemsTheSame(lhs: TripResultViewModel ?, rhs: TripResultViewModel ?): Boolean","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-group-diff-callback/are-contents-the-same/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / GroupDiffCallback / areContentsTheSame areContentsTheSame fun areContentsTheSame(lhs: TripResultViewModel ?, rhs: TripResultViewModel ?): Boolean","title":"Are contents the same"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-group-diff-callback/are-contents-the-same/#arecontentsthesame","text":"fun areContentsTheSame(lhs: TripResultViewModel ?, rhs: TripResultViewModel ?): Boolean","title":"areContentsTheSame"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-group-diff-callback/are-items-the-same/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / GroupDiffCallback / areItemsTheSame areItemsTheSame fun areItemsTheSame(lhs: TripResultViewModel ?, rhs: TripResultViewModel ?): Boolean","title":"Are items the same"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-group-diff-callback/are-items-the-same/#areitemsthesame","text":"fun areItemsTheSame(lhs: TripResultViewModel ?, rhs: TripResultViewModel ?): Boolean","title":"areItemsTheSame"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-no-tint-strategy/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / NoTintStrategy NoTintStrategy object NoTintStrategy : TransportTintStrategy Functions Name Summary apply fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-no-tint-strategy/#notintstrategy","text":"object NoTintStrategy : TransportTintStrategy","title":"NoTintStrategy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-no-tint-strategy/#functions","text":"Name Summary apply fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-no-tint-strategy/apply/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / NoTintStrategy / apply apply fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable","title":"Apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-no-tint-strategy/apply/#apply","text":"fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable","title":"apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / SortOrders SortOrders class SortOrders Properties Name Summary SORT_ORDER_ARRIVAL static val SORT_ORDER_ARRIVAL: Int SORT_ORDER_DEPARTURE static val SORT_ORDER_DEPARTURE: Int SORT_ORDER_DURATION static val SORT_ORDER_DURATION: Int SORT_ORDER_PREFERRED static val SORT_ORDER_PREFERRED: Int SORT_ORDER_PRICE static val SORT_ORDER_PRICE: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/#sortorders","text":"class SortOrders","title":"SortOrders"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/#properties","text":"Name Summary SORT_ORDER_ARRIVAL static val SORT_ORDER_ARRIVAL: Int SORT_ORDER_DEPARTURE static val SORT_ORDER_DEPARTURE: Int SORT_ORDER_DURATION static val SORT_ORDER_DURATION: Int SORT_ORDER_PREFERRED static val SORT_ORDER_PREFERRED: Int SORT_ORDER_PRICE static val SORT_ORDER_PRICE: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/-s-o-r-t_-o-r-d-e-r_-a-r-r-i-v-a-l/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / SortOrders / SORT_ORDER_ARRIVAL SORT_ORDER_ARRIVAL static val SORT_ORDER_ARRIVAL: Int","title":" s o r t  o r d e r  a r r i v a l"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/-s-o-r-t_-o-r-d-e-r_-a-r-r-i-v-a-l/#sort_order_arrival","text":"static val SORT_ORDER_ARRIVAL: Int","title":"SORT_ORDER_ARRIVAL"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/-s-o-r-t_-o-r-d-e-r_-d-e-p-a-r-t-u-r-e/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / SortOrders / SORT_ORDER_DEPARTURE SORT_ORDER_DEPARTURE static val SORT_ORDER_DEPARTURE: Int","title":" s o r t  o r d e r  d e p a r t u r e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/-s-o-r-t_-o-r-d-e-r_-d-e-p-a-r-t-u-r-e/#sort_order_departure","text":"static val SORT_ORDER_DEPARTURE: Int","title":"SORT_ORDER_DEPARTURE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/-s-o-r-t_-o-r-d-e-r_-d-u-r-a-t-i-o-n/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / SortOrders / SORT_ORDER_DURATION SORT_ORDER_DURATION static val SORT_ORDER_DURATION: Int","title":" s o r t  o r d e r  d u r a t i o n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/-s-o-r-t_-o-r-d-e-r_-d-u-r-a-t-i-o-n/#sort_order_duration","text":"static val SORT_ORDER_DURATION: Int","title":"SORT_ORDER_DURATION"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/-s-o-r-t_-o-r-d-e-r_-p-r-e-f-e-r-r-e-d/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / SortOrders / SORT_ORDER_PREFERRED SORT_ORDER_PREFERRED static val SORT_ORDER_PREFERRED: Int","title":" s o r t  o r d e r  p r e f e r r e d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/-s-o-r-t_-o-r-d-e-r_-p-r-e-f-e-r-r-e-d/#sort_order_preferred","text":"static val SORT_ORDER_PREFERRED: Int","title":"SORT_ORDER_PREFERRED"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/-s-o-r-t_-o-r-d-e-r_-p-r-i-c-e/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / SortOrders / SORT_ORDER_PRICE SORT_ORDER_PRICE static val SORT_ORDER_PRICE: Int","title":" s o r t  o r d e r  p r i c e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-sort-orders/-s-o-r-t_-o-r-d-e-r_-p-r-i-c-e/#sort_order_price","text":"static val SORT_ORDER_PRICE: Int","title":"SORT_ORDER_PRICE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-transport-tint-strategy/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TransportTintStrategy TransportTintStrategy interface TransportTintStrategy Functions Name Summary apply abstract fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable Inheritors Name Summary ApplyTintStrategy object ApplyTintStrategy : TransportTintStrategy NoTintStrategy object NoTintStrategy : TransportTintStrategy","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-transport-tint-strategy/#transporttintstrategy","text":"interface TransportTintStrategy","title":"TransportTintStrategy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-transport-tint-strategy/#functions","text":"Name Summary apply abstract fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-transport-tint-strategy/#inheritors","text":"Name Summary ApplyTintStrategy object ApplyTintStrategy : TransportTintStrategy NoTintStrategy object NoTintStrategy : TransportTintStrategy","title":"Inheritors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-transport-tint-strategy/apply/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TransportTintStrategy / apply apply abstract fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable","title":"Apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-transport-tint-strategy/apply/#apply","text":"abstract fun apply(remoteIconIsTemplate: Boolean , serviceColor: ServiceColor ?, drawable: Drawable): Drawable","title":"apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier TripGroupClassifier class TripGroupClassifier Types Name Summary Classification enum class Classification Constructors Name Summary <init> TripGroupClassifier(tripGroups: List < TripGroup >) Properties Name Summary first var FloatArray .first: Float second var FloatArray .second: Float Functions Name Summary classify fun classify(tripGroup: TripGroup ): Classification","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/#tripgroupclassifier","text":"class TripGroupClassifier","title":"TripGroupClassifier"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/#types","text":"Name Summary Classification enum class Classification","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/#constructors","text":"Name Summary <init> TripGroupClassifier(tripGroups: List < TripGroup >)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/#properties","text":"Name Summary first var FloatArray .first: Float second var FloatArray .second: Float","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/#functions","text":"Name Summary classify fun classify(tripGroup: TripGroup ): Classification","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / <init> <init> TripGroupClassifier(tripGroups: List < TripGroup >)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-init-/#init","text":"TripGroupClassifier(tripGroups: List < TripGroup >)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/classify/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / classify classify fun classify(tripGroup: TripGroup ): Classification","title":"Classify"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/classify/#classify","text":"fun classify(tripGroup: TripGroup ): Classification","title":"classify"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/first/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / first first var FloatArray .first: Float","title":"First"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/first/#first","text":"var FloatArray .first: Float","title":"first"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/second/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / second second var FloatArray .second: Float","title":"Second"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/second/#second","text":"var FloatArray .second: Float","title":"second"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / Classification Classification enum class Classification Enum Values Name Summary NONE RECOMMENDED CHEAPEST FASTEST EASIEST HEALTHIEST GREENEST","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/#classification","text":"enum class Classification","title":"Classification"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/#enum-values","text":"Name Summary NONE RECOMMENDED CHEAPEST FASTEST EASIEST HEALTHIEST GREENEST","title":"Enum Values"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-c-h-e-a-p-e-s-t/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / Classification / CHEAPEST CHEAPEST CHEAPEST","title":" c h e a p e s t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-c-h-e-a-p-e-s-t/#cheapest","text":"CHEAPEST","title":"CHEAPEST"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-e-a-s-i-e-s-t/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / Classification / EASIEST EASIEST EASIEST","title":" e a s i e s t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-e-a-s-i-e-s-t/#easiest","text":"EASIEST","title":"EASIEST"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-f-a-s-t-e-s-t/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / Classification / FASTEST FASTEST FASTEST","title":" f a s t e s t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-f-a-s-t-e-s-t/#fastest","text":"FASTEST","title":"FASTEST"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-g-r-e-e-n-e-s-t/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / Classification / GREENEST GREENEST GREENEST","title":" g r e e n e s t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-g-r-e-e-n-e-s-t/#greenest","text":"GREENEST","title":"GREENEST"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-h-e-a-l-t-h-i-e-s-t/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / Classification / HEALTHIEST HEALTHIEST HEALTHIEST","title":" h e a l t h i e s t"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-h-e-a-l-t-h-i-e-s-t/#healthiest","text":"HEALTHIEST","title":"HEALTHIEST"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-n-o-n-e/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / Classification / NONE NONE NONE","title":" n o n e"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-n-o-n-e/#none","text":"NONE","title":"NONE"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-r-e-c-o-m-m-e-n-d-e-d/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupClassifier / Classification / RECOMMENDED RECOMMENDED RECOMMENDED","title":" r e c o m m e n d e d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-group-classifier/-classification/-r-e-c-o-m-m-e-n-d-e-d/#recommended","text":"RECOMMENDED","title":"RECOMMENDED"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-groups-sorter/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupsSorter TripGroupsSorter open class TripGroupsSorter Functions Name Summary checkViolationInvisible fun checkViolationInvisible(modeIds: List < String >, removalModeIdSet: HashSet < String >): Boolean getMinimizedModeIdsWithoutWalking fun getMinimizedModeIdsWithoutWalking(minimizedModeIds: List < String >): HashSet < String > sort open fun sort(sortOrder: Int , groups: List < TripGroup >?, willArriveBy: Boolean ): Unit updateTripGroupVisibilities open fun updateTripGroupVisibilities(tripGroups: MutableList < TripGroup >, modePreferences: List < TransportModePreference >): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-groups-sorter/#tripgroupssorter","text":"open class TripGroupsSorter","title":"TripGroupsSorter"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-groups-sorter/#functions","text":"Name Summary checkViolationInvisible fun checkViolationInvisible(modeIds: List < String >, removalModeIdSet: HashSet < String >): Boolean getMinimizedModeIdsWithoutWalking fun getMinimizedModeIdsWithoutWalking(minimizedModeIds: List < String >): HashSet < String > sort open fun sort(sortOrder: Int , groups: List < TripGroup >?, willArriveBy: Boolean ): Unit updateTripGroupVisibilities open fun updateTripGroupVisibilities(tripGroups: MutableList < TripGroup >, modePreferences: List < TransportModePreference >): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-groups-sorter/check-violation-invisible/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupsSorter / checkViolationInvisible checkViolationInvisible fun checkViolationInvisible(modeIds: List < String >, removalModeIdSet: HashSet < String >): Boolean","title":"Check violation invisible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-groups-sorter/check-violation-invisible/#checkviolationinvisible","text":"fun checkViolationInvisible(modeIds: List < String >, removalModeIdSet: HashSet < String >): Boolean","title":"checkViolationInvisible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-groups-sorter/get-minimized-mode-ids-without-walking/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupsSorter / getMinimizedModeIdsWithoutWalking getMinimizedModeIdsWithoutWalking fun getMinimizedModeIdsWithoutWalking(minimizedModeIds: List < String >): HashSet < String >","title":"Get minimized mode ids without walking"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-groups-sorter/get-minimized-mode-ids-without-walking/#getminimizedmodeidswithoutwalking","text":"fun getMinimizedModeIdsWithoutWalking(minimizedModeIds: List < String >): HashSet < String >","title":"getMinimizedModeIdsWithoutWalking"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-groups-sorter/sort/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupsSorter / sort sort open fun sort(sortOrder: Int , groups: List < TripGroup >?, willArriveBy: Boolean ): Unit","title":"Sort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-groups-sorter/sort/#sort","text":"open fun sort(sortOrder: Int , groups: List < TripGroup >?, willArriveBy: Boolean ): Unit","title":"sort"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-groups-sorter/update-trip-group-visibilities/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripGroupsSorter / updateTripGroupVisibilities updateTripGroupVisibilities open fun updateTripGroupVisibilities(tripGroups: MutableList < TripGroup >, modePreferences: List < TransportModePreference >): Unit","title":"Update trip group visibilities"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-groups-sorter/update-trip-group-visibilities/#updatetripgroupvisibilities","text":"open fun updateTripGroupVisibilities(tripGroups: MutableList < TripGroup >, modePreferences: List < TransportModePreference >): Unit","title":"updateTripGroupVisibilities"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment TripResultListFragment class TripResultListFragment : AbstractTripKitFragment Types Name Summary Builder class Builder OnLocationClickListener interface OnLocationClickListener OnTripSelectedListener This callback will be invoked when a search result is clicked. interface OnTripSelectedListener Constructors Name Summary <init> TripResultListFragment() Properties Name Summary binding lateinit var binding: <ERROR CLASS> shouldShowMoreButton var shouldShowMoreButton: Boolean viewModel lateinit var viewModel: TripResultListViewModel Functions Name Summary onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit onAttach fun onAttach(context: Context): Unit onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? onViewCreated fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit query fun query(): Query setOnLocationClickListener fun setOnLocationClickListener(listener: OnLocationClickListener): Unit fun setOnLocationClickListener(startLocationClicked: () -> Unit , destinationLocationClicked: () -> Unit ): Unit setOnTripSelectedListener fun setOnTripSelectedListener(callback: OnTripSelectedListener): Unit fun setOnTripSelectedListener(callback: (ViewTrip) -> Unit ): Unit setQuery fun setQuery(query: Query ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/#tripresultlistfragment","text":"class TripResultListFragment : AbstractTripKitFragment","title":"TripResultListFragment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/#types","text":"Name Summary Builder class Builder OnLocationClickListener interface OnLocationClickListener OnTripSelectedListener This callback will be invoked when a search result is clicked. interface OnTripSelectedListener","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/#constructors","text":"Name Summary <init> TripResultListFragment()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/#properties","text":"Name Summary binding lateinit var binding: <ERROR CLASS> shouldShowMoreButton var shouldShowMoreButton: Boolean viewModel lateinit var viewModel: TripResultListViewModel","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/#functions","text":"Name Summary onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit onAttach fun onAttach(context: Context): Unit onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? onViewCreated fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit query fun query(): Query setOnLocationClickListener fun setOnLocationClickListener(listener: OnLocationClickListener): Unit fun setOnLocationClickListener(startLocationClicked: () -> Unit , destinationLocationClicked: () -> Unit ): Unit setOnTripSelectedListener fun setOnTripSelectedListener(callback: OnTripSelectedListener): Unit fun setOnTripSelectedListener(callback: (ViewTrip) -> Unit ): Unit setQuery fun setQuery(query: Query ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / <init> <init> TripResultListFragment()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-init-/#init","text":"TripResultListFragment()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/binding/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / binding binding lateinit var binding: <ERROR CLASS>","title":"Binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/binding/#binding","text":"lateinit var binding: <ERROR CLASS>","title":"binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/on-activity-created/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / onActivityCreated onActivityCreated fun onActivityCreated(savedInstanceState: Bundle?): Unit","title":"On activity created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/on-activity-created/#onactivitycreated","text":"fun onActivityCreated(savedInstanceState: Bundle?): Unit","title":"onActivityCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/on-attach/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / onAttach onAttach fun onAttach(context: Context): Unit","title":"On attach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/on-attach/#onattach","text":"fun onAttach(context: Context): Unit","title":"onAttach"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/on-create-view/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / onCreateView onCreateView fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","title":"On create view"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/on-create-view/#oncreateview","text":"fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?","title":"onCreateView"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/on-view-created/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / onViewCreated onViewCreated fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"On view created"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/on-view-created/#onviewcreated","text":"fun onViewCreated(view: View, savedInstanceState: Bundle?): Unit","title":"onViewCreated"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/query/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / query query fun query(): Query","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/query/#query","text":"fun query(): Query","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/set-on-location-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / setOnLocationClickListener setOnLocationClickListener fun setOnLocationClickListener(listener: OnLocationClickListener): Unit fun setOnLocationClickListener(startLocationClicked: () -> Unit , destinationLocationClicked: () -> Unit ): Unit","title":"Set on location click listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/set-on-location-click-listener/#setonlocationclicklistener","text":"fun setOnLocationClickListener(listener: OnLocationClickListener): Unit fun setOnLocationClickListener(startLocationClicked: () -> Unit , destinationLocationClicked: () -> Unit ): Unit","title":"setOnLocationClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/set-on-trip-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / setOnTripSelectedListener setOnTripSelectedListener fun setOnTripSelectedListener(callback: OnTripSelectedListener): Unit fun setOnTripSelectedListener(callback: (ViewTrip) -> Unit ): Unit","title":"Set on trip selected listener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/set-on-trip-selected-listener/#setontripselectedlistener","text":"fun setOnTripSelectedListener(callback: OnTripSelectedListener): Unit fun setOnTripSelectedListener(callback: (ViewTrip) -> Unit ): Unit","title":"setOnTripSelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/set-query/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / setQuery setQuery fun setQuery(query: Query ): Unit","title":"Set query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/set-query/#setquery","text":"fun setQuery(query: Query ): Unit","title":"setQuery"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/should-show-more-button/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / shouldShowMoreButton shouldShowMoreButton var shouldShowMoreButton: Boolean","title":"Should show more button"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/should-show-more-button/#shouldshowmorebutton","text":"var shouldShowMoreButton: Boolean","title":"shouldShowMoreButton"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / viewModel viewModel lateinit var viewModel: TripResultListViewModel","title":"View model"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/view-model/#viewmodel","text":"lateinit var viewModel: TripResultListViewModel","title":"viewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-builder/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / Builder Builder class Builder Constructors Name Summary <init> Builder() Functions Name Summary build fun build(): TripResultListFragment withQuery fun withQuery(query: Query ): Builder","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-builder/#builder","text":"class Builder","title":"Builder"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-builder/#constructors","text":"Name Summary <init> Builder()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-builder/#functions","text":"Name Summary build fun build(): TripResultListFragment withQuery fun withQuery(query: Query ): Builder","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-builder/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / Builder / <init> <init> Builder()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-builder/-init-/#init","text":"Builder()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-builder/build/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / Builder / build build fun build(): TripResultListFragment","title":"Build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-builder/build/#build","text":"fun build(): TripResultListFragment","title":"build"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-builder/with-query/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / Builder / withQuery withQuery fun withQuery(query: Query ): Builder","title":"With query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-builder/with-query/#withquery","text":"fun withQuery(query: Query ): Builder","title":"withQuery"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-location-click-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / OnLocationClickListener OnLocationClickListener interface OnLocationClickListener Functions Name Summary onDestinationLocationClicked abstract fun onDestinationLocationClicked(): Unit onStartLocationClicked abstract fun onStartLocationClicked(): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-location-click-listener/#onlocationclicklistener","text":"interface OnLocationClickListener","title":"OnLocationClickListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-location-click-listener/#functions","text":"Name Summary onDestinationLocationClicked abstract fun onDestinationLocationClicked(): Unit onStartLocationClicked abstract fun onStartLocationClicked(): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-location-click-listener/on-destination-location-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / OnLocationClickListener / onDestinationLocationClicked onDestinationLocationClicked abstract fun onDestinationLocationClicked(): Unit","title":"On destination location clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-location-click-listener/on-destination-location-clicked/#ondestinationlocationclicked","text":"abstract fun onDestinationLocationClicked(): Unit","title":"onDestinationLocationClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-location-click-listener/on-start-location-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / OnLocationClickListener / onStartLocationClicked onStartLocationClicked abstract fun onStartLocationClicked(): Unit","title":"On start location clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-location-click-listener/on-start-location-clicked/#onstartlocationclicked","text":"abstract fun onStartLocationClicked(): Unit","title":"onStartLocationClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-trip-selected-listener/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / OnTripSelectedListener OnTripSelectedListener interface OnTripSelectedListener This callback will be invoked when a search result is clicked. Functions Name Summary onTripSelected abstract fun onTripSelected(viewTrip: ViewTrip): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-trip-selected-listener/#ontripselectedlistener","text":"interface OnTripSelectedListener This callback will be invoked when a search result is clicked.","title":"OnTripSelectedListener"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-trip-selected-listener/#functions","text":"Name Summary onTripSelected abstract fun onTripSelected(viewTrip: ViewTrip): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-trip-selected-listener/on-trip-selected/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListFragment / OnTripSelectedListener / onTripSelected onTripSelected abstract fun onTripSelected(viewTrip: ViewTrip): Unit","title":"On trip selected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-fragment/-on-trip-selected-listener/on-trip-selected/#ontripselected","text":"abstract fun onTripSelected(viewTrip: ViewTrip): Unit","title":"onTripSelected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel TripResultListViewModel class TripResultListViewModel : RxViewModel Constructors Name Summary <init> TripResultListViewModel(context: Context, tripGroupRepository: TripGroupRepository, routingStatusRepositoryLazy: Lazy< RoutingStatusRepository >, tripResultViewModelProvider: Provider< TripResultViewModel >, getSortedTripGroupsWithRoutingStatusProvider: Provider< GetSortedTripGroupsWithRoutingStatus >, tripResultTransportItemViewModelProvider: Provider< TripResultTransportItemViewModel >, regionService: RegionService , routeService: RouteService , transitModeFilter: TransitModeFilter , errorLogger: ErrorLogger , getTransportModePreferencesByRegion: GetTransportModePreferencesByRegion , sorterProvider: Provider< TripGroupsSorter >, isModeIncludedInTripsRepository: IsModeIncludedInTripsRepository, performRouting: PerformRouting , routingTimeViewModelMapper: RoutingTimeViewModelMapper ) Properties Name Summary fromName val fromName: ObservableField< String > isLoading val isLoading: ObservableBoolean itemBinding val itemBinding: ItemBinding< TripResultViewModel !> onItemClicked val onItemClicked: PublishRelay<ViewTrip!> query lateinit var query: Query results val results: DiffObservableList< TripResultViewModel > showTransport val showTransport: ObservableBoolean timeLabel val timeLabel: ObservableField< String > toName val toName: ObservableField< String > transportBinding val transportBinding: ItemBinding< TripResultTransportItemViewModel !> transportModes val transportModes: ObservableField< List < TripResultTransportItemViewModel >> Functions Name Summary changeQuery fun changeQuery(newQuery: Query ): Unit getTransport fun getTransport(): Unit load fun load(): Unit loadFromStore fun loadFromStore(): Unit reload fun reload(): Unit setTimeLabel fun setTimeLabel(): Unit setup fun setup(_query: Query ): Unit transportLayoutClicked fun transportLayoutClicked(view: View): Unit updateQueryTime fun updateQueryTime(timeTag: TimeTag ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/#tripresultlistviewmodel","text":"class TripResultListViewModel : RxViewModel","title":"TripResultListViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/#constructors","text":"Name Summary <init> TripResultListViewModel(context: Context, tripGroupRepository: TripGroupRepository, routingStatusRepositoryLazy: Lazy< RoutingStatusRepository >, tripResultViewModelProvider: Provider< TripResultViewModel >, getSortedTripGroupsWithRoutingStatusProvider: Provider< GetSortedTripGroupsWithRoutingStatus >, tripResultTransportItemViewModelProvider: Provider< TripResultTransportItemViewModel >, regionService: RegionService , routeService: RouteService , transitModeFilter: TransitModeFilter , errorLogger: ErrorLogger , getTransportModePreferencesByRegion: GetTransportModePreferencesByRegion , sorterProvider: Provider< TripGroupsSorter >, isModeIncludedInTripsRepository: IsModeIncludedInTripsRepository, performRouting: PerformRouting , routingTimeViewModelMapper: RoutingTimeViewModelMapper )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/#properties","text":"Name Summary fromName val fromName: ObservableField< String > isLoading val isLoading: ObservableBoolean itemBinding val itemBinding: ItemBinding< TripResultViewModel !> onItemClicked val onItemClicked: PublishRelay<ViewTrip!> query lateinit var query: Query results val results: DiffObservableList< TripResultViewModel > showTransport val showTransport: ObservableBoolean timeLabel val timeLabel: ObservableField< String > toName val toName: ObservableField< String > transportBinding val transportBinding: ItemBinding< TripResultTransportItemViewModel !> transportModes val transportModes: ObservableField< List < TripResultTransportItemViewModel >>","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/#functions","text":"Name Summary changeQuery fun changeQuery(newQuery: Query ): Unit getTransport fun getTransport(): Unit load fun load(): Unit loadFromStore fun loadFromStore(): Unit reload fun reload(): Unit setTimeLabel fun setTimeLabel(): Unit setup fun setup(_query: Query ): Unit transportLayoutClicked fun transportLayoutClicked(view: View): Unit updateQueryTime fun updateQueryTime(timeTag: TimeTag ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / <init> <init> TripResultListViewModel(context: Context, tripGroupRepository: TripGroupRepository, routingStatusRepositoryLazy: Lazy< RoutingStatusRepository >, tripResultViewModelProvider: Provider< TripResultViewModel >, getSortedTripGroupsWithRoutingStatusProvider: Provider< GetSortedTripGroupsWithRoutingStatus >, tripResultTransportItemViewModelProvider: Provider< TripResultTransportItemViewModel >, regionService: RegionService , routeService: RouteService , transitModeFilter: TransitModeFilter , errorLogger: ErrorLogger , getTransportModePreferencesByRegion: GetTransportModePreferencesByRegion , sorterProvider: Provider< TripGroupsSorter >, isModeIncludedInTripsRepository: IsModeIncludedInTripsRepository, performRouting: PerformRouting , routingTimeViewModelMapper: RoutingTimeViewModelMapper )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/-init-/#init","text":"TripResultListViewModel(context: Context, tripGroupRepository: TripGroupRepository, routingStatusRepositoryLazy: Lazy< RoutingStatusRepository >, tripResultViewModelProvider: Provider< TripResultViewModel >, getSortedTripGroupsWithRoutingStatusProvider: Provider< GetSortedTripGroupsWithRoutingStatus >, tripResultTransportItemViewModelProvider: Provider< TripResultTransportItemViewModel >, regionService: RegionService , routeService: RouteService , transitModeFilter: TransitModeFilter , errorLogger: ErrorLogger , getTransportModePreferencesByRegion: GetTransportModePreferencesByRegion , sorterProvider: Provider< TripGroupsSorter >, isModeIncludedInTripsRepository: IsModeIncludedInTripsRepository, performRouting: PerformRouting , routingTimeViewModelMapper: RoutingTimeViewModelMapper )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/change-query/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / changeQuery changeQuery fun changeQuery(newQuery: Query ): Unit","title":"Change query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/change-query/#changequery","text":"fun changeQuery(newQuery: Query ): Unit","title":"changeQuery"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/from-name/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / fromName fromName val fromName: ObservableField< String >","title":"From name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/from-name/#fromname","text":"val fromName: ObservableField< String >","title":"fromName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/get-transport/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / getTransport getTransport fun getTransport(): Unit","title":"Get transport"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/get-transport/#gettransport","text":"fun getTransport(): Unit","title":"getTransport"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/is-loading/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / isLoading isLoading val isLoading: ObservableBoolean","title":"Is loading"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/is-loading/#isloading","text":"val isLoading: ObservableBoolean","title":"isLoading"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/item-binding/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / itemBinding itemBinding val itemBinding: ItemBinding< TripResultViewModel !>","title":"Item binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/item-binding/#itembinding","text":"val itemBinding: ItemBinding< TripResultViewModel !>","title":"itemBinding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/load-from-store/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / loadFromStore loadFromStore fun loadFromStore(): Unit","title":"Load from store"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/load-from-store/#loadfromstore","text":"fun loadFromStore(): Unit","title":"loadFromStore"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/load/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / load load fun load(): Unit","title":"Load"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/load/#load","text":"fun load(): Unit","title":"load"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/on-item-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / onItemClicked onItemClicked val onItemClicked: PublishRelay<ViewTrip!>","title":"On item clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/on-item-clicked/#onitemclicked","text":"val onItemClicked: PublishRelay<ViewTrip!>","title":"onItemClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/query/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / query query lateinit var query: Query","title":"Query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/query/#query","text":"lateinit var query: Query","title":"query"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/reload/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / reload reload fun reload(): Unit","title":"Reload"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/reload/#reload","text":"fun reload(): Unit","title":"reload"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/results/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / results results val results: DiffObservableList< TripResultViewModel >","title":"Results"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/results/#results","text":"val results: DiffObservableList< TripResultViewModel >","title":"results"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/set-time-label/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / setTimeLabel setTimeLabel fun setTimeLabel(): Unit","title":"Set time label"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/set-time-label/#settimelabel","text":"fun setTimeLabel(): Unit","title":"setTimeLabel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/setup/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / setup setup fun setup(_query: Query ): Unit","title":"Setup"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/setup/#setup","text":"fun setup(_query: Query ): Unit","title":"setup"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/show-transport/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / showTransport showTransport val showTransport: ObservableBoolean","title":"Show transport"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/show-transport/#showtransport","text":"val showTransport: ObservableBoolean","title":"showTransport"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/time-label/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / timeLabel timeLabel val timeLabel: ObservableField< String >","title":"Time label"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/time-label/#timelabel","text":"val timeLabel: ObservableField< String >","title":"timeLabel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/to-name/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / toName toName val toName: ObservableField< String >","title":"To name"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/to-name/#toname","text":"val toName: ObservableField< String >","title":"toName"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/transport-binding/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / transportBinding transportBinding val transportBinding: ItemBinding< TripResultTransportItemViewModel !>","title":"Transport binding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/transport-binding/#transportbinding","text":"val transportBinding: ItemBinding< TripResultTransportItemViewModel !>","title":"transportBinding"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/transport-layout-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / transportLayoutClicked transportLayoutClicked fun transportLayoutClicked(view: View): Unit","title":"Transport layout clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/transport-layout-clicked/#transportlayoutclicked","text":"fun transportLayoutClicked(view: View): Unit","title":"transportLayoutClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/transport-modes/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / transportModes transportModes val transportModes: ObservableField< List < TripResultTransportItemViewModel >>","title":"Transport modes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/transport-modes/#transportmodes","text":"val transportModes: ObservableField< List < TripResultTransportItemViewModel >>","title":"transportModes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/update-query-time/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultListViewModel / updateQueryTime updateQueryTime fun updateQueryTime(timeTag: TimeTag ): Unit","title":"Update query time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-list-view-model/update-query-time/#updatequerytime","text":"fun updateQueryTime(timeTag: TimeTag ): Unit","title":"updateQueryTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultTransportItemViewModel TripResultTransportItemViewModel class TripResultTransportItemViewModel : RxViewModel Constructors Name Summary <init> TripResultTransportItemViewModel() Properties Name Summary checked val checked: ObservableBoolean clicked val clicked: PublishRelay< Pair < String , Boolean >> modeIconId val modeIconId: ObservableField< String > modeId val modeId: ObservableField< String > Functions Name Summary onItemClick fun onItemClick(view: View): Unit setup fun setup(mode: TransportMode ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/#tripresulttransportitemviewmodel","text":"class TripResultTransportItemViewModel : RxViewModel","title":"TripResultTransportItemViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/#constructors","text":"Name Summary <init> TripResultTransportItemViewModel()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/#properties","text":"Name Summary checked val checked: ObservableBoolean clicked val clicked: PublishRelay< Pair < String , Boolean >> modeIconId val modeIconId: ObservableField< String > modeId val modeId: ObservableField< String >","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/#functions","text":"Name Summary onItemClick fun onItemClick(view: View): Unit setup fun setup(mode: TransportMode ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultTransportItemViewModel / <init> <init> TripResultTransportItemViewModel()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/-init-/#init","text":"TripResultTransportItemViewModel()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/checked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultTransportItemViewModel / checked checked val checked: ObservableBoolean","title":"Checked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/checked/#checked","text":"val checked: ObservableBoolean","title":"checked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultTransportItemViewModel / clicked clicked val clicked: PublishRelay< Pair < String , Boolean >>","title":"Clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/clicked/#clicked","text":"val clicked: PublishRelay< Pair < String , Boolean >>","title":"clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/mode-icon-id/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultTransportItemViewModel / modeIconId modeIconId val modeIconId: ObservableField< String >","title":"Mode icon id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/mode-icon-id/#modeiconid","text":"val modeIconId: ObservableField< String >","title":"modeIconId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/mode-id/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultTransportItemViewModel / modeId modeId val modeId: ObservableField< String >","title":"Mode id"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/mode-id/#modeid","text":"val modeId: ObservableField< String >","title":"modeId"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/on-item-click/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultTransportItemViewModel / onItemClick onItemClick fun onItemClick(view: View): Unit","title":"On item click"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/on-item-click/#onitemclick","text":"fun onItemClick(view: View): Unit","title":"onItemClick"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/setup/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultTransportItemViewModel / setup setup fun setup(mode: TransportMode ): Unit","title":"Setup"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-transport-item-view-model/setup/#setup","text":"fun setup(mode: TransportMode ): Unit","title":"setup"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel TripResultViewModel class TripResultViewModel : RxViewModel Constructors Name Summary <init> TripResultViewModel(context: Context, tripSegmentHelper: TripSegmentHelper , printTime: PrintTime , resources: Resources) Properties Name Summary alternateSegments val alternateSegments: ArrayList < TripSegmentViewModel > alternateSubtitle val alternateSubtitle: ObservableField< String > alternateTitle val alternateTitle: ObservableField< String > alternateTitleVisible val alternateTitleVisible: ObservableBoolean alternateTripVisible val alternateTripVisible: ObservableBoolean badgeDrawable val badgeDrawable: ObservableField<Drawable> badgeText val badgeText: ObservableField< String > badgeTextColor val badgeTextColor: ObservableInt badgeVisible val badgeVisible: ObservableBoolean cost val cost: ObservableField< String > costVisible val costVisible: ObservableBoolean group lateinit var group: TripGroup moreButtonText val moreButtonText: ObservableField< String > moreButtonVisible val moreButtonVisible: ObservableBoolean onItemClicked val onItemClicked: TapAction < TripResultViewModel > onMoreButtonClicked val onMoreButtonClicked: TapAction < TripResultViewModel > otherTripGroups var otherTripGroups: List < Trip >? segments val segments: ArrayList < TripSegmentViewModel > subtitle val subtitle: ObservableField< String > title val title: ObservableField< String > titleVisible val titleVisible: ObservableBoolean trip lateinit var trip: Trip Functions Name Summary moreButtonClicked fun moreButtonClicked(): Unit setTripGroup fun setTripGroup(context: Context, tripgroup: TripGroup , classification: Classification): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/#tripresultviewmodel","text":"class TripResultViewModel : RxViewModel","title":"TripResultViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/#constructors","text":"Name Summary <init> TripResultViewModel(context: Context, tripSegmentHelper: TripSegmentHelper , printTime: PrintTime , resources: Resources)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/#properties","text":"Name Summary alternateSegments val alternateSegments: ArrayList < TripSegmentViewModel > alternateSubtitle val alternateSubtitle: ObservableField< String > alternateTitle val alternateTitle: ObservableField< String > alternateTitleVisible val alternateTitleVisible: ObservableBoolean alternateTripVisible val alternateTripVisible: ObservableBoolean badgeDrawable val badgeDrawable: ObservableField<Drawable> badgeText val badgeText: ObservableField< String > badgeTextColor val badgeTextColor: ObservableInt badgeVisible val badgeVisible: ObservableBoolean cost val cost: ObservableField< String > costVisible val costVisible: ObservableBoolean group lateinit var group: TripGroup moreButtonText val moreButtonText: ObservableField< String > moreButtonVisible val moreButtonVisible: ObservableBoolean onItemClicked val onItemClicked: TapAction < TripResultViewModel > onMoreButtonClicked val onMoreButtonClicked: TapAction < TripResultViewModel > otherTripGroups var otherTripGroups: List < Trip >? segments val segments: ArrayList < TripSegmentViewModel > subtitle val subtitle: ObservableField< String > title val title: ObservableField< String > titleVisible val titleVisible: ObservableBoolean trip lateinit var trip: Trip","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/#functions","text":"Name Summary moreButtonClicked fun moreButtonClicked(): Unit setTripGroup fun setTripGroup(context: Context, tripgroup: TripGroup , classification: Classification): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / <init> <init> TripResultViewModel(context: Context, tripSegmentHelper: TripSegmentHelper , printTime: PrintTime , resources: Resources)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/-init-/#init","text":"TripResultViewModel(context: Context, tripSegmentHelper: TripSegmentHelper , printTime: PrintTime , resources: Resources)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/alternate-segments/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / alternateSegments alternateSegments val alternateSegments: ArrayList < TripSegmentViewModel >","title":"Alternate segments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/alternate-segments/#alternatesegments","text":"val alternateSegments: ArrayList < TripSegmentViewModel >","title":"alternateSegments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/alternate-subtitle/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / alternateSubtitle alternateSubtitle val alternateSubtitle: ObservableField< String >","title":"Alternate subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/alternate-subtitle/#alternatesubtitle","text":"val alternateSubtitle: ObservableField< String >","title":"alternateSubtitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/alternate-title-visible/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / alternateTitleVisible alternateTitleVisible val alternateTitleVisible: ObservableBoolean","title":"Alternate title visible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/alternate-title-visible/#alternatetitlevisible","text":"val alternateTitleVisible: ObservableBoolean","title":"alternateTitleVisible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/alternate-title/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / alternateTitle alternateTitle val alternateTitle: ObservableField< String >","title":"Alternate title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/alternate-title/#alternatetitle","text":"val alternateTitle: ObservableField< String >","title":"alternateTitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/alternate-trip-visible/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / alternateTripVisible alternateTripVisible val alternateTripVisible: ObservableBoolean","title":"Alternate trip visible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/alternate-trip-visible/#alternatetripvisible","text":"val alternateTripVisible: ObservableBoolean","title":"alternateTripVisible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/badge-drawable/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / badgeDrawable badgeDrawable val badgeDrawable: ObservableField<Drawable>","title":"Badge drawable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/badge-drawable/#badgedrawable","text":"val badgeDrawable: ObservableField<Drawable>","title":"badgeDrawable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/badge-text-color/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / badgeTextColor badgeTextColor val badgeTextColor: ObservableInt","title":"Badge text color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/badge-text-color/#badgetextcolor","text":"val badgeTextColor: ObservableInt","title":"badgeTextColor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/badge-text/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / badgeText badgeText val badgeText: ObservableField< String >","title":"Badge text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/badge-text/#badgetext","text":"val badgeText: ObservableField< String >","title":"badgeText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/badge-visible/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / badgeVisible badgeVisible val badgeVisible: ObservableBoolean","title":"Badge visible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/badge-visible/#badgevisible","text":"val badgeVisible: ObservableBoolean","title":"badgeVisible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/cost-visible/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / costVisible costVisible val costVisible: ObservableBoolean","title":"Cost visible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/cost-visible/#costvisible","text":"val costVisible: ObservableBoolean","title":"costVisible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/cost/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / cost cost val cost: ObservableField< String >","title":"Cost"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/cost/#cost","text":"val cost: ObservableField< String >","title":"cost"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/group/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / group group lateinit var group: TripGroup","title":"Group"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/group/#group","text":"lateinit var group: TripGroup","title":"group"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/more-button-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / moreButtonClicked moreButtonClicked fun moreButtonClicked(): Unit","title":"More button clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/more-button-clicked/#morebuttonclicked","text":"fun moreButtonClicked(): Unit","title":"moreButtonClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/more-button-text/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / moreButtonText moreButtonText val moreButtonText: ObservableField< String >","title":"More button text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/more-button-text/#morebuttontext","text":"val moreButtonText: ObservableField< String >","title":"moreButtonText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/more-button-visible/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / moreButtonVisible moreButtonVisible val moreButtonVisible: ObservableBoolean","title":"More button visible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/more-button-visible/#morebuttonvisible","text":"val moreButtonVisible: ObservableBoolean","title":"moreButtonVisible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/on-item-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / onItemClicked onItemClicked val onItemClicked: TapAction < TripResultViewModel >","title":"On item clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/on-item-clicked/#onitemclicked","text":"val onItemClicked: TapAction < TripResultViewModel >","title":"onItemClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/on-more-button-clicked/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / onMoreButtonClicked onMoreButtonClicked val onMoreButtonClicked: TapAction < TripResultViewModel >","title":"On more button clicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/on-more-button-clicked/#onmorebuttonclicked","text":"val onMoreButtonClicked: TapAction < TripResultViewModel >","title":"onMoreButtonClicked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/other-trip-groups/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / otherTripGroups otherTripGroups var otherTripGroups: List < Trip >?","title":"Other trip groups"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/other-trip-groups/#othertripgroups","text":"var otherTripGroups: List < Trip >?","title":"otherTripGroups"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/segments/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / segments segments val segments: ArrayList < TripSegmentViewModel >","title":"Segments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/segments/#segments","text":"val segments: ArrayList < TripSegmentViewModel >","title":"segments"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/set-trip-group/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / setTripGroup setTripGroup fun setTripGroup(context: Context, tripgroup: TripGroup , classification: Classification): Unit","title":"Set trip group"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/set-trip-group/#settripgroup","text":"fun setTripGroup(context: Context, tripgroup: TripGroup , classification: Classification): Unit","title":"setTripGroup"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/subtitle/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / subtitle subtitle val subtitle: ObservableField< String >","title":"Subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/subtitle/#subtitle","text":"val subtitle: ObservableField< String >","title":"subtitle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/title-visible/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / titleVisible titleVisible val titleVisible: ObservableBoolean","title":"Title visible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/title-visible/#titlevisible","text":"val titleVisible: ObservableBoolean","title":"titleVisible"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/title/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / title title val title: ObservableField< String >","title":"Title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/title/#title","text":"val title: ObservableField< String >","title":"title"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/trip/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripResultViewModel / trip trip lateinit var trip: Trip","title":"Trip"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-result-view-model/trip/#trip","text":"lateinit var trip: Trip","title":"trip"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentHelper TripSegmentHelper open class TripSegmentHelper Constructors Name Summary <init> TripSegmentHelper() Functions Name Summary getIconUrlForModeInfo open fun getIconUrlForModeInfo(resources: Resources!, modeInfo: ModeInfo !): String ! getRealTimeAlertDisplayText open fun getRealTimeAlertDisplayText(alert: RealtimeAlert !): String ! getTripSegmentAction open fun getTripSegmentAction(context: Context!, tripSegment: TripSegment !): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/#tripsegmenthelper","text":"open class TripSegmentHelper","title":"TripSegmentHelper"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/#constructors","text":"Name Summary <init> TripSegmentHelper()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/#functions","text":"Name Summary getIconUrlForModeInfo open fun getIconUrlForModeInfo(resources: Resources!, modeInfo: ModeInfo !): String ! getRealTimeAlertDisplayText open fun getRealTimeAlertDisplayText(alert: RealtimeAlert !): String ! getTripSegmentAction open fun getTripSegmentAction(context: Context!, tripSegment: TripSegment !): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentHelper / <init> <init> TripSegmentHelper()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/-init-/#init","text":"TripSegmentHelper()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/get-icon-url-for-mode-info/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentHelper / getIconUrlForModeInfo getIconUrlForModeInfo open fun getIconUrlForModeInfo(resources: Resources!, modeInfo: ModeInfo !): String !","title":"Get icon url for mode info"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/get-icon-url-for-mode-info/#geticonurlformodeinfo","text":"open fun getIconUrlForModeInfo(resources: Resources!, modeInfo: ModeInfo !): String !","title":"getIconUrlForModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/get-real-time-alert-display-text/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentHelper / getRealTimeAlertDisplayText getRealTimeAlertDisplayText open fun getRealTimeAlertDisplayText(alert: RealtimeAlert !): String !","title":"Get real time alert display text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/get-real-time-alert-display-text/#getrealtimealertdisplaytext","text":"open fun getRealTimeAlertDisplayText(alert: RealtimeAlert !): String !","title":"getRealTimeAlertDisplayText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/get-trip-segment-action/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentHelper / getTripSegmentAction getTripSegmentAction open fun getTripSegmentAction(context: Context!, tripSegment: TripSegment !): String !","title":"Get trip segment action"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-helper/get-trip-segment-action/#gettripsegmentaction","text":"open fun getTripSegmentAction(context: Context!, tripSegment: TripSegment !): String !","title":"getTripSegmentAction"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentViewModel TripSegmentViewModel class TripSegmentViewModel : RxViewModel Constructors Name Summary <init> TripSegmentViewModel(context: Context, printTime: PrintTime ) Properties Name Summary getTransportIconTintStrategy lateinit var getTransportIconTintStrategy: GetTransportIconTintStrategy icon val icon: ObservableField<Drawable> primaryText val primaryText: ObservableField< String > secondaryText val secondaryText: ObservableField< String > showPrimary val showPrimary: ObservableBoolean showSecondary val showSecondary: ObservableBoolean Functions Name Summary setSegment fun setSegment(trip: Trip , segment: TripSegment ): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/#tripsegmentviewmodel","text":"class TripSegmentViewModel : RxViewModel","title":"TripSegmentViewModel"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/#constructors","text":"Name Summary <init> TripSegmentViewModel(context: Context, printTime: PrintTime )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/#properties","text":"Name Summary getTransportIconTintStrategy lateinit var getTransportIconTintStrategy: GetTransportIconTintStrategy icon val icon: ObservableField<Drawable> primaryText val primaryText: ObservableField< String > secondaryText val secondaryText: ObservableField< String > showPrimary val showPrimary: ObservableBoolean showSecondary val showSecondary: ObservableBoolean","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/#functions","text":"Name Summary setSegment fun setSegment(trip: Trip , segment: TripSegment ): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentViewModel / <init> <init> TripSegmentViewModel(context: Context, printTime: PrintTime )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/-init-/#init","text":"TripSegmentViewModel(context: Context, printTime: PrintTime )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/get-transport-icon-tint-strategy/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentViewModel / getTransportIconTintStrategy getTransportIconTintStrategy lateinit var getTransportIconTintStrategy: GetTransportIconTintStrategy","title":"Get transport icon tint strategy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/get-transport-icon-tint-strategy/#gettransporticontintstrategy","text":"lateinit var getTransportIconTintStrategy: GetTransportIconTintStrategy","title":"getTransportIconTintStrategy"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/icon/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentViewModel / icon icon val icon: ObservableField<Drawable>","title":"Icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/icon/#icon","text":"val icon: ObservableField<Drawable>","title":"icon"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/primary-text/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentViewModel / primaryText primaryText val primaryText: ObservableField< String >","title":"Primary text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/primary-text/#primarytext","text":"val primaryText: ObservableField< String >","title":"primaryText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/secondary-text/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentViewModel / secondaryText secondaryText val secondaryText: ObservableField< String >","title":"Secondary text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/secondary-text/#secondarytext","text":"val secondaryText: ObservableField< String >","title":"secondaryText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/set-segment/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentViewModel / setSegment setSegment fun setSegment(trip: Trip , segment: TripSegment ): Unit","title":"Set segment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/set-segment/#setsegment","text":"fun setSegment(trip: Trip , segment: TripSegment ): Unit","title":"setSegment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/show-primary/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentViewModel / showPrimary showPrimary val showPrimary: ObservableBoolean","title":"Show primary"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/show-primary/#showprimary","text":"val showPrimary: ObservableBoolean","title":"showPrimary"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/show-secondary/","text":"tripkit-android / com.skedgo.tripkit.ui.tripresults / TripSegmentViewModel / showSecondary showSecondary val showSecondary: ObservableBoolean","title":"Show secondary"},{"location":"tripkit-android/com.skedgo.tripkit.ui.tripresults/-trip-segment-view-model/show-secondary/#showsecondary","text":"val showSecondary: ObservableBoolean","title":"showSecondary"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/","text":"tripkit-android / com.skedgo.tripkit.ui.utils Package com.skedgo.tripkit.ui.utils Types Name Summary BindingConversions class BindingConversions MainThreadBus A custom `[ Bus ](#) that posts events from any thread and lets subscribers receive them on the main thread. open class MainThreadBus : Bus` Optional data class Optional<M> ProviderUtils open class ProviderUtils ServiceLineOverlayTask open class ServiceLineOverlayTask : Function< MutableList <ServiceLineInfo!>!, MutableList <PolylineOptions!>!> Snackbars class Snackbars StopMarkerUtils object StopMarkerUtils TapAction class TapAction<TSender> TimeSpanUtils open class TimeSpanUtils TripSegmentActionProcessor class TripSegmentActionProcessor ViewUtils class ViewUtils Extensions for External Classes Name Summary android.content.Context android.graphics.drawable.Drawable io.reactivex.Observable Functions Name Summary formatString fun TimeTag .formatString(context: Context, timezone: String ?): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/#package-comskedgotripkituiutils","text":"","title":"Package com.skedgo.tripkit.ui.utils"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/#types","text":"Name Summary BindingConversions class BindingConversions MainThreadBus A custom `[ Bus ](#) that posts events from any thread and lets subscribers receive them on the main thread. open class MainThreadBus : Bus` Optional data class Optional<M> ProviderUtils open class ProviderUtils ServiceLineOverlayTask open class ServiceLineOverlayTask : Function< MutableList <ServiceLineInfo!>!, MutableList <PolylineOptions!>!> Snackbars class Snackbars StopMarkerUtils object StopMarkerUtils TapAction class TapAction<TSender> TimeSpanUtils open class TimeSpanUtils TripSegmentActionProcessor class TripSegmentActionProcessor ViewUtils class ViewUtils","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/#extensions-for-external-classes","text":"Name Summary android.content.Context android.graphics.drawable.Drawable io.reactivex.Observable","title":"Extensions for External Classes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/#functions","text":"Name Summary formatString fun TimeTag .formatString(context: Context, timezone: String ?): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/format-string/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / formatString formatString fun TimeTag .formatString(context: Context, timezone: String ?): String","title":"Format string"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/format-string/#formatstring","text":"fun TimeTag .formatString(context: Context, timezone: String ?): String","title":"formatString"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-binding-conversions/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / BindingConversions BindingConversions class BindingConversions Functions Name Summary convertLocationToAlpha static fun convertLocationToAlpha(location: Location !): Int convertStopTypeToMapIconRes static fun convertStopTypeToMapIconRes(stopType: StopType ?): Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-binding-conversions/#bindingconversions","text":"class BindingConversions","title":"BindingConversions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-binding-conversions/#functions","text":"Name Summary convertLocationToAlpha static fun convertLocationToAlpha(location: Location !): Int convertStopTypeToMapIconRes static fun convertStopTypeToMapIconRes(stopType: StopType ?): Int","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-binding-conversions/convert-location-to-alpha/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / BindingConversions / convertLocationToAlpha convertLocationToAlpha static fun convertLocationToAlpha(location: Location !): Int","title":"Convert location to alpha"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-binding-conversions/convert-location-to-alpha/#convertlocationtoalpha","text":"static fun convertLocationToAlpha(location: Location !): Int","title":"convertLocationToAlpha"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-binding-conversions/convert-stop-type-to-map-icon-res/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / BindingConversions / convertStopTypeToMapIconRes convertStopTypeToMapIconRes @DrawableRes static fun convertStopTypeToMapIconRes(@Nullable stopType: StopType ?): Int","title":"Convert stop type to map icon res"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-binding-conversions/convert-stop-type-to-map-icon-res/#convertstoptypetomapiconres","text":"@DrawableRes static fun convertStopTypeToMapIconRes(@Nullable stopType: StopType ?): Int","title":"convertStopTypeToMapIconRes"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-main-thread-bus/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / MainThreadBus MainThreadBus open class MainThreadBus : Bus A custom `[ Bus`](#) that posts events from any thread and lets subscribers receive them on the main thread. Constructors Name Summary <init> MainThreadBus(errorHandler: Consumer< Throwable !>!) Functions Name Summary post Posts an event and expects to handle it on the main thread. fun post(event: Any !): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-main-thread-bus/#mainthreadbus","text":"open class MainThreadBus : Bus A custom `[ Bus`](#) that posts events from any thread and lets subscribers receive them on the main thread.","title":"MainThreadBus"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-main-thread-bus/#constructors","text":"Name Summary <init> MainThreadBus(errorHandler: Consumer< Throwable !>!)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-main-thread-bus/#functions","text":"Name Summary post Posts an event and expects to handle it on the main thread. fun post(event: Any !): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-main-thread-bus/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / MainThreadBus / <init> <init> MainThreadBus(errorHandler: Consumer< Throwable !>!)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-main-thread-bus/-init-/#init","text":"MainThreadBus(errorHandler: Consumer< Throwable !>!)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-main-thread-bus/post/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / MainThreadBus / post post fun post(event: Any !): Unit Posts an event and expects to handle it on the main thread. Parameters event - Any !: The event that we want to post.","title":"Post"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-main-thread-bus/post/#post","text":"fun post(event: Any !): Unit Posts an event and expects to handle it on the main thread.","title":"post"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-main-thread-bus/post/#parameters","text":"event - Any !: The event that we want to post.","title":"Parameters"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-optional/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / Optional Optional data class Optional<M> Constructors Name Summary <init> Optional(value: M?) Properties Name Summary value val value: M?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-optional/#optional","text":"data class Optional<M>","title":"Optional"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-optional/#constructors","text":"Name Summary <init> Optional(value: M?)","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-optional/#properties","text":"Name Summary value val value: M?","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-optional/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / Optional / <init> <init> Optional(value: M?)","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-optional/-init-/#init","text":"Optional(value: M?)","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-optional/value/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / Optional / value value val value: M?","title":"Value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-optional/value/#value","text":"val value: M?","title":"value"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ProviderUtils ProviderUtils open class ProviderUtils Author Daniel Grech Constructors Name Summary <init> ProviderUtils() Functions Name Summary doBulkInsert Insert multiple rows open static fun doBulkInsert(c: Context!, providerUri: Uri!, valuesArray: Array <ContentValues!>!): Int doDelete open static fun doDelete(c: Context!, providerUri: Uri!, where: String !): Int doInsert open static fun doInsert(c: Context!, providerUri: Uri!, values: ContentValues!): Uri! doUpdate open static fun doUpdate(c: Context!, providerUri: Uri!, values: ContentValues!, sel: String !, selArgs: Array < String !>!): Boolean upsert open static fun upsert(db: SQLiteDatabase!, table: DatabaseTable!, values: ContentValues!, fieldToMatch: DatabaseField?): Long open static fun upsert(db: SQLiteDatabase!, table: DatabaseTable!, values: ContentValues!, fieldsToMatch: Array <DatabaseField!>?): Long","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/#providerutils","text":"open class ProviderUtils Author Daniel Grech","title":"ProviderUtils"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/#constructors","text":"Name Summary <init> ProviderUtils()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/#functions","text":"Name Summary doBulkInsert Insert multiple rows open static fun doBulkInsert(c: Context!, providerUri: Uri!, valuesArray: Array <ContentValues!>!): Int doDelete open static fun doDelete(c: Context!, providerUri: Uri!, where: String !): Int doInsert open static fun doInsert(c: Context!, providerUri: Uri!, values: ContentValues!): Uri! doUpdate open static fun doUpdate(c: Context!, providerUri: Uri!, values: ContentValues!, sel: String !, selArgs: Array < String !>!): Boolean upsert open static fun upsert(db: SQLiteDatabase!, table: DatabaseTable!, values: ContentValues!, fieldToMatch: DatabaseField?): Long open static fun upsert(db: SQLiteDatabase!, table: DatabaseTable!, values: ContentValues!, fieldsToMatch: Array <DatabaseField!>?): Long","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ProviderUtils / <init> <init> ProviderUtils() Author Daniel Grech","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/-init-/#init","text":"ProviderUtils() Author Daniel Grech","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/do-bulk-insert/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ProviderUtils / doBulkInsert doBulkInsert open static fun doBulkInsert(c: Context!, providerUri: Uri!, valuesArray: Array <ContentValues!>!): Int Insert multiple rows Author Tran Vu Tat Binh","title":"Do bulk insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/do-bulk-insert/#dobulkinsert","text":"open static fun doBulkInsert(c: Context!, providerUri: Uri!, valuesArray: Array <ContentValues!>!): Int Insert multiple rows Author Tran Vu Tat Binh","title":"doBulkInsert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/do-delete/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ProviderUtils / doDelete doDelete open static fun doDelete(c: Context!, providerUri: Uri!, where: String !): Int","title":"Do delete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/do-delete/#dodelete","text":"open static fun doDelete(c: Context!, providerUri: Uri!, where: String !): Int","title":"doDelete"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/do-insert/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ProviderUtils / doInsert doInsert open static fun doInsert(c: Context!, providerUri: Uri!, values: ContentValues!): Uri!","title":"Do insert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/do-insert/#doinsert","text":"open static fun doInsert(c: Context!, providerUri: Uri!, values: ContentValues!): Uri!","title":"doInsert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/do-update/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ProviderUtils / doUpdate doUpdate open static fun doUpdate(c: Context!, providerUri: Uri!, values: ContentValues!, sel: String !, selArgs: Array < String !>!): Boolean","title":"Do update"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/do-update/#doupdate","text":"open static fun doUpdate(c: Context!, providerUri: Uri!, values: ContentValues!, sel: String !, selArgs: Array < String !>!): Boolean","title":"doUpdate"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/upsert/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ProviderUtils / upsert upsert open static fun upsert(db: SQLiteDatabase!, table: DatabaseTable!, values: ContentValues!, @Nullable fieldToMatch: DatabaseField?): Long open static fun upsert(db: SQLiteDatabase!, table: DatabaseTable!, values: ContentValues!, @Nullable fieldsToMatch: Array <DatabaseField!>?): Long","title":"Upsert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-provider-utils/upsert/#upsert","text":"open static fun upsert(db: SQLiteDatabase!, table: DatabaseTable!, values: ContentValues!, @Nullable fieldToMatch: DatabaseField?): Long open static fun upsert(db: SQLiteDatabase!, table: DatabaseTable!, values: ContentValues!, @Nullable fieldsToMatch: Array <DatabaseField!>?): Long","title":"upsert"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask ServiceLineOverlayTask open class ServiceLineOverlayTask : Function< MutableList <ServiceLineInfo!>!, MutableList <PolylineOptions!>!> Types Name Summary LineSegment open class LineSegment ServiceLineInfo open class ServiceLineInfo Constructors Name Summary <init> ServiceLineOverlayTask() Functions Name Summary apply open fun apply(serviceLineInfos: MutableList <ServiceLineInfo!>): MutableList <PolylineOptions!>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/#servicelineoverlaytask","text":"open class ServiceLineOverlayTask : Function< MutableList <ServiceLineInfo!>!, MutableList <PolylineOptions!>!>","title":"ServiceLineOverlayTask"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/#types","text":"Name Summary LineSegment open class LineSegment ServiceLineInfo open class ServiceLineInfo","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/#constructors","text":"Name Summary <init> ServiceLineOverlayTask()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/#functions","text":"Name Summary apply open fun apply(serviceLineInfos: MutableList <ServiceLineInfo!>): MutableList <PolylineOptions!>!","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / <init> <init> ServiceLineOverlayTask()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-init-/#init","text":"ServiceLineOverlayTask()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/apply/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / apply apply open fun apply(serviceLineInfos: MutableList <ServiceLineInfo!>): MutableList <PolylineOptions!>!","title":"Apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/apply/#apply","text":"open fun apply(serviceLineInfos: MutableList <ServiceLineInfo!>): MutableList <PolylineOptions!>!","title":"apply"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / LineSegment LineSegment open class LineSegment Constructors Name Summary <init> LineSegment(start: LatLng!, end: LatLng!, type: Int , color: Int ) Properties Name Summary color var color: Int end var end: LatLng! SOLID static val SOLID: Int start var start: LatLng! type var type: Int","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/#linesegment","text":"open class LineSegment","title":"LineSegment"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/#constructors","text":"Name Summary <init> LineSegment(start: LatLng!, end: LatLng!, type: Int , color: Int )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/#properties","text":"Name Summary color var color: Int end var end: LatLng! SOLID static val SOLID: Int start var start: LatLng! type var type: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / LineSegment / <init> <init> LineSegment(start: LatLng!, end: LatLng!, type: Int , color: Int )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/-init-/#init","text":"LineSegment(start: LatLng!, end: LatLng!, type: Int , color: Int )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/-s-o-l-i-d/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / LineSegment / SOLID SOLID static val SOLID: Int","title":" s o l i d"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/-s-o-l-i-d/#solid","text":"static val SOLID: Int","title":"SOLID"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/color/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / LineSegment / color color var color: Int","title":"Color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/color/#color","text":"var color: Int","title":"color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/end/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / LineSegment / end end var end: LatLng!","title":"End"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/end/#end","text":"var end: LatLng!","title":"end"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/start/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / LineSegment / start start var start: LatLng!","title":"Start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/start/#start","text":"var start: LatLng!","title":"start"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/type/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / LineSegment / type type var type: Int","title":"Type"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-line-segment/type/#type","text":"var type: Int","title":"type"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / ServiceLineInfo ServiceLineInfo open class ServiceLineInfo Constructors Name Summary <init> ServiceLineInfo(waypoints: MutableList <LatLng!>!, color: Int , travelled: Boolean ) Properties Name Summary color val color: Int travelled var travelled: Boolean waypoints val waypoints: MutableList <LatLng!>!","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/#servicelineinfo","text":"open class ServiceLineInfo","title":"ServiceLineInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/#constructors","text":"Name Summary <init> ServiceLineInfo(waypoints: MutableList <LatLng!>!, color: Int , travelled: Boolean )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/#properties","text":"Name Summary color val color: Int travelled var travelled: Boolean waypoints val waypoints: MutableList <LatLng!>!","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / ServiceLineInfo / <init> <init> ServiceLineInfo(waypoints: MutableList <LatLng!>!, color: Int , travelled: Boolean )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/-init-/#init","text":"ServiceLineInfo(waypoints: MutableList <LatLng!>!, color: Int , travelled: Boolean )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/color/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / ServiceLineInfo / color color val color: Int","title":"Color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/color/#color","text":"val color: Int","title":"color"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/travelled/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / ServiceLineInfo / travelled travelled var travelled: Boolean","title":"Travelled"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/travelled/#travelled","text":"var travelled: Boolean","title":"travelled"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/waypoints/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ServiceLineOverlayTask / ServiceLineInfo / waypoints waypoints val waypoints: MutableList <LatLng!>!","title":"Waypoints"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-service-line-overlay-task/-service-line-info/waypoints/#waypoints","text":"val waypoints: MutableList <LatLng!>!","title":"waypoints"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-snackbars/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / Snackbars Snackbars class Snackbars Functions Name Summary showShortly static fun showShortly(activity: FragmentActivity, message: String ?): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-snackbars/#snackbars","text":"class Snackbars","title":"Snackbars"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-snackbars/#functions","text":"Name Summary showShortly static fun showShortly(activity: FragmentActivity, message: String ?): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-snackbars/show-shortly/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / Snackbars / showShortly showShortly static fun showShortly(@NonNull activity: FragmentActivity, @Nullable message: String ?): Unit","title":"Show shortly"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-snackbars/show-shortly/#showshortly","text":"static fun showShortly(@NonNull activity: FragmentActivity, @Nullable message: String ?): Unit","title":"showShortly"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-stop-marker-utils/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / StopMarkerUtils StopMarkerUtils object StopMarkerUtils Functions Name Summary getMapIconUrlForModeInfo fun getMapIconUrlForModeInfo(resources: Resources, modeInfo: ModeInfo ?): String ? fun getMapIconUrlForModeInfo(resources: Resources, remoteIcon: String ?): List < String >?","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-stop-marker-utils/#stopmarkerutils","text":"object StopMarkerUtils","title":"StopMarkerUtils"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-stop-marker-utils/#functions","text":"Name Summary getMapIconUrlForModeInfo fun getMapIconUrlForModeInfo(resources: Resources, modeInfo: ModeInfo ?): String ? fun getMapIconUrlForModeInfo(resources: Resources, remoteIcon: String ?): List < String >?","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-stop-marker-utils/get-map-icon-url-for-mode-info/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / StopMarkerUtils / getMapIconUrlForModeInfo getMapIconUrlForModeInfo fun getMapIconUrlForModeInfo(resources: Resources, modeInfo: ModeInfo ?): String ? fun getMapIconUrlForModeInfo(resources: Resources, remoteIcon: String ?): List < String >?","title":"Get map icon url for mode info"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-stop-marker-utils/get-map-icon-url-for-mode-info/#getmapiconurlformodeinfo","text":"fun getMapIconUrlForModeInfo(resources: Resources, modeInfo: ModeInfo ?): String ? fun getMapIconUrlForModeInfo(resources: Resources, remoteIcon: String ?): List < String >?","title":"getMapIconUrlForModeInfo"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-tap-action/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TapAction TapAction class TapAction<TSender> Properties Name Summary observable val observable: Observable<TSender> Functions Name Summary perform fun perform(): Unit Companion Object Functions Name Summary create fun <TSender> create(getSender: () -> TSender): TapAction <TSender>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-tap-action/#tapaction","text":"class TapAction<TSender>","title":"TapAction"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-tap-action/#properties","text":"Name Summary observable val observable: Observable<TSender>","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-tap-action/#functions","text":"Name Summary perform fun perform(): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-tap-action/#companion-object-functions","text":"Name Summary create fun <TSender> create(getSender: () -> TSender): TapAction <TSender>","title":"Companion Object Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-tap-action/create/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TapAction / create create fun <TSender> create(getSender: () -> TSender): TapAction <TSender>","title":"Create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-tap-action/create/#create","text":"fun <TSender> create(getSender: () -> TSender): TapAction <TSender>","title":"create"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-tap-action/observable/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TapAction / observable observable val observable: Observable<TSender>","title":"Observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-tap-action/observable/#observable","text":"val observable: Observable<TSender>","title":"observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-tap-action/perform/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TapAction / perform perform fun perform(): Unit","title":"Perform"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-tap-action/perform/#perform","text":"fun perform(): Unit","title":"perform"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TimeSpanUtils TimeSpanUtils open class TimeSpanUtils Constructors Name Summary <init> TimeSpanUtils() Properties Name Summary FORMAT_TIME_SPAN static val FORMAT_TIME_SPAN: String HOURS_IN_DAY static val HOURS_IN_DAY: Int Functions Name Summary getRelativeTimeSpanString open static fun getRelativeTimeSpanString(minutes: Long ): String !","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/#timespanutils","text":"open class TimeSpanUtils","title":"TimeSpanUtils"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/#constructors","text":"Name Summary <init> TimeSpanUtils()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/#properties","text":"Name Summary FORMAT_TIME_SPAN static val FORMAT_TIME_SPAN: String HOURS_IN_DAY static val HOURS_IN_DAY: Int","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/#functions","text":"Name Summary getRelativeTimeSpanString open static fun getRelativeTimeSpanString(minutes: Long ): String !","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/-f-o-r-m-a-t_-t-i-m-e_-s-p-a-n/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TimeSpanUtils / FORMAT_TIME_SPAN FORMAT_TIME_SPAN static val FORMAT_TIME_SPAN: String","title":" f o r m a t  t i m e  s p a n"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/-f-o-r-m-a-t_-t-i-m-e_-s-p-a-n/#format_time_span","text":"static val FORMAT_TIME_SPAN: String","title":"FORMAT_TIME_SPAN"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/-h-o-u-r-s_-i-n_-d-a-y/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TimeSpanUtils / HOURS_IN_DAY HOURS_IN_DAY static val HOURS_IN_DAY: Int","title":" h o u r s  i n  d a y"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/-h-o-u-r-s_-i-n_-d-a-y/#hours_in_day","text":"static val HOURS_IN_DAY: Int","title":"HOURS_IN_DAY"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TimeSpanUtils / <init> <init> TimeSpanUtils()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/-init-/#init","text":"TimeSpanUtils()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/get-relative-time-span-string/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TimeSpanUtils / getRelativeTimeSpanString getRelativeTimeSpanString open static fun getRelativeTimeSpanString(minutes: Long ): String !","title":"Get relative time span string"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-time-span-utils/get-relative-time-span-string/#getrelativetimespanstring","text":"open static fun getRelativeTimeSpanString(minutes: Long ): String !","title":"getRelativeTimeSpanString"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor TripSegmentActionProcessor class TripSegmentActionProcessor Constructors Name Summary <init> TripSegmentActionProcessor() Properties Name Summary directionRegex val directionRegex: Regex doubleSpaceReplace val doubleSpaceReplace: Regex durationRegex val durationRegex: Regex emptyRemoveRegex val emptyRemoveRegex: Regex lineNameRegex val lineNameRegex: Regex locationsRegex val locationsRegex: Regex numberRegex val numberRegex: Regex platformRegex val platformRegex: Regex singleDotReplace val singleDotReplace: Regex stopsRegex val stopsRegex: Regex timeRegex val timeRegex: Regex trafficRegex val trafficRegex: Regex Functions Name Summary hasTime fun hasTime(segment: TripSegment ): Boolean processText fun processText(context: Context, segment: TripSegment , text: String , withTime: Boolean ): String","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/#tripsegmentactionprocessor","text":"class TripSegmentActionProcessor","title":"TripSegmentActionProcessor"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/#constructors","text":"Name Summary <init> TripSegmentActionProcessor()","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/#properties","text":"Name Summary directionRegex val directionRegex: Regex doubleSpaceReplace val doubleSpaceReplace: Regex durationRegex val durationRegex: Regex emptyRemoveRegex val emptyRemoveRegex: Regex lineNameRegex val lineNameRegex: Regex locationsRegex val locationsRegex: Regex numberRegex val numberRegex: Regex platformRegex val platformRegex: Regex singleDotReplace val singleDotReplace: Regex stopsRegex val stopsRegex: Regex timeRegex val timeRegex: Regex trafficRegex val trafficRegex: Regex","title":"Properties"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/#functions","text":"Name Summary hasTime fun hasTime(segment: TripSegment ): Boolean processText fun processText(context: Context, segment: TripSegment , text: String , withTime: Boolean ): String","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / <init> <init> TripSegmentActionProcessor()","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/-init-/#init","text":"TripSegmentActionProcessor()","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/direction-regex/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / directionRegex directionRegex val directionRegex: Regex","title":"Direction regex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/direction-regex/#directionregex","text":"val directionRegex: Regex","title":"directionRegex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/double-space-replace/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / doubleSpaceReplace doubleSpaceReplace val doubleSpaceReplace: Regex","title":"Double space replace"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/double-space-replace/#doublespacereplace","text":"val doubleSpaceReplace: Regex","title":"doubleSpaceReplace"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/duration-regex/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / durationRegex durationRegex val durationRegex: Regex","title":"Duration regex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/duration-regex/#durationregex","text":"val durationRegex: Regex","title":"durationRegex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/empty-remove-regex/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / emptyRemoveRegex emptyRemoveRegex val emptyRemoveRegex: Regex","title":"Empty remove regex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/empty-remove-regex/#emptyremoveregex","text":"val emptyRemoveRegex: Regex","title":"emptyRemoveRegex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/has-time/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / hasTime hasTime fun hasTime(segment: TripSegment ): Boolean","title":"Has time"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/has-time/#hastime","text":"fun hasTime(segment: TripSegment ): Boolean","title":"hasTime"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/line-name-regex/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / lineNameRegex lineNameRegex val lineNameRegex: Regex","title":"Line name regex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/line-name-regex/#linenameregex","text":"val lineNameRegex: Regex","title":"lineNameRegex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/locations-regex/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / locationsRegex locationsRegex val locationsRegex: Regex","title":"Locations regex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/locations-regex/#locationsregex","text":"val locationsRegex: Regex","title":"locationsRegex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/number-regex/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / numberRegex numberRegex val numberRegex: Regex","title":"Number regex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/number-regex/#numberregex","text":"val numberRegex: Regex","title":"numberRegex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/platform-regex/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / platformRegex platformRegex val platformRegex: Regex","title":"Platform regex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/platform-regex/#platformregex","text":"val platformRegex: Regex","title":"platformRegex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/process-text/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / processText processText fun processText(context: Context, segment: TripSegment , text: String , withTime: Boolean ): String","title":"Process text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/process-text/#processtext","text":"fun processText(context: Context, segment: TripSegment , text: String , withTime: Boolean ): String","title":"processText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/single-dot-replace/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / singleDotReplace singleDotReplace val singleDotReplace: Regex","title":"Single dot replace"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/single-dot-replace/#singledotreplace","text":"val singleDotReplace: Regex","title":"singleDotReplace"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/stops-regex/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / stopsRegex stopsRegex val stopsRegex: Regex","title":"Stops regex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/stops-regex/#stopsregex","text":"val stopsRegex: Regex","title":"stopsRegex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/time-regex/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / timeRegex timeRegex val timeRegex: Regex","title":"Time regex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/time-regex/#timeregex","text":"val timeRegex: Regex","title":"timeRegex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/traffic-regex/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / TripSegmentActionProcessor / trafficRegex trafficRegex val trafficRegex: Regex","title":"Traffic regex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-trip-segment-action-processor/traffic-regex/#trafficregex","text":"val trafficRegex: Regex","title":"trafficRegex"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-view-utils/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ViewUtils ViewUtils class ViewUtils Functions Name Summary setImage static fun setImage(view: ImageView, res: Int ): Unit setText static fun setText(view: TextView!, text: CharSequence !): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-view-utils/#viewutils","text":"class ViewUtils","title":"ViewUtils"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-view-utils/#functions","text":"Name Summary setImage static fun setImage(view: ImageView, res: Int ): Unit setText static fun setText(view: TextView!, text: CharSequence !): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-view-utils/set-image/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ViewUtils / setImage setImage static fun setImage(@NonNull view: ImageView, @DrawableRes res: Int ): Unit","title":"Set image"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-view-utils/set-image/#setimage","text":"static fun setImage(@NonNull view: ImageView, @DrawableRes res: Int ): Unit","title":"setImage"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-view-utils/set-text/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / ViewUtils / setText setText static fun setText(view: TextView!, text: CharSequence !): Unit","title":"Set text"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/-view-utils/set-text/#settext","text":"static fun setText(view: TextView!, text: CharSequence !): Unit","title":"setText"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/android.content.-context/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / android.content.Context Extensions for android.content.Context Name Summary isNetworkConnected fun Context.isNetworkConnected(): Boolean viewAppDetailsSettingsIntent fun Context.viewAppDetailsSettingsIntent(): Intent","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/android.content.-context/#extensions-for-androidcontentcontext","text":"Name Summary isNetworkConnected fun Context.isNetworkConnected(): Boolean viewAppDetailsSettingsIntent fun Context.viewAppDetailsSettingsIntent(): Intent","title":"Extensions for android.content.Context"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/android.content.-context/is-network-connected/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / android.content.Context / isNetworkConnected isNetworkConnected fun Context.isNetworkConnected(): Boolean","title":"Is network connected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/android.content.-context/is-network-connected/#isnetworkconnected","text":"fun Context.isNetworkConnected(): Boolean","title":"isNetworkConnected"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/android.content.-context/view-app-details-settings-intent/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / android.content.Context / viewAppDetailsSettingsIntent viewAppDetailsSettingsIntent fun Context.viewAppDetailsSettingsIntent(): Intent","title":"View app details settings intent"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/android.content.-context/view-app-details-settings-intent/#viewappdetailssettingsintent","text":"fun Context.viewAppDetailsSettingsIntent(): Intent","title":"viewAppDetailsSettingsIntent"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/android.graphics.drawable.-drawable/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / android.graphics.drawable.Drawable Extensions for android.graphics.drawable.Drawable Name Summary tint fun Drawable.tint(color: Int ): Drawable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/android.graphics.drawable.-drawable/#extensions-for-androidgraphicsdrawabledrawable","text":"Name Summary tint fun Drawable.tint(color: Int ): Drawable","title":"Extensions for android.graphics.drawable.Drawable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/android.graphics.drawable.-drawable/tint/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / android.graphics.drawable.Drawable / tint tint fun Drawable.tint(color: Int ): Drawable","title":"Tint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/android.graphics.drawable.-drawable/tint/#tint","text":"fun Drawable.tint(color: Int ): Drawable","title":"tint"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/io.reactivex.-observable/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / io.reactivex.Observable Extensions for io.reactivex.Observable Name Summary ignoreNetworkErrors fun <T> Observable<T>.ignoreNetworkErrors(): Observable<T>","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/io.reactivex.-observable/#extensions-for-ioreactivexobservable","text":"Name Summary ignoreNetworkErrors fun <T> Observable<T>.ignoreNetworkErrors(): Observable<T>","title":"Extensions for io.reactivex.Observable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/io.reactivex.-observable/ignore-network-errors/","text":"tripkit-android / com.skedgo.tripkit.ui.utils / io.reactivex.Observable / ignoreNetworkErrors ignoreNetworkErrors fun <T> Observable<T>.ignoreNetworkErrors(): Observable<T>","title":"Ignore network errors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.utils/io.reactivex.-observable/ignore-network-errors/#ignorenetworkerrors","text":"fun <T> Observable<T>.ignoreNetworkErrors(): Observable<T>","title":"ignoreNetworkErrors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/","text":"tripkit-android / com.skedgo.tripkit.ui.views Package com.skedgo.tripkit.ui.views Types Name Summary CheckableImageButton open class CheckableImageButton : AppCompatImageButton, Checkable","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/#package-comskedgotripkituiviews","text":"","title":"Package com.skedgo.tripkit.ui.views"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/#types","text":"Name Summary CheckableImageButton open class CheckableImageButton : AppCompatImageButton, Checkable","title":"Types"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/","text":"tripkit-android / com.skedgo.tripkit.ui.views / CheckableImageButton CheckableImageButton open class CheckableImageButton : AppCompatImageButton, Checkable Constructors Name Summary <init> CheckableImageButton(context: Context!) CheckableImageButton(context: Context!, attrs: AttributeSet!) CheckableImageButton(context: Context!, attrs: AttributeSet!, defStyleAttr: Int ) Functions Name Summary isCheckable Returns whether the image button is checkable. open fun isCheckable(): Boolean isChecked open fun isChecked(): Boolean onCreateDrawableState open fun onCreateDrawableState(extraSpace: Int ): IntArray ! onRestoreInstanceState open fun onRestoreInstanceState(state: Parcelable!): Unit onSaveInstanceState open fun onSaveInstanceState(): Parcelable setCheckable Sets image button to be checkable or not. open fun setCheckable(checkable: Boolean ): Unit setChecked open fun setChecked(checked: Boolean ): Unit toggle open fun toggle(): Unit","title":"Index"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/#checkableimagebutton","text":"open class CheckableImageButton : AppCompatImageButton, Checkable","title":"CheckableImageButton"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/#constructors","text":"Name Summary <init> CheckableImageButton(context: Context!) CheckableImageButton(context: Context!, attrs: AttributeSet!) CheckableImageButton(context: Context!, attrs: AttributeSet!, defStyleAttr: Int )","title":"Constructors"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/#functions","text":"Name Summary isCheckable Returns whether the image button is checkable. open fun isCheckable(): Boolean isChecked open fun isChecked(): Boolean onCreateDrawableState open fun onCreateDrawableState(extraSpace: Int ): IntArray ! onRestoreInstanceState open fun onRestoreInstanceState(state: Parcelable!): Unit onSaveInstanceState open fun onSaveInstanceState(): Parcelable setCheckable Sets image button to be checkable or not. open fun setCheckable(checkable: Boolean ): Unit setChecked open fun setChecked(checked: Boolean ): Unit toggle open fun toggle(): Unit","title":"Functions"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/-init-/","text":"tripkit-android / com.skedgo.tripkit.ui.views / CheckableImageButton / <init> <init> CheckableImageButton(context: Context!) CheckableImageButton(context: Context!, attrs: AttributeSet!) CheckableImageButton(context: Context!, attrs: AttributeSet!, defStyleAttr: Int )","title":" init "},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/-init-/#init","text":"CheckableImageButton(context: Context!) CheckableImageButton(context: Context!, attrs: AttributeSet!) CheckableImageButton(context: Context!, attrs: AttributeSet!, defStyleAttr: Int )","title":"&lt;init&gt;"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/is-checkable/","text":"tripkit-android / com.skedgo.tripkit.ui.views / CheckableImageButton / isCheckable isCheckable open fun isCheckable(): Boolean Returns whether the image button is checkable.","title":"Is checkable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/is-checkable/#ischeckable","text":"open fun isCheckable(): Boolean Returns whether the image button is checkable.","title":"isCheckable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/is-checked/","text":"tripkit-android / com.skedgo.tripkit.ui.views / CheckableImageButton / isChecked isChecked open fun isChecked(): Boolean","title":"Is checked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/is-checked/#ischecked","text":"open fun isChecked(): Boolean","title":"isChecked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/on-create-drawable-state/","text":"tripkit-android / com.skedgo.tripkit.ui.views / CheckableImageButton / onCreateDrawableState onCreateDrawableState open fun onCreateDrawableState(extraSpace: Int ): IntArray !","title":"On create drawable state"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/on-create-drawable-state/#oncreatedrawablestate","text":"open fun onCreateDrawableState(extraSpace: Int ): IntArray !","title":"onCreateDrawableState"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/on-restore-instance-state/","text":"tripkit-android / com.skedgo.tripkit.ui.views / CheckableImageButton / onRestoreInstanceState onRestoreInstanceState protected open fun onRestoreInstanceState(state: Parcelable!): Unit","title":"On restore instance state"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/on-restore-instance-state/#onrestoreinstancestate","text":"protected open fun onRestoreInstanceState(state: Parcelable!): Unit","title":"onRestoreInstanceState"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/on-save-instance-state/","text":"tripkit-android / com.skedgo.tripkit.ui.views / CheckableImageButton / onSaveInstanceState onSaveInstanceState @NonNull protected open fun onSaveInstanceState(): Parcelable","title":"On save instance state"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/on-save-instance-state/#onsaveinstancestate","text":"@NonNull protected open fun onSaveInstanceState(): Parcelable","title":"onSaveInstanceState"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/set-checkable/","text":"tripkit-android / com.skedgo.tripkit.ui.views / CheckableImageButton / setCheckable setCheckable open fun setCheckable(checkable: Boolean ): Unit Sets image button to be checkable or not.","title":"Set checkable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/set-checkable/#setcheckable","text":"open fun setCheckable(checkable: Boolean ): Unit Sets image button to be checkable or not.","title":"setCheckable"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/set-checked/","text":"tripkit-android / com.skedgo.tripkit.ui.views / CheckableImageButton / setChecked setChecked open fun setChecked(checked: Boolean ): Unit","title":"Set checked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/set-checked/#setchecked","text":"open fun setChecked(checked: Boolean ): Unit","title":"setChecked"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/toggle/","text":"tripkit-android / com.skedgo.tripkit.ui.views / CheckableImageButton / toggle toggle open fun toggle(): Unit","title":"Toggle"},{"location":"tripkit-android/com.skedgo.tripkit.ui.views/-checkable-image-button/toggle/#toggle","text":"open fun toggle(): Unit","title":"toggle"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/","text":"tripkit-android / skedgo.tripgo.agenda.legacy Package skedgo.tripgo.agenda.legacy Types Name Summary CyclingSpeedRepositoryModule class CyclingSpeedRepositoryModule GetRoutingConfigModule class GetRoutingConfigModule WalkingSpeedRepositoryModule class WalkingSpeedRepositoryModule","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/#package-skedgotripgoagendalegacy","text":"","title":"Package skedgo.tripgo.agenda.legacy"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/#types","text":"Name Summary CyclingSpeedRepositoryModule class CyclingSpeedRepositoryModule GetRoutingConfigModule class GetRoutingConfigModule WalkingSpeedRepositoryModule class WalkingSpeedRepositoryModule","title":"Types"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-cycling-speed-repository-module/","text":"tripkit-android / skedgo.tripgo.agenda.legacy / CyclingSpeedRepositoryModule CyclingSpeedRepositoryModule @Module class CyclingSpeedRepositoryModule Constructors Name Summary <init> CyclingSpeedRepositoryModule() Functions Name Summary cyclingSpeedRepository fun cyclingSpeedRepository(resources: Resources, prefs: SharedPreferences): CyclingSpeedRepository","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-cycling-speed-repository-module/#cyclingspeedrepositorymodule","text":"@Module class CyclingSpeedRepositoryModule","title":"CyclingSpeedRepositoryModule"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-cycling-speed-repository-module/#constructors","text":"Name Summary <init> CyclingSpeedRepositoryModule()","title":"Constructors"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-cycling-speed-repository-module/#functions","text":"Name Summary cyclingSpeedRepository fun cyclingSpeedRepository(resources: Resources, prefs: SharedPreferences): CyclingSpeedRepository","title":"Functions"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-cycling-speed-repository-module/-init-/","text":"tripkit-android / skedgo.tripgo.agenda.legacy / CyclingSpeedRepositoryModule / <init> <init> CyclingSpeedRepositoryModule()","title":" init "},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-cycling-speed-repository-module/-init-/#init","text":"CyclingSpeedRepositoryModule()","title":"&lt;init&gt;"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-cycling-speed-repository-module/cycling-speed-repository/","text":"tripkit-android / skedgo.tripgo.agenda.legacy / CyclingSpeedRepositoryModule / cyclingSpeedRepository cyclingSpeedRepository @Provides fun cyclingSpeedRepository(resources: Resources, prefs: SharedPreferences): CyclingSpeedRepository","title":"Cycling speed repository"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-cycling-speed-repository-module/cycling-speed-repository/#cyclingspeedrepository","text":"@Provides fun cyclingSpeedRepository(resources: Resources, prefs: SharedPreferences): CyclingSpeedRepository","title":"cyclingSpeedRepository"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-get-routing-config-module/","text":"tripkit-android / skedgo.tripgo.agenda.legacy / GetRoutingConfigModule GetRoutingConfigModule @Module class GetRoutingConfigModule Constructors Name Summary <init> GetRoutingConfigModule()","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-get-routing-config-module/#getroutingconfigmodule","text":"@Module class GetRoutingConfigModule","title":"GetRoutingConfigModule"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-get-routing-config-module/#constructors","text":"Name Summary <init> GetRoutingConfigModule()","title":"Constructors"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-get-routing-config-module/-init-/","text":"tripkit-android / skedgo.tripgo.agenda.legacy / GetRoutingConfigModule / <init> <init> GetRoutingConfigModule()","title":" init "},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-get-routing-config-module/-init-/#init","text":"GetRoutingConfigModule()","title":"&lt;init&gt;"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-walking-speed-repository-module/","text":"tripkit-android / skedgo.tripgo.agenda.legacy / WalkingSpeedRepositoryModule WalkingSpeedRepositoryModule @Module class WalkingSpeedRepositoryModule Constructors Name Summary <init> WalkingSpeedRepositoryModule() Functions Name Summary walkingSpeedRepository fun walkingSpeedRepository(resources: Resources, prefs: SharedPreferences): WalkingSpeedRepository","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-walking-speed-repository-module/#walkingspeedrepositorymodule","text":"@Module class WalkingSpeedRepositoryModule","title":"WalkingSpeedRepositoryModule"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-walking-speed-repository-module/#constructors","text":"Name Summary <init> WalkingSpeedRepositoryModule()","title":"Constructors"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-walking-speed-repository-module/#functions","text":"Name Summary walkingSpeedRepository fun walkingSpeedRepository(resources: Resources, prefs: SharedPreferences): WalkingSpeedRepository","title":"Functions"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-walking-speed-repository-module/-init-/","text":"tripkit-android / skedgo.tripgo.agenda.legacy / WalkingSpeedRepositoryModule / <init> <init> WalkingSpeedRepositoryModule()","title":" init "},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-walking-speed-repository-module/-init-/#init","text":"WalkingSpeedRepositoryModule()","title":"&lt;init&gt;"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-walking-speed-repository-module/walking-speed-repository/","text":"tripkit-android / skedgo.tripgo.agenda.legacy / WalkingSpeedRepositoryModule / walkingSpeedRepository walkingSpeedRepository @Provides fun walkingSpeedRepository(resources: Resources, prefs: SharedPreferences): WalkingSpeedRepository","title":"Walking speed repository"},{"location":"tripkit-android/skedgo.tripgo.agenda.legacy/-walking-speed-repository-module/walking-speed-repository/#walkingspeedrepository","text":"@Provides fun walkingSpeedRepository(resources: Resources, prefs: SharedPreferences): WalkingSpeedRepository","title":"walkingSpeedRepository"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/","text":"tripkit-android / skedgo.tripgo.data.timetables Package skedgo.tripgo.data.timetables Types Name Summary ParentStopDao interface ParentStopDao ParentStopEntity class ParentStopEntity","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/#package-skedgotripgodatatimetables","text":"","title":"Package skedgo.tripgo.data.timetables"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/#types","text":"Name Summary ParentStopDao interface ParentStopDao ParentStopEntity class ParentStopEntity","title":"Types"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-dao/","text":"tripkit-android / skedgo.tripgo.data.timetables / ParentStopDao ParentStopDao interface ParentStopDao Functions Name Summary getChildrenStops abstract fun getChildrenStops(parentStopCode: String ): Observable< List < ParentStopEntity >> insert abstract fun insert(entities: List < ParentStopEntity >): Unit","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-dao/#parentstopdao","text":"interface ParentStopDao","title":"ParentStopDao"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-dao/#functions","text":"Name Summary getChildrenStops abstract fun getChildrenStops(parentStopCode: String ): Observable< List < ParentStopEntity >> insert abstract fun insert(entities: List < ParentStopEntity >): Unit","title":"Functions"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-dao/get-children-stops/","text":"tripkit-android / skedgo.tripgo.data.timetables / ParentStopDao / getChildrenStops getChildrenStops abstract fun getChildrenStops(parentStopCode: String ): Observable< List < ParentStopEntity >>","title":"Get children stops"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-dao/get-children-stops/#getchildrenstops","text":"abstract fun getChildrenStops(parentStopCode: String ): Observable< List < ParentStopEntity >>","title":"getChildrenStops"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-dao/insert/","text":"tripkit-android / skedgo.tripgo.data.timetables / ParentStopDao / insert insert abstract fun insert(entities: List < ParentStopEntity >): Unit","title":"Insert"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-dao/insert/#insert","text":"abstract fun insert(entities: List < ParentStopEntity >): Unit","title":"insert"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-entity/","text":"tripkit-android / skedgo.tripgo.data.timetables / ParentStopEntity ParentStopEntity class ParentStopEntity Constructors Name Summary <init> ParentStopEntity(parentStopCode: String , childrenStopCode: String ) Properties Name Summary childrenStopCode val childrenStopCode: String parentStopCode val parentStopCode: String","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-entity/#parentstopentity","text":"class ParentStopEntity","title":"ParentStopEntity"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-entity/#constructors","text":"Name Summary <init> ParentStopEntity(parentStopCode: String , childrenStopCode: String )","title":"Constructors"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-entity/#properties","text":"Name Summary childrenStopCode val childrenStopCode: String parentStopCode val parentStopCode: String","title":"Properties"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-entity/-init-/","text":"tripkit-android / skedgo.tripgo.data.timetables / ParentStopEntity / <init> <init> ParentStopEntity(parentStopCode: String , childrenStopCode: String )","title":" init "},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-entity/-init-/#init","text":"ParentStopEntity(parentStopCode: String , childrenStopCode: String )","title":"&lt;init&gt;"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-entity/children-stop-code/","text":"tripkit-android / skedgo.tripgo.data.timetables / ParentStopEntity / childrenStopCode childrenStopCode val childrenStopCode: String","title":"Children stop code"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-entity/children-stop-code/#childrenstopcode","text":"val childrenStopCode: String","title":"childrenStopCode"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-entity/parent-stop-code/","text":"tripkit-android / skedgo.tripgo.data.timetables / ParentStopEntity / parentStopCode parentStopCode val parentStopCode: String","title":"Parent stop code"},{"location":"tripkit-android/skedgo.tripgo.data.timetables/-parent-stop-entity/parent-stop-code/#parentstopcode","text":"val parentStopCode: String","title":"parentStopCode"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/","text":"tripkit-android / skedgo.tripgo.parkingspots.models Package skedgo.tripgo.parkingspots.models Types Name Summary OnStreetParkingDetails class OnStreetParkingDetails Restriction class Restriction RestrictionDayAndTime class RestrictionDayAndTime RestrictionTime class RestrictionTime","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/#package-skedgotripgoparkingspotsmodels","text":"","title":"Package skedgo.tripgo.parkingspots.models"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/#types","text":"Name Summary OnStreetParkingDetails class OnStreetParkingDetails Restriction class Restriction RestrictionDayAndTime class RestrictionDayAndTime RestrictionTime class RestrictionTime","title":"Types"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / OnStreetParkingDetails OnStreetParkingDetails class OnStreetParkingDetails Constructors Name Summary <init> OnStreetParkingDetails(actualRate: String ?, availableSpaces: Int ?, totalSpaces: Int ?, lastUpdate: Long ?, restrictions: List < Restriction >?, paymentTypes: List < PaymentType >?) Properties Name Summary actualRate val actualRate: String ? availableSpaces val availableSpaces: Int ? lastUpdate val lastUpdate: Long ? paymentTypes val paymentTypes: List < PaymentType >? restrictions val restrictions: List < Restriction >? totalSpaces val totalSpaces: Int ?","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/#onstreetparkingdetails","text":"class OnStreetParkingDetails","title":"OnStreetParkingDetails"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/#constructors","text":"Name Summary <init> OnStreetParkingDetails(actualRate: String ?, availableSpaces: Int ?, totalSpaces: Int ?, lastUpdate: Long ?, restrictions: List < Restriction >?, paymentTypes: List < PaymentType >?)","title":"Constructors"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/#properties","text":"Name Summary actualRate val actualRate: String ? availableSpaces val availableSpaces: Int ? lastUpdate val lastUpdate: Long ? paymentTypes val paymentTypes: List < PaymentType >? restrictions val restrictions: List < Restriction >? totalSpaces val totalSpaces: Int ?","title":"Properties"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/-init-/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / OnStreetParkingDetails / <init> <init> OnStreetParkingDetails(actualRate: String ?, availableSpaces: Int ?, totalSpaces: Int ?, lastUpdate: Long ?, restrictions: List < Restriction >?, paymentTypes: List < PaymentType >?)","title":" init "},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/-init-/#init","text":"OnStreetParkingDetails(actualRate: String ?, availableSpaces: Int ?, totalSpaces: Int ?, lastUpdate: Long ?, restrictions: List < Restriction >?, paymentTypes: List < PaymentType >?)","title":"&lt;init&gt;"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/actual-rate/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / OnStreetParkingDetails / actualRate actualRate val actualRate: String ?","title":"Actual rate"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/actual-rate/#actualrate","text":"val actualRate: String ?","title":"actualRate"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/available-spaces/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / OnStreetParkingDetails / availableSpaces availableSpaces val availableSpaces: Int ?","title":"Available spaces"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/available-spaces/#availablespaces","text":"val availableSpaces: Int ?","title":"availableSpaces"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/last-update/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / OnStreetParkingDetails / lastUpdate lastUpdate val lastUpdate: Long ?","title":"Last update"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/last-update/#lastupdate","text":"val lastUpdate: Long ?","title":"lastUpdate"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/payment-types/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / OnStreetParkingDetails / paymentTypes paymentTypes val paymentTypes: List < PaymentType >?","title":"Payment types"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/payment-types/#paymenttypes","text":"val paymentTypes: List < PaymentType >?","title":"paymentTypes"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/restrictions/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / OnStreetParkingDetails / restrictions restrictions val restrictions: List < Restriction >?","title":"Restrictions"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/restrictions/#restrictions","text":"val restrictions: List < Restriction >?","title":"restrictions"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/total-spaces/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / OnStreetParkingDetails / totalSpaces totalSpaces val totalSpaces: Int ?","title":"Total spaces"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-on-street-parking-details/total-spaces/#totalspaces","text":"val totalSpaces: Int ?","title":"totalSpaces"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / Restriction Restriction class Restriction Constructors Name Summary <init> Restriction(color: String , maximumParkingMinutes: Int ?, parkingSymbol: String , type: String , timezone: String , daysAndTimes: List < RestrictionDayAndTime >) Properties Name Summary color val color: String daysAndTimes val daysAndTimes: List < RestrictionDayAndTime > maximumParkingMinutes val maximumParkingMinutes: Int ? parkingSymbol val parkingSymbol: String timezone val timezone: String type val type: String","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/#restriction","text":"class Restriction","title":"Restriction"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/#constructors","text":"Name Summary <init> Restriction(color: String , maximumParkingMinutes: Int ?, parkingSymbol: String , type: String , timezone: String , daysAndTimes: List < RestrictionDayAndTime >)","title":"Constructors"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/#properties","text":"Name Summary color val color: String daysAndTimes val daysAndTimes: List < RestrictionDayAndTime > maximumParkingMinutes val maximumParkingMinutes: Int ? parkingSymbol val parkingSymbol: String timezone val timezone: String type val type: String","title":"Properties"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/-init-/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / Restriction / <init> <init> Restriction(color: String , maximumParkingMinutes: Int ?, parkingSymbol: String , type: String , timezone: String , daysAndTimes: List < RestrictionDayAndTime >)","title":" init "},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/-init-/#init","text":"Restriction(color: String , maximumParkingMinutes: Int ?, parkingSymbol: String , type: String , timezone: String , daysAndTimes: List < RestrictionDayAndTime >)","title":"&lt;init&gt;"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/color/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / Restriction / color color val color: String","title":"Color"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/color/#color","text":"val color: String","title":"color"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/days-and-times/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / Restriction / daysAndTimes daysAndTimes val daysAndTimes: List < RestrictionDayAndTime >","title":"Days and times"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/days-and-times/#daysandtimes","text":"val daysAndTimes: List < RestrictionDayAndTime >","title":"daysAndTimes"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/maximum-parking-minutes/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / Restriction / maximumParkingMinutes maximumParkingMinutes val maximumParkingMinutes: Int ?","title":"Maximum parking minutes"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/maximum-parking-minutes/#maximumparkingminutes","text":"val maximumParkingMinutes: Int ?","title":"maximumParkingMinutes"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/parking-symbol/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / Restriction / parkingSymbol parkingSymbol val parkingSymbol: String","title":"Parking symbol"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/parking-symbol/#parkingsymbol","text":"val parkingSymbol: String","title":"parkingSymbol"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/timezone/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / Restriction / timezone timezone val timezone: String","title":"Timezone"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/timezone/#timezone","text":"val timezone: String","title":"timezone"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/type/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / Restriction / type type val type: String","title":"Type"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction/type/#type","text":"val type: String","title":"type"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-day-and-time/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / RestrictionDayAndTime RestrictionDayAndTime class RestrictionDayAndTime Constructors Name Summary <init> RestrictionDayAndTime(name: String , times: List < RestrictionTime >) Properties Name Summary name val name: String times val times: List < RestrictionTime >","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-day-and-time/#restrictiondayandtime","text":"class RestrictionDayAndTime","title":"RestrictionDayAndTime"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-day-and-time/#constructors","text":"Name Summary <init> RestrictionDayAndTime(name: String , times: List < RestrictionTime >)","title":"Constructors"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-day-and-time/#properties","text":"Name Summary name val name: String times val times: List < RestrictionTime >","title":"Properties"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-day-and-time/-init-/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / RestrictionDayAndTime / <init> <init> RestrictionDayAndTime(name: String , times: List < RestrictionTime >)","title":" init "},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-day-and-time/-init-/#init","text":"RestrictionDayAndTime(name: String , times: List < RestrictionTime >)","title":"&lt;init&gt;"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-day-and-time/name/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / RestrictionDayAndTime / name name val name: String","title":"Name"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-day-and-time/name/#name","text":"val name: String","title":"name"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-day-and-time/times/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / RestrictionDayAndTime / times times val times: List < RestrictionTime >","title":"Times"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-day-and-time/times/#times","text":"val times: List < RestrictionTime >","title":"times"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-time/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / RestrictionTime RestrictionTime class RestrictionTime Constructors Name Summary <init> RestrictionTime(closes: String , opens: String ) Properties Name Summary closes val closes: String opens val opens: String","title":"Index"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-time/#restrictiontime","text":"class RestrictionTime","title":"RestrictionTime"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-time/#constructors","text":"Name Summary <init> RestrictionTime(closes: String , opens: String )","title":"Constructors"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-time/#properties","text":"Name Summary closes val closes: String opens val opens: String","title":"Properties"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-time/-init-/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / RestrictionTime / <init> <init> RestrictionTime(closes: String , opens: String )","title":" init "},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-time/-init-/#init","text":"RestrictionTime(closes: String , opens: String )","title":"&lt;init&gt;"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-time/closes/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / RestrictionTime / closes closes val closes: String","title":"Closes"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-time/closes/#closes","text":"val closes: String","title":"closes"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-time/opens/","text":"tripkit-android / skedgo.tripgo.parkingspots.models / RestrictionTime / opens opens val opens: String","title":"Opens"},{"location":"tripkit-android/skedgo.tripgo.parkingspots.models/-restriction-time/opens/#opens","text":"val opens: String","title":"opens"}]}